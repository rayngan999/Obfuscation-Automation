"use strict";function _instanceof(n,t){return t!=null&&typeof Symbol!="undefined"&&t[Symbol.hasInstance]?!!t[Symbol.hasInstance](n):n instanceof t}function _classCallCheck(n,t){if(!_instanceof(n,t))throw new TypeError("Cannot call a class as a function");}function _defineProperties(n,t){for(var i,r=0;r<t.length;r++)i=t[r],i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}function _createClass(n,t,i){return t&&_defineProperties(n.prototype,t),i&&_defineProperties(n,i),n}var AccountActions=function(){function n(){_classCallCheck(this,n)}return _createClass(n,[{key:"updateAccountInfo",value:function(n){return n}}]),n}(),AccountStore;Crate.React.Actions.LegacyAccountActions=Crate.React.Alt.createActions(AccountActions);AccountStore=function(){function n(){var t=this;_classCallCheck(this,n);this.accountInfo={};this.callMade=!1;this.isLoggedIn=function(){return t.accountInfo&&t.accountInfo.accountNavigation&&t.accountInfo.accountNavigation.showSignOutLink};this.bindListeners({updateAccountInfo:Crate.React.Actions.LegacyAccountActions.UPDATE_ACCOUNT_INFO})}return _createClass(n,[{key:"updateAccountInfo",value:function(n){this.accountInfo=n;this.callMade=!0}}]),n}();Crate.React.Alt.stores.AccountStore||(Crate.React.Stores.AccountStore=Crate.React.Alt.createStore(AccountStore,"AccountStore"))