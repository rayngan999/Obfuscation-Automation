(function(){
/** @license Copyright (c) 2020, Blockthrough All rights reserved.
 See license text at: https://blockthrough.com/license
*/(()=>{var __webpack_modules__={434:(e,t)=>{t.hashString=function(e){for(var t=e.length,i=5381,n=52711;t--;){var r=e.charCodeAt(t);i=33*i^r,n=33*n^r}return 4096*(i>>>0)+(n>>>0)}},353:(__unused_webpack_module,exports)=>{var PlatformUnknown="unknown",PlatformAndroid="android",PlatformIOS="ios",PlatformWindows="windows",PlatformLinux="linux",PlatformOSX="osx",PlatformWindowsPhone="windowsphone",BrowserUnknown="unknown",BrowserChrome="chrome",BrowserFirefox="firefox",BrowserIE="ie",BrowserEdge="edge",BrowserOpera="opera",BrowserSafari="safari",BrowserUCBrowser="uc",DeviceUnknown="unknown",DeviceHighEndPhone="highendphone",DeviceTablet="tablet",DevicePersonalComputer="pc",DeviceConnectedTV="tv",DeviceGameConsole="console",browser=function(){var ua=navigator.userAgent;return/edge/i.test(ua)?BrowserEdge:/opera/i.test(ua)||/opr|opios/i.test(ua)?BrowserOpera:/chrome|chromium/i.test(ua)?BrowserChrome:/firefox|iceweasel|fxios/i.test(ua)?BrowserFirefox:/msie|trident/i.test(ua)?BrowserIE:/^((?!chrome|android).)*safari/i.test(ua)?BrowserSafari:/ucbrowser/i.test(ua)?BrowserUCBrowser:window.chrome?BrowserChrome:"undefined"!=typeof InstallTrigger?BrowserFirefox:eval("/*@cc_on!@*/false")||document.documentMode?BrowserIE:window.StyleMedia?BrowserEdge:BrowserUnknown},platform=function(){var e=navigator.userAgent;return/windows|win32/i.test(e)?PlatformWindows:/ipod|iphone|ipad/i.test(e)?PlatformIOS:/android/i.test(e)?PlatformAndroid:/macintosh|mac os x/i.test(e)?PlatformOSX:/linux/i.test(e)?PlatformLinux:/windows phone/i.test(e)?PlatformWindowsPhone:PlatformUnknown},device=function(){var e=navigator.userAgent;return/tablet|ipad/i.test(e)?DeviceTablet:/mobile/i.test(e)||/android|webos|iphone|ipod|blackberry|iemobile|windows phone|opera mini/i.test(e)||/ucbrowser/i.test(e)&&window.ucweb?DeviceHighEndPhone:DevicePersonalComputer},isMobile=function(){return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||navigator.vendor||window.opera).substr(0,4))};exports.PlatformUnknown=PlatformUnknown,exports.PlatformAndroid=PlatformAndroid,exports.PlatformIOS=PlatformIOS,exports.PlatformWindows=PlatformWindows,exports.PlatformLinux=PlatformLinux,exports.PlatformOSX=PlatformOSX,exports.BrowserUnknown=BrowserUnknown,exports.BrowserChrome=BrowserChrome,exports.BrowserFirefox=BrowserFirefox,exports.BrowserIE=BrowserIE,exports.BrowserEdge=BrowserEdge,exports.BrowserOpera=BrowserOpera,exports.BrowserSafari=BrowserSafari,exports.BrowserUCBrowser=BrowserUCBrowser,exports.DeviceUnknown=DeviceUnknown,exports.DeviceHighEndPhone=DeviceHighEndPhone,exports.DeviceTablet=DeviceTablet,exports.DevicePersonalComputer=DevicePersonalComputer,exports.DeviceConnectedTV=DeviceConnectedTV,exports.DeviceGameConsole=DeviceGameConsole,exports.browser=browser,exports.platform=platform,exports.device=device,exports.isMobile=isMobile},938:(e,t)=>{t.onDomLoaded=function(e){if("complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState)e();else{var t=!1;document.addEventListener("DOMContentLoaded",(function(){t||(t=!0,e())}),!1),window.addEventListener("load",(function(){t||(t=!0,e())}))}},t.onScroll=function(e){window.addEventListener("scroll",(function(t){e()}))},t.onBlur=function(e){window.addEventListener("blur",(function(t){e()}))},t.onFocus=function(e){window.addEventListener("focus",(function(t){e()}))}},896:(e,t,i)=>{"use strict";i.d(t,{Y:()=>n});var n=new function(){this.events={},this.addEventListener=function(e,t){this.events.hasOwnProperty(e)?this.events[e].push(t):this.events[e]=[t]},this.removeEventListener=function(e,t){if(this.events.hasOwnProperty(e)){var i=this.events[e].indexOf(t);-1!=i&&this.events[e].splice(i,1)}},this.fireEvent=function(e,t,i,n){if(this.events.hasOwnProperty(e))for(var a=new r(e,t),o=this.events[e],s=o.length,d=0;d<s;d++){try{var c=o[d].call(i,a)}catch(e){}if(null!=c)return c;if(a.shouldStop)return}}},r=function(e,t){this.name=e,this.data=t,this.shouldStop=!1}},149:(e,t,i)=>{"use strict";i.d(t,{Z:()=>r});const n="static.btloader.com";const r={SharedObject:new function(){this.data={},this.setItem=function(e,t){this.data[e]=t},this.getItem=function(e){return this.data[e]},this.removeItem=function(e){delete this.data[e]},this.clearSharedObject=function(){this.data={}}},consts:{selectorPosition:{APPEND_CHILD:0,INSERT_BEFORE:1},complianceStatus:{UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4},acceptableStandardScreenSize:{width:1366,height:768},headerBiddingType:{prebid:1},refreshType:{UNKNOWN:0,ALL:1,VISIBLE:2,HIDDEN:3}},upoSettings:{acceptableURLParam:"upapi=true",timeout:3e3,refreshTimeout:3e3,staticDomain:n,whitelistedFrameSettings:{url:`//${n}/safeFrame.html?upapi=true`,laterSrcModification:void 0,isOurOriginSafeFrame:!0},minTimeBetweenRefreshes:3e4,amazonBidderConfiguration:{enabled:!1,keepHbPb:!1}},whitelistedFrame:undefined,cpbjs:undefined,uGoogletag:undefined}},326:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>prebidLoader});var _services__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(428),_shared__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(149),prebidLoader=new function(){var subscriptionLayer=new _services__WEBPACK_IMPORTED_MODULE_0__.Z.SubscriptionLayer;this.subscribeForEvent=function(e,t){subscriptionLayer.subscribeForEvent(e,t)};var initPbjs=function(){var prebidjsCode="";try{var decodedCode=atob(prebidjsCode);eval(decodedCode)}catch(e){}_shared__WEBPACK_IMPORTED_MODULE_1__.Z.cpbjs=window.upbjs};this.load=function(){_shared__WEBPACK_IMPORTED_MODULE_1__.Z.cpbjs||(initPbjs(),subscriptionLayer.invokeEventCallbacks("postset"))}}},986:(e,t)=>{var i=function(e,t,i){for(var n=[],r=0;r<e.length;r++)t.call(i,e[r],r,e)&&n.push(e[r]);return n},n=function(e){return"[object Array]"===Object.prototype.toString.call(e)};t.UI=function(e,t){for(var i=[],n=0;n<e.length;n++)i.push(t(e[n],n,e));return i},t.hX=i,t.d1=function(e,t,i){for(var n=[],r=0;r<e.length;r++)t.call(i,e[r],r,e)||n.push(e[r]);return n},t.Ed=function(e,t){if(e)for(var i=0;i<e.length;i++)t(e[i],i,e)},t.sE=function(e,t){for(var i=0;i<e.length;i++){var n=e[i];if(t(n,i,e))return n}},t.$H=function(e){for(var t=[],i=0;i<e.length;i++){var r=e[i];if(n(r))for(var a=0;a<r.length;a++){var o=r[a];t.push(o)}else t.push(r)}return t},t.kJ=n,t.EB=function(e){return i(e,(function(e,t,i){return i.indexOf(e)===t}))},t.u4=function(e,t){if(null===e)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof t)throw new TypeError(t+" is not a function");var i,n=Object(e),r=n.length>>>0,a=0;if(arguments.length>=3)i=arguments[2];else{for(;a<r&&!(a in n);)a++;if(a>=r)throw new TypeError("Reduce of empty array with no initial value");i=n[a++]}for(;a<r;)a in n&&(i=t(i,n[a],a,n)),a++;return i}},792:(e,t)=>{t.J=function(){var e,t;this.fate="unresolved",this.state="pending",this.promise=new Promise((function(i,n){e=i,t=n})),this.promise.then((function(e){return this.state="fulfilled",e}),(function(e){return this.state="rejected",e})),this.resolve=function(t){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved",e(t)},this.reject=function(e){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved",t(e)},this.isResolved=function(){return"resolved"===this.fate},this.isPending=function(){return"pending"===this.state},this.isFulfilled=function(){return"fulfilled"===this.state},this.isRejected=function(){return"rejected"===this.state}}},837:(e,t)=>{t.cn=function(e,t){if(t&&e){var i=t.className;-1==i.indexOf(e)&&(""!=i&&(e=" "+e),t.className=i+e)}},t.IV=function(e,t){if(t&&e){var i=t.className,n=new RegExp("\\b"+e+"\\b","g");i=i.replace(n,""),t.className=i}},t.pv=function(e,t){if(e&&t)return(" "+e.className+" ").indexOf(" "+t+" ")>-1}},264:(e,t,i)=>{"use strict";i.d(t,{Z:()=>s});var n=i(986),r=i(837),a=i(650),o=i(792);const s={map:n.UI,filter:n.hX,reject:n.d1,forEach:n.Ed,find:n.sE,flat:n.$H,isArray:n.kJ,distinct:n.EB,reduce:n.u4,addClass:r.cn,removeClass:r.IV,hasClass:r.pv,objectAssign:a.w,CDefer:o.J}},650:(e,t)=>{t.w=function(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var i=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(null!=r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(i[a]=r[a])}return i}},428:(e,t,i)=>{"use strict";i.d(t,{Z:()=>B});var n={};i.r(n),i.d(n,{deepClone:()=>d,doesBrowserSupportDocOpen:()=>g,escapeSelector:()=>u,extractQueryParamFromUrl:()=>p,extractVariableFromString:()=>b,getRandomInt:()=>w,getTopmostAccessibleWindow:()=>m,getTrueByProbability:()=>v,isFirstViewPortElement:()=>f,isNil:()=>c,matchStringsOnString:()=>_,truncateString:()=>N});var r={};i.r(r),i.d(r,{getSizeType:()=>H,isUnacceptable:()=>T,isUnacceptableFirstViewPortSize:()=>I});var a=i(149),o=i(353),s=i(264),d=function(e){if(!e)return e;var t,i=[Number,String,Boolean];try{if(s.Z.forEach(i,(function(i){e instanceof i&&(t=i(e))})),void 0===t)if("[object Array]"===Object.prototype.toString.call(e))t=[],s.Z.forEach(e,(function(e,i,n){t[i]=d(e)}));else if("object"==typeof e)if(e.nodeType&&"function"==typeof e.cloneNode)t=e.cloneNode(!0);else if(e.prototype)t=e;else if(e instanceof Date)t=new Date(e);else for(var n in t={},e)t[n]=d(e[n]);else t=e}catch(i){t=e}return t};function c(e){return null==e}var l=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function h(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}function u(e){var t=e.charAt(0);return"#"===t||"."===t?t+e.substring(1).replace(l,h):e}var f=function(e){try{if(!e)return;var t,i,n=!1;"none"===window.getComputedStyle(e).display&&(t=e.style.getPropertyValue("display"),i=e.style.getPropertyPriority("display"),e.style.setProperty("display","block","important"),n=!0);var r=e.getBoundingClientRect().top+window.scrollY;return n&&e.style.setProperty("display",t,i),r<=a.Z.consts.acceptableStandardScreenSize.height}catch(e){}},p=function(e,t){e=e.replace(/[\[\]]/g,"\\$&");var i=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return i?i[2]?decodeURIComponent(i[2].replace(/\+/g," ")):"":null},g=function(){var e=o.browser();return!("edge"===e||"ie"===e)},m=function(){var e=window;try{for(;e!==e.parent;)e.parent.document,e=e.parent}catch(e){}return e},b=function(e,t){if(e){for(var i=t.split("."),n=e,r=0;r<i.length;r++){var a=i[r];if(!n[a])return;n=n[a]}return n}};function w(e){return Math.floor(Math.random()*Math.floor(e))}function v(e){return w(100)<e}function N(e,t){return e.length>t?e.substring(0,t):e}function _(e,t){return e.every((e=>t.includes(e)))}var D=new function(){this.insertElement=function(e,t,i){switch(i){case"appendChild":t.appendChild(e);break;case"insertBefore":t.parentElement.insertBefore(e,t);break;case"insertAfter":t.nextElementSibling?this.insertElement(e,t.nextElementSibling,"insertBefore"):this.insertElement(e,t.parentElement,"appendChild")}}},X=i(896).Y,E=[{width:300,height:250},{width:336,height:280},{width:300,height:600},{width:160,height:600},{width:120,height:600},{width:120,height:240},{width:250,height:250},{width:200,height:200},{width:180,height:150},{width:125,height:125},{width:728,height:90},{width:970,height:90},{width:970,height:250},{width:468,height:60},{width:234,height:60}],M=function(e,t){var i=function(e,t){return s.Z.filter(e,(function(e){return B.sizeValidation.getSizeType(e)===t}))}(E,e);return i=s.Z.filter(i,(function(e){return!B.sizeValidation.isUnacceptableFirstViewPortSize(e)||!t}))},y=function(e,t,i){for(var n=function(e){for(var t=0,i=0,n=0;n<e.length;n++){var r=e[n];r&&r.width&&r.height&&(r.width>t&&(t=r.width),r.height>i&&(i=r.height))}return{width:t,height:i}}(e),r=B.sizeValidation.getSizeType(t),a=M(r,i),o=0;o<a.length;o++){var s=a[o];if(s.width<=n.width&&s.height<=n.height){for(var d=!0,c=0;c<e.length;c++){var l=e[c];if(l&&l.width===s.width&&l.height===s.height){d=!1;break}}if(d)return s}}},V=i(496),z=1,x=2,H=function(e){return e.width>350?z:x},I=function(e){var t=H(e),i=a.Z.consts.acceptableStandardScreenSize.width*a.Z.consts.acceptableStandardScreenSize.height,n=e.height,r=e.width,o=r*n/i*100>=16;return t==x?o||r>350:o||e.height>200},S=function(e,t){var i,n,r=H(t),o=!1,s=!0,d=!1,c=t.height,l=t.width;if(e){"none"===window.getComputedStyle(e).display&&(i=e.style.getPropertyValue("display"),n=e.style.getPropertyPriority("display"),e.style.setProperty("display","block","important"),o=!0);var h=e.getBoundingClientRect().top;c=(d=h+t.height>a.Z.consts.acceptableStandardScreenSize.height)?a.Z.consts.acceptableStandardScreenSize.height-h:t.height}return s=r==x&&d?S(e,{width:l,height:c})&&Z(t):I(t),o&&e.style.setProperty("display",i,n),s},Z=function(e){var t=a.Z.consts.acceptableStandardScreenSize.width*a.Z.consts.acceptableStandardScreenSize.height,i=H(e);return e.width*e.height/t*100>=26||i==z&&e.height>400},T=function(e,t){return!e||B.commonUtils.isFirstViewPortElement(e)?S(e,t):Z(t)};const B={addAcceptableParam:function(e){return e.indexOf(a.Z.upoSettings.acceptableURLParam)>-1?e:e=(e=e.indexOf("?")>-1?e+"&"+a.Z.upoSettings.acceptableURLParam:e+"?"+a.Z.upoSettings.acceptableURLParam).replace("&&upapi=true","&upapi=true")},commonUtils:n,ElementInsertion:D,sizesRemover:function(e,t){const i=[],n=X.fireEvent("enableLegacySizesReplacer");s.Z.forEach(t,(function(e){e.width&&e.height&&i.push({width:e.width,height:e.height})}));for(var r=0;r<i.length;r++){var a=i[r];if(B.sizeValidation.isUnacceptable(e,a))if(n){const t=B.commonUtils.isFirstViewPortElement(e);i[r]=y(i,a,t)}else i.splice(r,1)}return i},SubscriptionLayer:function(){var e={};this.subscribeForEvent=function(t,i){e[t]=e[t]||[],e[t].indexOf(i)<0&&e[t].push(i)},this.invokeEventCallbacks=function(t,i){var n=e[t]||[];s.Z.forEach(n,(function(e){e.call(void 0,i)}))}},urlValidations:V,sizeValidation:r}},496:(e,t)=>{var i=function(e){var t=document.createElement("a");return t.setAttribute("href",e),t},n=function(e,t){if(e&&e.length>0)for(var i=0;i<e.length;i++){for(var n=e[i],r=!0,a=0;a<n.length;a++){var o=n[a];if(t[o.type].indexOf(o.string)<0){r=!1;break}}if(r)return!0}};t.isSyncUrl=function(e,t){if("IMG"!==t)return!1;for(var n=i(e),r=[[{string:"/sync",type:"pathname"}],[{string:"/cookiesync",type:"pathname"}],[{string:"/rset",type:"pathname"}],[{string:"/getuid",type:"pathname"}],[{string:"/track",type:"pathname"}],[{string:"/pixel",type:"pathname"}],[{string:"/Pixel",type:"pathname"}],[{string:".pixel",type:"pathname"}],[{string:"pixel.",type:"pathname"}],[{string:"/match",type:"pathname"}],[{string:"/partner",type:"pathname"}],[{string:"/visitormatch",type:"pathname"}],[{string:"/ping_match",type:"pathname"}],[{string:"/ImgSync",type:"pathname"}],[{string:"/identify",type:"pathname"}],[{string:"/usync/",type:"pathname"}],[{string:"/usersync",type:"pathname"}],[{string:"/user-sync",type:"pathname"}],[{string:"/ddm/trackimp",type:"pathname"}],[{string:"/user_sync.php",type:"pathname"}],[{string:"/bh/rtset",type:"pathname"}],[{string:"%2Fsync",type:"pathname"}],[{string:"cksync.php",type:"pathname"}],[{string:".sync",type:"hostname"}],[{string:"sync-",type:"hostname"}],[{string:"storygize.net",type:"hostname"},{string:"/ccm",type:"href"}],[{string:"geo-um.btrll.com",type:"hostname"}],[{string:"nexac.com",type:"hostname"},{string:"/e/sr",type:"href"}],[{string:"api.bttrack.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"sitescout.com",type:"hostname"}],[{string:"criteo.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"},{string:"/sync",type:"href"}]],a=0;a<r.length;a++){for(var o=r[a],s=!0,d=0;d<o.length;d++){var c=o[d];if(n[c.type].indexOf(c.string)<0){s=!1;break}}if(s)return!0}return!1},t.isWhitelistURL=function(e,t){var r=i(e);return!n({SCRIPT:[[{string:"3lift.com",type:"hostname"},{string:"/header",type:"href"}]]}[t],r)&&!!n({IMG:[[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleclick.net",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"mynativeplatform.com",type:"hostname"}],[{string:"360yield.com",type:"hostname"}],[{string:"sharethrough.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"zemanta.com",type:"hostname"}],[{string:"adnxs.com",type:"hostname"}],[{string:"sonobi.com",type:"hostname"}],[{string:"insight.adsrvr.org",type:"hostname"}],[{string:"serving-sys.com",type:"hostname"}],[{string:"advertising.com",type:"hostname"}],[{string:"openx.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"flashtalking.com",type:"hostname"},{string:"/imp",type:"href"}],[{string:"adroll.com",type:"hostname"}],[{string:"33across.com",type:"hostname"},{string:"/ps",type:"href"}],[{string:"adsrvr.org/bid",type:"href"}],[{string:"imrworldwide.com",type:"hostname"}],[{string:"criteo.com",type:"hostname"},{string:"/delivery",type:"href"}],[{string:"ad_overlays",type:"pathname"}]],IFRAME:[[{string:"googlesyndication.com/safeframe",type:"href"}],[{string:"ad.doubleclick.net/ddm",type:"hostname"}],[{string:"rubiconproject.com",type:"hostname"},{string:"multi-sync.html",type:"href"}],[{string:"3lift.com",type:"hostname"},{string:"sync?",type:"href"}],[{string:"ca-pub-15988",type:"href"}],[{string:"ff.doubleclick.net",type:"hostname"}]],SCRIPT:[[{string:"adnxs.com",type:"hostname"},{string:"trk.js",type:"href"}],[{string:"/sync",type:"pathname"}],[{string:"pagead2.googlesyndication.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}],[{string:"doubleclick.net/gpt/pubads_impl_",type:"href"}],[{string:"native.sharethrough.com/assets/sfp.js",type:"href"}],[{string:"sharethrough.com/api",type:"href"}],[{string:"moatads.com",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"match.adsrvr.org",type:"hostname"}],[{string:".adnxs.com/getuidp",type:"href"}],[{string:"pubads_impl_rendering_",type:"href"}],[{string:"cdn.ampproject.org",type:"href"}]],LINK:[[{string:"//tpc.googlesyndication.com/safeframe",type:"href"}],[{string:"ntv.io",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}]]}[t],r)}},613:(e,t)=>{var i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",n="0123456789",r=function(e,t,i){if(!e||"number"!=typeof t||"number"!=typeof i||t<=0||i<=0||t>i)throw new TypeError;for(var n=Math.floor(Math.random()*(i+1-t))+t,r="",a=0;a<n;a++)r+=e.charAt(Math.floor(Math.random()*e.length));return r},a=function(e,t){return r("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e,t)},o=function(e,t){return r(i,e,t)},s=function(e,t){return r(n,e,t)};t.stringRange=a,t.string=function(e){return a(e,e)},t.lettersRange=o,t.letters=function(e){return o(e,e)},t.digitsRange=s,t.digits=function(e){return s(e,e)}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var i=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](i,i.exports,__webpack_require__),i.exports}__webpack_require__.d=(e,t)=>{for(var i in t)__webpack_require__.o(t,i)&&!__webpack_require__.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";var e={};__webpack_require__.r(e),__webpack_require__.d(e,{getElementWithSelector:()=>Ai,getSpaceElement:()=>Pi,refreshTypeDecoder:()=>Wi});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{doesBidHaveUnacceptableSize:()=>Yn,gamTextAdIsVideo:()=>Bn,testBidsCompliance:()=>On});var i=__webpack_require__(149),n=__webpack_require__(264),r=__webpack_require__(896),a=__webpack_require__(428),o=!1,s=r.Y,d=!1,c=Boolean(window.console&&window.console.info);!function(){try{d=window.location.href.indexOf("bt_debug=true")>=0||"true"===window.localStorage.bt_debug}catch(e){d=!1}}();var l={DEFAULT:0,DEBUG:1,INFO:2,NOTICE:3,WARNING:4,ERROR:5,CRITICAL:6,ALERT:7,EMERGENCY:8},h={DEBUG:0,INFO:1,NOTICE:2,WARNING:3,ERROR:4,CRITICAL:5,ALERT:6,EMERGENCY:7},u={};u[l.DEFAULT]="DFT",u[l.DEBUG]="DBG",u[l.INFO]="INF",u[l.NOTICE]="NTC",u[l.WARNING]="WRN",u[l.ERROR]="ERR",u[l.CRITICAL]="CRT",u[l.ALERT]="ALR",u[l.EMERGENCY]="EMR";var f={};f[l.DEFAULT]="#F5F5F5",f[l.DEBUG]="#BBDEFB",f[l.INFO]="#B3E5FC",f[l.NOTICE]="#DCEDC8",f[l.WARNING]="#FFE0B2",f[l.ERROR]="#FFCCBC",f[l.CRITICAL]="#E57373",f[l.ALERT]="#F06292",f[l.EMERGENCY]="#BA68C8";var p=["#B71C1C","#880E4F","#4A148C","#311B92","#1A237E","#0D47A1","#01579B","#006064","#004D40","#1B5E20","#33691E","#827717","#F57F17","#FF6F00","#E65100","#BF360C","#3E2723","#37474F"],g=function(e){return e&&e.id||null},m=function(e){var t=g(e);return t?p[b(t)%p.length]:"#000000"},b=function(e){for(var t=2166136261,i=0;i<e.length;++i)t^=e.charCodeAt(i),t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24);return t>>>0},w=(new Date).getTime(),v=function(){return(new Date).getTime()-w},N=function(e){return e<1e3?Math.round(e).toString()+"ms":(e/1e3).toFixed(2)+"s"},_=function(){this.tag="Blockthrough",this.prefix="",this.level=l.DEFAULT,this.filters=[]};function D(e,t){if(e&&e.event&&e.sendToServer&&t&&(!e.sendPercentage||e.sendPercentage&&a.Z.commonUtils.getTrueByProbability(e.sendPercentage))){const i=Object.assign({},e,{severity:t});s.fireEvent("sendLog",i)}}_.prototype.setPrefix=function(e){this.prefix=e},_.prototype.setLevel=function(e){"number"!=typeof e||l.DEFAULT>e||e>l.EMERGENCY?this.level=l.DEFAULT:this.level=e},_.prototype.setFilter=function(e){for(var t=[],i=0;i<arguments.length;i++){if(!(arguments[i]instanceof RegExp))throw new TypeError;t[i]=arguments[i]}this.filters=t},_.prototype.log=function(e,t,i,n){if(d){if(arguments.length<3)throw new TypeError;if("number"!=typeof e||l.DEFAULT>e||e>l.EMERGENCY)throw new TypeError;if("object"!=typeof t)throw new TypeError;if("string"!=typeof i)throw new TypeError;if(!(e<this.level)||o){for(var r=0;r<this.filters.length;r++)if(null!==i.match(this.filters[r]))return;var a=v(),s=g(t),h="";h+="%c["+this.tag+" - "+u[e]+"]%c",h+="%c[%s]%c ",s&&(h+="%c["+s+"]%c "),this.prefix&&(h+=this.prefix),h+=i;var p=[];p.push(h),p.push("color: #000000; background-color: "+f[e]),p.push("background-color: inherit"),p.push("color: #757575;"),p.push(N(a)),p.push("background-color: inherit"),s&&(p.push("color: "+m(t)),p.push("color: inherit")),p=p.concat(Array.prototype.slice.call(arguments,3)),c&&console.info.apply(console,p)}}},_.prototype.debugf=function(e,t,i,n){this.log.apply(this,[l.DEBUG,e,t].concat(i)),D(n,h.DEBUG)},_.prototype.infof=function(e,t,i,n){this.log.apply(this,[l.INFO,e,t].concat(i)),D(n,h.INFO)},_.prototype.noticef=function(e,t,i,n){this.log.apply(this,[l.NOTICE,e,t].concat(i)),D(n,h.NOTICE)},_.prototype.warningf=function(e,t,i,n){this.log.apply(this,[l.WARNING,e,t].concat(i)),D(n,h.WARNING)},_.prototype.errorf=function(e,t,i,n){this.log.apply(this,[l.ERROR,e,t].concat(i)),n||(n={sendToServer:!0,sendPercentage:2,event:"general_error_event",error:{name:t}}),D(n,h.ERROR)},_.prototype.criticalf=function(e,t,i,n){this.log.apply(this,[l.CRITICAL,e,t].concat(i)),n||(n={sendToServer:!0,sendPercentage:2,event:"general_critical_event",error:{name:t}}),D(n,h.CRITICAL)},_.prototype.alertf=function(e,t,i,n){this.log.apply(this,[l.ALERT,e,t].concat(i)),D(n,h.ALERT)},_.prototype.emergencyf=function(e,t,i,n){this.log.apply(this,[l.EMERGENCY,e,t].concat(i)),D(n,h.EMERGENCY)};var X=new _,E=(X.setPrefix.bind(X),X.setLevel.bind(X),X.setFilter.bind(X),X.debugf.bind(X),X.infof.bind(X),X.noticef.bind(X),X.warningf.bind(X),X.errorf.bind(X),X.criticalf.bind(X),X.alertf.bind(X),X.emergencyf.bind(X),l.DEFAULT,l.DEBUG,l.INFO);l.NOTICE,l.WARNING,l.ERROR,l.CRITICAL,l.ALERT,l.EMERGENCY;const M={new:function(){return new _}};M.new().setPrefix("transport: ");var y=function(e){for(var t={},i=Object.keys(e),n=0;n<i.length;n++)t[i[n].toLowerCase()]=e[i[n]];return t},V=function(e){var t={};for(var i in e)if(e.hasOwnProperty(i)){t[i]=[];for(var n=0;n<e[i].length;n++){var r=e[i][n];t[i].push(r)}}return t},z=function(e,t,i){if((i=i||{}).merge&&i.override)throw new TypeError;this.tr=e,this.headers=y(t),this.merge=i.merge||!1,this.override=i.override||!1};z.prototype.$fetch=function(e,t,i){if(i=i||{},"object"!=typeof t||"string"!=typeof t.url)throw new TypeError;t=this.addHeaders(t),this.tr.$fetch(e,t,i)},z.prototype.addHeaders=function(e){e=function(e){return{url:e.url,headers:y(V(e.headers||{})),body:e.body,method:e.method}}(e);var t=this.headers,i=e.headers;for(var n in t)if(t.hasOwnProperty(n)){if(this.override)i[n]=[];else if(!this.merge&&i[n])continue;i[n]||(i[n]=[]);for(var r=0;r<t[n].length;r++){var a=t[n][r];i[n].push(a)}}return e};var x=function(e,t){return e.substr(0,t.length)===t},H=function(e){if(e=e.toLowerCase(),x(e,"proxy-"))return!1;if(x(e,"sec-"))return!1;switch(e){case"accept-charset":case"accept-encoding":case"access-control-request-headers":case"access-control-request-method":case"connection":case"content-length":case"cookie":case"cookie2":case"date":case"dnt":case"expect":case"host":case"keep-alive":case"origin":case"te":case"trailer":case"transfer-encoding":case"upgrade":case"via":return!1;case"x-client-version":case"x-cookie":case"x-referer":return!1}return!0},I=new function(){this.init=function(e,t){if(t=t||{},!e||"string"!=typeof e)throw new TypeError;this.host=e;var i=void 0===t.secure||t.secure;this.protocol=i?"https":"http",this.suffix=void 0!==t.suffix?t.suffix:""},this.$fetch=function(e){return new Promise(function(t,i){if("object"!=typeof e||"string"!=typeof e.url)throw new TypeError;var n=!1,r=e.url||"";(r.length<1||"/"!=r[0])&&(r="/"+r);var a=this.protocol+"://"+this.host+r;a+=this.suffix?"#"+this.suffix:"";var o=e.method||"GET",s=e.headers||{},d=e.body?e.body:null,c=new XMLHttpRequest;for(var l in c.onreadystatechange=function(e){if(4==c.readyState){if(0==c.status){if(n)return;return n=!0,void i("status -> "+c.status)}var r=y(function(e){var t={};if(!e)return t;for(var i=e.split("\r\n"),n=0;n<i.length;n++){var r=i[n],a=r.indexOf(": ");if(a>0){var o=r.substring(0,a),s=r.substring(a+2);t[o]||(t[o]=[]),t[o].push(s)}}return t}(c.getAllResponseHeaders()));if(r["x-content-type"]&&(r["content-type"]=r["x-content-type"],delete r["x-content-type"]),c.status>=200&&c.status<300){var a={status:c.status,headers:r,body:c.response};t(a)}else i("status -> "+c.status)}},c.onerror=function(e){n||(n=!0,i(e))},c.open(o,a,!0),c.responseType="arraybuffer",s)s.hasOwnProperty(l)&&0!=s[l].length&&(H(l)||c.setRequestHeader(l,s[l][0]));c.send(d)}.bind(this))}},S=__webpack_require__(613);function Z(e){let t=e.length;for(;--t>=0;)e[t]=0}const T=256,B=286,Y=30,F=15,O=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),k=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),R=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),L=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),C=new Array(576);Z(C);const G=new Array(60);Z(G);const W=new Array(512);Z(W);const A=new Array(256);Z(A);const P=new Array(29);Z(P);const j=new Array(Y);function J(e,t,i,n,r){this.static_tree=e,this.extra_bits=t,this.extra_base=i,this.elems=n,this.max_length=r,this.has_stree=e&&e.length}let K,U,Q;function q(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}Z(j);const $=e=>e<256?W[e]:W[256+(e>>>7)],ee=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},te=(e,t,i)=>{e.bi_valid>16-i?(e.bi_buf|=t<<e.bi_valid&65535,ee(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=i-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=i)},ie=(e,t,i)=>{te(e,i[2*t],i[2*t+1])},ne=(e,t)=>{let i=0;do{i|=1&e,e>>>=1,i<<=1}while(--t>0);return i>>>1},re=(e,t,i)=>{const n=new Array(16);let r,a,o=0;for(r=1;r<=F;r++)n[r]=o=o+i[r-1]<<1;for(a=0;a<=t;a++){let t=e[2*a+1];0!==t&&(e[2*a]=ne(n[t]++,t))}},ae=e=>{let t;for(t=0;t<B;t++)e.dyn_ltree[2*t]=0;for(t=0;t<Y;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0},oe=e=>{e.bi_valid>8?ee(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},se=(e,t,i,n)=>{const r=2*t,a=2*i;return e[r]<e[a]||e[r]===e[a]&&n[t]<=n[i]},de=(e,t,i)=>{const n=e.heap[i];let r=i<<1;for(;r<=e.heap_len&&(r<e.heap_len&&se(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!se(t,n,e.heap[r],e.depth));)e.heap[i]=e.heap[r],i=r,r<<=1;e.heap[i]=n},ce=(e,t,i)=>{let n,r,a,o,s=0;if(0!==e.last_lit)do{n=e.pending_buf[e.d_buf+2*s]<<8|e.pending_buf[e.d_buf+2*s+1],r=e.pending_buf[e.l_buf+s],s++,0===n?ie(e,r,t):(a=A[r],ie(e,a+T+1,t),o=O[a],0!==o&&(r-=P[a],te(e,r,o)),n--,a=$(n),ie(e,a,i),o=k[a],0!==o&&(n-=j[a],te(e,n,o)))}while(s<e.last_lit);ie(e,256,t)},le=(e,t)=>{const i=t.dyn_tree,n=t.stat_desc.static_tree,r=t.stat_desc.has_stree,a=t.stat_desc.elems;let o,s,d,c=-1;for(e.heap_len=0,e.heap_max=573,o=0;o<a;o++)0!==i[2*o]?(e.heap[++e.heap_len]=c=o,e.depth[o]=0):i[2*o+1]=0;for(;e.heap_len<2;)d=e.heap[++e.heap_len]=c<2?++c:0,i[2*d]=1,e.depth[d]=0,e.opt_len--,r&&(e.static_len-=n[2*d+1]);for(t.max_code=c,o=e.heap_len>>1;o>=1;o--)de(e,i,o);d=a;do{o=e.heap[1],e.heap[1]=e.heap[e.heap_len--],de(e,i,1),s=e.heap[1],e.heap[--e.heap_max]=o,e.heap[--e.heap_max]=s,i[2*d]=i[2*o]+i[2*s],e.depth[d]=(e.depth[o]>=e.depth[s]?e.depth[o]:e.depth[s])+1,i[2*o+1]=i[2*s+1]=d,e.heap[1]=d++,de(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const i=t.dyn_tree,n=t.max_code,r=t.stat_desc.static_tree,a=t.stat_desc.has_stree,o=t.stat_desc.extra_bits,s=t.stat_desc.extra_base,d=t.stat_desc.max_length;let c,l,h,u,f,p,g=0;for(u=0;u<=F;u++)e.bl_count[u]=0;for(i[2*e.heap[e.heap_max]+1]=0,c=e.heap_max+1;c<573;c++)l=e.heap[c],u=i[2*i[2*l+1]+1]+1,u>d&&(u=d,g++),i[2*l+1]=u,l>n||(e.bl_count[u]++,f=0,l>=s&&(f=o[l-s]),p=i[2*l],e.opt_len+=p*(u+f),a&&(e.static_len+=p*(r[2*l+1]+f)));if(0!==g){do{for(u=d-1;0===e.bl_count[u];)u--;e.bl_count[u]--,e.bl_count[u+1]+=2,e.bl_count[d]--,g-=2}while(g>0);for(u=d;0!==u;u--)for(l=e.bl_count[u];0!==l;)h=e.heap[--c],h>n||(i[2*h+1]!==u&&(e.opt_len+=(u-i[2*h+1])*i[2*h],i[2*h+1]=u),l--)}})(e,t),re(i,c,e.bl_count)},he=(e,t,i)=>{let n,r,a=-1,o=t[1],s=0,d=7,c=4;for(0===o&&(d=138,c=3),t[2*(i+1)+1]=65535,n=0;n<=i;n++)r=o,o=t[2*(n+1)+1],++s<d&&r===o||(s<c?e.bl_tree[2*r]+=s:0!==r?(r!==a&&e.bl_tree[2*r]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,a=r,0===o?(d=138,c=3):r===o?(d=6,c=3):(d=7,c=4))},ue=(e,t,i)=>{let n,r,a=-1,o=t[1],s=0,d=7,c=4;for(0===o&&(d=138,c=3),n=0;n<=i;n++)if(r=o,o=t[2*(n+1)+1],!(++s<d&&r===o)){if(s<c)do{ie(e,r,e.bl_tree)}while(0!=--s);else 0!==r?(r!==a&&(ie(e,r,e.bl_tree),s--),ie(e,16,e.bl_tree),te(e,s-3,2)):s<=10?(ie(e,17,e.bl_tree),te(e,s-3,3)):(ie(e,18,e.bl_tree),te(e,s-11,7));s=0,a=r,0===o?(d=138,c=3):r===o?(d=6,c=3):(d=7,c=4)}};let fe=!1;const pe=(e,t,i,n)=>{te(e,0+(n?1:0),3),((e,t,i,n)=>{oe(e),n&&(ee(e,i),ee(e,~i)),e.pending_buf.set(e.window.subarray(t,t+i),e.pending),e.pending+=i})(e,t,i,!0)};var ge={_tr_init:e=>{fe||((()=>{let e,t,i,n,r;const a=new Array(16);for(i=0,n=0;n<28;n++)for(P[n]=i,e=0;e<1<<O[n];e++)A[i++]=n;for(A[i-1]=n,r=0,n=0;n<16;n++)for(j[n]=r,e=0;e<1<<k[n];e++)W[r++]=n;for(r>>=7;n<Y;n++)for(j[n]=r<<7,e=0;e<1<<k[n]-7;e++)W[256+r++]=n;for(t=0;t<=F;t++)a[t]=0;for(e=0;e<=143;)C[2*e+1]=8,e++,a[8]++;for(;e<=255;)C[2*e+1]=9,e++,a[9]++;for(;e<=279;)C[2*e+1]=7,e++,a[7]++;for(;e<=287;)C[2*e+1]=8,e++,a[8]++;for(re(C,287,a),e=0;e<Y;e++)G[2*e+1]=5,G[2*e]=ne(e,5);K=new J(C,O,257,B,F),U=new J(G,k,0,Y,F),Q=new J(new Array(0),R,0,19,7)})(),fe=!0),e.l_desc=new q(e.dyn_ltree,K),e.d_desc=new q(e.dyn_dtree,U),e.bl_desc=new q(e.bl_tree,Q),e.bi_buf=0,e.bi_valid=0,ae(e)},_tr_stored_block:pe,_tr_flush_block:(e,t,i,n)=>{let r,a,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,i=4093624447;for(t=0;t<=31;t++,i>>>=1)if(1&i&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<T;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),le(e,e.l_desc),le(e,e.d_desc),o=(e=>{let t;for(he(e,e.dyn_ltree,e.l_desc.max_code),he(e,e.dyn_dtree,e.d_desc.max_code),le(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*L[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,a=e.static_len+3+7>>>3,a<=r&&(r=a)):r=a=i+5,i+4<=r&&-1!==t?pe(e,t,i,n):4===e.strategy||a===r?(te(e,2+(n?1:0),3),ce(e,C,G)):(te(e,4+(n?1:0),3),((e,t,i,n)=>{let r;for(te(e,t-257,5),te(e,i-1,5),te(e,n-4,4),r=0;r<n;r++)te(e,e.bl_tree[2*L[r]+1],3);ue(e,e.dyn_ltree,t-1),ue(e,e.dyn_dtree,i-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),ce(e,e.dyn_ltree,e.dyn_dtree)),ae(e),n&&oe(e)},_tr_tally:(e,t,i)=>(e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&i,e.last_lit++,0===t?e.dyn_ltree[2*i]++:(e.matches++,t--,e.dyn_ltree[2*(A[i]+T+1)]++,e.dyn_dtree[2*$(t)]++),e.last_lit===e.lit_bufsize-1),_tr_align:e=>{te(e,2,3),ie(e,256,C),(e=>{16===e.bi_valid?(ee(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var me=(e,t,i,n)=>{let r=65535&e|0,a=e>>>16&65535|0,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{r=r+t[n++]|0,a=a+r|0}while(--o);r%=65521,a%=65521}return r|a<<16|0};const be=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var we=(e,t,i,n)=>{const r=be,a=n+i;e^=-1;for(let i=n;i<a;i++)e=e>>>8^r[255&(e^t[i])];return-1^e},ve={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Ne={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:_e,_tr_stored_block:De,_tr_flush_block:Xe,_tr_tally:Ee,_tr_align:Me}=ge,{Z_NO_FLUSH:ye,Z_PARTIAL_FLUSH:Ve,Z_FULL_FLUSH:ze,Z_FINISH:xe,Z_BLOCK:He,Z_OK:Ie,Z_STREAM_END:Se,Z_STREAM_ERROR:Ze,Z_DATA_ERROR:Te,Z_BUF_ERROR:Be,Z_DEFAULT_COMPRESSION:Ye,Z_FILTERED:Fe,Z_HUFFMAN_ONLY:Oe,Z_RLE:ke,Z_FIXED:Re,Z_DEFAULT_STRATEGY:Le,Z_UNKNOWN:Ce,Z_DEFLATED:Ge}=Ne,We=258,Ae=262,Pe=103,je=113,Je=666,Ke=(e,t)=>(e.msg=ve[t],t),Ue=e=>(e<<1)-(e>4?9:0),Qe=e=>{let t=e.length;for(;--t>=0;)e[t]=0};let qe=(e,t,i)=>(t<<e.hash_shift^i)&e.hash_mask;const $e=e=>{const t=e.state;let i=t.pending;i>e.avail_out&&(i=e.avail_out),0!==i&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+i),e.next_out),e.next_out+=i,t.pending_out+=i,e.total_out+=i,e.avail_out-=i,t.pending-=i,0===t.pending&&(t.pending_out=0))},et=(e,t)=>{Xe(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,$e(e.strm)},tt=(e,t)=>{e.pending_buf[e.pending++]=t},it=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},nt=(e,t,i,n)=>{let r=e.avail_in;return r>n&&(r=n),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),i),1===e.state.wrap?e.adler=me(e.adler,t,r,i):2===e.state.wrap&&(e.adler=we(e.adler,t,r,i)),e.next_in+=r,e.total_in+=r,r)},rt=(e,t)=>{let i,n,r=e.max_chain_length,a=e.strstart,o=e.prev_length,s=e.nice_match;const d=e.strstart>e.w_size-Ae?e.strstart-(e.w_size-Ae):0,c=e.window,l=e.w_mask,h=e.prev,u=e.strstart+We;let f=c[a+o-1],p=c[a+o];e.prev_length>=e.good_match&&(r>>=2),s>e.lookahead&&(s=e.lookahead);do{if(i=t,c[i+o]===p&&c[i+o-1]===f&&c[i]===c[a]&&c[++i]===c[a+1]){a+=2,i++;do{}while(c[++a]===c[++i]&&c[++a]===c[++i]&&c[++a]===c[++i]&&c[++a]===c[++i]&&c[++a]===c[++i]&&c[++a]===c[++i]&&c[++a]===c[++i]&&c[++a]===c[++i]&&a<u);if(n=We-(u-a),a=u-We,n>o){if(e.match_start=t,o=n,n>=s)break;f=c[a+o-1],p=c[a+o]}}}while((t=h[t&l])>d&&0!=--r);return o<=e.lookahead?o:e.lookahead},at=e=>{const t=e.w_size;let i,n,r,a,o;do{if(a=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Ae)){e.window.set(e.window.subarray(t,t+t),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,n=e.hash_size,i=n;do{r=e.head[--i],e.head[i]=r>=t?r-t:0}while(--n);n=t,i=n;do{r=e.prev[--i],e.prev[i]=r>=t?r-t:0}while(--n);a+=t}if(0===e.strm.avail_in)break;if(n=nt(e.strm,e.window,e.strstart+e.lookahead,a),e.lookahead+=n,e.lookahead+e.insert>=3)for(o=e.strstart-e.insert,e.ins_h=e.window[o],e.ins_h=qe(e,e.ins_h,e.window[o+1]);e.insert&&(e.ins_h=qe(e,e.ins_h,e.window[o+3-1]),e.prev[o&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=o,o++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<Ae&&0!==e.strm.avail_in)},ot=(e,t)=>{let i,n;for(;;){if(e.lookahead<Ae){if(at(e),e.lookahead<Ae&&t===ye)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=qe(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==i&&e.strstart-i<=e.w_size-Ae&&(e.match_length=rt(e,i)),e.match_length>=3)if(n=Ee(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=qe(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=qe(e,e.ins_h,e.window[e.strstart+1]);else n=Ee(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(et(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===xe?(et(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(et(e,!1),0===e.strm.avail_out)?1:2},st=(e,t)=>{let i,n,r;for(;;){if(e.lookahead<Ae){if(at(e),e.lookahead<Ae&&t===ye)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=qe(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==i&&e.prev_length<e.max_lazy_match&&e.strstart-i<=e.w_size-Ae&&(e.match_length=rt(e,i),e.match_length<=5&&(e.strategy===Fe||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,n=Ee(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=qe(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,n&&(et(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(n=Ee(e,0,e.window[e.strstart-1]),n&&et(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=Ee(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===xe?(et(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(et(e,!1),0===e.strm.avail_out)?1:2};function dt(e,t,i,n,r){this.good_length=e,this.max_lazy=t,this.nice_length=i,this.max_chain=n,this.func=r}const ct=[new dt(0,0,0,0,((e,t)=>{let i=65535;for(i>e.pending_buf_size-5&&(i=e.pending_buf_size-5);;){if(e.lookahead<=1){if(at(e),0===e.lookahead&&t===ye)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;const n=e.block_start+i;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,et(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-Ae&&(et(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===xe?(et(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(et(e,!1),e.strm.avail_out),1)})),new dt(4,4,8,4,ot),new dt(4,5,16,8,ot),new dt(4,6,32,32,ot),new dt(4,4,16,16,st),new dt(8,16,32,32,st),new dt(8,16,128,128,st),new dt(8,32,128,256,st),new dt(32,128,258,1024,st),new dt(32,258,258,4096,st)];function lt(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Ge,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Qe(this.dyn_ltree),Qe(this.dyn_dtree),Qe(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Qe(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Qe(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const ht=e=>{if(!e||!e.state)return Ke(e,Ze);e.total_in=e.total_out=0,e.data_type=Ce;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:je,e.adler=2===t.wrap?0:1,t.last_flush=ye,_e(t),Ie},ut=e=>{const t=ht(e);var i;return t===Ie&&((i=e.state).window_size=2*i.w_size,Qe(i.head),i.max_lazy_match=ct[i.level].max_lazy,i.good_match=ct[i.level].good_length,i.nice_match=ct[i.level].nice_length,i.max_chain_length=ct[i.level].max_chain,i.strstart=0,i.block_start=0,i.lookahead=0,i.insert=0,i.match_length=i.prev_length=2,i.match_available=0,i.ins_h=0),t},ft=(e,t,i,n,r,a)=>{if(!e)return Ze;let o=1;if(t===Ye&&(t=6),n<0?(o=0,n=-n):n>15&&(o=2,n-=16),r<1||r>9||i!==Ge||n<8||n>15||t<0||t>9||a<0||a>Re)return Ke(e,Ze);8===n&&(n=9);const s=new lt;return e.state=s,s.strm=e,s.wrap=o,s.gzhead=null,s.w_bits=n,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=r+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+3-1)/3),s.window=new Uint8Array(2*s.w_size),s.head=new Uint16Array(s.hash_size),s.prev=new Uint16Array(s.w_size),s.lit_bufsize=1<<r+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new Uint8Array(s.pending_buf_size),s.d_buf=1*s.lit_bufsize,s.l_buf=3*s.lit_bufsize,s.level=t,s.strategy=a,s.method=i,ut(e)};var pt={deflateInit:(e,t)=>ft(e,t,Ge,15,8,Le),deflateInit2:ft,deflateReset:ut,deflateResetKeep:ht,deflateSetHeader:(e,t)=>e&&e.state?2!==e.state.wrap?Ze:(e.state.gzhead=t,Ie):Ze,deflate:(e,t)=>{let i,n;if(!e||!e.state||t>He||t<0)return e?Ke(e,Ze):Ze;const r=e.state;if(!e.output||!e.input&&0!==e.avail_in||r.status===Je&&t!==xe)return Ke(e,0===e.avail_out?Be:Ze);r.strm=e;const a=r.last_flush;if(r.last_flush=t,42===r.status)if(2===r.wrap)e.adler=0,tt(r,31),tt(r,139),tt(r,8),r.gzhead?(tt(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),tt(r,255&r.gzhead.time),tt(r,r.gzhead.time>>8&255),tt(r,r.gzhead.time>>16&255),tt(r,r.gzhead.time>>24&255),tt(r,9===r.level?2:r.strategy>=Oe||r.level<2?4:0),tt(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(tt(r,255&r.gzhead.extra.length),tt(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=we(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(tt(r,0),tt(r,0),tt(r,0),tt(r,0),tt(r,0),tt(r,9===r.level?2:r.strategy>=Oe||r.level<2?4:0),tt(r,3),r.status=je);else{let t=Ge+(r.w_bits-8<<4)<<8,i=-1;i=r.strategy>=Oe||r.level<2?0:r.level<6?1:6===r.level?2:3,t|=i<<6,0!==r.strstart&&(t|=32),t+=31-t%31,r.status=je,it(r,t),0!==r.strstart&&(it(r,e.adler>>>16),it(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(i=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>i&&(e.adler=we(e.adler,r.pending_buf,r.pending-i,i)),$e(e),i=r.pending,r.pending!==r.pending_buf_size));)tt(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>i&&(e.adler=we(e.adler,r.pending_buf,r.pending-i,i)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){i=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>i&&(e.adler=we(e.adler,r.pending_buf,r.pending-i,i)),$e(e),i=r.pending,r.pending===r.pending_buf_size)){n=1;break}n=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,tt(r,n)}while(0!==n);r.gzhead.hcrc&&r.pending>i&&(e.adler=we(e.adler,r.pending_buf,r.pending-i,i)),0===n&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){i=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>i&&(e.adler=we(e.adler,r.pending_buf,r.pending-i,i)),$e(e),i=r.pending,r.pending===r.pending_buf_size)){n=1;break}n=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,tt(r,n)}while(0!==n);r.gzhead.hcrc&&r.pending>i&&(e.adler=we(e.adler,r.pending_buf,r.pending-i,i)),0===n&&(r.status=Pe)}else r.status=Pe;if(r.status===Pe&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&$e(e),r.pending+2<=r.pending_buf_size&&(tt(r,255&e.adler),tt(r,e.adler>>8&255),e.adler=0,r.status=je)):r.status=je),0!==r.pending){if($e(e),0===e.avail_out)return r.last_flush=-1,Ie}else if(0===e.avail_in&&Ue(t)<=Ue(a)&&t!==xe)return Ke(e,Be);if(r.status===Je&&0!==e.avail_in)return Ke(e,Be);if(0!==e.avail_in||0!==r.lookahead||t!==ye&&r.status!==Je){let i=r.strategy===Oe?((e,t)=>{let i;for(;;){if(0===e.lookahead&&(at(e),0===e.lookahead)){if(t===ye)return 1;break}if(e.match_length=0,i=Ee(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,i&&(et(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===xe?(et(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(et(e,!1),0===e.strm.avail_out)?1:2})(r,t):r.strategy===ke?((e,t)=>{let i,n,r,a;const o=e.window;for(;;){if(e.lookahead<=We){if(at(e),e.lookahead<=We&&t===ye)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,n=o[r],n===o[++r]&&n===o[++r]&&n===o[++r])){a=e.strstart+We;do{}while(n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&r<a);e.match_length=We-(a-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(i=Ee(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(i=Ee(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),i&&(et(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===xe?(et(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(et(e,!1),0===e.strm.avail_out)?1:2})(r,t):ct[r.level].func(r,t);if(3!==i&&4!==i||(r.status=Je),1===i||3===i)return 0===e.avail_out&&(r.last_flush=-1),Ie;if(2===i&&(t===Ve?Me(r):t!==He&&(De(r,0,0,!1),t===ze&&(Qe(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),$e(e),0===e.avail_out))return r.last_flush=-1,Ie}return t!==xe?Ie:r.wrap<=0?Se:(2===r.wrap?(tt(r,255&e.adler),tt(r,e.adler>>8&255),tt(r,e.adler>>16&255),tt(r,e.adler>>24&255),tt(r,255&e.total_in),tt(r,e.total_in>>8&255),tt(r,e.total_in>>16&255),tt(r,e.total_in>>24&255)):(it(r,e.adler>>>16),it(r,65535&e.adler)),$e(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?Ie:Se)},deflateEnd:e=>{if(!e||!e.state)return Ze;const t=e.state.status;return 42!==t&&69!==t&&73!==t&&91!==t&&t!==Pe&&t!==je&&t!==Je?Ke(e,Ze):(e.state=null,t===je?Ke(e,Te):Ie)},deflateSetDictionary:(e,t)=>{let i=t.length;if(!e||!e.state)return Ze;const n=e.state,r=n.wrap;if(2===r||1===r&&42!==n.status||n.lookahead)return Ze;if(1===r&&(e.adler=me(e.adler,t,i,0)),n.wrap=0,i>=n.w_size){0===r&&(Qe(n.head),n.strstart=0,n.block_start=0,n.insert=0);let e=new Uint8Array(n.w_size);e.set(t.subarray(i-n.w_size,i),0),t=e,i=n.w_size}const a=e.avail_in,o=e.next_in,s=e.input;for(e.avail_in=i,e.next_in=0,e.input=t,at(n);n.lookahead>=3;){let e=n.strstart,t=n.lookahead-2;do{n.ins_h=qe(n,n.ins_h,n.window[e+3-1]),n.prev[e&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=e,e++}while(--t);n.strstart=e,n.lookahead=2,at(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=o,e.input=s,e.avail_in=a,n.wrap=r,Ie},deflateInfo:"pako deflate (from Nodeca project)"};const gt=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var mt=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(const t in i)gt(i,t)&&(e[t]=i[t])}}return e},bt=e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,r=e.length;t<r;t++){let r=e[t];i.set(r,n),n+=r.length}return i};let wt=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){wt=!1}const vt=new Uint8Array(256);for(let e=0;e<256;e++)vt[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;vt[254]=vt[254]=1;var Nt=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,r,a,o=e.length,s=0;for(r=0;r<o;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),s+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(s),a=0,r=0;a<s;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[a++]=i:i<2048?(t[a++]=192|i>>>6,t[a++]=128|63&i):i<65536?(t[a++]=224|i>>>12,t[a++]=128|i>>>6&63,t[a++]=128|63&i):(t[a++]=240|i>>>18,t[a++]=128|i>>>12&63,t[a++]=128|i>>>6&63,t[a++]=128|63&i);return t},_t=(e,t)=>{const i=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,r;const a=new Array(2*i);for(r=0,n=0;n<i;){let t=e[n++];if(t<128){a[r++]=t;continue}let o=vt[t];if(o>4)a[r++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?a[r++]=65533:t<65536?a[r++]=t:(t-=65536,a[r++]=55296|t>>10&1023,a[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&wt)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i="";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(a,r)},Dt=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+vt[e[i]]>t?i:t};var Xt=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Et=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:yt,Z_FULL_FLUSH:Vt,Z_FINISH:zt,Z_OK:xt,Z_STREAM_END:Ht,Z_DEFAULT_COMPRESSION:It,Z_DEFAULT_STRATEGY:St,Z_DEFLATED:Zt}=Ne;function Tt(e){this.options=mt({level:It,method:Zt,chunkSize:16384,windowBits:15,memLevel:8,strategy:St},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Xt,this.strm.avail_out=0;let i=pt.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(i!==xt)throw new Error(ve[i]);if(t.header&&pt.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?Nt(t.dictionary):"[object ArrayBuffer]"===Et.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,i=pt.deflateSetDictionary(this.strm,e),i!==xt)throw new Error(ve[i]);this._dict_set=!0}}function Bt(e,t){const i=new Tt(t);if(i.push(e,!0),i.err)throw i.msg||ve[i.err];return i.result}Tt.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize;let r,a;if(this.ended)return!1;for(a=t===~~t?t:!0===t?zt:Mt,"string"==typeof e?i.input=Nt(e):"[object ArrayBuffer]"===Et.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;)if(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),(a===yt||a===Vt)&&i.avail_out<=6)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else{if(r=pt.deflate(i,a),r===Ht)return i.next_out>0&&this.onData(i.output.subarray(0,i.next_out)),r=pt.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===xt;if(0!==i.avail_out){if(a>0&&i.next_out>0)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else if(0===i.avail_in)break}else this.onData(i.output)}return!0},Tt.prototype.onData=function(e){this.chunks.push(e)},Tt.prototype.onEnd=function(e){e===xt&&(this.result=bt(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Yt={Deflate:Tt,deflate:Bt,deflateRaw:function(e,t){return(t=t||{}).raw=!0,Bt(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,Bt(e,t)},constants:Ne};var Ft=function(e,t){let i,n,r,a,o,s,d,c,l,h,u,f,p,g,m,b,w,v,N,_,D,X,E,M;const y=e.state;i=e.next_in,E=e.input,n=i+(e.avail_in-5),r=e.next_out,M=e.output,a=r-(t-e.avail_out),o=r+(e.avail_out-257),s=y.dmax,d=y.wsize,c=y.whave,l=y.wnext,h=y.window,u=y.hold,f=y.bits,p=y.lencode,g=y.distcode,m=(1<<y.lenbits)-1,b=(1<<y.distbits)-1;e:do{f<15&&(u+=E[i++]<<f,f+=8,u+=E[i++]<<f,f+=8),w=p[u&m];t:for(;;){if(v=w>>>24,u>>>=v,f-=v,v=w>>>16&255,0===v)M[r++]=65535&w;else{if(!(16&v)){if(0==(64&v)){w=p[(65535&w)+(u&(1<<v)-1)];continue t}if(32&v){y.mode=12;break e}e.msg="invalid literal/length code",y.mode=30;break e}N=65535&w,v&=15,v&&(f<v&&(u+=E[i++]<<f,f+=8),N+=u&(1<<v)-1,u>>>=v,f-=v),f<15&&(u+=E[i++]<<f,f+=8,u+=E[i++]<<f,f+=8),w=g[u&b];i:for(;;){if(v=w>>>24,u>>>=v,f-=v,v=w>>>16&255,!(16&v)){if(0==(64&v)){w=g[(65535&w)+(u&(1<<v)-1)];continue i}e.msg="invalid distance code",y.mode=30;break e}if(_=65535&w,v&=15,f<v&&(u+=E[i++]<<f,f+=8,f<v&&(u+=E[i++]<<f,f+=8)),_+=u&(1<<v)-1,_>s){e.msg="invalid distance too far back",y.mode=30;break e}if(u>>>=v,f-=v,v=r-a,_>v){if(v=_-v,v>c&&y.sane){e.msg="invalid distance too far back",y.mode=30;break e}if(D=0,X=h,0===l){if(D+=d-v,v<N){N-=v;do{M[r++]=h[D++]}while(--v);D=r-_,X=M}}else if(l<v){if(D+=d+l-v,v-=l,v<N){N-=v;do{M[r++]=h[D++]}while(--v);if(D=0,l<N){v=l,N-=v;do{M[r++]=h[D++]}while(--v);D=r-_,X=M}}}else if(D+=l-v,v<N){N-=v;do{M[r++]=h[D++]}while(--v);D=r-_,X=M}for(;N>2;)M[r++]=X[D++],M[r++]=X[D++],M[r++]=X[D++],N-=3;N&&(M[r++]=X[D++],N>1&&(M[r++]=X[D++]))}else{D=r-_;do{M[r++]=M[D++],M[r++]=M[D++],M[r++]=M[D++],N-=3}while(N>2);N&&(M[r++]=M[D++],N>1&&(M[r++]=M[D++]))}break}}break}}while(i<n&&r<o);N=f>>3,i-=N,f-=N<<3,u&=(1<<f)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<o?o-r+257:257-(r-o),y.hold=u,y.bits=f};const Ot=15,kt=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),Rt=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),Lt=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Ct=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var Gt=(e,t,i,n,r,a,o,s)=>{const d=s.bits;let c,l,h,u,f,p,g=0,m=0,b=0,w=0,v=0,N=0,_=0,D=0,X=0,E=0,M=null,y=0;const V=new Uint16Array(16),z=new Uint16Array(16);let x,H,I,S=null,Z=0;for(g=0;g<=Ot;g++)V[g]=0;for(m=0;m<n;m++)V[t[i+m]]++;for(v=d,w=Ot;w>=1&&0===V[w];w--);if(v>w&&(v=w),0===w)return r[a++]=20971520,r[a++]=20971520,s.bits=1,0;for(b=1;b<w&&0===V[b];b++);for(v<b&&(v=b),D=1,g=1;g<=Ot;g++)if(D<<=1,D-=V[g],D<0)return-1;if(D>0&&(0===e||1!==w))return-1;for(z[1]=0,g=1;g<Ot;g++)z[g+1]=z[g]+V[g];for(m=0;m<n;m++)0!==t[i+m]&&(o[z[t[i+m]]++]=m);if(0===e?(M=S=o,p=19):1===e?(M=kt,y-=257,S=Rt,Z-=257,p=256):(M=Lt,S=Ct,p=-1),E=0,m=0,g=b,f=a,N=v,_=0,h=-1,X=1<<v,u=X-1,1===e&&X>852||2===e&&X>592)return 1;for(;;){x=g-_,o[m]<p?(H=0,I=o[m]):o[m]>p?(H=S[Z+o[m]],I=M[y+o[m]]):(H=96,I=0),c=1<<g-_,l=1<<N,b=l;do{l-=c,r[f+(E>>_)+l]=x<<24|H<<16|I|0}while(0!==l);for(c=1<<g-1;E&c;)c>>=1;if(0!==c?(E&=c-1,E+=c):E=0,m++,0==--V[g]){if(g===w)break;g=t[i+o[m]]}if(g>v&&(E&u)!==h){for(0===_&&(_=v),f+=b,N=g-_,D=1<<N;N+_<w&&(D-=V[N+_],!(D<=0));)N++,D<<=1;if(X+=1<<N,1===e&&X>852||2===e&&X>592)return 1;h=E&u,r[h]=v<<24|N<<16|f-a|0}}return 0!==E&&(r[f+E]=g-_<<24|64<<16|0),s.bits=v,0};const{Z_FINISH:Wt,Z_BLOCK:At,Z_TREES:Pt,Z_OK:jt,Z_STREAM_END:Jt,Z_NEED_DICT:Kt,Z_STREAM_ERROR:Ut,Z_DATA_ERROR:Qt,Z_MEM_ERROR:qt,Z_BUF_ERROR:$t,Z_DEFLATED:ei}=Ne,ti=12,ii=30,ni=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function ri(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const ai=e=>{if(!e||!e.state)return Ut;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,jt},oi=e=>{if(!e||!e.state)return Ut;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,ai(e)},si=(e,t)=>{let i;if(!e||!e.state)return Ut;const n=e.state;return t<0?(i=0,t=-t):(i=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?Ut:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,oi(e))},di=(e,t)=>{if(!e)return Ut;const i=new ri;e.state=i,i.window=null;const n=si(e,t);return n!==jt&&(e.state=null),n};let ci,li,hi=!0;const ui=e=>{if(hi){ci=new Int32Array(512),li=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Gt(1,e.lens,0,288,ci,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Gt(2,e.lens,0,32,li,0,e.work,{bits:5}),hi=!1}e.lencode=ci,e.lenbits=9,e.distcode=li,e.distbits=5},fi=(e,t,i,n)=>{let r;const a=e.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new Uint8Array(a.wsize)),n>=a.wsize?(a.window.set(t.subarray(i-a.wsize,i),0),a.wnext=0,a.whave=a.wsize):(r=a.wsize-a.wnext,r>n&&(r=n),a.window.set(t.subarray(i-n,i-n+r),a.wnext),(n-=r)?(a.window.set(t.subarray(i-n,i),0),a.wnext=n,a.whave=a.wsize):(a.wnext+=r,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=r))),0};var pi={inflateReset:oi,inflateReset2:si,inflateResetKeep:ai,inflateInit:e=>di(e,15),inflateInit2:di,inflate:(e,t)=>{let i,n,r,a,o,s,d,c,l,h,u,f,p,g,m,b,w,v,N,_,D,X,E=0;const M=new Uint8Array(4);let y,V;const z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return Ut;i=e.state,i.mode===ti&&(i.mode=13),o=e.next_out,r=e.output,d=e.avail_out,a=e.next_in,n=e.input,s=e.avail_in,c=i.hold,l=i.bits,h=s,u=d,X=jt;e:for(;;)switch(i.mode){case 1:if(0===i.wrap){i.mode=13;break}for(;l<16;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(2&i.wrap&&35615===c){i.check=0,M[0]=255&c,M[1]=c>>>8&255,i.check=we(i.check,M,2,0),c=0,l=0,i.mode=2;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&c)<<8)+(c>>8))%31){e.msg="incorrect header check",i.mode=ii;break}if((15&c)!==ei){e.msg="unknown compression method",i.mode=ii;break}if(c>>>=4,l-=4,D=8+(15&c),0===i.wbits)i.wbits=D;else if(D>i.wbits){e.msg="invalid window size",i.mode=ii;break}i.dmax=1<<i.wbits,e.adler=i.check=1,i.mode=512&c?10:ti,c=0,l=0;break;case 2:for(;l<16;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(i.flags=c,(255&i.flags)!==ei){e.msg="unknown compression method",i.mode=ii;break}if(57344&i.flags){e.msg="unknown header flags set",i.mode=ii;break}i.head&&(i.head.text=c>>8&1),512&i.flags&&(M[0]=255&c,M[1]=c>>>8&255,i.check=we(i.check,M,2,0)),c=0,l=0,i.mode=3;case 3:for(;l<32;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}i.head&&(i.head.time=c),512&i.flags&&(M[0]=255&c,M[1]=c>>>8&255,M[2]=c>>>16&255,M[3]=c>>>24&255,i.check=we(i.check,M,4,0)),c=0,l=0,i.mode=4;case 4:for(;l<16;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}i.head&&(i.head.xflags=255&c,i.head.os=c>>8),512&i.flags&&(M[0]=255&c,M[1]=c>>>8&255,i.check=we(i.check,M,2,0)),c=0,l=0,i.mode=5;case 5:if(1024&i.flags){for(;l<16;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}i.length=c,i.head&&(i.head.extra_len=c),512&i.flags&&(M[0]=255&c,M[1]=c>>>8&255,i.check=we(i.check,M,2,0)),c=0,l=0}else i.head&&(i.head.extra=null);i.mode=6;case 6:if(1024&i.flags&&(f=i.length,f>s&&(f=s),f&&(i.head&&(D=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(n.subarray(a,a+f),D)),512&i.flags&&(i.check=we(i.check,n,f,a)),s-=f,a+=f,i.length-=f),i.length))break e;i.length=0,i.mode=7;case 7:if(2048&i.flags){if(0===s)break e;f=0;do{D=n[a+f++],i.head&&D&&i.length<65536&&(i.head.name+=String.fromCharCode(D))}while(D&&f<s);if(512&i.flags&&(i.check=we(i.check,n,f,a)),s-=f,a+=f,D)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=8;case 8:if(4096&i.flags){if(0===s)break e;f=0;do{D=n[a+f++],i.head&&D&&i.length<65536&&(i.head.comment+=String.fromCharCode(D))}while(D&&f<s);if(512&i.flags&&(i.check=we(i.check,n,f,a)),s-=f,a+=f,D)break e}else i.head&&(i.head.comment=null);i.mode=9;case 9:if(512&i.flags){for(;l<16;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(c!==(65535&i.check)){e.msg="header crc mismatch",i.mode=ii;break}c=0,l=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=ti;break;case 10:for(;l<32;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}e.adler=i.check=ni(c),c=0,l=0,i.mode=11;case 11:if(0===i.havedict)return e.next_out=o,e.avail_out=d,e.next_in=a,e.avail_in=s,i.hold=c,i.bits=l,Kt;e.adler=i.check=1,i.mode=ti;case ti:if(t===At||t===Pt)break e;case 13:if(i.last){c>>>=7&l,l-=7&l,i.mode=27;break}for(;l<3;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}switch(i.last=1&c,c>>>=1,l-=1,3&c){case 0:i.mode=14;break;case 1:if(ui(i),i.mode=20,t===Pt){c>>>=2,l-=2;break e}break;case 2:i.mode=17;break;case 3:e.msg="invalid block type",i.mode=ii}c>>>=2,l-=2;break;case 14:for(c>>>=7&l,l-=7&l;l<32;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if((65535&c)!=(c>>>16^65535)){e.msg="invalid stored block lengths",i.mode=ii;break}if(i.length=65535&c,c=0,l=0,i.mode=15,t===Pt)break e;case 15:i.mode=16;case 16:if(f=i.length,f){if(f>s&&(f=s),f>d&&(f=d),0===f)break e;r.set(n.subarray(a,a+f),o),s-=f,a+=f,d-=f,o+=f,i.length-=f;break}i.mode=ti;break;case 17:for(;l<14;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(i.nlen=257+(31&c),c>>>=5,l-=5,i.ndist=1+(31&c),c>>>=5,l-=5,i.ncode=4+(15&c),c>>>=4,l-=4,i.nlen>286||i.ndist>30){e.msg="too many length or distance symbols",i.mode=ii;break}i.have=0,i.mode=18;case 18:for(;i.have<i.ncode;){for(;l<3;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}i.lens[z[i.have++]]=7&c,c>>>=3,l-=3}for(;i.have<19;)i.lens[z[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,y={bits:i.lenbits},X=Gt(0,i.lens,0,19,i.lencode,0,i.work,y),i.lenbits=y.bits,X){e.msg="invalid code lengths set",i.mode=ii;break}i.have=0,i.mode=19;case 19:for(;i.have<i.nlen+i.ndist;){for(;E=i.lencode[c&(1<<i.lenbits)-1],m=E>>>24,b=E>>>16&255,w=65535&E,!(m<=l);){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(w<16)c>>>=m,l-=m,i.lens[i.have++]=w;else{if(16===w){for(V=m+2;l<V;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(c>>>=m,l-=m,0===i.have){e.msg="invalid bit length repeat",i.mode=ii;break}D=i.lens[i.have-1],f=3+(3&c),c>>>=2,l-=2}else if(17===w){for(V=m+3;l<V;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}c>>>=m,l-=m,D=0,f=3+(7&c),c>>>=3,l-=3}else{for(V=m+7;l<V;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}c>>>=m,l-=m,D=0,f=11+(127&c),c>>>=7,l-=7}if(i.have+f>i.nlen+i.ndist){e.msg="invalid bit length repeat",i.mode=ii;break}for(;f--;)i.lens[i.have++]=D}}if(i.mode===ii)break;if(0===i.lens[256]){e.msg="invalid code -- missing end-of-block",i.mode=ii;break}if(i.lenbits=9,y={bits:i.lenbits},X=Gt(1,i.lens,0,i.nlen,i.lencode,0,i.work,y),i.lenbits=y.bits,X){e.msg="invalid literal/lengths set",i.mode=ii;break}if(i.distbits=6,i.distcode=i.distdyn,y={bits:i.distbits},X=Gt(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,y),i.distbits=y.bits,X){e.msg="invalid distances set",i.mode=ii;break}if(i.mode=20,t===Pt)break e;case 20:i.mode=21;case 21:if(s>=6&&d>=258){e.next_out=o,e.avail_out=d,e.next_in=a,e.avail_in=s,i.hold=c,i.bits=l,Ft(e,u),o=e.next_out,r=e.output,d=e.avail_out,a=e.next_in,n=e.input,s=e.avail_in,c=i.hold,l=i.bits,i.mode===ti&&(i.back=-1);break}for(i.back=0;E=i.lencode[c&(1<<i.lenbits)-1],m=E>>>24,b=E>>>16&255,w=65535&E,!(m<=l);){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(b&&0==(240&b)){for(v=m,N=b,_=w;E=i.lencode[_+((c&(1<<v+N)-1)>>v)],m=E>>>24,b=E>>>16&255,w=65535&E,!(v+m<=l);){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}c>>>=v,l-=v,i.back+=v}if(c>>>=m,l-=m,i.back+=m,i.length=w,0===b){i.mode=26;break}if(32&b){i.back=-1,i.mode=ti;break}if(64&b){e.msg="invalid literal/length code",i.mode=ii;break}i.extra=15&b,i.mode=22;case 22:if(i.extra){for(V=i.extra;l<V;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}i.length+=c&(1<<i.extra)-1,c>>>=i.extra,l-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=23;case 23:for(;E=i.distcode[c&(1<<i.distbits)-1],m=E>>>24,b=E>>>16&255,w=65535&E,!(m<=l);){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(0==(240&b)){for(v=m,N=b,_=w;E=i.distcode[_+((c&(1<<v+N)-1)>>v)],m=E>>>24,b=E>>>16&255,w=65535&E,!(v+m<=l);){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}c>>>=v,l-=v,i.back+=v}if(c>>>=m,l-=m,i.back+=m,64&b){e.msg="invalid distance code",i.mode=ii;break}i.offset=w,i.extra=15&b,i.mode=24;case 24:if(i.extra){for(V=i.extra;l<V;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}i.offset+=c&(1<<i.extra)-1,c>>>=i.extra,l-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg="invalid distance too far back",i.mode=ii;break}i.mode=25;case 25:if(0===d)break e;if(f=u-d,i.offset>f){if(f=i.offset-f,f>i.whave&&i.sane){e.msg="invalid distance too far back",i.mode=ii;break}f>i.wnext?(f-=i.wnext,p=i.wsize-f):p=i.wnext-f,f>i.length&&(f=i.length),g=i.window}else g=r,p=o-i.offset,f=i.length;f>d&&(f=d),d-=f,i.length-=f;do{r[o++]=g[p++]}while(--f);0===i.length&&(i.mode=21);break;case 26:if(0===d)break e;r[o++]=i.length,d--,i.mode=21;break;case 27:if(i.wrap){for(;l<32;){if(0===s)break e;s--,c|=n[a++]<<l,l+=8}if(u-=d,e.total_out+=u,i.total+=u,u&&(e.adler=i.check=i.flags?we(i.check,r,u,o-u):me(i.check,r,u,o-u)),u=d,(i.flags?c:ni(c))!==i.check){e.msg="incorrect data check",i.mode=ii;break}c=0,l=0}i.mode=28;case 28:if(i.wrap&&i.flags){for(;l<32;){if(0===s)break e;s--,c+=n[a++]<<l,l+=8}if(c!==(4294967295&i.total)){e.msg="incorrect length check",i.mode=ii;break}c=0,l=0}i.mode=29;case 29:X=Jt;break e;case ii:X=Qt;break e;case 31:return qt;case 32:default:return Ut}return e.next_out=o,e.avail_out=d,e.next_in=a,e.avail_in=s,i.hold=c,i.bits=l,(i.wsize||u!==e.avail_out&&i.mode<ii&&(i.mode<27||t!==Wt))&&fi(e,e.output,e.next_out,u-e.avail_out),h-=e.avail_in,u-=e.avail_out,e.total_in+=h,e.total_out+=u,i.total+=u,i.wrap&&u&&(e.adler=i.check=i.flags?we(i.check,r,u,e.next_out-u):me(i.check,r,u,e.next_out-u)),e.data_type=i.bits+(i.last?64:0)+(i.mode===ti?128:0)+(20===i.mode||15===i.mode?256:0),(0===h&&0===u||t===Wt)&&X===jt&&(X=$t),X},inflateEnd:e=>{if(!e||!e.state)return Ut;let t=e.state;return t.window&&(t.window=null),e.state=null,jt},inflateGetHeader:(e,t)=>{if(!e||!e.state)return Ut;const i=e.state;return 0==(2&i.wrap)?Ut:(i.head=t,t.done=!1,jt)},inflateSetDictionary:(e,t)=>{const i=t.length;let n,r,a;return e&&e.state?(n=e.state,0!==n.wrap&&11!==n.mode?Ut:11===n.mode&&(r=1,r=me(r,t,i,0),r!==n.check)?Qt:(a=fi(e,t,i,i),a?(n.mode=31,qt):(n.havedict=1,jt))):Ut},inflateInfo:"pako inflate (from Nodeca project)"};var gi=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const mi=Object.prototype.toString,{Z_NO_FLUSH:bi,Z_FINISH:wi,Z_OK:vi,Z_STREAM_END:Ni,Z_NEED_DICT:_i,Z_STREAM_ERROR:Di,Z_DATA_ERROR:Xi,Z_MEM_ERROR:Ei}=Ne;function Mi(e){this.options=mt({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Xt,this.strm.avail_out=0;let i=pi.inflateInit2(this.strm,t.windowBits);if(i!==vi)throw new Error(ve[i]);if(this.header=new gi,pi.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=Nt(t.dictionary):"[object ArrayBuffer]"===mi.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=pi.inflateSetDictionary(this.strm,t.dictionary),i!==vi)))throw new Error(ve[i])}function yi(e,t){const i=new Mi(t);if(i.push(e),i.err)throw i.msg||ve[i.err];return i.result}Mi.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let a,o,s;if(this.ended)return!1;for(o=t===~~t?t:!0===t?wi:bi,"[object ArrayBuffer]"===mi.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),a=pi.inflate(i,o),a===_i&&r&&(a=pi.inflateSetDictionary(i,r),a===vi?a=pi.inflate(i,o):a===Xi&&(a=_i));i.avail_in>0&&a===Ni&&i.state.wrap>0&&0!==e[i.next_in];)pi.inflateReset(i),a=pi.inflate(i,o);switch(a){case Di:case Xi:case _i:case Ei:return this.onEnd(a),this.ended=!0,!1}if(s=i.avail_out,i.next_out&&(0===i.avail_out||a===Ni))if("string"===this.options.to){let e=Dt(i.output,i.next_out),t=i.next_out-e,r=_t(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(r)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(a!==vi||0!==s){if(a===Ni)return a=pi.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},Mi.prototype.onData=function(e){this.chunks.push(e)},Mi.prototype.onEnd=function(e){e===vi&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=bt(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Vi={Inflate:Mi,inflate:yi,inflateRaw:function(e,t){return(t=t||{}).raw=!0,yi(e,t)},ungzip:yi,constants:Ne};const{Deflate:zi,deflate:xi,deflateRaw:Hi,gzip:Ii}=Yt,{Inflate:Si,inflate:Zi,inflateRaw:Ti,ungzip:Bi}=Vi;var Yi={Deflate:zi,deflate:xi,deflateRaw:Hi,gzip:Ii,Inflate:Si,inflate:Zi,inflateRaw:Ti,ungzip:Bi,constants:Ne},Fi=M.new();Fi.setPrefix("utf8: ");const Oi=function(e){try{if(window.TextEncoder)return new window.TextEncoder("utf-8").encode(e).buffer}catch(e){Fi.debugf(null,"TextEncoder %o",e)}for(var t=unescape(encodeURIComponent(e)),i=new Uint8Array(t.length),n=0;n<t.length;n++)i[n]=t.charCodeAt(n);return i.buffer},ki=function(e){try{if(window.TextDecoder)return new window.TextDecoder("utf-8").decode(new Uint8Array(e))}catch(e){Fi.debugf(null,"TextDecoder %o",e)}for(var t="",i=new Uint8Array(e),n=i.byteLength,r=0;r<n;r++)t+=String.fromCharCode(i[r]);return decodeURIComponent(escape(t))};var Ri=new function(){var e=r.Y,t=S.stringRange(8,10),o="2.9.41-2-ge2a83b6";let s;window.__upo_d=window.__upo_d||{},window.__upo_d.recoveryScriptVersion=o;try{s=window.__bt_intrnl.traceID}catch(e){s=""}var d=function(e,t){""==e&&(e="/");var i=e,n="?";(t=t||{}).upapi=["true"],t.tid=[s],t.cv=[o];for(var r=Object.keys(t),a=0;a<r.length;a++)for(var d=r[a],c=t[d],l=0;l<c.length;l++){var h=c[l];i+=n+encodeURIComponent(d)+"="+encodeURIComponent(h),n="&"}return i};this.sendLog=function(e){const t=i.Z.SharedObject.getItem("websiteConfig")||{},{organizationID:n,websiteID:r}=t,a={event:e.event,severity:e.severity,error:e.error&&{name:e.error.name,stack:e.error.stack,sourceFilename:e.error.sourceFilename},message:e.message,columnNumber:e.columnNumber,lineNumber:e.lineNumber,filename:e.filename,module:e.module,orgID:n,websiteID:r,meta:e.meta};var o={method:"POST",url:d("/log"),body:Oi(JSON.stringify(a))};return I.$fetch(o)},this.testCompliance=function(e){return new Promise((function(i,n){var r={};r.pid=[t],r.nr=["2"];var a=e,o=d("/tc",r),s=JSON.stringify(e);try{s&&s.length>=2048&&window.localStorage&&!window.localStorage.updebug?(a=Yi.deflate(s).buffer,r.z=[1],o=d("/tc",r)):a=Oi(s)}catch(e){a=Oi(s)}var c={method:"POST",url:o,body:a};I.$fetch(c).then((function(e){var t=JSON.parse(ki(e.body)),n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]={status:t[r].status,id:t[r].id,backup:t[r].backup});i(n)}),(function(e){n(new Error)}))}))},this.reportAuctionStarted=function(i,r,a,o,s,c){var l={};l.pid=[t],l.nr=["1"];var h={};h.websiteID=s,h.orgID=c,h.auctionID=i,h.spaceExternalID=r,h.spaceName=a,h.bids=n.Z.map(o,(function(e){return{bidderExternalID:e.bidderId,provider:e.provider}})),e.fireEvent("auctionStartChangeRequestData",{query:l,body:h});var u={method:"POST",url:d("/as",l),body:Oi(JSON.stringify(h))};return I.$fetch(u)},this.reportAuctionEnd=function(i,n,r,a,o,s,c){var l={};l.pid=[t],l.seid=[c],l.nr=["1"],s.websiteID=a,s.orgID=o,s.auctionID=i,s.spaceExternalID=n,s.spaceName=r,s.dfpAdUnit=c,s.adUnitCode=c,e.fireEvent("auctionEndChangeRequestData",{query:l,body:s});var h={method:"POST",url:d("/ae",l),body:Oi(JSON.stringify(s))};return I.$fetch(h)},this.reportRender=function(e,t,i,n,r,a,o){var s={nr:["1"]},c={};c.websiteID=a,c.orgID=o,c.auctionID=e,c.spaceExternalID=n,c.spaceName=r,c.bidderExternalID=t,c.provider=i;var l={method:"POST",url:d("/r",s),body:Oi(JSON.stringify(c))};return I.$fetch(l)},this.reportView=function(e,t,i,n,r,a,o){var s={nr:["1"]},c={};c.websiteID=a,c.orgID=o,c.auctionID=e,c.spaceExternalID=n,c.spaceName=r,c.bidderExternalID=t,c.provider=i;var l={method:"POST",url:d("/v",s),body:Oi(JSON.stringify(c))};return I.$fetch(l)},this.consentData=function(e){const n={},r={},s=[10,13,25,28,32,52,69,76,91,755],c={consents:{}},l=e.tcData,h=e.error,u=i.Z.SharedObject.getItem("websiteConfig")||{},{organizationID:f,websiteID:p}=u;f&&(n.organizationID=parseInt(f)),p&&(n.websiteID=parseInt(p)),n.pageID=t,n.clientVersion=o,l?(r.cmpVersion=l.cmpVersion,r.gdprApplies=l.gdprApplies,r.tcfPolicyVersion=l.tcfPolicyVersion,r.tcString=l.tcString,l.gdprApplies&&(r.purpose=l.purpose,s.forEach((e=>c.consents[e]=l.vendor.consents[e])),r.vendor=c)):(r.gdprApplies=null,r.error=a.Z.commonUtils.truncateString(h.message,1024)),n.tcData=r;var g={method:"POST",url:d("/ce"),body:Oi(JSON.stringify(n))};return I.$fetch(g)}},Li=M.new();Li.setPrefix("report: ");const Ci={Report:new function(){var e=r.Y;this.init=function(){var t=i.Z.SharedObject.getItem("websiteConfig");e.addEventListener("FirePublisherEvent",(function(e){var t=e.data,i=t.eventName,n=t.payload||{bubbles:!1,cancelable:!1,detail:void 0};if(window.CustomEvent)try{var r=new window.CustomEvent(i,n);return void window.dispatchEvent(r)}catch(e){return(r=document.createEvent("CustomEvent")).initCustomEvent(i,n.bubbles,n.cancelable,n.detail),void window.dispatchEvent(r)}(r=document.createEvent("CustomEvent")).initCustomEvent(i,n.bubbles,n.cancelable,n.detail),window.dispatchEvent(r)})),e.addEventListener("sendLog",(function(e){var t=e.data;Ri.sendLog(t).then((function(e){Li.infof(null,"sendLog - %o",e)}),(function(e){Li.errorf(null,"sendLog - %o",e)}))})),e.addEventListener("onAuctionStarted",(function(e){var i=e.data.auction,r=i.auctionId,a=i.unit.space.id,o=i.unit.space.name,s=[],d=i.unit.space.preBiddingSettings&&i.unit.space.preBiddingSettings.biddingSettings,c=i.unit.space.postBiddingSettings;if(d)for(var l in d)if(l=parseInt(l),d.hasOwnProperty(l)){var h=d[l];n.Z.forEach(h,(function(e){s.push({bidderId:e.id,provider:e.name})}))}c&&(c.adxId&&s.push({bidderId:c.adxId,provider:"gad"}),c.directId&&s.push({bidderId:c.directId,provider:"direct"})),Ri.reportAuctionStarted(r,a,o,s,t.websiteID,t.organizationID).then((function(e){Li.infof(null,"onAuctionStarted - %o",e)}),(function(e){Li.errorf(null,"onAuctionStarted - %o",e)}))})),e.addEventListener("onAuctionEnded",(function(n){var r=n.data,a=r.auction,o=r.bid,s=a.bids,d=a.unit.space.name;try{if(t.dfpEnabled)for(var c=window.googletag.pubads().getSlots(),l=0;l<c.length;l++){var h=c[l],u=h.getSlotElementId();if(document.getElementById(u)==a.unit.element){d=h.getAdUnitPath().split("/")[h.getAdUnitPath().split("/").length-1];break}}}catch(e){Li.errorf(null,"onAuctionEnded: %o",e)}var f={bids:[],aliens:[],win:void 0};for(l=0;l<s.length;l++){var p=s[l],g={bid:{cpm:p.cpm,bidderCode:p.bidderCode,complianceStatus:p.complianceStatus}},m=e.fireEvent("bidCpmAdjustment",g)||1,b=p.cpm/1e3*m,w=e.fireEvent("prebidTimeout")||3e3,v={bidderExternalID:p.bidderId,provider:p.bidderCode,amount:b,complianceStatus:p.complianceStatus,timeout:w,latency:p.timeToRespond,requestStatus:"OK",creativeID:p.contentIdHash,adUnit:d,adSize:String(p.width)+"x"+String(p.height),adID:p.adId};if(p!=o)switch(v.complianceStatus){case i.Z.consts.complianceStatus.COMPLIANT:case i.Z.consts.complianceStatus.INCOMPLIANT:f.bids.push(v);break;default:f.aliens.push(v)}else f.win=v}Ri.reportAuctionEnd(a.auctionId,a.unit.space.id,a.unit.space.name,t.websiteID,t.organizationID,f,d).then((function(e){Li.infof(null,"onAuctionEnded - %o",e)}),(function(e){Li.errorf(null,"onAuctionEnded - %o",e)}))})),e.addEventListener("onAuctionRendered",(function(e){var i=e.data,n=i.auction,r=i.bid;Ri.reportRender(n.auctionId,r.bidderId,r.bidderCode,n.unit.space.id,n.unit.space.name,t.websiteID,t.organizationID).then((function(e){Li.infof(null,"onAuctionRendered - %o",e)}),(function(e){Li.errorf(null,"onAuctionRendered - %o",e)}))})),e.addEventListener("onAdViewed",(function(e){var i=e.data,n=i.auction,r=i.bid;Ri.reportView(n.auctionId,r.bidderId,r.bidderCode,n.unit.space.id,n.unit.space.name,t.websiteID,t.organizationID).then((function(e){Li.infof(null,"onAdViewed - %o",e)}),(function(e){Li.errorf(null,"onAdViewed - %o",e)}))}))},e.addEventListener("consentData",(function(e){var t=e.data;Ri.consentData(t).then((function(e){Li.infof(null,"consentData - %o",e)}),(function(e){Li.errorf(null,"consentData - %o",e)}))}))},Verifications:new function(){var e=r.Y,t=M.new();t.setPrefix("verifications: "),this.run=function(){o(),n()};var n=function(){e.addEventListener("getRestrictionSettingsEnded",(function(t){var i=e.fireEvent("acceptableAbTest");if(i){var n="//static.criteo.net/images/pixel.gif?ch=1&upapi=true";i&&(n=i.src);var r=new Image;r.addEventListener("load",(function(){i.callback(!0)}),!1),r.addEventListener("error",(function(){i.callback(!1)}),!1),r.src=n}}))},a=!1,o=function(){e.addEventListener("getRestrictionSettingsEnded",(function(n){var r=n.data;r.contentRestriction&&r.acceptableAds&&(window.pbjs=window.pbjs||{},window.pbjs.que=window.pbjs.que||[],window.pbjs.que.push((function(){window.pbjs.onEvent("bidResponse",(function(n){if(!a&&n&&n.length>0)for(var r=0;r<n.length;r++)if(n[r].cpm>0&&"emx_digital"!==n[r].bidder&&"districtmDMX"!==n[r].bidder){a=!0,e.fireEvent("disableStopFlag")||(window.__bt_intrnl.stopFlag=!0);var o=i.Z.SharedObject.getItem("renderedUnits"),s={adBlockDetectionType:i.Z.SharedObject.getItem("adBlockDetectionType"),stopedProcess:!o||0==o.length};const n={sendToServer:!0,event:"pbjsDetected",meta:s};t.noticef(null,"pub's pbjs was detected -> ",s,n)}if(n){var d={cpm:n.cpm?n.cpm:0,creativeLength:n.ad?n.ad.length:0,bidderCode:n.bidderCode||"",adUnitCode:n.adUnitCode||""};const e={sendToServer:!0,event:"pbjsBidReceived",meta:d};t.noticef(null,"pub's pbjs bid was received -> ",d,e)}}))})))}))}}};var Gi=M.new();Gi.setPrefix("utils: ");var Wi=function(e){switch(e){case"ALL":return i.Z.consts.refreshType.ALL;case"VISIBLE":return i.Z.consts.refreshType.VISIBLE;case"HIDDEN":return i.Z.consts.refreshType.HIDDEN;default:return i.Z.consts.refreshType.UNKNOWN}};function Ai(e){try{return document.querySelector(e)}catch(t){Gi.errorf(null,"document.querySelector:%o - error:%o",[e,t])}}function Pi(e){return e&&e.selector?Ai(e.selector.value):null}var ji=new function(){var e=[],t=[];this.setMovePositionRules=function(t){e=t||[]},this.dispatch=function(r){try{if(!e||e.length<=0)return;if(!(r=n.Z.filter(r,(function(e){return t.indexOf(e)<0})))||r.length<=0)return;var a=function(o,s){if(!(o>s)){for(var d=0;d<r.length;d++){for(var c=r[d],l=[],h=0;h<e.length;h++){var u=e[h];i(u,{space:c})&&(t.push(c),u.stayLive||l.push(u))}e=l.length>0?n.Z.filter(e,(function(e){return l.indexOf(e)<0})):e}e.length>0&&setTimeout((function(){a(o+1,s)}),100)}};a(0,20)}catch(e){}};var i=function(e,t){var i=e.elementToMove(t),n=e.relativeElement(t);return!(!i||!n||i.__upo_moved)&&(a.Z.ElementInsertion.insertElement(i,n,e.htmlElementInsertionType),i.__upo_moved=!0,!0)}},Ji=__webpack_require__(353),Ki={};const Ui={commonBLUtils:e,movePositionService:ji,safeFrameCreator:{createSafeFrame:function(){var e=document.createElement("iframe"),t=S.stringRange(16,24),r=function(){this.removeEventListener("load",r);try{if(this.src.indexOf("about:blank")>-1&&function(e){var t=e.contentWindow,i=function(e){return 0==e.indexOf("//")&&(e=a.Z.commonUtils.getTopmostAccessibleWindow().location.protocol+e),e},n=function(e,t){if(e&&""==e.src&&e.outerHTML){var n=new RegExp(t+'="([^"]+)"',"g").exec(e.outerHTML);n&&n[1]&&(e[t]=i(n[1]))}},r=t.XMLHttpRequest.prototype.open;t.XMLHttpRequest.prototype.open=function(){try{var e=Array.prototype.slice.call(arguments);e[1]=i(e[1])}catch(e){}return r.apply(this,e)};var o=t.open;t.open=function(){try{var e=Array.prototype.slice.call(arguments);e[0]=i(e[0])}catch(e){}return o.apply(this,e)};var s=t.HTMLElement.prototype.insertBefore;t.HTMLElement.prototype.insertBefore=function(){try{var e=Array.prototype.slice.call(arguments),t=s.apply(this,e);["SCRIPT","IFRAME"].indexOf(e[0].tagName)>-1&&n(e[0],"src"),"LINK"===e[0].tagName&&n(e[0],"href")}catch(e){}return t};var d=t.HTMLElement.prototype.appendChild;t.HTMLElement.prototype.appendChild=function(){try{var e=Array.prototype.slice.call(arguments),t=d.apply(this,e);["SCRIPT","IFRAME"].indexOf(e[0].tagName)>-1&&n(e[0],"src"),"LINK"===e[0].tagName&&n(e[0],"href")}catch(e){}return t};var c=t.HTMLElement.prototype.__lookupGetter__("innerHTML"),l=t.HTMLElement.prototype.__lookupSetter__("innerHTML");t.HTMLElement.prototype.__defineSetter__("innerHTML",(function(){try{var e=Array.prototype.slice.call(arguments),t=l.apply(this,e),i=this.firstChild;n(i,"src")}catch(e){}return t})),t.HTMLElement.prototype.__defineGetter__("innerHTML",(function(){try{return c.apply(this)}catch(e){}}));for(var h=["HTMLScriptElement","HTMLElement","HTMLVideoElement","HTMLAudioElement","HTMLHtmlElement","HTMLHeadElement","HTMLLinkElement","HTMLStyleElement","HTMLBodyElement","HTMLFormElement","HTMLSelectElement","HTMLOptionElement","HTMLInputElement","HTMLTextAreaElement","HTMLButtonElement","HTMLLabelElement","HTMLFieldSetElement","HTMLLegendElement","HTMLUListElement","HTMLOListElement","HTMLDListElement","HTMLDirectoryElement","HTMLMenuElement","HTMLLIElement","HTMLDivElement","HTMLParagraphElement","HTMLHeadingElement","HTMLQuoteElement","HTMLPreElement","HTMLBRElement","HTMLFontElement","HTMLHRElement","HTMLAnchorElement","HTMLImageElement","HTMLObjectElement","HTMLParamElement","HTMLMapElement","HTMLModElement","HTMLAreaElement","HTMLTableElement","HTMLTableCaptionElement","HTMLTableColElement","HTMLTableSectionElement","HTMLTableRowElement","HTMLTableCellElement","HTMLFrameSetElement","HTMLFrameElement","HTMLIFrameElement"],u=0;u<h.length;u++)t[h[u]]&&function(e){var t=e.prototype,n="src",r=t.__lookupGetter__(n),a=t.__lookupSetter__(n);r&&(t.__defineSetter__(n,(function(){try{var e=Array.prototype.slice.call(arguments);e[0]=i(e[0])}catch(e){}return a.apply(this,e)})),t.__defineGetter__(n,(function(){try{return r.apply(this)}catch(e){}})))}(t[h[u]])}(this),"firefox"===Ji.browser()){var e='document.write(\'<html><head></head><body><div></div></body></html>\');try{document.__defineGetter__("readyState",function(){return "complete"});window.setTimeout(function(){document.close();},300);}catch(e){};';if(i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){e='document.write(\'<html> <head> <script> var evalCode = function (code) { try { window.eval(code) } catch (error) { } }; window.addEventListener("message", function (event) { var data; if (typeof(event) === "object" && event.data.type) { data = event.data; } else { try { data = JSON.parse(event.data); } catch (err) { } }; if (!data) { return; } switch (data.type) { case "eval": evalCode(data.code); break; default: break; } }); <\/script> </head> <body> </body> </html>\');try{document.__defineGetter__("readyState",function(){return "complete"});window.setTimeout(function(){document.close();},300);}catch(e){};';var t="var script = document.createElement('script'); script.textContent=atob('"+btoa(e)+"'); document.documentElement.appendChild(script);";this.contentWindow.postMessage({type:"eval",code:t},"*")}else{var n=this.contentWindow.document,o=n.createElement("script");o.textContent=e,n.documentElement.appendChild(o)}}}catch(e){}},o=function(){!function(e){try{e.addEventListener=e.addEventListenerOrginal,delete e.addEventListenerOrginal,e.removeEventListener=e.removeEventListenerOrginal,delete e.removeEventListenerOrginal}catch(e){}}(this),this.removeEventListener("load",o),this.addEventListener("load",r),Ki[t]&&n.Z.forEach(Ki[t],function(e){this.addEventListener("load",e)}.bind(this)),this.src=i.Z.upoSettings.whitelistedFrameSettings.laterSrcModification};return i.Z.upoSettings.whitelistedFrameSettings.laterSrcModification?(e.addEventListener("load",o),function(e,t){try{e.addEventListenerOrginal=e.addEventListener,e.addEventListener=function(){var i=Array.prototype.slice.call(arguments);return"load"==i[0]?(Ki[t]=Ki[t]||[],void Ki[t].push(i[1])):e.addEventListenerOrginal.apply(this,i)},e.removeEventListenerOrginal=e.removeEventListener,e.removeEventListener=function(){var i=Array.prototype.slice.call(arguments);if("load"!=i[0])return e.removeEventListenerOrginal.apply(this,i);Ki[t]&&(Ki[t]=n.Z.filter(Ki[t],(function(e){return e!=i[1]})))}}catch(e){}}(e,t)):e.addEventListener("load",r),e.src=i.Z.upoSettings.whitelistedFrameSettings.url,e}}};var Qi=M.new(),qi=function(e){var t=!1,o=new a.Z.SubscriptionLayer;this.auctionId=S.stringRange(8,9),this.unit=e.unit,this.state=qi.States.UNOFFERED,this.creationTime=new Date,this.lastUpdate=this.creationTime,this.bids=[],this.subscribeForEvent=function(e,t){o.subscribeForEvent(e,t)},this.cancelAuction=function(){t=!0},this.getWinningBid=function(){for(var e=void 0,t=void 0,n=0;n<this.bids.length;n++){var r=this.bids[n];(!e||r.cpm>e.cpm)&&r.complianceStatus==i.Z.consts.complianceStatus.COMPLIANT&&(e=r),(!t||r.cpm>t.cpm)&&(t=r)}return t&&t!=e&&d(t)?t:e},this.addBids=function(e){if(e)for(var t=0;t<e.length;t++){var i=e[t];this.bids.push(i)}};this.getComplianceBids=function(){for(var e=[],t=0;t<this.bids.length;t++){var n=this.bids[t];n.complianceStatus==i.Z.consts.complianceStatus.COMPLIANT&&e.push(n)}return e},this.renderWinningBid=function(){var e=this.getWinningBid();this.renderBid(e)};function s(e){window.setTimeout((function(){e&&"none"==window.getComputedStyle(e).display&&e.style.setProperty("display","block","important")}),1e3)}this.renderBid=function(e){try{if(r.Y.fireEvent("renderBidInElementStarted",{element:this.unit&&this.unit.element}),this.state=qi.States.DONE,function(){if(!document.getElementById("bt-render-styles")){var e=document.createElement("style");e.id="bt-render-styles",e.type="text/css",e.textContent=".up-hide { display: none !important; }",e.textContent+='.ahover + [id^="google_ads_iframe_"] { width: 1px !important; height:1px !important; display: grid !important; }',(document.head||document.body||document.documentElement).appendChild(e)}}(),function(e,t){for(var i=0;i<e.bids.length;i++){var n=e.bids[i];n!=t&&n.cancelBid()}}(this,e),!this.unit.element||!(document.documentElement||document.body).contains(this.unit.element))return void o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1});if(!e||t)return this.unit.currentBid||(u=this.unit,n.Z.addClass("up-hide",u.element),n.Z.removeClass("up-show",u.element)),void o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1});{this.unit.cleanup(),l(this.unit.element),function(e,t){n.Z.addClass("up-show",e.element),n.Z.removeClass("up-hide",e.element)}(this.unit),this.unit.element._adData_=e,e.onRenderedEvent(function(){!function(e,t,i){var r=e.querySelector(".default-creative-container")||e.querySelector(".ahover")||e.querySelector('[id^="google_ads_iframe_"]');r.style.position||r.style.setProperty("position","relative");if(r.style.setProperty("width","max-content","important"),["sharethrough","triplelift"].indexOf(t.bidderCode)>=0){var a=t.width,o=function(e){var t=e.sizes,i=0;return n.Z.forEach(t,(function(e){var t=e.split("x")[0];(t=parseInt(t))>i&&(i=t)})),i}(i);(a>o||a<120)&&(a=o),r.style.setProperty("max-width",a+"px","important")}r.style.setProperty("z-index",0),r.style.setProperty("margin","0 auto"),r.style.setProperty("display","block")}(this.unit.element,e,this.unit.space),function(e,t){if(r.Y.fireEvent("blacklistAdStatement",{space:t}))return;var i=e.querySelector(".default-creative-container")||e.querySelector(".ahover")||e.querySelector('[id^="google_ads_iframe_"]');if(i&&!i.querySelector(".upo-label")){var n=function(){var e=document.createElement("div");return e.setAttribute("style","text-align:left;padding:0px;margin:0px;position:absolute;top:0;left:0;z-index:10000;transition:opacity 1s ease-out;opacity:0;"),e.innerHTML='<span style="display:block;background:rgba(255, 255, 255, 0.7);height:fit-content;width:fit-content;top:0;left:0;color:#444;font-size:10px;font-weight:bold;font-family:sans-serif;line-height:normal;text-decoration:none;margin:0px;padding:6px;border-radius:0 0 5px 0;">&#65;&#68;</span>',e}();n.className="upo-label",i.appendChild(n),window.setTimeout((function(){n.style.opacity="1"}),2e3)}}(this.unit.element,this.unit.space);try{r.Y.fireEvent("skipEnsureElementVisibility",{unit:this.unit})||((t=this.unit.element).classList.contains("up-show")||t.classList.add("up-show"),s(t),s(t.parentElement),s(t.parentElement.parentElement)),function(e){if(0===e.offsetWidth&&0===e.offsetHeight){const t={sendToServer:!0,sendPercentage:1,event:"ad-unit-hidden-by-css",meta:{elementId:e.id||"N/A"}};Qi.infof(null,"detectAndLogHiddenAdUnit, element ID -> ",e.id||"N/A",t)}}(this.unit.element)}catch(e){Qi.errorf(null,"auction: bid.onRenderedEvent: ensureElementVisibility: %o",e)}var t;o.invokeEventCallbacks("auctionRendered",e),this.unit.rendered(e),i.Z.SharedObject.getItem("renderedUnits")||i.Z.SharedObject.setItem("renderedUnits",[]),i.Z.SharedObject.getItem("renderedUnits").push(this.unit)}.bind(this));var a=d(e),h={placement:this.unit.element};const t=()=>{a?(e.onRenderedEvent(function(){this.renderStaticAd(this.bid,this.element)}.bind({bid:e,renderStaticAd:c,element:this.unit.element})),e.renderStaticBid(h)):e.renderBid(h)},u=e.additionalBidsToRender&&e.additionalBidsToRender.length>0&&e.additionalBidsToRender[0];u?(u.onRenderedEvent(t),u.renderBid()):t(),o.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!0})}}catch(e){Qi.errorf(null,"renderBid err:%o",e)}var u};var d=function(e){return r.Y.fireEvent("forceCompliant")&&e.complianceStatus==i.Z.consts.complianceStatus.INCOMPLIANT},c=function(e,t){var i="//mrb.upapi.net/fc?h="+e.contentIdHash+"&upapi=true";t.style.setProperty("background-image",'url("'+i+'")',"important"),t.style.setProperty("background-repeat","no-repeat","important")},l=function(e){e.style.removeProperty("background-image"),e.style.removeProperty("background-repeat")}};qi.States={UNOFFERED:0,DISPATCHED:1,DONE:3};var $i=function(e,t,i,n,r,a,o,s,d){this.bidId=S.stringRange(16,24),this.ad=e.ad,this.adId=e.adId,this.adUrl=e.adUrl,this.bidderId=e.bidderId,this.bidder=e.bidder,this.bidderCode=e.bidderCode,this.contentIdHash=e.contentIdHash,this.currency=e.currency,this.creativeId=e.creativeId,this.c=e.c,this.cpm=e.cpm,this.complianceStatus=e.complianceStatus||0,this.height=e.height,this.isBackupCreative=e.isBackupCreative,this.timeToRespond=e.timeToRespond,this.size=e.size,this.width=e.width,this.rawBid=t,this.type=i,this.status=$i.Status.LIVE,this.renderBid=r,this.renderStaticBid=a||function(){},this.cancelBid=function(){this.status=$i.Status.CANCELED,o&&o()},this.getGPTTargeting=function(e){return n&&n.call(this,e)},this.onRenderedEvent=s||function(){},this.makeEntryForTestCompliance=d||function(){},this.additionalBidsToRender=[]};$i.Types={EMPTY:0,PREBID:1,RTK:2,ADX:3,ADX_TEXT:4,DFP_PREBID:5,ADSENSE:6,DIRECT:7,SMART_AS:8,DEFAULT_CREATIVE:9},$i.Status={LIVE:0,CANCELED:1};var en=__webpack_require__(938),tn=M.new();tn.setPrefix("visibiliy: ");var nn=[],rn=function(e,t){e&&e.parentElement&&(an(e)?t():nn.push([e,t]))},an=function(e){var t=e.getBoundingClientRect();return document.hasFocus()&&t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)},on=function(){for(var e=[],t=0;t<nn.length;t++){var i=nn[t][0];if(i&&i.parentElement){var n=nn[t][1];an(i)?n():e.push([i,n])}}nn=e};en.onFocus((function(){on()})),en.onScroll((function(){on()}));var sn=function(e){var t,i,n=!1;try{var r=document.querySelector(e)}catch(t){tn.errorf(null,"document.querySelector:%o - error:%o",[e,t])}if(!r)return!1;"none"===window.getComputedStyle(r).display&&(t=r.style.getPropertyValue("display"),i=r.style.getPropertyPriority("display"),r.style.setProperty("display","block","important"),n=!0);var a=function(e){var t,i;if(e)return(i=e.getBoundingClientRect()).width||i.height?(t=document.documentElement,{top:i.top+window.pageYOffset-t.clientTop,left:i.left+window.pageXOffset-t.clientLeft}):i}(r),o=document.documentElement.scrollLeft||window.scrollX,s=document.documentElement.scrollTop||window.scrollY,d=window.innerHeight,c=window.innerWidth,l=r.offsetHeight,h=r.offsetWidth,u=!0;return u=a.left>=o&&a.top>=s&&h+a.left<=o+c&&l+a.top<=s+d||(a.left<=o&&a.left+h>o||a.left>=o&&a.left<=o+c)&&(a.top<=s&&a.top+l>s||a.top>=s&&a.top<=s+d),"hidden"===document.visibilityState&&(u=!1),n&&r.style.setProperty("display",t,i),u},dn=function(e){this.unitID=S.stringRange(16,24),this.element=e.element,this.space=e.space,this.state=e.state||dn.States.PENDING,this.currentBid,this.countOfDispatches=0,this.lastInvokeTime,this.cleanup=function(){for(var e=this.element.children,i=[],n=0;n<e.length;n++)i.push(t(e[n]));for(n=0;n<i.length;n++)i[n]()},this.rendered=function(e){this.currentBid=e};var t=function(e){return function(){e&&e.parentNode&&e.parentNode.removeChild(e)}}};dn.States={PENDING:0,CHECKING:1,DISPATCHED:2};const cn={Auction:qi,Bid:$i,Slot:function(e){this.unit=e.unit,this.auctionsList=[],this.slotName=this.unit.space.name,this.renderBid=function(e){var t=i(this.auctionsList);if(t){var a=e&&n.Z.find(t.bids,(function(t){return t.bidId==e.bidId}));try{t.subscribeForEvent("renderBidDone",(function(e){e.successfulyRenderedBid?r.Y.fireEvent("onAuctionEnded",{auction:t,bid:a}):r.Y.fireEvent("onAuctionEnded",{auction:t})})),t.renderBid(a),t.subscribeForEvent("auctionRendered",(function(){r.Y.fireEvent("onAuctionRendered",{auction:t,bid:a}),rn(t.unit.element,(function(){r.Y.fireEvent("onAdViewed",{auction:t,bid:a})}))}))}catch(e){}}},this.getBids=function(){var e=i(this.auctionsList);if(e)return t(e.bids)},this.getLastAuctionBids=function(){var e=a(this.auctionsList);if(e)return t(e.bids)};var t=function(e){return n.Z.map(e,(function(e){return{bidId:e.bidId,adId:e.adId,bidder:e.bidder,cpm:e.cpm,height:e.height,width:e.width,size:e.size,complianceStatus:e.complianceStatus}}))},i=function(e){return n.Z.find(e,(function(e){return e.state!=Auction.States.DONE}))},a=function(e){var t=e.reverse();return n.Z.find(t,(function(e){return e.state==Auction.States.DONE}))}},Space:function(e){if(this.id=e.id,this.name=e.name,this.staging=e.staging,this.selector={position:e.selector.position,value:e.selector.value},this.sizes=e.sizes,this.preBiddingSettings={enabled:!1},e.preBiddingSettings&&(this.preBiddingSettings={enabled:e.preBiddingSettings.enabled,biddingSettings:{}},e.preBiddingSettings.enabled&&e.preBiddingSettings.biddingSettings))for(var t in e.preBiddingSettings.biddingSettings)if(e.preBiddingSettings.biddingSettings.hasOwnProperty(t)){var i=e.preBiddingSettings.biddingSettings[t];this.preBiddingSettings.biddingSettings[t]=[];for(var n=0;n<i.length;n++){var a=i[n];if(a.id&&a.name&&a.params){var o={id:a.id,name:a.name,params:a.params};this.preBiddingSettings.biddingSettings[t].push(o)}}}if(this.postBiddingSettings={enabled:!1},e.postBiddingSettings&&e.postBiddingSettings.enabled){this.postBiddingSettings={adxId:e.postBiddingSettings.adxId,directId:e.postBiddingSettings.directId,enabled:e.postBiddingSettings.enabled,type:e.postBiddingSettings.type,order:[]};for(n=0;n<e.postBiddingSettings.order.length;n++){var s=e.postBiddingSettings.order[n];r.Y.fireEvent("removeAdServerRequestIteration",{iterationConfig:s})||this.postBiddingSettings.order.push({params:{keyValues:s.params.keyValues||{},queryParams:s.params.queryParams||{}},adx:{bidderID:s.adx.bidderID,testCompliance:s.adx.testCompliance},direct:{bidderID:s.direct.bidderID}})}}},Unit:dn};var ln=__webpack_require__(434),hn=function(e){try{var t={},n=e.selector||a.Z.commonUtils.escapeSelector("#"+e.code),r=e.sizes;if(r||e.mediaTypes&&e.mediaTypes.banner&&e.mediaTypes.banner.sizes&&(r=e.mediaTypes.banner.sizes),!r)return;function o(e){return 2===e.length&&e.every((e=>!Array.isArray(e)&&!isNaN(e)))}function s(e){return`${e[0]}x${e[1]}`}let h;if(h=o(r)?[s(r)]:r.filter(o).map(s),t.id=e.id,t.id||(t.id="space_"+ln.hashString(e.code+"_"+n)),t.id=t.id.substr(0,500),t.name=e.code,t.sizes=h,t.selector={position:0,value:n},e.bids){t.preBiddingSettings={enabled:!0,biddingSettings:[]},t.preBiddingSettings.biddingSettings[1]=[];for(var d=0;d<e.bids.length;d++){var c=e.bids[d];c.params=c.params||{};var l="bidder_"+ln.hashString(t.id+"_"+c.bidder+"_"+JSON.stringify(c.params).trim());l=l.substr(0,500),t.preBiddingSettings.biddingSettings[1].push({id:l,name:c.bidder,params:c.params})}}else t.preBiddingSettings={enabled:!1};return i.Z.SharedObject.getItem("websiteConfig").dfpEnabled?t.postBiddingSettings={adxId:t.name+"_adx",directId:t.name+"_direct",enabled:!0,type:1,order:[{params:{},adx:{bidderID:t.name+"_adx",testCompliance:!0},direct:{bidderID:t.name+"_direct"}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:t.name+"_adx",testCompliance:!1},direct:{bidderID:t.name+"_direct"}}]}:t.postBiddingSettings={enabled:!1},t}catch(e){M.errorf(null,"adUnitParser - error in parsing prebid ad unit - err: %o",e)}};function un(e,t,i){var n=window.googletag.defineSlot(e,t,i);return n&&n.addService(window.googletag.pubads()),n}function fn(e){if(e){var t=r.Y.fireEvent("rewriteGAMSlots")||r.Y.fireEvent("GAMSpecialAdUnit");if(t&&t.parseSlotAdUnitPath&&!e._is_rewritten_slot){var i=e.getSlotElementId(),n=e.getSizes();n=function(e){for(var t=[],i=0;i<e.length;i++){var n=e[i];n&&n.getWidth&&n.getHeight?t.push([n.getWidth(),n.getHeight()]):n&&"fluid"===n&&t.push("fluid")}return t}(n);try{var a=t.parseSlotAdUnitPath(e);if(t.shouldSkipDestroySlot&&t.shouldSkipDestroySlot(e,a)||function(e){var t=e.getSlotElementId();window.googletag.destroySlots([e]);const i=document.getElementById(t),n=i&&i.querySelector("div[id^='google_ads_iframe_']");i&&n&&i.removeChild(n)}(e),!a)return;var o=un(a,n,i);return o&&(o._is_rewritten_slot=!0,t.shouldCopyTargeting&&function(e,t){var i=e.getTargetingMap();for(var n in i)if(i.hasOwnProperty(n)){var r=i[n][0];t.setTargeting(n,r)}}(e,o),t.postSlotCreation&&t.postSlotCreation(o)),o}catch(e){M.errorf(null,"error redefining GAM slot (e.g. for SAU or BT AdX unit)",e)}}}}function pn(e){const t=Ji.isMobile();switch(e){case"mobile":return t;case"desktop":return!t;case"any":default:return!0}}function gn(e,t,i,n){switch(e){case"equals":return n===t;case"startsWith":case"endsWith":case"includes":return n[e](t);case"equalsOneOf":return i.includes(n);case"startsWithOneOf":case"endsWithOneOf":case"includesOneOf":{const t=e.split("OneOf")[0];return i.some((e=>n[t](e)))}}}const mn={hideDOMElementsViaCSS:{parseSettingValue:e=>{const{org:t=[],website:i=[],websiteOverridesOrg:n}=e;return n?i:[...t,...i]},handler:e=>{const t=[];if(e.forEach((({whenDevice:e,selectors:i})=>{pn(e)&&t.push(...i)})),t.length>0){const e=document.createElement("style");e.textContent=`${t.join(", ")} { display: none !important; }`,(document.head||document.body||document.documentElement).appendChild(e)}}},insertCustomCSS:{parseSettingValue:e=>{const{org:t=[],website:i=[],websiteOverridesOrg:n}=e;return n?i:[...t,...i]},handler:e=>{let t="";if(e.forEach((({whenDevice:e,customCSS:i=""})=>{pn(e)&&(t=`${t}\n${i}`)})),""!==t){const e=document.createElement("style");e.textContent=t,(document.head||document.body||document.documentElement).appendChild(e)}}},prebidConfig:{hookName:"prebidDoneInit",parseSettingValue:e=>{const{org:t={},website:i={},websiteOverridesOrg:n}=e;return n?i:{...t,...i}},handler:(e,t)=>{const i=e,n=t.data.cpbjs;n.que.push((function(){n.setConfig(i)}))}},removeSizes:{hookName:"sizesToRemoveBySpace",parseSettingValue:e=>{const{org:t={},website:i={},websiteOverridesOrg:n}=e,{forAllSpaces:r=[],forSpaces:a=[]}=t,{forAllSpaces:o=[],forSpaces:s=[]}=i;return{forAllSpaces:n?o:[...r,...o],forSpaces:n?s:[...a,...s]}},handler:({forAllSpaces:e,forSpaces:t},i)=>{const n=i.data.spaceName,r=new Set;return e.forEach((({whenDevice:e,sizes:t=[]})=>{pn(e)&&t.forEach((e=>{r.add(e)}))})),t.forEach((({name:e,nameList:t,whenName:i,whenDevice:a,sizes:o=[]})=>{pn(a)&&function(e,t,i,n){switch(e){case"equals":return n===t;case"startsWith":case"endsWith":case"includes":return n[e](t);case"equalsOneOf":return i.includes(n);case"startsWithOneOf":case"endsWithOneOf":case"includesOneOf":{const t=e.split("OneOf")[0];return i.some((e=>n[t](e)))}}}(i,e,t,n)&&o.forEach((e=>{r.add(e)}))})),[...r].map((e=>{if("fluid"===e)return"fluid";{const[t,i]=e.split("x").map((e=>parseInt(e,10)));return isNaN(t)||isNaN(i)?null:{width:t,height:i}}})).filter((e=>null!==e))}},rewriteGAMSlots:{hookName:"rewriteGAMSlots",handler:({rewritePathMethod:e,rewritePathData:t},i)=>{let n;switch(e){case"insertBTAdUnit":const{btUnitName:e,insertionDepth:i,maxDepth:r}=t||{};i&&(n=t=>{let n=t.getAdUnitPath();"/"!==n[0]&&(n=`/${n}`);const a=e||"Blockthrough";let o=n.split("/");o.splice(i,0,a),r&&r>0&&(o=o.slice(0,r+1));return o.join("/")})}if(n)return{parseSlotAdUnitPath:n,shouldCopyTargeting:!0}}},scrapeGAMSlots:{hookName:"scrapeGoogletagSlots",handler:e=>e},scrapePrebid:{hookName:"scrapePrebidAdUnits",parseSettingValue:e=>{const{org:t={},website:i={},websiteOverridesOrg:n}=e;if(n)return i;{const e={};e.adUnitsVar=t.adUnitsVar||i.adUnitsVar;const{removeBidders:n}=t.parse||{},{removeBidders:r}=i.parse||{};(n||r)&&(e.parse={},e.parse.removeBidders=n&&r?{forAllAdUnits:[...n.forAllAdUnits||[],...r.forAllAdUnits||[]],forAdUnits:[...n.forAdUnits||[],...r.forAdUnits||[]]}:n||r);const{adUnits:a}=t.filterOut||{},{adUnits:o}=i.filterOut||{};return(a||o)&&(e.filterOut={},e.filterOut.adUnits=a&&o?[...a,...o]:a||o),e}},handler:({dontScrape:e,adUnitsVar:t,parse:i,filterOut:n},r)=>{let o;if(e)o=!1;else{if(o=r.hookFileData||{},t&&(o.getAdUnits=()=>a.Z.commonUtils.extractVariableFromString(window,t)),i){const e=i.removeBidders?function({forAllAdUnits:e=[],forAdUnits:t=[]}={}){if(e.length>0||t.length>0)return i=>{const n=[];return e.forEach((({whenDevice:e,bidders:t=[]})=>{pn(e)&&n.push.apply(n,t)})),t.forEach((({code:e,codeList:t,whenCode:r,whenDevice:a,bidders:o=[]})=>{pn(a)&&gn(r,e,t,i.code)&&n.push.apply(n,o)})),i.bids=i.bids.filter((({bidder:e})=>!n.includes(e))),i}}(i.removeBidders):null,t=o.parseAdUnit;e&&(o.parseAdUnit=t?i=>e(t(i)):e)}if(n){const e=n.adUnits?(s=n.adUnits,e=>s.some((({code:t,codeList:i,whenCode:n,whenDevice:r})=>{if(pn(r))return gn(n,t,i,e.code)}))):null,t=o.filterOutAdUnit;e&&(o.filterOutAdUnit=t?i=>t(i)||e(i):e)}}var s;return o}}},bn=r.Y,wn=mn,vn={"insertCustomCSS__org":{"_enabled":true,"value":[{"customCSS":"#sidebar-top,\n#sidebar-popular-top,\n#sidebar-popular-bottom {\n\theight: auto !important;\n}\n\n.up-show\u003e.ahover~[id^=\"google_ads_iframe_\"],\n.up-show\u003e.ahover~[id^=\"google_ads_iframe_\"]\u003eiframe {\n\twidth: 1px !important;\n\theight: 1px !important;\n}","whenDevice":"any"}]},"prebidConfig__org":{"_enabled":true,"value":{"priceGranularity":"medium"}},"removeSizes__org":{"_enabled":true,"value":{"forAllSpaces":[],"forSpaces":[{"nameList":["incremental-1","incremental-2"],"sizes":["300x600","300x601"],"whenDevice":"any","whenName":"equalsOneOf"}]}},"scrapeGAMSlots":{"_enabled":true,"_overrides_org":true,"value":true}};var Nn=M.new();const _n=Object.entries(vn).reduce(((e,[t,i])=>{if(i._enabled)if(t.endsWith("__org")){const n=t.split("__org")[0];e[n]=e[n]||{},e[n].org=i.value}else if(t.endsWith("__website")){const n=t.split("__website")[0];e[n]=e[n]||{},e[n].websiteOverridesOrg=!!i._overrides_org,e[n].website=i.value}else e[t]=i.value;return e}),{});const Dn={rawSettings:vn,parsed:_n};var Xn=r.Y,En=new function(){this.Types={XHR_OPEN_PRE:"xhropenpre",FETCH_PRE:"fetchpre",REMOVE_CHILD_PRE:"removechildpre",INSERT_BEFORE_PRE:"insertbeforepre",APPEND_CHILD_PRE:"appendchildpre",APPEND_CHILD_POST:"appendchildpost",IMG_SET_ATTRIBUTE_PRE:"imgsetattributepre",SET_ATTRIBUTE_PRE:"setattributepre",WIN_OPEN_PRE:"winopenpre",HTML_SRC_PROP_PRE:"htmlsrcproppre",HTML_ELEMENT_INNERHTML_PRE:"htmlelementinnerhtmlpre",HTML_ELEMENT_INNERHTML_POST:"htmlelementinnerhtmlpost",HTML_ELEMENT_HAS_CHILD_NODES_PRE:"htmlelementhaschildnodespre",HTML_ELEMENT_TEXTCONTENT_PRE:"htmlelementtextcontentpre"};var e=["xhrThwartOpen","fetchThwartOpen"];this.hookFunction=function(t,i,n,r,a){var o=t[i];o&&(t[i]=function(){var t=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return o.apply(this,t);if(n)try{if(null!=(i=Xn.fireEvent(n,t,this)))return i}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}var i=o.apply(this,t);if(r)try{Xn.fireEvent(r,i,this)}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}return i})},this.hookPropertySetter=function(t,i,n,r,a){var o=t.__lookupGetter__(i),s=t.__lookupSetter__(i);o&&(t.__defineSetter__(i,(function(){var t=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return s.apply(this,t);if(n)try{if(null!=(i=Xn.fireEvent(n,t,this)))return i}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}var i=s.apply(this,t);if(r)try{Xn.fireEvent(r,i,this)}catch(t){if(!a)throw t;if(e.indexOf(t.type)>=0)throw t}return i})),t.__defineGetter__(i,(function(){try{return o.apply(this)}catch(e){}})))},this.addEventListener=function(e,t){Xn.addEventListener(e,t)}},Mn="",yn=new function(){var e=!1,t={},o={},s=new a.Z.SubscriptionLayer;this.subscribeForEvent=function(e,t){s.subscribeForEvent(e,t)},this.dispatch=function(a){try{e||(e=!0,t=i.Z.cpbjs,v(),r.Y.fireEvent("wrapPrebidRequestBids")&&_(),y());var o={};n.Z.forEach(a,(function(e){o[e.spaceName]={hbAdUnit:e,deferred:new n.Z.CDefer}}));var c=h(a),l=r.Y.fireEvent("prebidTimeout")||3e3;d(),t.requestBids({timeout:l,adUnits:c,bidsBackHandler:function(e){try{for(var t in o)if(o.hasOwnProperty(t)){var i=o[t],r=i.hbAdUnit;if(e){var a=e[t],d=[];if(a){var l=n.Z.find(c,(function(e){return e.code==t})).sizes;a.bids=p(a.bids,l),d=g(a.bids,i.hbAdUnit)}var h={auctionId:r.auctionId,bids:d};i.deferred.resolve(h),n.Z.forEach(d,(function(e){var t={auctionId:r.auctionId,bid:e};s.invokeEventCallbacks("bidReceived",t)}))}else{var u={auctionId:r.auctionId,bids:[]};i.deferred.resolve(u)}}}catch(e){M.errorf(null,"prebidAdapter: dispatch: bidsBackHandler: - %o",e)}}});var u=[];for(var f in o)if(o.hasOwnProperty(f)){var m=o[f];u.push(m.deferred.promise)}return u}catch(e){M.errorf(null,"prebidAdapter: dispatch: - %o",e)}};var d=function(){if(t.bidderSettings&&t.bidderSettings.standard&&t.bidderSettings.standard.adserverTargeting){var e=!!n.Z.find(t.bidderSettings.standard.adserverTargeting,(function(e){return"hb_pb_org"==e.key})),i=!!n.Z.find(t.bidderSettings.standard.adserverTargeting,(function(e){return"hb_pb"==e.key}));!e&&i&&t.bidderSettings.standard.adserverTargeting.push({key:"hb_pb_org",val:function(e){var i=t.getConfig().priceGranularity;return"auto"===i?e.pbAg:"dense"===i?e.pbDg:"low"===i?e.pbLg:"medium"===i?e.pbMg:"high"===i?e.pbHg:"custom"===i?e.pbCg:e.pbHg}})}},c=function(e){var t=e.split("x");if(2!==t.length)throw new Error;var i=parseInt(t[0]),n=parseInt(t[1]);if(isNaN(i)||isNaN(n))throw new Error;return{width:i,height:n}},l=function(e){for(var t=[],i=0;i<e.sizes.length;i++){var o=c(e.sizes[i]),s=o.width,d=o.height;t.push({width:s,height:d})}var l=r.Y.fireEvent("sizesToReplaceBySpace",{spaceName:e.spaceName});l&&(t=n.Z.map(t,(function(e){var t=n.Z.find(l,(function(t){return t.size.width==e.width&&t.size.height==e.height}));return t?{width:t.replacement.width,height:t.replacement.height}:e})));var h=r.Y.fireEvent("sizesToRemoveBySpace",{spaceName:e.spaceName});h&&(t=n.Z.filter(t,(function(e){return!n.Z.find(h,(function(t){return t.width==e.width&&t.height==e.height}))})));var u=a.Z.sizesRemover(e.element,t);return u=n.Z.filter(u,(function(e){return!!e})),u=n.Z.map(u,(function(e){return[e.width,e.height]}))},h=function(e){return n.Z.map(e,(function(e){var t=l(e),i=[];return n.Z.forEach(e.biddersSettings,(function(e){var t={bidder:e.name,params:e.params};i.push(t)})),{code:e.spaceName,bids:i,sizes:t,mediaTypes:{banner:{sizes:t}}}}))},u=function(e,t){if(e.ad&&e.ad.indexOf(atob("c2VydmluZy1zeXMuY29t"))>-1&&e.ad.indexOf(atob("QnVyc3RpbmdQaXBlL2FkU2VydmVyLmJz"))>-1){var n=atob("PHNjcmlwdD53aW5kb3cuZWJDZmcgPSB7fTt3aW5kb3cuZWJDZmdfXyA9IHt9O3dpbmRvdy5fX2RlZmluZUdldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7cmV0dXJuIHdpbmRvdy5lYkNmZ19fO30pO3dpbmRvdy5fX2RlZmluZVNldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7YS5hZEh0bWxQYXRoPScnO3JldHVybiB3aW5kb3cuZWJDZmdfXz1hO30pOzwvc2NyaXB0Pg==");e.ad.indexOf("<body>")>-1?e.ad=e.ad.replace("<body>",n):e.ad=n+e.ad}"amazon"===e.bidder&&(e=function(e){try{var t=JSON.parse(e.adTargeting);for(var n in t.amzniid=e.adId,t)e.adserverTargeting[n]=t[n];e.ad=e.adHtml;try{!i.Z.upoSettings.amazonBidderConfiguration.keepHbPb&&delete e.adserverTargeting.hb_pb}catch(e){}delete e.adUrl}catch(e){}return e}(e)),e.bidder&&"smartadserver"===e.bidder&&(e.bidder="smart"),e.bidder&&("triplelift"===e.bidder&&e.ad.indexOf("render_options_bm")>-1||"sharethrough"===e.bidder)&&(e.width=f(t))},f=function(e){for(var t=l(e),i=0,n=0;n<t.length;n++){var r=t[n][0];r>i&&(i=r)}return i};function p(e,t){return n.Z.filter(e,(function(e){return n.Z.find(t,(function(t){return e.width==t[0]&&e.height==t[1]}))}))}var g=function(e,i){var s=n.Z.map(e,(function(e){if(e.bidderId=m(e,i),e.bidderId){u(e,i),o[e.adId]=new n.Z.CDefer;var a={ad:e.ad,adId:e.adId,adUrl:e.adUrl,bidderId:e.bidderId,bidder:e.bidder,bidderCode:e.bidderCode,currency:e.currency,creativeId:w(e),cpm:e.cpm,complianceStatus:0,height:e.height,timeToRespond:e.timeToRespond,size:e.size,width:e.width};return new cn.Bid(a,e,cn.Bid.Types.PREBID,(function(i){var a=i.complianceBidsInAuction.length>0?n.Z.map(i.complianceBidsInAuction,(function(e){return e.rawBid&&e.rawBid})):void 0,o=e.adUnitCode,s=t.getAdserverTargeting(o,a)[o];return""==s.hb_pb&&s.hb_pb_org&&(s.hb_pb=s.hb_pb_org),s=r.Y.fireEvent("customAdserverTargeting",{adServerTargeting:s})||s}),(function(e){try{N(this);var t=e.placement;this.onRenderedEvent((function(){var e=t.parentElement.querySelector(".ahover");n.Z.removeClass("up-pb-static",e)})),D(t,this)}catch(e){}}),(function(e){N(this);var t=e.placement;this.onRenderedEvent((function(){var e=t.parentElement.querySelector(".ahover");n.Z.addClass("up-pb-static",e)})),D(t,this)}),void 0,function(e){this.renderedDeferred.promise.then((function(){e()}))}.bind({renderedDeferred:o[e.adId]}),(function(){return b(this)}))}M.errorf(null,"prebidAdapter: dispatch: bidsBackHandler: - No corresponding bidderSettings found in ad unit: %o for Prebid auction response bid: %o",[i,e])}));return n.Z.reject(s,a.Z.commonUtils.isNil)},m=function(e,t){var i=n.Z.find(t.biddersSettings,(function(t){return t.name==e.bidderCode}));return i?i.id:void 0},b=function(e){var t={bidderExternalID:e.bidderId,markup:e.ad,url:e.adUrl,hint:{provider:e.bidderCode,uid:e.creativeId},width:parseInt(e.width),height:parseInt(e.height)};if("152media"!==e.bidderCode&&"brealtime"!==e.bidderCode&&"districtm"!==e.bidderCode&&"defymedia"!==e.bidderCode&&"appnexusAst"!==e.bidderCode||(t.provider="appnexus"),"ix"===e.bidderCode&&(t.provider="indexExchange"),"underdogmedia"===e.bidderCode&&(t.hintID=t.hintID+"_"+e.width+"_"+e.height),"gumgum"===e.bidderCode&&e.creative&&(t.markup=e.creative),"komoona"===e.bidderCode)try{var i=0,n=JSON.parse(unescape(e.ad.split('"creative_data":"')[1].split('","')[0]));for(var r in n.hdbd_data.hbbids){var a=n.hdbd_data.hbbids[r];a.cpm>i&&(i=a.cpm,t.markup=a.creative_data.creative)}}catch(e){}return e.ad&&e.ad.indexOf("https://googleads.g.doubleclick.net/pagead/adfetch?client=ca-pub-")>-1&&(t.url="https://googleads.g.doubleclick.net/pagead/adfetch"+e.ad.split("https://googleads.g.doubleclick.net/pagead/adfetch")[1].split("&rfl=")[0],t.markup=""),t},w=function(e){return"komoona"===e.bidder||"criteo"===e.bidder||"consumable"===e.bidder?null:e.c?String(e.c):e.adid&&"0"!=e.adid?String(e.adid):e.crid&&"0"!=e.crid?String(e.crid):e.creativeId&&"0"!=e.creativeId?String(e.creativeId):e.creative_id&&"0"!=e.creative_id?String(e.creative_id):null},v=function(){t.onEvent("bidWon",(function(e){o[e.adId].resolve()}))},N=function(e){var t=e.rawBid;t&&t.bidder&&(r.Y.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsRender",payload:{detail:t}}),r.Y.fireEvent("FirePublisherEvent",{eventName:"uponitRender",payload:{detail:t}}))},_=function(){var e=window.pbjs||window.jitaJS;if(e&&e.requestBids){var t=e.requestBids;e.requestBids=function(e){for(var i=[],n=e&&e.adUnits,a=0;a<n.length;a++)i.push(n[a].code);if(s.invokeEventCallbacks("refresh",i),!r.Y.fireEvent("skipOriginalRequestBidsFunction"))return t.apply(this,arguments)}}},D=function(e,n){var r=E(),o=r.container,s=r.iframe,d=function(){try{s.removeEventListener("load",d);var e=i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame;s.style.setProperty("visibility",""),e||(s.contentWindow.document.documentElement.innerHTML="<html><body></body></html>");var r=!e&&s.contentWindow.document,o=Ji.browser();"sharethrough"===n.bidder&&window.setTimeout((function(){for(var e=document.querySelectorAll(".str-thumbnail"),t=0;t<e.length;t++){var i=e[t].style.backgroundImage;!i||-1!==i.indexOf("upapi")||-1!==i.indexOf("criteo.net")||-1!==i.indexOf("imgix.net")&&-1!==i.indexOf(".gif")?i.indexOf("imgix.net")>-1&&i.indexOf(".gif")>-1&&(i.indexOf("?")>-1?e[t].style.backgroundImage=i.replace('")','&adunit=true")'):e[t].style.backgroundImage=i.replace('")','?adunit=true")')):i.indexOf("?")>-1?e[t].style.backgroundImage=i.replace('")','&upapi=true")'):e[t].style.backgroundImage=i.replace('")','?upapi=true")')}}),3e3),"edge"===o&&(n.rawBid.ad=n.rawBid.ad.replace(/\.html[\?#]/,".html?upapi=true&"),n.rawBid.ad=n.rawBid.ad.replace(/\.html%23/,".html%23upapi=true%26"),window.setTimeout((function(){if(e){s.contentWindow.postMessage({type:"eval",code:"try { var styleSheets = document.styleSheets; for (var i = 0; i < styleSheets.length; i++) { if (styleSheets[i].cssText && styleSheets[i].cssText.indexOf(\"a[href^='http://ads2.williamhill.com/redirect.aspx?']\") > -1) { styleSheets[i].cssText = ''; } } } catch (e) { }"},"*")}else try{for(var t=r.styleSheets,i=0;i<t.length;i++)t[i].cssText&&t[i].cssText.indexOf("a[href^='http://ads2.williamhill.com/redirect.aspx?']")>-1&&(t[i].cssText="")}catch(e){}}),3e3)),window.setTimeout((function(){var i="edge"===o||"ie"===o;i||X(n,s,e);var d=a.Z.commonUtils.doesBrowserSupportDocOpen();if(t.version.includes("4.17")){const e={ifr:s,shouldOpenDocument:d};t.renderAd(r,n.adId,e)}else t.renderAd(r,n.adId,d,s);i&&X(n,s,e)}),0),s.style.width=n.width+"px",s.style.height=n.height+"px"}catch(e){M.errorf(null,"renderBid - %o",e)}};s.addEventListener("load",d),s.style.setProperty("visibility","hidden"),e.insertBefore(o,e.children[0])};function X(e,t,i){if(!1!==e.isBackupCreative)if(i)t.contentWindow.postMessage({type:"eval",code:"try { eval(atob('')) } catch (err) {}"},"*");else try{t.contentWindow.eval(atob(Mn))}catch(e){M.errorf(null,"evalBackupCreativeScript: - %o",e)}}var E=function(){var e=document.createElement("div");e.className="ahover";var t=Ui.safeFrameCreator.createSafeFrame();return t.style.width="1px",t.style.height="1px",t.style.border="0px",t.setAttribute("marginwidth","0"),t.setAttribute("marginheight","0"),t.scrolling="no",e.appendChild(t),{container:e,iframe:t}},y=function(){var e="up-pb-stylesheet";if(!document.getElementById(e)){var t=document.createElement("style");t.id=e,t.type="text/css",t.textContent=".up-pb-static { opacity: 0.001 !important; }",(document.head||document.body||document.documentElement).appendChild(t)}}};M.new().setPrefix("prebidding: ");var Vn=new function(){var e=!1,t=new a.Z.SubscriptionLayer;function i(e,t,i){switch(e){case Vn.Types.PREBID:return yn.dispatch(t,i)}}this.subscribeForEvent=function(e,i){t.subscribeForEvent(e,i)},this.dispatch=function(r,a){e&&(e=!1),e=!0,yn.subscribeForEvent("refresh",(function(e){t.invokeEventCallbacks("refresh",e)})),yn.subscribeForEvent("bidReceived",(function(e){t.invokeEventCallbacks("bidReceived",e)}));var o=[],s={};for(var d in n.Z.forEach(r,(function(e){var t={hbAdUnit:e,promises:[]};o.push(t);var i=e.biddingSettings;for(var n in i)if(n=parseInt(n),i.hasOwnProperty(n)){var r=i[n];if(r&&r.length>0){s[n]=s[n]||[];var a={biddersSettings:r,auctionId:e.auctionId,spaceName:e.spaceName,sizes:e.sizes,selector:e.selector};s[n].push(a)}}})),s)if(d=parseInt(d),s.hasOwnProperty(d)){var c=s[d],l=a&&a[d],h=i(d,c,l);n.Z.forEach(h,(function(e,t){n.Z.find(o,(function(e){return e.hbAdUnit.auctionId==c[t].auctionId})).promises.push(e)}))}return n.Z.map(o,(function(e){return Promise.all(e.promises).then((function(t){var i=n.Z.map(t,(function(e){return e.bids}));return{auctionId:e.hbAdUnit.auctionId,bids:n.Z.flat(i)}}))}))}};Vn.Types={UNKNOWN:0,PREBID:1,RTK:2};var zn=M.new();zn.setPrefix("dfpAdapter: ");var xn=r.Y,Hn=new function(){var e=!1,t={},i={},r={},o=[],s=[],d=new a.Z.SubscriptionLayer,c={_height_:5,_width_:6,_empty_:7,_is_afc_:8,_fluid_:9,_creative_ids_:14,_adgroup2_ids_:15};this.init=function(){e||(e=!0,O(),k())},this.dispatch=function(e,a){try{this.init();var o=[];return xn.fireEvent("onBeforeDfpRefreshDispatch"),xn.fireEvent("tryDisableGoogletagLazyLoad")&&l(),n.Z.forEach(e,(function(e){var r=new n.Z.CDefer;o.push(r.promise),t[e.slotElementId]={asAdUnit:e,deferred:r};var a=new n.Z.CDefer;i[e.slotElementId]=a})),window.googletag.cmd.push((function(){try{zn.debugf(null,"onAdsRequestPrepareStarted");var t=window.googletag.pubads().getSlots(),i=[];n.Z.forEach(t,(function(t){n.Z.forEach(e,(function(e,n){var a=t.getSlotElementId();if(a===e.slotElementId){i.push(t);var o=S.stringRange(16,24);if(r[o]=a,t.setTargeting("uponitSlotIterationId",o),xn.fireEvent("preTargetingSetting",{dfpSlot:t,ASAdUnit:e}),p(t,e.params.keyValuesParams.toRemove),t.__up_display||(t.__up_display=!0,window.googletag.display(e.slotElementId)),g(t,e.params.keyValuesParams.toAdd),window.uponit&&window.uponit.modifiers&&window.uponit.modifiers.dfpTargeting&&window.uponit.modifiers.dfpTargeting.length>0)try{for(var s=window.uponit.modifiers.dfpTargeting,d=0;d<s.length;d++){var c=t.getTargetingMap(),l={};for(var h in c)l[h]=c[h];var u=null;!e||null==e.floorPrice&&null==e.floorPrice||(u=e.floorPrice);var f=s[d](l,t,u);if(f)for(var h in f)c[h]&&c[h]===f[h]||t.setTargeting(h,f[h])}}catch(e){zn.errorf(null,"dispatch: uponit-modifiers: %o",e)}t.setForceSafeFrame(!0),t.setCollapseEmptyDiv(!1)}}))})),zn.debugf(null,"onAdsRequestSlotsPrepare - slots: %o",f(i)),h(i);const s=googletag.pubads().isSRA()&&(o=0,i.forEach((e=>{const t=e.getTargetingMap();Object.entries(t).forEach((e=>{const t=e[0]?e[0].length:0,i=e[1]&&e[1][0]?e[1][0].length:0;o+=t+i}))})),o>=6e3);if(xn.fireEvent("forceNotSingleRequestRefresh")||s)for(var a=0;a<i.length;a++){const e=i[a];setTimeout((()=>{window.googletag.pubads().refresh([e],void 0,!0)}),0)}else setTimeout((()=>{window.googletag.pubads().refresh(i,void 0,!0)}),0)}catch(e){zn.errorf(null,"dispatch: %o",e)}var o})),o}catch(e){M.criticalf(null,"google cmd function failed: %o",e)}};var l=function(){window.googletag.cmd.push((function(){window.googletag.pubads().enableLazyLoad({fetchMarginPercent:-1,renderMarginPercent:-1})}))},h=function(e){n.Z.forEach(e,(function(e){e.setTargeting("upstdfp",!0)}))},u=function(e){var t=[];try{for(var i=0;i<e.length;i++){var n=e[i];"fluid"===n?t.push(n):t.push([n.getWidth(),n.getHeight()])}}catch(e){zn.errorf(null,"getNormalizedDfpSizes errored - %o",e)}return t},f=function(e){var t=[];try{for(var i=0;i<e.length;i++){var n=e[i];t.push({elementId:n.getSlotElementId(),dfpAdUnitPath:n.getAdUnitPath(),sizes:u(n.getSizes()),targetingMap:n.getTargetingMap()})}}catch(e){zn.errorf(null,"getNormalizedDFPAdSlots errored - %o",e)}return t},p=function(e,t){for(var i=0;i<t.length;i++){var n=t[i];e.clearTargeting(n)}},g=function(e,t){for(var i in t)if(t.hasOwnProperty(i)){var n=t[i];e.setTargeting(i,n)}},m=function(e){if(!e)return!1;const t=xn.fireEvent("isPrebidResponse",{str:e});if(null!=t)return t;if(/\.(renderAd|renderAdNew)\(document,(\s+)?['"][a-zA-Z0-9\-_]+['"]/gm.test(e))return!0;if(/apstag\.renderImp\(document,/gm.test(e))return!0;if(/"hb_adid":[\s\r\n\t]{0,9}?\["[a-z-A-Z0-9\-_]+"\]/gm.test(e))return!0;return!!/ucTagData\.ad[Ii]d(:?\s+)?=(:?\s+)?['"]([a-zA-Z0-9\-_]+)['"]/gm.test(e)||e.indexOf("districtm_adslot = ")>-1},b=function(e,t,i,n){e&&e._html_&&e._html_.indexOf("googletag.pubads().definePassback(")>-1&&(e._html_=e._html_.replace(").setTargeting('",").setTargeting('up_recovery','true').setTargeting('"),e._html_=e._html_.replace(').setTargeting("',').setTargeting("up_recovery","true").setTargeting("')),e&&e._html_&&-1===e._html_.indexOf("ca-pub-15988")&&(e._html_=e._html_.replace("data-ad-slot=",'data-ad-type="text" data-ad-slot=').replace("data-ad-client\\x3d","data-ad-type\\x3d\\x22text\\x22 data-ad-client\\x3d").replace('google_ad_client = "ca-pub','google_ad_type = "text";google_ad_client = "ca-pub'));var r=xn.fireEvent("dfpResponseCustomReplace",{googleReponse:e,googleFrame:n,googleSlot:t});if(r&&(e=r),!(e._fluid_||e._height_&&e._width_)&&i.length>0)for(var a=0;a<i.length;a++){var o=i[a];if("fluid"!=o&&o.getWidth()>=120){e._width_=parseInt(o.getWidth()),e._height_=parseInt(o.getHeight());break}}};function w(e){switch(e){case cn.Bid.Types.ADX:return"gad";case cn.Bid.Types.ADX_TEXT:return"gad_text";case cn.Bid.Types.DIRECT:return"gad_dfp_direct"}}var v=function(e,t){switch(e){case cn.Bid.Types.ADSENSE:case cn.Bid.Types.ADX:case cn.Bid.Types.ADX_TEXT:return t.adxBidderId;case cn.Bid.Types.DIRECT:return t.directBidderId}},N=function(e,t,i){try{if(e&&t==cn.Bid.Types.DIRECT&&i._adgroup2_ids_&&i._adgroup2_ids_[0]&&i._creative_ids_&&i._creative_ids_[0])return i._adgroup2_ids_[0].toString()+"_"+i._creative_ids_[0].toString()}catch(e){zn.errorf(null,"getCreativeId: %o",e)}};function _(e){const i=t[e],n={auctionId:i.asAdUnit.auctionId,bids:[]};i.deferred.resolve(n)}var D=function(e,t){o.push(t),e._html_=xn.fireEvent("CustomPrebidHTMLModification",e._html_)||e._html_.replace(/w=w.parent/gm,"w=window").replace(/w = w.parent/gm,"w = window").replace(/pbjs/gm,"upbjs").replace(/renderAd/gm,"renderAdNew")},X=function(e){var t=e.getSlotElementId(),i=a.Z.commonUtils.escapeSelector("#"+t),n=document.querySelector(i+' [id^="google_ads_iframe_"]');return n=xn.fireEvent("customInnerContainer",{googleSlot:e})||n},E=function(e,t,i){var n=new RegExp("([?&]"+t+"=)([^&#]*)([&#$].*)","g");return e.replace(n,`$1${encodeURIComponent(i)}$3`)},y=function(e,t){e=e.replace(/[\[\]]/g,"\\$&");var i=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return i?i[2]?decodeURIComponent(i[2].replace(/\+/g," ")):"":null},V=function(e,t){var i=new RegExp("(^|[&])"+e+"(=([^&#]*)|&|#|$)").exec(t);return i?i[3]?decodeURIComponent(i[3].replace(/\+/g," ")):"":null},z=function(e){try{for(var i={},n=0;n<e.length;n++){var r=e[n],a=t[r.getSlotElementId()].asAdUnit;if(a&&a.params&&a.params.queryParams)for(var o in a.params.queryParams)if(a.params.queryParams.hasOwnProperty(o)){var s=a.params.queryParams[o];i[o]=s}}return i}catch(e){zn.errorf(null,"getSlotsQueryParams: %o",e)}},x=function(e,r,a,o){try{var c=n.Z.map(r,(function(e,t){if(a.indexOf(t)>-1)return r[t]}));return function(e,r){try{if(e){for(var a={},o=[],c=0;c<e.length;c++){var l=e[c].response.parsedData,h=e[c].response.rawResponse,u=e[c].slot;if(u){var f=r[c],p=u.getSlotElementId(),g=new n.Z.CDefer;a[p]=g,o.push(g.promise);var E=t[p],M=X(u);if(!l||l&&!l._html_||l&&l._empty_)a[p].resolve({injectToDom:!1}),_(p);else{b(l,u,f,M),m(l._html_)&&D(l,p);var y=(T=u,B=void 0,B=(Z=l)._html_,Z._empty_?cn.Bid.Types.EMPTY:m(B)?cn.Bid.Types.DFP_PREBID:Z._is_afc_?"text"===z([T]).ad_type?cn.Bid.Types.ADX_TEXT:cn.Bid.Types.ADX:B.indexOf("js/adsbygoogle.js")>-1||B.indexOf("pagead/show_ads.js")>-1?cn.Bid.Types.ADSENSE:cn.Bid.Types.DIRECT),V=xn.fireEvent("forceCompliant"),x={ad:l._html_,adId:null,bidder:w(y),bidderId:v(y,E.asAdUnit.params),bidderCode:w(y),creativeId:N(V,y,l),width:l._width_,height:l._height_,cpm:E.asAdUnit.floorPrice+.01},H=new cn.Bid(x,h,y,void 0,function(e){return function(){var t=a[e];this.onRenderedEvent((function(){var t=document.getElementById(e).querySelector('div[id^="google_ads_"]');n.Z.removeClass("up-gpt-static",t)})),"unresolved"==t.fate&&t.resolve({injectToDom:!0})}}(p),function(e){return function(){var t=a[e];this.onRenderedEvent((function(){var t=document.getElementById(e).querySelector('div[id^="google_ads_"]');n.Z.addClass("up-gpt-static",t)})),"unresolved"==t.fate&&t.resolve({injectToDom:!0})}}(p),function(e){return function(){var t=a[e];"unresolved"==t.fate&&t.resolve({injectToDom:!1})}}(p),function(e){return function(t){i[e].promise.then((function(){t()}))}}(p),(function(){return{bidderExternalID:this.bidderId,url:this.adUrl,hint:{provider:this.type==cn.Bid.Types.DIRECT?"dfp_direct":this.bidderCode,uid:this.creativeId},width:parseInt(this.width),height:parseInt(this.height),markup:this.ad.replace(/\\(n|r|\\)/g,(function(e,t){return"n"==t?"\n":"r"==t?"\r":"\\"}))}})),I={auctionId:E.asAdUnit.auctionId,bids:[H]};E.deferred.resolve(I);var S={auctionId:E.asAdUnit.auctionId,bid:H};d.invokeEventCallbacks("bidReceived",S)}}else o.push(Promise.resolve({injectToDom:!1}))}return Promise.all(o).then(function(e){try{for(var t=[],i=0;i<this.responsesWithSlots.length;i++){var n=this.responsesWithSlots[i].response,r=n.parsedData,a=this.responsesWithSlots[i].slot,o=a&&a.getSlotElementId();e[i]&&!e[i].injectToDom&&(o&&s.push(o),r._html_="",r._empty_=!0,r._width_=1,r._height_=1),t.push(n)}return t}catch(e){zn.errorf(null,"handleDfpBidResponses: Promise.all: %o",e)}}.bind({responsesWithSlots:e,deferredsPromises:o}))}}catch(e){zn.errorf(null,"handleDfpBidResponses: %o",e)}var Z,T,B}(n.Z.map(e,(function(e,t){return{slot:c[t],response:e}})),o)}catch(e){zn.errorf(null,"invokeMiddleware: %o",e)}},H=function(e,t,i,n){return zn.debugf(null,"onAdsServerResponse - slots: %o, relevantIndexes: %o",[f(t),i]),new Promise((function(r,a){try{if(""===e.responseText)return t.forEach((e=>_(e.getSlotElementId()))),void r();var o=function(e){for(var t=e.split("\n"),i=[],n=0;n<t.length;n++){var r=t[n];if(n%2==0&&""!=r){try{var a=window.JSON.parse(r)}catch(e){zn.errorf(null,"parseGoogleExpandableResponse: 1 %o",e)}var o=Object.keys(a)[0],s=a[o],d={adUnitPath:o,rawResponse:s,parsedData:{}};try{for(var l in c)if(c.hasOwnProperty(l)){var h=c[l];void 0!==s[h]&&null!==s[h]&&(d.parsedData[l]=s[h])}}catch(e){zn.errorf(null,"parseGoogleExpandableResponse: 2 %o",e)}i.push(d)}else n%2!=0&&(i[i.length-1].parsedData._html_=r)}return i}(e.responseText);x(o,t,i,n).then((function(t){!function(e,t){t.__defineGetter__("responseText",(function(){return e})),t.__defineGetter__("response",(function(){return e})),t.__defineGetter__("status",(function(){return 200})),t.__defineGetter__("readyState",(function(){return 4}))}(function(e){for(var t="",i=0;i<e.length;i++){var n=e[i],r=n.parsedData,a=r._html_;delete r._html_;var o=n.rawResponse,s={};try{for(var d in c)if(c.hasOwnProperty(d)){var l=c[d];1==r[d]?o[l]=1:0==r[d]?o[l]=0:o[l]=r[d]}s[n.adUnitPath]=o}catch(e){zn.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 1 %o",e)}try{t=t+JSON.stringify(s)+"\n"+a+"\n"}catch(e){zn.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 2 %o",e)}}return t}(t),e),r()}))}catch(e){M.criticalf(null,"handleReponsesFromXHR errored: %o",e)}}))},I={width:320,height:50};function Z(e,t,i){return!("fluid"!==e||!i)||t.some((t=>t.width===e.width&&t.height===e.height))}function T(e){const t=y("fluid",e);if(t){let e=t.split(",");return e=e.map((e=>isNaN(e)?e:parseInt(e))),e}}var B=function(e,i,r){var o;if(e)try{var s;if(e.indexOf("&sz=")>-1)s="sz";else{if(!(e.indexOf("&prev_iu_szs=")>-1))return;s="prev_iu_szs"}var d=function(e){var t="sz",i=y(t,e);if(i||(i=y(t="prev_iu_szs",e)),i){var r=i.split(",");return r=n.Z.map(r,(function(e){return e.split("|")})),n.Z.map(r,(function(e,t){return n.Z.map(e,(function(e){var t=e.split("x");return{width:parseInt(t[0]),height:parseInt(t[1])}}))}))}}(e);if(!d)return;const p=d.length;o=n.Z.filter(d,(function(e,t){return r.indexOf(t)>-1}));const g=(T(e)||[]).filter(((e,t)=>r.includes(t)));var c=[],l=[];!function(){var t=xn.fireEvent("removeSizesDfpConfig");if(t){var r=t.forAll||[];o=n.Z.map(o,(function(a,o){var s=i[o].getSlotElementId(),d=(t[s]||[]).concat(r);return d=n.Z.map(d,(function(t){if("fluid"==t){var i=new RegExp("fluid=(.*?)&","g");return e=e.replace(i,""),{width:I.width,height:I.height}}return t})),n.Z.filter(a,(function(e){return!n.Z.find(d,(function(t){return t.width==e.width&&t.height==e.height}))}))}))}}(),o=n.Z.map(o,(function(e,r){var a=i[r].getSlotElementId(),o=t[a].asAdUnit.spaceName;const s=g[r];var d=xn.fireEvent("sizesToRemoveBySpace",{spaceName:o});return d?(d.includes("fluid")&&s&&(g[r]=0),n.Z.filter(e,(function(e){return!n.Z.find(d,(function(t){return"fluid"===t?I.width==e.width&&I.height==e.height:t.width===e.width&&t.height===e.height}))}))):e}));try{n.Z.forEach(o,(function(e,r){var a=i[r].getSlotElementId(),o=t[a].asAdUnit;const s=g[r];var d=xn.fireEvent("sizesToAddBySpace",{ASAdUnit:o});if(!d)return e;n.Z.forEach(d,(function(t){Z(t,e,s)||("fluid"===t?(Z(I,e,s)||e.push({width:I.width,height:I.height}),g[r]="height"):e.push({width:t.width,height:t.height}))}))}))}catch(e){zn.errorf(null,"sizesToAddBySpace error - %o",e)}n.Z.forEach(o,(function(e,t){var r=i[t].getSlotElementId(),o=document.getElementById(r),s=a.Z.sizesRemover(o,e);0==(s=n.Z.filter(s,(function(e){return!!e}))).length&&(s=[{width:2,height:3}]),c.push(s);var d,h=(d=s,n.Z.map(d,(function(e){var t={getWidth:function(){return e.width},getHeight:function(){return e.height}};return e.width==I.width&&e.height==I.height&&(t="fluid"),t})));l.push(h)}));var h,u=0,f=n.Z.map(d,(function(e,t){if(r.indexOf(t)<0)return e;var i=c[u];return u++,i}));return h=n.Z.map(f,(function(e){return n.Z.map(e,(function(e){return e.width+"x"+e.height}))})),h=(h=n.Z.map(h,(function(e){return e.join("|")}))).join(","),{url:e=function(e,t,i,n){const r=T(e);if(!r&&0===t.length)return e;let a=0;const o=Array(n).fill(0).map(((e,n)=>i.includes(n)?t[a++]:r[n]||0)).join(",");return r?E(e,"fluid",o):`${e}&fluid=${encodeURIComponent(o)}`}(e=E(e,s,h),g,r,p),modifiedSizes:l}}catch(t){return zn.errorf(null,"modifySizesInUrl errored - %o",t),{url:e,modifiedSizes:n.Z.map(i,(function(e){return e.getSizes()}))}}},Y=function(){En.addEventListener(En.Types.XHR_OPEN_PRE,(function(e){try{var t=e.data;if(F(t[1])){var i=function(e){for(var t=[],i=window.googletag.pubads().getSlots(),n=0;n<i.length;n++)for(var r=i[n],a=0;a<e.length;a++){var o=e[a];r.getSlotElementId()==o&&t.push(r)}return t}(function(e){var t=[],i=y("scp",e);if(i||(i=y("prev_scp",e)),i){for(var n=i.split("|"),a=0;a<n.length;a++){var o=n[a],s=V("uponitSlotIterationId",o);r[s]&&t.push(r[s])}return t}}(t[1])),o=function(e){var t=[],i=y("scp",e);if(i||(i=y("prev_scp",e)),i){var n,r=y("csp",e);r&&(n=V("upstdfp",r),zn.debugf(null,"onCommonSlotTargetDetected - upstdfp: %o",n));for(var a=i.split("|"),o=0;o<a.length;o++){var s=a[o];(n||V("upstdfp",s))&&t.push(o)}return t}}(t[1]);p=i,n.Z.forEach(p,(function(e){e.clearTargeting("upstdfp")})),t[1]=a.Z.addAcceptableParam(t[1]),t[1]=function(e,t){var i=z(t);if(i)for(var n in i)if(i.hasOwnProperty(n)){var r=i[n];e.indexOf("?")<0?e=e+"?"+n+"="+r:e.indexOf("&"+n+"=")<0&&e.indexOf("?"+n+"=")<0&&(e=e+"&"+n+"="+r)}return e}(t[1],i);var s=B(t[1],i,o);t[1]=s.url;var d=s.modifiedSizes;t[1]=function(e){var t=[],i=["21063911","21063048","21063670","21063817","21063671"],n=y("eid",e);if(!n)return e;for(var r=n.split(","),a=0;a<r.length;a++){var o=r[a];i.indexOf(o)<0&&t.push(o)}return E(e,"eid",t.join(","))}(t[1]),xn.fireEvent("onBeforeDfpAdsRequest",{url:t[1]}),zn.debugf(null,"onDfpAdsRequest - url: %s, slots: %o, relevantIndexes: %o",[t[1],f(i),o]);var c=null,l=null,h=this,u=!1;this.onload=function(){try{if(!c||u)return;u=!0,H(h,i,o,d).then((function(){c.call(h)}))}catch(e){zn.errorf(null,"addListenersOnHooks: onload: %o",e)}},this.onreadystatechange=function(e){try{if(!l||u)return;4===this.readyState&&(200===this.status?(u=!0,H(h,i,o,d).then((function(){l.call(h,e)}))):zn.criticalf(null,"onDfpAdsRequestError, status: %s, responseText: %s",[this.status,this.responseText]))}catch(e){zn.criticalf(null,"onReadyStateChangeError, err %o",e)}},this.__defineGetter__("onload",(function(){return c})),this.__defineSetter__("onload",(function(e){return c=e,e})),this.__defineGetter__("onreadystatechange",(function(){return l})),this.__defineSetter__("onreadystatechange",(function(e){return l=e,e}))}}catch(e){zn.errorf(null,"addListenersOnHooks: %o",e)}var p}))},F=function(e){try{return e&&e.indexOf("doubleclick.net/gampad/ads")>-1&&e.indexOf("upstdfp")>-1}catch(e){}};this.subscribeForEvent=function(e,t){d.subscribeForEvent(e,t)};var O=function(){var e="push";window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){var e;xn.fireEvent("shouldNotWrapGoogleTagRefresh")||(e=window.googletag.pubads().refresh,window.googletag.pubads().refresh=function(t,i,n){if(zn.debugf(null,"onGoogleTagRefreshInvoked - info: %o",{slots:t&&f(t),settings:i,isRefreshInvokedByUs:n}),n)return t?e(t,i):e();t||(t=window.googletag.pubads().getSlots());for(var r=[],a=0;a<t.length;a++)try{var o=t[a].getSlotElementId();o&&r.push(o)}catch(e){zn.errorf(null,"wrapGoogleTagRefresh: refresh-invoked-by-the-publisher: %o",e)}d.invokeEventCallbacks("refresh",r)}),window.googletag.pubads().addEventListener("slotRenderEnded",(function(e){var t=e.slot,n=t.getSlotElementId(),r=X(t),a=r.querySelector("iframe");if(s.indexOf(n)>=0)s.splice(s.indexOf(n),1);else{var d=i[n];if(d&&"unresolved"==d.fate&&d.resolve(),o.indexOf(n)>-1){o.splice(o.indexOf(n),1);try{r.style.width="1px",r.style.height="1px",a.width="1",a.height="1"}catch(e){zn.errorf(null,"setGoogletagEvents: %o",e)}}else if("0"===a.width)a.style.setProperty("width","max-content","important");else{const e=a.width;a.style.setProperty("width",e+"px","important")}}})),Y(window)}))},k=function(){var e="up-gpt-stylesheet";if(!document.getElementById(e)){var t=document.createElement("style");t.id=e,t.type="text/css",t.textContent=".up-gpt-static { opacity: 0.001 !important; }",(document.head||document.body||document.documentElement).appendChild(t)}}};M.new().setPrefix("postbidding: ");var In=new function(){var e=!1,t=new a.Z.SubscriptionLayer;function i(e,t,i){switch(e){case In.Types.DFP:return Hn.dispatch(t,i);case In.Types.SMART_AS:}}this.subscribeForEvent=function(e,i){t.subscribeForEvent(e,i)},this.dispatch=function(r,a){e||(e=!0,Hn.subscribeForEvent("refresh",(function(e){t.invokeEventCallbacks("refresh",e)})),Hn.subscribeForEvent("bidReceived",(function(e){t.invokeEventCallbacks("bidReceived",e)})));var o=[];n.Z.forEach(r,(function(e){o.push({asAdUnit:e,promise:void 0})}));for(var s={},d=0;d<r.length;d++){var c=r[d];s[c.type]=s[c.type]||[],s[c.type].push(c)}for(var l in s)if(l=parseInt(l),s.hasOwnProperty(l)){var h=s[l],u=a&&a[l],f=i(l,h,u);n.Z.forEach(f,(function(e,t){var i=h[t];n.Z.find(o,(function(e){return e.asAdUnit==i})).promise=e}))}return n.Z.map(o,(function(e){return e.promise}))}};In.Types={UNKNOWN:0,DFP:1,SMART_AS:2};var Sn=M.new();Sn.setPrefix("testCompliance: ");var Zn=!1;try{Zn=window.location.href&&window.location.href.indexOf("bt_tc=false")>=0||"false"==localStorage.getItem("bt_tc")}catch(Ke){Sn.errorf(null,"testComplianceDisabled: ",Ke)}Sn.debugf(null,"test Compliance disabled? ",Zn);var Tn=r.Y;function Bn(e){if(e.type!=$i.Types.ADX_TEXT)return!1;return[["video-box"],["google-native-video"],["imasdk.googleapis.com/formats/outstream"],["video-in-display"],["vix.eu.criteo.net/concat"],[".video-container","googlevideo.com"],["product-video","googlevideo.com"],["twoOfTwoVertical","animation-container"],["animation:text2Frames","-webkit-animation"]].some((t=>a.Z.commonUtils.matchStringsOnString(t,e.ad)))}function Yn(e,t){return a.Z.sizeValidation.isUnacceptable(e.unit.element,{width:t.width,height:t.height})}function Fn(e,t){let n=i.Z.consts.complianceStatus.UNKNOWN;if(Zn)n=i.Z.consts.complianceStatus.COMPLIANT,Sn.debugf(null,"compliance is disabled for the current bid: ",e);else if(Yn(t,e))n=i.Z.consts.complianceStatus.INCOMPLIANT;else if(function(e){const t=e.ad,i=e.type;return!![[".rhurl",".rhbodyurl"],[".rhurl","rh-image"],[".rhurl","rh-title"],[".rhurl",".rhbutton"],[".image-link","call-to-action-link"],[".image-link",".attribution"],[".image-link",".attribution"],[".rhprice",".rhsaleprice","gstatic.com/shopping"],[".grid-link-container",".grid-link"],[".rhsimpleprice",".rh-box-image","gstatic.com/shopping"],[".product-image",".product-container","gstatic.com/shopping"],["logoMCImageWidth","-webkit-animation"],["productBannerSlot","logoBackColorDerived"],["js/adsbygoogle.js",'data-ad-format="link"'],["js/adsbygoogle.js",'data-ad-type="text"']].some((e=>a.Z.commonUtils.matchStringsOnString(e,t)))||!(!t.includes("googletag.pubads().definePassback(")||i!=cn.Bid.Types.ADX)}(e))n=i.Z.consts.complianceStatus.COMPLIANT;else if(function(e){if("triplelift"===e.bidderCode&&e.ad&&e.ad.indexOf("tl_auction_response")>-1&&e.ad.indexOf("advertiser_name")>-1&&e.ad.indexOf("heading")>-1&&-1===e.ad.indexOf("VAST version")&&-1===e.ad.indexOf("vast_xml"))return!0}(e))n=i.Z.consts.complianceStatus.COMPLIANT;else{var r=Tn.fireEvent("customComplianceCheck",{bid:e});r&&(n=r)}return n}function On(e){var t={},r={};const a=i.Z.SharedObject.getItem("websiteConfig"),o=a.websiteID,s=a.organizationID;var d={};if(n.Z.forEach(e,(function(e){var n=e.auction,a=e.bids;d[n.auctionId]=d[n.auctionId]||{};for(var o=0;o<a.length;o++){var s=a[o];const e=Fn(s,n);if(e==i.Z.consts.complianceStatus.UNKNOWN){d[n.auctionId][s.bidId]={bid:s,result:{}};var c=s.makeEntryForTestCompliance();c.auctionID=n.auctionId,c.spaceExternalID=n.unit.space.id,c.spaceName=n.unit.space.name;var l=parseFloat(s.cpm);c.cpm=isNaN(l)?0:l,kn(c);var h=S.stringRange(5,8);t[h]=c,r[h]=s}else d[n.auctionId][s.bidId]={bid:s,result:{status:e,backup:!1}}}})),Object.keys(t).length<=0){for(var c in d)if(d.hasOwnProperty(c)){var l=d[c];for(var h in l)if(l.hasOwnProperty(h)){var u=l[h];d[c][h]=u.result}}return Promise.resolve(d)}let f;try{f=(new Intl.DateTimeFormat).resolvedOptions()}catch(e){f={locale:void 0,timezone:void 0}}const p={domain:window.location.host,websiteID:o,orgID:s,bids:t,locale:f.locale,timezone:f.timeZone,url:window.location.href};return Ri.testCompliance(p).then((function(e){for(var i in e)if(e.hasOwnProperty(i)){var n=t[i].auctionID,a=d[n][r[i].bidId];a.result.status=e[i].status,a.result.bidContentIdHash=e[i].id,a.result.backup=e[i].backup}for(var n in d)if(d.hasOwnProperty(n)){var o=d[n];for(var s in o)if(o.hasOwnProperty(s)){var c=o[s];d[n][s]=c.result}}return d}))}function kn(e){if(e.markup&&e.markup.indexOf("://secure.ace.advertising.com/")>-1)try{var t="https://secure.ace.advertising.com/site="+e.markup.split("Site: '")[1].split("'")[0]+"/size="+e.markup.split("Size: '")[1].split("'")[0]+"/rip="+e.markup.split("/rip=")[1].split("/")[0];t&&(e.markup='\x3c!-- "'+t+'"--\x3e'+e.markup)}catch(e){}e.markup&&!e.url&&-1===e.markup.indexOf("<body")&&(e.markup="<body>"+e.markup+"</body>")}var Rn=M.new();Rn.setPrefix("dispatch: "),Rn.setLevel(E);var Ln=new function(){var e=Vn,o=In,s=i.Z,d=t,c=new a.Z.SubscriptionLayer,l=r.Y;this.subscribeForEvent=function(e,t){c.subscribeForEvent(e,t)};var h=function(e){return n.Z.filter(e,(function(e){return e.cpm>=.01}))};this.dispatchHB=function(t,i){try{var r={},a=[],o=[];n.Z.forEach(t,(function(e){var t=new n.Z.CDefer;r[e.auctionId]=t,a.push(t.promise);var i=e.unit.space.preBiddingSettings;if(i&&i.enabled)o.push(e);else{var s={auctionId:e.auctionId,bids:[]};t.resolve(s)}}));var s=n.Z.map(o,(function(e){var t=e.unit.space.preBiddingSettings.biddingSettings;return{auctionId:e.auctionId,biddingSettings:t,spaceName:e.unit.space.name,sizes:e.unit.space.sizes,element:e.unit.element}})),c=e.dispatch(s,i);return Promise.all(c).then((function(e){try{for(var t=[],i=0;i<e.length;i++){var a=e[i],s=a.auctionId,c=n.Z.find(o,(function(e){return e.auctionId==s})),u=a.bids;u=l.fireEvent("passZeroCpmBidsFilter")?u:h(u);var f=l.fireEvent("filterPrebidBids");if(f)u=f(n.Z.map(u,(function(e){return{bid:e,rawBid:e.rawBid}})));a.bids=u,t.push({auction:c,bids:u})}d.testBidsCompliance(t).then((function(t){for(var i in t)if(t.hasOwnProperty(i)){var a=t[i],o=n.Z.find(e,(function(e){return e.auctionId==i})),s=o.bids;for(var d in a)if(a.hasOwnProperty(d)){var c=a[d],l=n.Z.find(s,(function(e){return e.bidId==d}));l.contentIdHash=c.bidContentIdHash,l.complianceStatus=c.status,l.isBackupCreative=c.backup}r[i].resolve(o)}}))}catch(e){}})),a}catch(e){}},this.dispatchAS=function(e,t){try{var i={},r=[],a=[];n.Z.forEach(e,(function(e){var t=new n.Z.CDefer;i[e.auctionId]=t,r.push(t.promise);var o=e.unit.space.postBiddingSettings;if(o&&o.enabled)a.push(e);else{var s={auctionId:e.auctionId,bids:[]};t.resolve(s)}}));var o=u(a,t,0);return n.Z.forEach(o,(function(e){e.then((function(e){var t=e.auctionId;i[t].resolve(e)}))})),r}catch(e){}};var u=function(e,t,i){try{var r={},a=[];n.Z.forEach(e,(function(e){var t=new n.Z.CDefer;a.push(t.promise),r[e.auctionId]={auction:e,deferred:t}}));var c=[];if(n.Z.forEach(e,(function(e){e.unit.space.postBiddingSettings.order[i]?c.push(e):r[e.auctionId].deferred.resolve({auctionId:e.auctionId,bids:[]})})),!c)return;var l=n.Z.map(c,(function(e){var t=e.unit.space.postBiddingSettings,n=e.getWinningBid(),r=n?n.cpm:0;return{auctionId:e.auctionId,spaceName:e.unit.space.name,params:f(e,t.order[i]),slotElementId:e.unit.element.getAttribute("id"),floorPrice:r,type:t.type}})),h=o.dispatch(l,t);return n.Z.forEach(h,(function(e){e.then((function(e){try{var a=e.auctionId,o=e.bids[0],h=n.Z.find(c,(function(e){return e.auctionId==a})),f=n.Z.find(l,(function(e){return e.auctionId==a}));if(!o){u([h],t,i+1)[0].then((function(e){r[a].deferred.resolve(e)}));try{const e=h.getWinningBid();if(e){const{ad:t,adId:i,bidderId:n,bidder:r,bidderCode:a,currency:o,creativeId:s,cpm:d,height:c,size:l,width:u,...p}=e,g={sendToServer:!0,event:"winButNoAACreative",meta:{auctionID:f.auctionId,winningBidData:p,spaceID:h.unit.space.id}};Rn.infof(null,"logWinButNoAACreative, auction ID -> ",f.auctionId||"N/A",g)}}catch(e){}return}if(o.type==cn.Bid.Types.DFP_PREBID)return o.complianceStatus=s.consts.complianceStatus.COMPLIANT,void r[a].deferred.resolve(e);if(!(o.type!=cn.Bid.Types.ADX_TEXT||f.params.adxShouldTestCompliance||d.doesBidHaveUnacceptableSize(h,o)||d.gamTextAdIsVideo(o)))return o.complianceStatus=s.consts.complianceStatus.COMPLIANT,void r[a].deferred.resolve(e);var p=[{auction:h,bids:[o]}];d.testBidsCompliance(p).then((function(n){if(o.contentIdHash=n[a][o.bidId].bidContentIdHash,o.complianceStatus=n[a][o.bidId].status,!t||!t.forceCompliantEnabled||o.type!=cn.Bid.Types.DIRECT||o.complianceStatus!=s.consts.complianceStatus.INCOMPLIANT)return o.complianceStatus!=s.consts.complianceStatus.COMPLIANT?(o.cancelBid(),void u([h],t,i+1)[0].then((function(e){r[a].deferred.resolve(e)}))):void r[a].deferred.resolve(e);r[a].deferred.resolve(e)})).catch((function(e){o.cancelBid(),u([h],t,i+1)[0].then((function(e){r[a].deferred.resolve(e)}))}))}catch(e){}}))})),a}catch(e){}},f=function(e,t){switch(e.unit.space.postBiddingSettings.type){case o.Types.DFP:return g(e,t)}},p={},g=function(e,t){var i={},r=function(e,t){var i=e.getWinningBid(),r=e.getComplianceBids(),a=m(i,e.unit),o=i?i.getGPTTargeting({complianceBidsInAuction:r}):{},s=n.Z.objectAssign({},a||{},o,t.keyValues||{}),d=p[e.unit.unitID]?Object.keys(p[e.unit.unitID]):[];return p[e.unit.unitID]=s,{toAdd:s,toRemove:d}}(e,t);return i.keyValuesParams=r,i.queryParams=t.params.queryParams||{},i.adxBidderId=t.adx.bidderID,i.adxShouldTestCompliance=t.adx.testCompliance,i.directBidderId=t.direct.bidderID,i},m=function(e,t){var i=["true","false","undefined","152media","33across","a4g","aardvark","adblade","adbund","adbutler","adform","adkernel","adkerneladn","admedia","admixer","adocean","adsparc","adspirit","adsupply","adtelligent","adxcg","adyoulike","aerserv","andbeyond","aol","appnexusAst","appnexus","arteebee","atomx","amazon","audienceNetwork","automatad","beachfront","betweendigital","bidfluence","brainy","brealtime","bridgewell","brightcom","buysellads","c1x","carambola","clickonometrics","clickforce","colossus","connectad","consumable","contentIgnite","conversant","cox","cpx","criteo","defymedia","dgads","districtmDMX","districtm","engagebdr","emxdigital","emx_digital","e-planning","essens","fairtrade","featureForward","fidelityMedia","freewheel-ssp","fyber","gamoshi","gamma","getintent","gourmetAds","gumgum","gxone","imonomy","improvedigital","IndexExchange","indexExchange","ix","inneractive","innity","inskin","insticator","invibes","iqm","justpremium","kargo","komoona","kumma","lifestreet","lkqd","lockerdome","madvertise","marsmedia","matomy","media.net","medianet","mobfox","my6sense","mytarget","nginad","upo","upo1","upo2","upo3","upo4","upo5","upo6","upo7","upo8","upo9","upo10","oneplanetonly","onetag","openx","optimatic","optimera","orbitsoft","peak226","piximedia","platform.io","playgroundXyz","polluxNetwork","polymorph","prebidServer","pubgears","pubmatic","pulsepoint","pulsepointLite","quantcast","quantum","readpeak","realvu","rhythmone","rockyou","roxot","rtbdemandBidder","rtbdemandadk","rtbhouse","rubicon","rxrtb","sara","sekindoum","serverbid","sharethrough","smart","smartyads","somoAudience","sonobi","soloway","sovrn","spotx","springserve","stickyadstv","tapsense","teads","thoughtleadr","tremor","trionInteractive","triplelift","trustx","twenga","ucfunnel","underdogmedia","undertone","unruly","vertamedia","vertoz","vi","vidazoo","vis.x","vuble","weborama","wideorbit","widespace","xaxis","xendiz","yieldbot","yieldlab","yieldmo","yieldone"],n={up_bidder:!0};if(e&&e.bidder&&i.indexOf(e.bidder)>-1)n.up_bidder=e.bidder;else if(e&&e.bidder&&i.indexOf(e.bidder)<0){const t={sendToServer:!0,event:"upBidder_unknownBidder",meta:{bidder:e.bidder,bidderCode:e.bidderCode}};Rn.noticef(null,"unknown bidder for up_bidder targeting -> ",e.bidder,t)}var r=window.location.hostname;0===r.indexOf("www.")&&(r=r.replace("www.",""));var a=r;a=a.match(/(co\.il|co\.uk|org\.il)/)?a.replace("www.","").split(".").splice(-3).join("."):a.replace("www.","").split(".").splice(-2).join("."),n.up_recovery="true";var o=Ji.browser(),d=Ji.device(),c=Ji.platform();n.up_browser=o,n.up_device=d,n.up_platform=c,n.up_domain=r,n.up_website=a,n.up_website_id=s.SharedObject.getItem("websiteConfig").websiteID;const l=t.countOfDispatches-1;return n.up_refresh=l>30?"30":`${l}`,n};o.subscribeForEvent("bidReceived",(function(e){c.invokeEventCallbacks("bidReceived",e)})),o.subscribeForEvent("refresh",(function(e){c.invokeEventCallbacks("refresh",e)})),e.subscribeForEvent("bidReceived",(function(e){c.invokeEventCallbacks("bidReceived",e)})),e.subscribeForEvent("refresh",(function(e){c.invokeEventCallbacks("refresh",e)}))},Cn=r.Y,Gn=function(){var e="push";window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){window.__cmp&&window.__cmp("getVendorConsents",null,(function(e){e&&e.gdprApplies&&(e.purposeConsents&&e.purposeConsents[1]&&e.purposeConsents[2]&&e.purposeConsents[3]&&e.purposeConsents[4]&&e.purposeConsents[5]||window.googletag.pubads().setRequestNonPersonalizedAds(1))})),Cn.fireEvent("skipDisableInitialLoad")||window.googletag.pubads().disableInitialLoad(),Cn.fireEvent("disableSingleRequest")||window.googletag.pubads().enableSingleRequest(),Cn.fireEvent("collapseEmptyDivs")&&window.googletag.pubads().collapseEmptyDivs(!0),window.googletag.pubads().enableAsyncRendering(),window.googletag.enableServices()}))},Wn=function(e){switch(e){case"dfp":return Gn}},An=M.new();An.setPrefix("prebidPostset: ");var Pn,jn=r.Y,Jn=function(){Pn=i.Z.cpbjs,Un(),Kn(),Pn.que.push((function(){Pn.setConfig({userSync:{userIds:[{name:"pubProvidedId",params:{eidsFunction:function(){return[{source:"blockthrough.com",uids:[{id:"bt-aauser",atype:1,ext:{stype:"ppuid"}}]}]}}}]}})})),Pn.onBeforeRequest((function(e){return e&&a.Z.addAcceptableParam(e)}));try{i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame&&Pn.setSafeFrameURL(i.Z.upoSettings.whitelistedFrameSettings.url)}catch(e){An.errorf(null,"setSafeFrameURL error: %o",e)}Pn.aliasBidder("pulsepointLite","pulsepoint"),Pn.aliasBidder("indexExchange","ix"),Pn.aliasBidder("my6sense","upo2"),Pn.aliasBidder("lockerdome","upo3");var e=window.pbjs||window.jitaJS;e&&e.bidderSettings&&(Pn.bidderSettings=e.bidderSettings);var t=e&&e.getConfig&&e.getConfig(),n="high";if(t){var r=t.customPriceBucket,o=t.priceGranularity;n="custom"===o?r:o}Pn.setConfig({priceGranularity:n,userSync:{iframeEnabled:1,syncsPerBidder:25,syncEnabled:1,pixelEnabled:1}});const s=jn.fireEvent("scrapePrebidRequestBids");s&&function(e={}){const{onListenerAdded:t,pollingInterval:i=100,maxIntervalCount:n=50}=e;if(Qn())qn(t);else{let e=0;const r=setInterval((function(){e++,e>=n?clearInterval(r):Qn()&&(clearInterval(r),qn(t))}),i)}}(s),jn.fireEvent("addIndexExchangeWrappers")&&$n(),function(){const e=jn.fireEvent("provideSChainConfig");e&&Pn.que.push((function(){try{if(!window[e.prebidVariable].getConfig("schain"))throw new Error("Could not find publisher's schain in their prebid variable - use manual fallback.");Pn.setConfig({schain:window[e.prebidVariable].getConfig("schain")})}catch(t){try{const t=e.manualFallback||{};Pn.setConfig({schain:{validation:"strict",config:{ver:"1.0",complete:null!==t.complete&&void 0!==t.complete?t.complete:1,nodes:[{asi:t.asi,sid:t.sid,hp:null!==t.hp&&void 0!==t.hp?t.hp:1}]}}})}catch(e){An.errorf(null,"setPublisherSChain: error within manual fallback cpbjs.setConfig(): %o",e)}}}))}(),jn.fireEvent("prebidDoneInit",{cpbjs:Pn})},Kn=function(){try{var e=window.pbjs,t=e&&e.version&&parseInt(e.version[1]);if(t&&!isNaN(t)&&t>=4){var i=e.getConfig("consentManagement");if(i&&(i.gdpr||i.usp))return void Pn.setConfig({consentManagement:i})}}catch(e){An.errorf(null,"setConsentConfig: copy publisher consentManagement settings: %o",e)}try{"function"==typeof window.__tcfapi&&window.__tcfapi("ping",2,(function(e){if(e&&e.cmpLoaded&&e.gdprApplies){var t={consentManagement:Pn.getConfig().consentManagement||{}};t.consentManagement.gdpr={cmpApi:"iab",timeout:3e3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},Pn.setConfig(t)}}))}catch(e){An.errorf(null,"setConsentConfig: __tcfapi: %o",e)}try{"function"==typeof window.__cmp&&"function"!=typeof window.__tcfapi&&window.__cmp("getConsentData",null,(function(e){if(e&&e.gdprApplies){var t={consentManagement:Pn.getConfig().consentManagement||{}};t.consentManagement.gdpr={cmpApi:"iab",timeout:3e3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},Pn.setConfig(t)}}))}catch(e){An.errorf(null,"setConsentConfig: __cmp: %o",e)}try{"function"==typeof window.__uspapi&&window.__uspapi("getUSPData",1,(function(e,t){if(t&&e.uspString){var i={consentManagement:Pn.getConfig().consentManagement||{}};i.consentManagement.usp={cmpApi:"iab",timeout:100},Pn.setConfig(i)}}))}catch(e){An.errorf(null,"setConsentConfig: __uspapi: %o",e)}};var Un=function(){i.Z.whitelistedFrame?Pn.setUpCookieFrame(i.Z.whitelistedFrame):jn.addEventListener("whitelistedFrameLoaded",(function(){Pn.setUpCookieFrame(i.Z.whitelistedFrame)}))};function Qn(){return window.pbjs&&window.pbjs.onEvent}function qn(e){try{window.pbjs.onEvent("beforeRequestBids",(function(e){const t=window.pbjs.adUnits||[],i=t.map((({code:e})=>e)),n=e.filter((e=>!i.includes(e.code)));n.length>0&&(window.pbjs.adUnits=[...t,...n])})),e&&e()}catch(e){An.errorf(null,"prebidPostset - listen to pbjs.requestBids: %o",e)}}var $n=function(){var e={aol:"ix_aol_om",appnexus:"ix_apnx_om",beachfront:"ix_bft_cpm",colossusssp:"ix_clss_cpm",consumable:"ix_cnsm_cpm",conversant:"ix_conv_cpm",criteo:"ix_cdb_om",districtm:"ix_dism_om",districtmDMX:"ix_dis_cpm",emx_digital:"ix_brt_cpm",gumgum:"ix_gum_cpm",improvedigital:"ix_imdi_cpm",justpremium:"ix_justp_cpm",kargo:"ix_karg_om",lockerdome:"ix_lkdm_cpm",onedisplay:"ix_oath_cpm",onemobile:"ix_oath_cpm",openx:"ix_ox_om",optimera:"ix_opti_cpm",piximedia:"ix_pix_cpm",pubmatic:"ix_pubm_om",pulsepoint:"ix_pp_om",pxyz:"ix_pxyz_cpm",quantcast:"ix_qua_cpm",rubicon:"ix_rubi_om",sharethrough:"ix_shth_cpm",sonobi:"ix_sbi_om",sovrn:"ix_sovrn_om",triplelift:"ix_tpl_cpm",trustx:"ix_trstx_cpm",indexExchange:"IOM",ix:"IOM",undertone:"ix_undr_cpm"},t=function(e){return(100*parseFloat(e)).toFixed()};for(var i in e)Pn.bidderSettings[i]={adserverTargeting:[{key:e[i],val:function(e){var i=Pn.getConfig().priceGranularity;return"auto"===i?e.size+"_"+t(e.pbAg):"dense"===i?e.size+"_"+t(e.pbDg):"low"===i?e.size+"_"+t(e.pbLg):"medium"===i?e.size+"_"+t(e.pbMg):"high"===i?e.size+"_"+t(e.pbHg):"custom"===i?e.size+"_"+t(e.pbCg):e.size+"_"+t(e.pbHg)}}]}};var er=function(e){switch(e){case"prebid":return Jn}},tr=new function(){var e=new a.Z.SubscriptionLayer;this.subscribeForEvent=function(t,i){e.subscribeForEvent(t,i)};this.load=function(){window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[],e.invokeEventCallbacks("preset"),new Promise((function(e,t){var i=document.createElement("script");i.async="true",i.type="text/javascript",i.addEventListener("load",(function(){Promise.all([new Promise((function(e,t){var i=document.createElement("script");i.async="true",i.type="text/javascript",i.addEventListener("load",(function(){e()})),i.addEventListener("error",(function(e){t(e)})),i.src="https://adservice.google.com/adsid/integrator.js?domain="+window.location.hostname+"&upapi=true",(document.head||document.body||document.documentElement).appendChild(i)})),new Promise((function(e,t){var i=!1;try{window.googletag&&window.googletag.getVersion&&(i=!0,(d=document.createElement("script")).async="true",d.type="text/javascript",d.addEventListener("load",(function(){e()})),d.addEventListener("error",(function(e){t(e)})),d.src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_"+window.googletag.getVersion()+".js?upapi=true",(document.head||document.body||document.documentElement).appendChild(d))}catch(e){t("error in getting pubads_impl -> "+e)}if(window.googletag._vars_){var n=window.googletag._vars_,r=[21063911,21063048,21063670,21063817,21063671],a=[];for(var o in n){var s=n[o];if("string"==typeof s&&s.indexOf("pubads_impl_")>-1&&!i)try{var d;i=!0,(d=document.createElement("script")).async="true",d.type="text/javascript",d.addEventListener("load",(function(){e()})),d.addEventListener("error",(function(e){t(e)})),s.indexOf("?")>-1?d.src=s+"&upapi=true":d.src=s+"?upapi=true",(document.head||document.body||document.documentElement).appendChild(d)}catch(e){t("error in getting pubads_impl -> "+e)}else if(Array.isArray(s))try{var c=s.length;if(r)for(;c--;){var l=s[c];r.indexOf(l)>-1&&s.splice(c,1)}if(a)for(var h=0;h<a.length;h++)l=a[h],-1===s.indexOf(l)&&s.push(l)}catch(e){}}}i||t()}))]).then((function(){e()}),(function(e){t(e)}))})),i.addEventListener("error",(function(){t()})),i.src="//www.googletagservices.com/tag/js/gpt.js?upapi=true",(document.head||document.body||document.documentElement).appendChild(i)}))}},ir=__webpack_require__(326),nr=new a.Z.SubscriptionLayer,rr=!1,ar=function(e){switch(rr||rr||(rr=!0,tr.subscribeForEvent("preset",(function(){sr("dfp")})),tr.subscribeForEvent("postset",(function(){cr("dfp")})),ir.k.subscribeForEvent("preset",(function(){sr("prebid")})),ir.k.subscribeForEvent("postset",(function(){cr("prebid")}))),e){case"dfp":tr.load();break;case"prebid":ir.k.load()}},or=function(e,t){nr.subscribeForEvent(e,t)},sr=function(e){nr.invokeEventCallbacks(e)},dr=function(e,t){nr.subscribeForEvent(e,t)},cr=function(e){nr.invokeEventCallbacks(e)},lr=new function(){var e=Ln,t=r.Y,a={},o=!1,s=!1,d=function(e,t){for(var i=a[e]||[],n=i.length||0,r=0;r<n;r++){var o=i[r];setTimeout((function(){o(t)}),0)}};this.UPONIT_EVENTS={BID_RECEIVED:1},this.COMPLIANCE_STATUSES={UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4},this.init=function(t){var i=t.prebidConfig,n=t.dfpConfig,r=i&&i.init,a=n&&n.init;o=i&&i.enabled,s=n&&n.enabled,c({prebid:o,dfp:s}),r&&l(r),a&&h(a),e.subscribeForEvent("bidReceived",(function(e){var t=m([e.bid])[0];d(lr.UPONIT_EVENTS.BID_RECEIVED,t)}))};var c=function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t]){var i=Wn(t),n=er(t);i&&or(t,i),n&&dr(t,n)}for(var t in e)e.hasOwnProperty(t)&&e[t]&&ar(t)};this.defineSlot=function(e,t){var i,r,a=b(e),o=!!document.querySelector(a.selector.value),d=(i=a.selector.value,r=window.uponit.slots,!!n.Z.find(r,(function(e){return e.unit.space.selector.value==i})));if(o&&!d){!s||t&&t.dfpSlotAlreadyDefined||function(e){e&&e.adUnit&&e.sizes&&e.slotElementId&&window.googletag.cmd.push((function(){var t=window.googletag.defineSlot(e.adUnit,e.sizes,e.slotElementId).addService(window.googletag.pubads());if(e.targeting)for(var i in e.targeting)if(e.targeting.hasOwnProperty(i)){var n=e.targeting[i];t.setTargeting(i,n)}}))}(e.dfp);var c,l=new cn.Space(a),h=document.querySelector(l.selector.value);(c=h).alreadyWraped||(En.hookFunction(c,"setAttribute",En.Types.SET_ATTRIBUTE_PRE,void 0,!0),c.alreadyWraped=!0);var u=new cn.Unit({element:h,space:l}),f=new cn.Slot({unit:u});return window.uponit.slots.push(f),f}};var l=function(e){t.addEventListener("prebidDoneInit",(function(t){var i=t.data,n=i&&i.cpbjs;if(n){var r={setConfig:function(e){n.setConfig(e)},aliasBidder:function(e,t){n.aliasBidder(e,t)},enableAnalytics:function(e){n.enableAnalytics(e)},bidderSettings:function(e){n.bidderSettings=e}};for(var a in e)if(e.hasOwnProperty(a)){var o=e[a];r[a]&&r[a].apply(this,o)}}}))},h=function(e){window.googletag.cmd.push((function(){window.googletag.pubads().disableInitialLoad()}))};this.enableServices=function(){s&&(window.googletag=window.googletag||{cmd:[]},window.googletag.cmd.push((function(){window.googletag.enableServices()})))},this.fetchPrebid=function(e){return u(e)};var u=function(r){if(!o)return n.Z.map(r,(function(e){var t={slotName:e.unit.space.name,bids:[]};return Promise.resolve(t)}));var a=g(r),s=e.dispatchHB(a);return n.Z.map(s,(function(e){return e.then((function(e){var r=e.auctionId,o=n.Z.find(a,(function(e){return e.auctionId==r})),s=e.bids,d=o.unit.space.name,c=s;if(t.fireEvent("apiOnlyCompliantBids")){c=[];n.Z.forEach(s,(function(e){e.complianceStatus==i.Z.consts.complianceStatus.COMPLIANT&&c.push(e)}))}return o.addBids(c),{slotName:d,bids:m(c)}}))}))};this.fetchDFP=function(e){return f(e)};var f=function(r){if(!s)return n.Z.map(r,(function(e){var t={slotName:e.unit.space.name,bids:[]};return Promise.resolve(t)}));var a=g(r),o={forceCompliantEnabled:t.fireEvent("forceCompliant")},d=e.dispatchAS(a,o);return n.Z.map(d,(function(e){return e.then((function(e){var r=e.auctionId,o=n.Z.find(a,(function(e){return e.auctionId==r})),s=e.bids,d=o.unit.space.name,c=o.getWinningBid();if(s&&s.length>0&&s[0].type==cn.Bid.Types.DFP_PREBID)return c&&c.additionalBidsToRender.push(s[0]),{slotName:d,bids:[]};var l=s;if(t.fireEvent("apiOnlyCompliantBids")){l=[];n.Z.forEach(s,(function(e){e.complianceStatus==i.Z.consts.complianceStatus.COMPLIANT&&l.push(e)}))}return o.addBids(l),{slotName:d,bids:m(l)}}))}))};this.renderBid=function(e,t){e.renderBid(t)},this.fetchAndRender=function(e){return p(e)};var p=function(e){return new Promise((function(t,r){e=e||window.uponit.slots;var a=u(e);Promise.all(a).then((function(r){var a=f(e);n.Z.forEach(a,(function(e){e.then((function(e){for(var t,r=e.slotName,a=n.Z.find(window.uponit.slots,(function(e){return e.unit.space.name==r})),o=a.getBids(),s=0;s<o.length;s++){var d=o[s];(!t||t.cpm<d.cpm)&&d.complianceStatus==i.Z.consts.complianceStatus.COMPLIANT&&(t=d)}a.renderBid(t)}))})),Promise.all(a).then((function(){t()}))}))}))};this.addEventListener=function(e,t){a[e]=a[e]||[],a[e].push(t)};var g=function(e){return n.Z.map(e,(function(e){var i=function(e){return n.Z.find(e.auctionsList,(function(e){return e.state!=cn.Auction.States.DONE}))}(e);return i||(i=new cn.Auction({unit:e.unit}),e.auctionsList.push(i),t.fireEvent("onAuctionStarted",{auction:i})),i}))},m=function(e){return n.Z.map(e,(function(e){return{bidId:e.bidId,adId:e.adId,bidder:e.bidder,cpm:e.cpm,height:e.height,width:e.width,size:e.size,complianceStatus:e.complianceStatus}}))},b=function(e){var t={};if(t.id="space_"+ln.hashString(e.name+"_"+e.selector),t.id=t.id.substr(0,500),t.name=e.name,t.sizes=e.sizes,t.selector={position:0,value:e.selector},e.prebid){t.preBiddingSettings={enabled:!0,biddingSettings:{}},t.preBiddingSettings.biddingSettings[1]=[];for(var i=0;i<e.prebid.bidders.length;i++){var n=e.prebid.bidders[i],r="bidder_"+ln.hashString(t.id+"_"+n.name+"_"+JSON.stringify(n.params).trim());r=r.substr(0,500),t.preBiddingSettings.biddingSettings[1].push({id:r,name:n.name,params:n.params})}}return e.dfp&&(t.postBiddingSettings={adxId:e.name+"_adx",directId:e.name+"_direct",enabled:!0,type:1,order:[{params:{keyValues:e.keyValues},adx:{bidderID:e.name+"_adx",testCompliance:!0},direct:{bidderID:e.name+"_direct"}},{params:{queryParams:{ad_type:"text"},keyValues:e.keyValues},adx:{bidderID:e.name+"_adx",testCompliance:!1},direct:{bidderID:e.name+"_direct"}}]}),t}},hr=new function(){var e=r.Y;this.init=function(){e.addEventListener("onAuctionGroupStarted",(function(e){M.infof(null,"onAuctionGroupStarted: %o",e)})),e.addEventListener("onAuctionGroupEnded",(function(e){M.infof(null,"onAuctionGroupEnded: %o",e)})),e.addEventListener("onAuctionStarted",(function(e){M.infof(null,"onAuctionStarted: %o",e)})),e.addEventListener("onAuctionEnded",(function(e){M.infof(null,"onAuctionEnded: %o",e)})),e.addEventListener("onPrebiddingStarted",(function(e){M.infof(null,"onPrebiddingStarted: %o",e)})),e.addEventListener("onPrebiddingEnded",(function(e){M.infof(null,"onPrebiddingEnded: %o",e)})),e.addEventListener("onPostbiddingStarted",(function(e){M.infof(null,"onPostbiddingStarted: %o",e)})),e.addEventListener("onPostbiddingEnded",(function(e){M.infof(null,"onPostbiddingEnded: %o",e)})),e.addEventListener("onAuctionBidResponse",(function(e){M.infof(null,"onAuctionBidResponse: %o",e)})),e.addEventListener("onNewUnitFound",(function(e){M.infof(null,"onNewUnitFound: %o",e)}))}},ur=new function(){var e=[],t={},i={};this.set=function(n){var r=n;Array.isArray(r)||(r=[r]);for(var a=0;a<r.length;a++){var o=r[a];o&&(e.push(o),t[o.name]=t[o.name]||[],t[o.name].push(o),i[o.id]=i[o.id]||[],i[o.id].push(o))}},this.getSpacesByName=function(e){return t[e]||[]},this.getSpacesByID=function(e){return i[e]||[]},this.getAll=function(){return e},this.remove=function(r){e=n.Z.filter(e,(function(e){return e!=r}));var a=i[r.id].indexOf(r);a>=0&&i[r.id].splice(a,1);var o=t[r.name].indexOf(r);o>=0&&t[r.name].splice(o,1)}},fr=M.new();function pr(e){const t=r.Y.fireEvent("maxAmountOfUnitDispatches");return t?e.filter((e=>e.countOfDispatches<t)):e}function gr(e,t){let n=i.Z.upoSettings.minTimeBetweenRefreshes;const a=r.Y.fireEvent("minTimeBetweenRefreshes");isNaN(a)||"number"!=typeof a||(n=a),isNaN(t.minTimeBetweenRefreshes)||"number"!=typeof t.minTimeBetweenRefreshes||(n=t.minTimeBetweenRefreshes);const o=t.getLastTimeLocationChanged&&t.getLastTimeLocationChanged(),s=new Date;return e.filter((e=>{if(!e)return!1;let t=!0;if(e.lastInvokeTime){const i=s.getTime()-e.lastInvokeTime.getTime();i>n||o&&e.lastInvokeTime.getTime()<o?fr.infof(null,"refreshing %o",e.space.name):(t=!1,fr.infof(null,"waiting %o secs before next refresh for %o",[(n-i)/1e3,e.space.name]))}return t}))}function mr(e){return e.filter((e=>!r.Y.fireEvent("filterOutUnitToBeAuctioned",{unit:e})))}function br(e){const t=e.map((e=>e.element));return e.filter(((e,i)=>t.indexOf(e.element)==i))}function wr(e,t){return new Promise(((i,n)=>{t&&t.definedSlotsFilteringSettings&&(t.definedSlotsFilteringSettings.dfpEnabled||t.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots)?window.googletag.cmd.push((function(){const n=window.googletag.pubads().getSlots(),r=[];e.forEach((e=>{t.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots||e.space.postBiddingSettings.enabled?n.forEach((t=>{t.getSlotElementId()===e.element.getAttribute("id")&&r.push(e)})):r.push(e)})),i(r)})):i(e)}))}var vr=new function(){var e=[];this.set=function(t){e.push(t)},this.getBySpace=function(t){for(var i=0;i<e.length;i++){var n=e[i];if(n.space==t)return n}},this.getByElement=function(t){for(var i=0;i<e.length;i++){var n=e[i];if(n.element==t)return n}},this.getAll=function(){return e}};function Nr(e,t){var r=[],o=!1;var s={ad:e.creativeHTML,bidder:"default-creative",bidderId:"default-creative-"+t.unit.space.name,bidderCode:"default-creative",width:e.width,height:e.height};return new cn.Bid(s,s,cn.Bid.Types.DEFAULT_CREATIVE,void 0,(function(t){!function(t){var s=e.height+"px",d=e.width+"px",c=e.creativeHTML,l=document.createElement("div");l.className="default-creative-container",l.style.height=s,l.style.width=d;var h=Ui.safeFrameCreator.createSafeFrame();h.className="default-creative-iframe",h.setAttribute("scrolling","no"),h.setAttribute("marginwidth","0"),h.setAttribute("marginheight","0"),h.setAttribute("height",s),h.setAttribute("width",d),l.appendChild(h),h.addEventListener("load",(function(){try{var e=a.Z.commonUtils.doesBrowserSupportDocOpen();if(i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var t="if("+e+") { document.open('text/html', 'replace'); } document.write(atob('"+btoa(c)+"')); document.close();";h.contentWindow.postMessage({type:"eval",code:t},"*")}else{var s=h.contentWindow.document;e&&s.open("text/html","replace"),s.write(c),s.close()}o=!0,n.Z.forEach(r,(function(e){e()}))}catch(e){M.errorf(null,"auction: createDefaultCreativeBid: renderDefaultCreative: %o",e)}})),t.appendChild(l)}(t.placement)}),void 0,void 0,(function(e){o?e():r.push(e)}),void 0)}var _r=M.new(),Dr=new function(){var e,t=!1,o={};let s;function d(){return s}o[i.Z.consts.refreshType.ALL]=[],o[i.Z.consts.refreshType.VISIBLE]=[],o[i.Z.consts.refreshType.HIDDEN]=[];var c=[],l=[],h=[],u=!1,f=function(a,d){if(!t){t=!0,ur.set(a),e=d||{},u=r.Y.fireEvent("alwaysFilterByGoogletagSlots"),V(e),(e.dfp||u)&&E(),window.googletag.cmd.push((function(){var e=window.googletag.pubads().getSlots();n.Z.forEach(e,(function(e){fn(e)}))})),v(),z(),en.onScroll((function(){var e=ur.getAll();L(),F(i.Z.consts.refreshType.ALL),b(e)})),en.onBlur((function(){var e=r.Y.fireEvent("onBlurRefresh");F("ALL"===e?i.Z.consts.refreshType.ALL:"VISIBLE"===e?i.Z.consts.refreshType.VISIBLE:i.Z.consts.refreshType.HIDDEN)})),function(){try{history.pushState=(e=history.pushState,function(){var t=e.apply(this,arguments);return window.dispatchEvent(new Event("pushstate")),window.dispatchEvent(new Event("locationchange")),t}),history.replaceState=(e=>function(){var t=e.apply(this,arguments);return window.dispatchEvent(new Event("replacestate")),window.dispatchEvent(new Event("locationchange")),t})(history.replaceState),window.addEventListener("popstate",(()=>{window.dispatchEvent(new Event("locationchange"))}))}catch(e){_r.errorf(null,"setting up locationchange event - error: %o",e)}var e}(),r.Y.fireEvent("disableRefreshOnLocationChange")||window.addEventListener("locationchange",(function(){s=Date.now(),F(i.Z.consts.refreshType.ALL)}));var l=r.Y.fireEvent("refreshOnInterval");if(l){var h=l.refreshInterval||2e3;_r.infof(null,"going to dispatch refresher on a %o sec(s) interval",h/1e3);var f=function(){F(i.Z.consts.refreshType.VISIBLE)},p=setInterval(f,h);en.onFocus((function(){p||(p=setInterval(f,h))})),en.onBlur((function(){p&&(clearInterval(p),p=null)}))}Ln.subscribeForEvent("refresh",(function(e){var t=ur.getAll();n.Z.forEach(e,(function(e){var n=N(e,t);n&&(o[i.Z.consts.refreshType.ALL].indexOf(n)<0&&o[i.Z.consts.refreshType.ALL].push(n),s&&Date.now()-s<2e3?F(i.Z.consts.refreshType.ALL):F(i.Z.consts.refreshType.HIDDEN))}))})),r.Y.addEventListener("refreshByForce",(function(e){var t=e.data,i=t&&t.settings,r=ur.getAll(),a=i&&i.minTimeBetweenRefreshes,o=i&&i.shouldRefreshFailedSpaces,s=i&&i.spacesNames,d=i&&i.shouldRefreshAllSpaces,l=[],h={filteringSettings:{minTimeBetweenRefreshes:a}};o&&n.Z.forEach(c,(function(e){l.push(e)})),s&&(l=n.Z.filter(r,(function(e){return s.indexOf(e.name)>-1}))),d&&(l=r),w(l=n.Z.distinct(l),h).then((function(e){c=n.Z.filter(l,(function(t){return e.indexOf(t)<0}))}))})),r.Y.addEventListener("websiteHooksGetSpaces",(function(){return ur.getAll()}));var _=r.Y.fireEvent("scrapePrebidAdUnits");_&&("boolean"==typeof _&&(_={}),g(_)),r.Y.fireEvent("scrapeGoogletagSlots")&&window.googletag.cmd.push((function(){var e=window.googletag.pubads().getSlots(),t=n.Z.map(e,(function(e){return y(e)}));n.Z.forEach(t,(function(e){e&&ur.set(e)}))})),(e.dfp||u)&&window.googletag.cmd.push((function(){var e=window.googletag.pubads().getSlots();e&&n.Z.forEach(e,(function(e){X(e)}))})),m()}};function p(){return window.pbjs&&window.pbjs.adUnits}var g=function(e){var t,i=e.getAdUnits||p,r=e.filterOutAdUnit,a=e.parseAdUnit,o=e.postParsingAdUnits,s=e.parseInterval||1e3,d=[],c=function(){if((t=i()||[]).length>0){for(var e=[],s=[],c=0;c<t.length;c++){var l=t[c];l&&(d.indexOf(l)>=0||(l=JSON.parse(JSON.stringify(l)),l=a?a(l):l,r&&r(l)||(d.push(l),e.push(l))))}if(0===e.length)return;if(e=o?o(e):e,n.Z.forEach(e,(function(e){const t=hn(e);var i=t&&new cn.Space(t);i&&(ur.getSpacesByName(i.name).length>0||s.push(i))})),0===s.length)return;ur.set(s),b(s)}};c(),setInterval((function(){c()}),s)},m=function(){window.__upo_d.getSpaces=function(){return ur.getAll()},window.__upo_d.getUnits=function(){return vr.getAll()},window.__upo_d.getAuctions=function(){return l}},b=function(e){return w(H(e))};function w(e,t){const i=function(){const e=[],t=r.Y.fireEvent("auctionBlockerHook");return t&&e.push(t),e}();return Promise.all(i).then((()=>I(e))).then((e=>B(e,t))).then((e=>e.map((e=>e.space))))}var v=function(){var e=ur.getAll();r.Y.fireEvent("listenToNewSpaces",{spaces:e,callback:function(e){if(e){for(var t=0;t<e.length;t++){var i=e[t],n=i&&new cn.Space(i);n&&ur.set(n)}var r=ur.getAll();b(r)}}})};function N(e,t){const i=`[id="${e}"]`,n=Ui.commonBLUtils.getElementWithSelector(i);if(!n)return;const r=vr.getByElement(n);if(r)return r.space;return H(t).find((e=>{const t=Ui.commonBLUtils.getSpaceElement(e);return t&&t===n}))}var _,D=[],X=function(e){var t=e.getSlotElementId(),i=e.getAdUnitPath(),o=ur.getAll(),s=N(t,o);if(!s){if(r.Y.fireEvent("useSlotPath"))s=ur.getSpacesByName(i.split("/")[i.split("/").length-1])[0];else{var d=r.Y.fireEvent("customGetSpace",{spaces:o,divId:t,slot:e});d&&(s=n.Z.find(o,(function(e){return e.name==d.name})))}(s=s&&JSON.parse(JSON.stringify(s)))&&(s.selector.value=a.Z.commonUtils.escapeSelector("#"+t),s.name=t,ur.set(s))}if(!s){var c=r.Y.fireEvent("extractPublisherSpaceLaterDefineSlot",{name:t});if(c){const e=hn(c);(s=e&&new cn.Space(e))&&ur.set(s)}}s||r.Y.fireEvent("scrapeGoogletagSlots")&&(s=y(e))&&ur.set(s),s&&D.indexOf(s)<0&&(D.push(s),clearTimeout(_),_=setTimeout((function(){w(D),D=[]}),100))},E=function(){var e="push";window.googletag&&window.googletag.cmd.unshift&&(e="unshift"),window.googletag.cmd[e]((function(){var e=window.googletag.defineSlot;if(window.googletag.defineSlot=function(t,i,n){var r=e(t,i,n);return setTimeout((function(){if(r){if(fn(r))return;X(r)}}),0),r},r.Y.fireEvent("overrideDefineOutOfPageSlot")){var t=window.googletag.defineOutOfPageSlot;window.googletag.defineOutOfPageSlot=function(e,i){var n=t(e,i);return setTimeout((function(){if(n){if(fn(n))return;X(n)}}),0),n}}}))},y=function(t){if(t&&!r.Y.fireEvent("shouldIgnoreGoogletagSlotScraping",{slot:t})){var o=t.getSlotElementId(),s=t.getSizes(),d=n.Z.map(s,(function(e){if(e.getWidth)return e.getWidth()+"x"+e.getHeight()}));d=n.Z.filter(d,(function(e){return!!e}));var c="adxId_"+o,l="directId_"+o,h={id:o,name:o,staging:!1,selector:{value:a.Z.commonUtils.escapeSelector("#"+o),position:i.Z.consts.selectorPosition.APPEND_CHILD},sizes:d,preBiddingSettings:{enabled:!0,biddingSettings:{}},postBiddingSettings:{adxId:c,directId:l,enabled:e.dfp,type:1,order:[{params:{},adx:{bidderID:c,testCompliance:!0},direct:{bidderID:l}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:c,testCompliance:!1},direct:{bidderID:l}}]}};return h.preBiddingSettings.biddingSettings[i.Z.consts.headerBiddingType.prebid]=[],new cn.Space(h)}},V=function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t]){var i=[],a=[],o=Wn(t),s=er(t);o&&i.push(o),s&&a.push(s);var d=r.Y.fireEvent("thirdPartyModulePreset",{type:t}),c=r.Y.fireEvent("thirdPartyModulePostset",{type:t});d&&i.push(d),c&&a.push(c),n.Z.forEach(i,(function(e){or(t,e)})),n.Z.forEach(a,(function(e){dr(t,e)})),ar(t)}},z=function(){(h=r.Y.fireEvent("movePositionRules")||[])&&h.length>0&&Ui.movePositionService.setMovePositionRules(h)};const x=[pr,gr,mr,br,wr];function H(e=[]){return e.filter((e=>!vr.getBySpace(e)))}this.invoke=function(e){if(!window.__bt_intrnl.stopFlag){var t=e.spaces,i=e.settings;f(t,i),b(t);var n=1,r=setInterval((function(){15==n&&clearInterval(r),n++,b(t)}),100)}};var I=function(e){const t=[],i=[];return n.Z.forEach(e,(function(e){var n,a=Ui.commonBLUtils.getSpaceElement(e);a&&((n=vr.getByElement(a))||(S(a),n=new cn.Unit({element:a,space:e}),r.Y.fireEvent("onNewUnitFound",n),vr.set(n),i.push(n)),n&&n.space==e&&t.push(n))})),function(e){const{AD_UNIT_PATH_PREFIX:t,deriveDataFromUnitForSpaces:i,slotDataBySpaceName:n}=r.Y.fireEvent("newGAMSlotsOnUnitCreation")||{};e.length>0&&(i||n)&&window.googletag.cmd.push((function(){try{e.forEach((({unitID:e,element:r,space:a})=>{let o,s,d;const c=i&&i.includes(a.name)&&t,l=n&&n[a.name];(c||l)&&(l&&({adUnitPath:o,sizes:s,slotElementId:d}=n[a.name]||{}),!o&&t&&(o=`${t}${a.name}`),s||(s=a.sizes.map((e=>e.split("x").map((e=>parseInt(e,10))))).filter((e=>2===e.length&&!isNaN(e[0])&&!isNaN(e[1])))),d||(r.id||r.setAttribute("id",`bt-unit-${e}`),d=r.id),o&&s&&s.length>0&&d&&un(o,s,d))}))}catch(e){M.errorf(null,"error defining new GAM slots on Unit creation",e)}}))}(i),t},S=function(e){e.alreadyWraped||(En.hookFunction(e,"setAttribute",En.Types.SET_ATTRIBUTE_PRE,void 0,!0),e.alreadyWraped=!0)};var Z,T,B=function(t,a){return new Promise((function(o,s){if(0!==t.length){r.Y.fireEvent("onBeforeInvokeDispatch",{spaces:n.Z.map(t,(function(e){return e.space}))}),function(e){e.forEach((({space:e})=>{r.Y.fireEvent("modifySpacesOnBeforeFetching",{space:e})}))}(t);var d={};a&&(d=a.filteringSettings||{}),async function(t,i){i={definedSlotsFilteringSettings:{dfpEnabled:e.dfp,alwaysFilterByGoogletagSlots:u},...i};let n=t.filter((e=>e.state===cn.Unit.States.PENDING));if(n.length>0){n.forEach((e=>{e.state=cn.Unit.States.CHECKING}));let e=[...n];for(const t of x)if(n=await t(n,i),e=e.filter((e=>{const t=n.includes(e);return t||(e.state=cn.Unit.States.PENDING),t})),0===n.length)break}return n}(t,d).then((function(t){try{if(function(e,t){e&&0!==e.length&&t&&i.Z.upoSettings.amazonBidderConfiguration.enabled&&e.forEach((e=>{const t=e.space;if(t.preBiddingSettings.biddingSettings[i.Z.consts.headerBiddingType.prebid].some((e=>"amazon"===e.name)))return;const n=e.element,r=googletag.pubads().getSlots().find((e=>document.getElementById(e.getSlotElementId())===n)).getAdUnitPath();t.preBiddingSettings.biddingSettings[i.Z.consts.headerBiddingType.prebid].push({id:r+"_amazon_bidder",name:"amazon",params:{pubID:i.Z.upoSettings.amazonBidderConfiguration.pubID,adUnitGPTPath:r}})}))}(t,e.dfp),o(t||[]),!t||0===t.length)return;var a=n.Z.map(t,(function(e){return e.space}));Ui.movePositionService.dispatch(a);var s=n.Z.map(t,(function(e){return new cn.Auction({unit:e})}));if(r.Y.fireEvent("onAuctionGroupStarted",s),O(s),window.__bt_intrnl.stopFlag)return;r.Y.fireEvent("onPrebiddingStarted",s);var d=Ln.dispatchHB(s);Promise.all(d).then((function(t){r.Y.fireEvent("onPrebiddingEnded",s);for(var i=0;i<t.length;i++){var a=t[i],o=a.auctionId,d=a.bids;n.Z.forEach(s,(function(e){e.auctionId==o&&e.addBids(d)}))}var c={forceCompliantEnabled:r.Y.fireEvent("forceCompliant")};if(!window.__bt_intrnl.stopFlag){var l=Ln.dispatchAS(s,c);n.Z.forEach(l,(function(t,i){t.then((function(t){var i=n.Z.find(s,(function(e){return e.auctionId==t.auctionId})),a=i.getWinningBid(),o=t.bids;if(o&&o.length>0?n.Z.forEach(o,(function(e){e.type==cn.Bid.Types.DFP_PREBID?a&&a.additionalBidsToRender.push(e):i.addBids([e])})):e.dfp&&i.unit.space.postBiddingSettings.enabled&&a&&i.cancelAuction(),!window.__bt_intrnl.stopFlag){var d=i.getWinningBid();if(localStorage.getItem("forceDefaultCreative")&&(d=void 0),!d){var c=r.Y.fireEvent("getDefaultCreative",{auction:i});c&&(c={width:c.width,height:c.height,creativeHTML:c.creativeHTML},d=Nr(c,i),i.addBids([d]))}i.subscribeForEvent("auctionRendered",(function(){r.Y.fireEvent("onAuctionRendered",{auction:i,bid:d}),r.Y.fireEvent("onAuctionRenderedWebsiteHook",{space:i.unit.space,element:i.unit.element,winningBid:d}),rn(i.unit.element,(function(){r.Y.fireEvent("onAdViewed",{auction:i,bid:d}),r.Y.fireEvent("onAdViewedWebsiteHook",{space:i.unit.space,element:i.unit.element,winningBid:d})}))})),i.subscribeForEvent("renderBidDone",(function(e){r.Y.fireEvent("onAuctionEnded",{auction:i,bid:e.successfulyRenderedBid&&d}),r.Y.fireEvent("onAuctionEndedWebsiteHook",{element:i.unit.element,bid:e.successfulyRenderedBid&&d})})),i.renderBid(d),i.unit.state=cn.Unit.States.PENDING,Y(i.unit.space)}}))}))}}))}catch(e){_r.errorf(null,"recovery: filterUnits %o",e)}}))}else o([])}))},Y=function(e){var t=r.Y.fireEvent("spaceRefreshSettings",{space:e});if(t){var n=Ui.commonBLUtils.refreshTypeDecoder(t.type);if(n==i.Z.consts.refreshType.UNKNOWN)return void _r.errorf(null,"invalid refresh type setting %o",t.type);var a=t.rate||3e4;o[n].indexOf(e)<0&&o[n].push(e),_r.infof(null,"setting up refresh(%s) for space %o in %o secs",[n,e.name,a/1e3]),setTimeout((function(){F(n)}),a)}},F=function(e){clearTimeout(Z),Z=setTimeout((function(){var t=[];switch(e){case i.Z.consts.refreshType.ALL:t=o[e];break;case i.Z.consts.refreshType.VISIBLE:(t=k(o[e])).push(...k(o[i.Z.consts.refreshType.ALL]));break;case i.Z.consts.refreshType.HIDDEN:(t=R(o[e])).push(...R(o[i.Z.consts.refreshType.ALL]));break;default:t=o[e]||[]}if(t.length<1)return void _r.infof(null,"nothing to refresh");const r=t.filter(((e,t,i)=>i.indexOf(e)===t));_r.infof(null,"dispatch trying to refresh %o spaces out of %o with type %o",[r.length,e,o[e].length]),w(r,{filteringSettings:{getLastTimeLocationChanged:d}}).then((function(t){t=t||[];var i=[];n.Z.forEach(r,(function(e){t.indexOf(e)<0&&i.push(e)})),_r.infof(null,"refreshed %o spaces out of %o",[t.length,r.length]),o[e]=i}))}),1e3)},O=function(e){n.Z.forEach(e,(function(e){e.state=cn.Auction.States.DISPATCHED,e.unit.state=cn.Unit.States.DISPATCHED,l.push(e),e.unit.countOfDispatches++,e.unit.lastInvokeTime=new Date,r.Y.fireEvent("onAuctionStarted",{auction:e})}))},k=function(e){for(var t=[],i=0;i<e.length;i++){var n=e[i];sn(n.selector.value)&&t.push(n)}return t},R=function(e){if(!document.hasFocus())return e;for(var t=[],i=0;i<e.length;i++){var n=e[i];sn(n.selector.value)||t.push(n)}return t},L=function(){clearTimeout(T),T=setTimeout((function(){try{var e=r.Y.fireEvent("extractPublisherSpacesLaterDefinedUnits");if(!e)return;for(var t=0;t<e.length;t++){const n=hn(e[t]);var i=n&&new cn.Space(n);i&&ur.set(i)}}catch(e){}}),1e3)}};window.__upo_d=window.__upo_d||{},window.__upo_d.v="v2",window.__bt_intrnl=window.__bt_intrnl||{},window.googletag=window.googletag||{},window.googletag.cmd=window.googletag.cmd||[];var Xr={"contentEnabled":true,"mobileContentEnabled":true,"dfpEnabled":true,"spaces":{}},Er=Xr.spaces||{},Mr="api.btloader.com";const yr=i.Z.upoSettings.staticDomain;(window.location.href.indexOf("bt_debug=true")>=0||"true"==window.localStorage.getItem("bt_debug"))&&(Xr.dfpEnabled="true"==localStorage.getItem("forceGAM")||Xr.dfpEnabled,Xr.mobileContentEnabled="true"==localStorage.getItem("forceMobileContent")||Xr.mobileContentEnabled,Xr.contentEnabled="true"==localStorage.getItem("forceContent")||Xr.contentEnabled);var Vr=r.Y;var zr,xr={websiteData:Xr,scriptSettings:Dn,apiDomain:Mr,staticDomain:yr,websiteID:"5868550632767488",organizationID:"5682682429177856",dfpEnabled:Xr.dfpEnabled,prebidEnabled:!1,mobileContentEnabled:Xr.mobileContentEnabled,contentEnabled:Xr.contentEnabled};window.__upo_d.websiteConfig=function(){return{websiteData:xr.websiteData,scriptSettings:xr.scriptSettings,apiDomain:xr.apiDomain,websiteID:xr.websiteID,staticDomain:xr.staticDomain,organizationID:xr.organizationID,dfpEnabled:xr.dfpEnabled,prebidEnabled:xr.prebidEnabled,mobileContentEnabled:xr.mobileContentEnabled,contentEnabled:xr.contentEnabled}},i.Z.SharedObject.setItem("websiteConfig",xr);var Hr=M.new();Hr.setPrefix("main: ");var Ir=function(){return{browser:Ji.browser(),device:Ji.device(),platform:Ji.platform(),isMobile:Ji.isMobile()}};var Sr=function(){try{var e=M.new();e.setPrefix("hook: "),window.eval.call(window,"(function (CustomEvents, websiteConfig, lg) {\n"+atob("Ly8gQ29sbGFwc2UgdW5maWxsZWQgc2xvdHM6IGhpZGUgNXRoIHBhcmVudCBvZiBhZCB1bml0IFtBTS0xMjMxXQpDdXN0b21FdmVudHMuYWRkRXZlbnRMaXN0ZW5lcignb25BdWN0aW9uRW5kZWRXZWJzaXRlSG9vaycsIGZ1bmN0aW9uIChldmVudCkgewogIHZhciBlbGVtZW50ID0gZXZlbnQuZGF0YS5lbGVtZW50OwogIGlmIChlbGVtZW50LmNsYXNzTmFtZS5pbmRleE9mKCd1cC1oaWRlJykgIT09IC0xKSB7CiAgICB2YXIgZWxlbWVudFRvSGlkZSA9IGVsZW1lbnQuY2xvc2VzdCgnLmFkLXVuaXQnKTsKICAgIGlmIChlbGVtZW50VG9IaWRlKSB7CiAgICAgIGVsZW1lbnRUb0hpZGUuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgIH0KICB9Cn0pOwoKQ3VzdG9tRXZlbnRzLmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3VsZElnbm9yZUdvb2dsZXRhZ1Nsb3RTY3JhcGluZycsIGZ1bmN0aW9uIChldmVudCkgewogIHZhciBpZHNUb0Rpc2FibGUgPSBbJ3B1cmNoX1lfT18xXzEnLCAndG9waWMtcGVuY2lsLXJ0J107CgogIHZhciBzbG90ID0gZXZlbnQuZGF0YS5zbG90OwogIHZhciBzbG90SWQgPSBzbG90ICYmIHNsb3QuZ2V0U2xvdEVsZW1lbnRJZCgpOwogIHZhciBzbG90UGF0aCA9IHNsb3QgJiYgc2xvdC5nZXRBZFVuaXRQYXRoKCk7CgogIHJldHVybiBpZHNUb0Rpc2FibGUuaW5jbHVkZXMoc2xvdElkKSB8fCBzbG90UGF0aCA9PT0gJy8yNTU4NjY4MC9pbnRlcnN0aXRpYWwnOwp9KTsK")+"\n})")(Vr,xr,e)}catch(e){}},Zr=function(){return Yr(window),Or(),Vr.fireEvent("noWhitelistedFrame")||Br(),Vr.fireEvent("clearSpaces")&&(Er=[]),Cr().then((function(){Tr()}))},Tr=function(){var e=n.Z.map(Er,(function(e){return e})),t=Vr.fireEvent("customSpacesFilter",{spaces:e});t&&(Er=n.Z.filter(Er,(function(e){return n.Z.find(t,(function(t){return t.id==e.id}))})))};var Br=function(){const e=!!(t=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./))&&parseInt(t[2],10);var t;"chrome"==zr.browser&&!Vr.fireEvent("only3pSafeFrame")&&e&&e<91&&(i.Z.upoSettings.whitelistedFrameSettings.url="about:blank?upapi=true",i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame=!1);var n=Ui.safeFrameCreator.createSafeFrame();n.addEventListener("load",(function(){i.Z.whitelistedFrame=n,Vr.fireEvent("whitelistedFrameLoaded",{whitelistedFrame:n})})),n.style.width="0px",n.style.height="0px",n.style.display="none",document.body?document.body.appendChild(n):window.addEventListener("DOMContentLoaded",(function(){document.body.appendChild(n)}))},Yr=function(e){e&&function(e,t){if(e.grumi){var i=document.createElement("iframe");i.style="display:none;width:1px;height:1px;",i.addEventListener("load",(function(){i.done||(e.Node.prototype.appendChild=i.contentWindow.Node.prototype.appendChild,e.HTMLElement.prototype.appendChild=i.contentWindow.Node.prototype.appendChild,t())})),en.onDomLoaded((function(){if(document.body.appendChild(i),i.contentWindow)return i.done=!0,e.Node.prototype.appendChild=i.contentWindow.Node.prototype.appendChild,e.HTMLElement.prototype.appendChild=i.contentWindow.Node.prototype.appendChild,void t()}))}else t()}(e,(function(){try{e.XMLHttpRequest&&En.hookFunction(e.XMLHttpRequest.prototype,"open",En.Types.XHR_OPEN_PRE,void 0,!0),En.hookFunction(e,"fetch",En.Types.FETCH_PRE,void 0,!0),e.HTMLElement&&En.hookFunction(e.HTMLElement.prototype,"insertBefore",En.Types.INSERT_BEFORE_PRE,void 0,!0),e.HTMLElement&&En.hookFunction(e.HTMLElement.prototype,"appendChild",En.Types.APPEND_CHILD_PRE,En.Types.APPEND_CHILD_POST,!0),e.HTMLImageElement&&En.hookFunction(e.HTMLImageElement.prototype,"setAttribute",En.Types.IMG_SET_ATTRIBUTE_PRE,void 0,!0),En.hookFunction(e,"open",En.Types.WIN_OPEN_PRE,void 0,!0),e.HTMLElement&&En.hookPropertySetter(e.HTMLElement.prototype,"innerHTML",En.Types.HTML_ELEMENT_INNERHTML_PRE,void 0,!0),e.HTMLElement&&En.hookFunction(e.HTMLElement.prototype,"hasChildNodes",En.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,void 0,!0),Fr(e)}catch(e){}}))},Fr=function(e){for(var t=["HTMLScriptElement","HTMLElement","HTMLVideoElement","HTMLAudioElement","HTMLHtmlElement","HTMLHeadElement","HTMLLinkElement","HTMLStyleElement","HTMLBodyElement","HTMLFormElement","HTMLSelectElement","HTMLOptionElement","HTMLInputElement","HTMLTextAreaElement","HTMLButtonElement","HTMLLabelElement","HTMLFieldSetElement","HTMLLegendElement","HTMLUListElement","HTMLOListElement","HTMLDListElement","HTMLDirectoryElement","HTMLMenuElement","HTMLLIElement","HTMLDivElement","HTMLParagraphElement","HTMLHeadingElement","HTMLQuoteElement","HTMLPreElement","HTMLBRElement","HTMLFontElement","HTMLHRElement","HTMLAnchorElement","HTMLImageElement","HTMLObjectElement","HTMLParamElement","HTMLMapElement","HTMLModElement","HTMLAreaElement","HTMLTableElement","HTMLTableCaptionElement","HTMLTableColElement","HTMLTableSectionElement","HTMLTableRowElement","HTMLTableCellElement","HTMLFrameSetElement","HTMLFrameElement","HTMLIFrameElement"],i=0;i<t.length;i++)e[t[i]]&&En.hookPropertySetter(e[t[i]].prototype,"src",En.Types.HTML_SRC_PROP_PRE,void 0,!0)},Or=function(){En.addEventListener(En.Types.HTML_SRC_PROP_PRE,(function(e){var t=e.data;if("object"==typeof t[0]&&t[0].toString&&(t[0]=t[0].toString()),a.Z.urlValidations.isWhitelistURL(t[0],this.tagName))t[0]=a.Z.addAcceptableParam(t[0]);else if(a.Z.urlValidations.isSyncUrl(t[0],this.tagName)&&i.Z.whitelistedFrame){if(i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var n="new window.Image().src = '"+t[0]+"'";return i.Z.whitelistedFrame.postMessage({type:"eval",code:n},"*"),t[0]}return(new i.Z.whitelistedFrame.contentWindow.Image).src=t[0]}})),En.addEventListener(En.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,(function(e){try{if(n.Z.hasClass(this,"up-show"))return!1;if(this.childNodes&&this.childNodes.length>0){for(var t=!1,i=0;i<this.children.length;i++)if(n.Z.hasClass(this.children[i],"up-show")){t=!0;break}if(t)return!1}}catch(e){}})),En.addEventListener(En.Types.HTML_ELEMENT_INNERHTML_POST,(function(e){if(this&&this.classList&&"adsbygoogle"===this.classList[0]){var t=this.querySelector("iframe"),i=t.contentWindow;"about:blank"!==t.src&&""!==t.src||Yr(i);var n=i.document.write;i.document.write=function(e){e&&e.indexOf("show_ads_impl.js")>-1&&(e=a.Z.addAcceptableParam(e)),n.call(this,e)}}})),En.addEventListener(En.Types.XHR_OPEN_PRE,(function(e){var t=e.data;a.Z.urlValidations.isWhitelistURL(t[1],"SCRIPT")&&(t[1]=a.Z.addAcceptableParam(t[1]))})),En.addEventListener(En.Types.IMG_SET_ATTRIBUTE_PRE,(function(e){var t=e.data;if("srcset"===t[0].toLowerCase()){this.src&&a.Z.urlValidations.isWhitelistURL(this.src,this.tagName)&&(this.src=a.Z.addAcceptableParam(this.src));for(var i=t[1].split(","),n=0;n<i.length;n++){var r=i[n],o=(r=r.trim()).split(" ")[0],s=r.split(" ")[1]||"";a.Z.urlValidations.isWhitelistURL(o,this.tagName)&&(r=a.Z.addAcceptableParam(o)+" "+s,i[n]=r)}t[1]=i.join(",")}else"src"===t[0].toLowerCase()&&a.Z.urlValidations.isWhitelistURL(t[1],this.tagName)&&(t[1]=a.Z.addAcceptableParam(t[1]))})),En.addEventListener(En.Types.INSERT_BEFORE_PRE,(function(e){var t=e.data;Vr.fireEvent("InsertBeforeWebsiteHooksIntercept",{element:t[0]}),["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&t[0].src&&a.Z.urlValidations.isWhitelistURL(t[0].src,t[0].tagName)&&(t[0].src=a.Z.addAcceptableParam(t[0].src)),"LINK"===t[0].tagName&&t[0].href&&a.Z.urlValidations.isWhitelistURL(t[0].href,t[0].tagName)&&(t[0].href=a.Z.addAcceptableParam(t[0].href))})),En.addEventListener(En.Types.APPEND_CHILD_PRE,(function(e){var t=e.data;if(t[0]&&t[0].src&&0===t[0].src.indexOf("blob:"))e.shouldStop=!0;else{if(t[0].children&&t[0].children.length>0)for(var n=0;n<t[0].children.length;n++){var r=t[0].children[n];if(r.src&&a.Z.urlValidations.isWhitelistURL(r.src,r.tagName)&&(r.src=a.Z.addAcceptableParam(r.src)),r.src&&a.Z.urlValidations.isSyncUrl(r.src,r.tagName)&&i.Z.whitelistedFrame){if(i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var o="new Image().src = '"+t[0].src+"'";return i.Z.whitelistedFrame.postMessage({type:"eval",code:o},"*"),t[0]}return i.Z.whitelistedFrame.contentDocument.body.appendChild(t[0])}}if("LINK"===t[0].tagName&&t[0].href&&a.Z.urlValidations.isWhitelistURL(t[0].href,t[0].tagName)&&(t[0].href=a.Z.addAcceptableParam(t[0].href)),["SCRIPT","IFRAME"].indexOf(t[0].tagName)>-1&&t[0].src&&a.Z.urlValidations.isWhitelistURL(t[0].src,t[0].tagName)&&(t[0].src=a.Z.addAcceptableParam(t[0].src)),a.Z.urlValidations.isSyncUrl(t[0].src,t[0].tagName)&&i.Z.whitelistedFrame){if(i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){o="new Image().src = '"+t[0].src+"'";return i.Z.whitelistedFrame.postMessage({type:"eval",code:o},"*"),t[0]}return i.Z.whitelistedFrame.contentDocument.body.appendChild(t[0])}}})),En.addEventListener(En.Types.APPEND_CHILD_POST,(function(e){var t=e.data;"IFRAME"!==t.tagName||"about:blank"!==t.src&&""!==t.src||Yr(t.contentWindow)})),En.addEventListener(En.Types.WIN_OPEN_PRE,(function(e){if(e.data[0]&&(e.data[0].indexOf("clickout.sharethrough.com")>-1||e.data[0].indexOf("3lift.com/pass")>-1)&&i.Z.whitelistedFrame&&!i.Z.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame)return i.Z.whitelistedFrame.contentWindow.open(e.data[0])})),En.addEventListener(En.Types.SET_ATTRIBUTE_PRE,(function(e){var t=e.data[0],i=e.data[1];"class"===t&&this.className.indexOf("up-show")>=0&&i.indexOf("up-show")<0&&(e.data[1]=e.data[1]+" up-show")}))},kr=function(){var e=lr;window.uponit=window.uponit||{que:[]},window.uponit.slots=[],window.uponit.COMPLIANCE_STATUSES=e.COMPLIANCE_STATUSES,window.uponit.defineSlot=e.defineSlot,window.uponit.init=e.init,window.uponit.enableServices=e.enableServices,window.uponit.UPONIT_EVENTS=e.UPONIT_EVENTS,window.uponit.fetchPrebid=e.fetchPrebid,window.uponit.fetchDFP=e.fetchDFP,window.uponit.renderBid=e.renderBid,window.uponit.fetchAndRender=e.fetchAndRender,window.uponit.addEventListener=e.addEventListener,window.uponit.addModifier=function(e,t){window.uponit.modifiers=window.uponit.modifiers||{},window.uponit.modifiers[e]=window.uponit.modifiers[e]||[],window.uponit.modifiers[e].push(t)};for(var t=0;t<window.uponit.que.length;t++){var i=window.uponit.que[t];try{i()}catch(e){}}window.uponit.que.push=function(e){e()}};const Rr=e=>{const t=Object.entries(e).map((([e,t])=>{const i={};i.id=e,i.name=t.unit,i.staging=t.staging,i.selector={position:t.selector.position,value:t.selector.value},i.sizes=t.sizes;const n=t.prebids&&Object.keys(t.prebids).length>0;return i.preBiddingSettings={enabled:n,biddingSettings:{}},n&&(i.preBiddingSettings.biddingSettings[1]=[],Object.entries(t.prebids).forEach((([e,t])=>{const n={id:e,name:t.bidder,params:t.params};i.preBiddingSettings.biddingSettings[1].push(n)}))),i.postBiddingSettings={adxId:t.adx,directId:t.direct,enabled:xr.dfpEnabled&&"0"!=t.adx,type:1,order:[{params:{},adx:{bidderID:t.adx,testCompliance:!0},direct:{bidderID:t.direct}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:t.adx,testCompliance:!1},direct:{bidderID:t.direct}}]},[e,i]}));return Object.fromEntries(t)};var Lr=function(e){var t=[];for(var i in e)if(e.hasOwnProperty(i)){var n=e[i];n.id=i;var r=new cn.Space(n);t.push(r)}return t},Cr=function(){var e=Vr.fireEvent("extractPublisherSpacesSettings");if(!e)return Promise.resolve();var t=e.timeout||2e3;return new Promise((function(i,n){e.callback((function(e){for(var t=e.adUnits,n=0;n<t.length;n++){var r=t[n];const e=hn(r);var a=e&&new cn.Space(e);a&&Er.push(a)}i()})),setTimeout((function(){i()}),t)}))};!function(){if(window.uponitAlreadyLoaded)return;window.uponitAlreadyLoaded=!0,I.init(Mr,{secure:!0});try{hr.init(),Ci.Verifications.run(),Ci.Report.init()}catch(e){}zr=Ir(),window.__upo_d.isMobile=zr.isMobile;var e={browser:zr.browser,device:zr.device,platform:zr.platform,isMobile:zr.isMobile};Vr.addEventListener("getUserEnvDataWebsiteHooks",(function(){return e})),window.__upo_d.userEvnData=e,function(){try{window.__tcfapi("addEventListener",0,(function(e,t){if(!t||"useractioncomplete"!==e.eventStatus&&"tcloaded"!==e.eventStatus){if(!t){var i="Unable to attach event listener. tcfapi does not adhere to IAB spec. ";i+="listenerSuccess: "+t+". ",e&&(i+="eventStatus: "+e.eventStatus+"."),Vr.fireEvent("consentData",{error:{message:i}})}}else Vr.fireEvent("consentData",{tcData:e})}))}catch(e){Vr.fireEvent("consentData",{error:e})}}(),Sr(),Object.entries(_n).forEach((([e,t])=>{if(wn[e]){const{hookName:i,parseSettingValue:n,handler:r}=wn[e],a=n?n(t):t;i?bn.addEventListener(i,(e=>r(a,e))):(r(a),Nn.infof(null,`scriptsettings: loadSettings: ${e} (no associated hook): Setting applied.`))}else Nn.errorf(null,"scriptsettings: loadSettings: No setting handler found for %o (setting will not be applied).",e)})),function(){const e=Vr.fireEvent("amazonBidderConfiguration");e&&e.pubID&&(i.Z.upoSettings.amazonBidderConfiguration.enabled=!0,i.Z.upoSettings.amazonBidderConfiguration=Object.assign(i.Z.upoSettings.amazonBidderConfiguration,e))}();const t=Vr.fireEvent("hookDFPEnabledValue");t&&(xr.dfpEnabled=t);try{Er=Lr(Rr(Er))}catch(e){Hr.errorf(null,"main: init - parsing static spaces - %o",e)}kr(),Vr.fireEvent("shouldDisableUponit")?Hr.noticef(null,"halting: we have been disabled by hooks"):(Vr.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsInit",payload:{detail:!0}}),Vr.fireEvent("FirePublisherEvent",{eventName:"uponitInit",payload:{detail:!0}}),Zr().then((function(){xr.prebidEnabled=!(!n.Z.find(Er,(function(e){return e.preBiddingSettings&&e.preBiddingSettings.enabled}))&&!Vr.fireEvent("scrapePrebidAdUnits"));var e={spaces:Er,settings:{prebid:Vr.fireEvent("forcePrebidEnabled")||xr.prebidEnabled,dfp:xr.dfpEnabled}};en.onDomLoaded((function(){Vr.fireEvent("onDomLoaded"),Vr.fireEvent("onBeforeRecovery",{spaces:Er,settings:e.settings}),Dr.invoke(e)}))})))}()})()})();
//# sourceMappingURL=recovery.js.map

})({});
