AddShoppersWidget.Behavioral.processBehavioralData({"coupons_set_id": "BTC_602c484cbbddbd3e08c401f6", "_t": 1625255667, "campaign_id": "602c484cbbddbd3e08c401f6", "html_success": "<div class=\"addshop-overlay active\">\n    <a rel=\"nofollow\" href=\"http://www.addshoppers.com/\" class=\"addshop-poweredby\" target=\"_blank\">\n        Powered by AddShoppers\n    </a>\n    <a rel=\"nofollow\" href=\"http://privacy.truste.com/privacy-seal/validation?rid=c378318f-6a04-4e84-9c4b-d640033192e3\"\n            class=\"addshop-truste\" target=\"_blank\">\n    </a>\n    <div class=\"addshop-modal active\">\n        <div class=\"addshop-modal-inner\">\n            <div class=\"addshop-step\">\n                <div class=\"addshop-heading addshop-heading1\">Thanks!</div>\n                <div class=\"addshop-heading addshop-heading2\">Use the code below at checkout for 10% off</div>\n                <div class=\"addshop-cpncode\">\n                    <span id=\"addshop-textcopy\"><div class=\"addshop-coupon\"></div></span>\n                </div>\n            </div>\n        </div>\n        <div class=\"addshop-close\">Close</div>\n    </div>\n</div>", "html_pre": "<div></div>", "css": "#addshoppers_b_modal_602c484cbbddbd3e08c401f6{position:relative;z-index:16777271}\n", "js": "// // START SECTION TO EDIT\r\n// var baseUrl = 'https://shop.smiledirectclub.com'; // Set the website URL here\r\n// var theCartContents = [];\r\n// var addshopCartCheck = new XMLHttpRequest();\r\n// addshopCartCheck.open(\"GET\", \"/cart.js\", true);\r\n// addshopCartCheck.send();\r\n// addshopCartCheck.onreadystatechange = function() {\r\n//     if (addshopCartCheck.readyState == XMLHttpRequest.DONE) {\r\n//       if (addshopCartCheck.status == 200) {\r\n// \t\tvar addshopCartData = JSON.parse(addshopCartCheck.responseText);\r\n// \t\t// addshopCartData has the data on the user's cart (if the items array is empty, no items are in cart)\r\n// \t\tif (addshopCartData['items'].length > 0){\r\n//     \t\t// addshopCartData has the data on the user's cart (if the items array is empty, no items are in cart)\r\n// \t       \tfor (var i = 0; i < addshopCartData['items'].length; i++) {\r\n// \t       \t\tvar product = {\r\n// \t       \t\t    'product_name': addshopCartData['items'][i]['product_title'],\r\n// \t       \t\t    'price': addshopCartData['items'][i]['final_price']/100,\r\n// \t       \t\t    'image': addshopCartData['items'][i]['image'].split('?')[0],\r\n// \t       \t\t    'quantity': addshopCartData['items'][i]['quantity'],\r\n// \t       \t\t    'sku': baseUrl+addshopCartData['items'][i]['url'].split('?')[0]\r\n// \t       \t\t}\r\n// \t\t\t\ttheCartContents.push(product);\r\n// \t       \t}\r\n//       \t\tcart_total = addshopCartData['total_price']/100;\r\n//       \t\tlocalStorage.setItem('cartTotal', cart_total);\r\n// \t       \tlocalStorage.setItem(\"isOnCart\", \"true\");\r\n// \t       \tconsole.log('Cart');\r\n// \t\t} else {\r\n// \t\t    localStorage.removeItem('isOnCart');\r\n// \t\t    console.log('No cart');\r\n// \t\t}\r\n//       }\r\n//       addshopNetwork(addshopSettings);\r\n//     }\r\n// };\r\n\r\nvar addshopSettings = {\r\n    emailInputsToExclude: [ // array of document.querySelectorAll objects\r\n        //document.querySelectorAll('[name=newsletter-email]')\r\n    ], \r\n    emailUtmsToExclude: [], // optional, include array of all utm codes that client has requested we suppress\r\n    asAnonCartCampaignIds: [], // array of all Cart Abandon ERC campaigns (include more than one for A/B testing)\r\n    asAnonProdCampaignIds: [], // array of all Browse (aka product) Abandon ERC campaigns (include more than one for A/B testing)\r\n    asAnonGenCampaignIds: [], // array of all General Abandon ERC campaigns (include more than one for A/B testing)\r\n    checkoutSuccessUrl: '', // optional, leave blank if you don't know it (but ROI Tracking must be installed if you leave it blank)\r\n    daysToClearSavedProducts: 30, // optional, set to a number of days greater than 0 to clear out old saved products viewed\r\n    daysToClearSavedCartData: 30, // optional, set to a number of days greater than 0 to clear out old cart data (products & campaign ID)\r\n    minPageviewsForGen: 4,\r\n    onProductPage: function() {\r\n        // IMPORTANT\r\n        // Make sure to check for the presence of an add to cart button (and further, make sure it's an add to cart button\r\n        // for the main product, not a recommended/suggested/accessory product)\r\n        if (document.URL.search('products') !== -1 && (localStorage.getItem(\"isOnCart\") === \"\" || localStorage.getItem(\"isOnCart\") === null)) {\r\n            localStorage.setItem('asHasViewedProductPage', 'true');\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    getProductPageDetails: function() {\r\n        // return the product details\r\n        return {\r\n            'product_name': document.querySelector('.product-info-content h1').textContent.replace(';',',').trim(),\r\n            'image': document.querySelector('.photo-main-image img').src.split('?')[0],\r\n            'price': parseFloat(document.querySelector('span.product-info-price').textContent.replace(';',',').replace(/[^0-9\\.]/g,'')),\r\n            'quantity': 1,\r\n            'sku': document.URL.split('?')[0]\r\n        }\r\n    },\r\n    onCartPage: function() {\r\n        if (localStorage.getItem(\"isOnCart\") === \"true\" && theCartContents.length > 0) {\r\n            // console.log('onCartPage');\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n    getCartRows: function() {\r\n        // return array of all cart item elements\r\n        // console.log('getCartRows');\r\n        return theCartContents;\r\n    },\r\n    getCartItemDetails: function(row) {\r\n        // each row from getCartRows gets passed into this function\r\n        // the row variable contains the cart item element \r\n        return {\r\n            'product_name': row['product_name'],\r\n            'price': row['price'],\r\n            'image': row['image'],\r\n            'quantity': row['quantity'],\r\n            'sku': row['sku']\r\n        }\r\n    },\r\n    getCartTotal: function() {\r\n        // return the order grand total (called on cart page only)\r\n        var getCartTotal = parseFloat(localStorage.getItem('cartTotal'));\r\n        return getCartTotal;\r\n    },\r\n    isLoggedIn: function() {\r\n        // if we don't have to exclude signed in people, just always return false here\r\n        // otherwise, return true if the user is signed in\r\n        // if ( document.querySelector(\".is-loggedin\") !== null && document.querySelector(\".is-loggedin\") !== undefined) {\r\n        //     return true;\r\n        // }\r\n        return false;\r\n    },\r\n    isExcludedPage: function() {\r\n        // function here to exclude any pages from tracking\r\n        // if you return true, the script won't run (but it won't exclude the user completely)\r\n        return false;\r\n    },\r\n    addPushCustom: function(addPushObject) {\r\n        // customizations to _add.push\r\n        return addPushObject;\r\n    },\r\n    trackCustom: function() {\r\n        // do anything custom here\r\n        var asCampaignId = '602c48320ff4c31cc8f64647';\r\n        var initialTime = '';\r\n        if (localStorage.getItem('asFirstTimeOnSite') === null || localStorage.getItem('asFirstTimeOnSite') === '') {\r\n        \tinitialTime = new Date().getTime();\r\n        \tlocalStorage.setItem('asFirstTimeOnSite', initialTime);\r\n        } else {\r\n        \tinitialTime = localStorage.getItem('asFirstTimeOnSite');\r\n        }\r\n        var totalTimeOnSite = 0;\r\n        setInterval(function() {\r\n        \ttotalTimeOnSite = new Date().getTime()-initialTime;\r\n        \tlocalStorage.setItem('timeOnSite', totalTimeOnSite);\r\n        \tif (totalTimeOnSite > 160000 && localStorage.getItem('asHasViewedProductPage') !== 'true' && localStorage.getItem('asCartPushed') !== '1') {\r\n        \t\t_add.push({\r\n        \t\t\t'active_cart': true,\r\n        \t\t\t'campaign_id': asCampaignId,\r\n        \t\t});\r\n        \t\t// reset time on site to 0\r\n        \t\tlocalStorage.removeItem('asFirstTimeOnSite');\r\n        \t\tlocalStorage.removeItem('timeOnSite');\r\n        \t\ttotalTimeOnSite = 0;\r\n        \t\tinitialTime = new Date().getTime();\r\n        \t}\r\n        }, 1000);\r\n    }\r\n}\r\n\r\n// END SECTION TO EDIT\r\n\r\n// document.addEventListener('addshopNetworkReady', function (e) { \r\n//     addshopNetwork(addshopSettings);\r\n// }, false);    \r\nvar asCountry = localStorage.getItem('asCountry');\r\nvar activeCampaign;\r\nvar browseCampaign;\r\nif (asCountry === null || asCountry === '') {\r\n\tvar xhttp = new XMLHttpRequest();\r\n\txhttp.open('GET', 'https://as-labs.addshoppers.com/api/v1/geo/city', true);\r\n\txhttp.send();\r\n\txhttp.onreadystatechange = function() {\r\n\t\tif (this.readyState == XMLHttpRequest.DONE) {\r\n\t\t    var response = JSON.parse(xhttp.responseText);\r\n\t\t    let data = response.response.data;\r\n\t\t\tlet country = data.country;\r\n\t\t\tlocalStorage.setItem('asCountry', country);\r\n\t\t\tif (country === \"United States\") {\r\n\t\t\t    // console.log('us');\r\n\t\t\t    addshopNetwork(addshopSettings);\r\n\t\t\t} else {\r\n\t\t\t    // console.log('not us');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} else {\r\n\tif (asCountry === \"United States\") {\r\n\t\taddshopNetwork(addshopSettings);\r\n\t}\r\n}\r\n// setTimeout(function() {\r\n//     addshopNetwork(addshopSettings);\r\n// }, 2000);\r\n\r\n\r\ntry{        \r\n    var addshopNetwork = function (settings) {\r\n       //---------START NETWORK EMAILS\r\n\r\n       var emailInputsTracked = [document.querySelectorAll(\".footer .input-group-field\")];\r\n       var asPageViews = parseInt(localStorage.getItem('asPageViews') || 1);\r\n       \r\n       if (settings.daysToClearSavedProducts > 0) {\r\n           var asLastUpdatedStoredProducts = localStorage.getItem('asLastSavedProducts');\r\n       \r\n            // if it's been longer than 30 days since the products have been saved, clear them\r\n            if ((asLastUpdatedStoredProducts && new Date() - new Date(asLastUpdatedStoredProducts) > (86400000 * settings.daysToClearSavedProducts) ) || !asLastUpdatedStoredProducts) {\r\n                localStorage.removeItem('asProductsViewed');\r\n                localStorage.removeItem('asProdCampaignId');\r\n                localStorage.setItem('asLastSavedProducts', new Date().toString());\r\n            }\r\n       }\r\n       \r\n       if (settings.daysToClearSavedCartData > 0) {\r\n           var asLastPushedCart = localStorage.getItem('asLastPushedCart');\r\n       \r\n            // if it's been longer than 30 days since the products have been saved, clear them\r\n            if ((asLastPushedCart && new Date() - new Date(asLastPushedCart) > (86400000 * settings.daysToClearSavedCartData) ) || !asLastPushedCart) {\r\n                localStorage.removeItem('asCartCampaignId');\r\n                localStorage.setItem('asLastPushedCart', new Date().toString());\r\n            }\r\n       }\r\n\r\n       if (localStorage.getItem('asAnonDisable') == '1' || settings.isExcludedPage()) {\r\n            return;\r\n       }\r\n    \r\n        //general visitor\r\n        if (localStorage.getItem('asAnonPushed') !== '1') {\r\n            var to_push = {\r\n               \"active_cart\" : true,\r\n               'custom_values': {'as_network' : true}\r\n            }\r\n            if (settings.asAnonGenCampaignIds.length > 0 && asPageViews >= settings.minPageviewsForGen) {\r\n                to_push.campaign_id = settings.asAnonGenCampaignIds[Math.floor(Math.random()*settings.asAnonGenCampaignIds.length)];\r\n                localStorage.setItem('asGenCampaignId', to_push.campaign_id);\r\n            }\r\n             _add.push(settings.addPushCustom(to_push))\r\n            localStorage.setItem('asAnonPushed', '1');\r\n        }\r\n        \r\n        //-------if converted turn off anon email\r\n        if (typeof AddShoppersConversion != \"undefined\" || (typeof settings.checkoutSuccessUrl == \"string\" && settings.checkoutSuccessUrl.length > 0 && document.URL.toLowerCase().search(settings.checkoutSuccessUrl.toLowerCase()) > -1)) {\r\n            _add.push({\r\n                \"custom_values\" : { \"as_network\" : false },\r\n                \"active_cart\" : false,\r\n                \"campaign_id\": \"\",\r\n                \"cart_contents\": []\r\n            });\r\n            return;\r\n        }\r\n\r\n        //-------if user came from an email, disable\r\n        if (excludeEmailUtm()) {\r\n            _add.push({\r\n                \"custom_values\" : { \"as_network\" : false },\r\n                \"active_cart\" : false\r\n            });\r\n            localStorage.setItem('asAnonDisable', '1');\r\n            return;\r\n        }\r\n\r\n        \r\n        //-------if user is signed in set anon to false\r\n        if (settings.isLoggedIn()) {\r\n            _add.push({\r\n                \"custom_values\" : { \"as_network\" : false },\r\n                \"active_cart\" : false\r\n            });\r\n            localStorage.setItem('asAnonPushed', '1');\r\n            localStorage.setItem('asAnonDisable', '1');\r\n            return;\r\n        }\r\n    \r\n        //***************has cart***************\r\n        if ( settings.onCartPage() && settings.asAnonCartCampaignIds.length > 0) {\r\n            //cart contents\r\n            var cart_contents = settings.getCartRows(); \r\n            var asCartValue = parseFloat(settings.getCartTotal());\r\n            var cartContentsArray = [];\r\n\r\n            for (i = 0; i < cart_contents.length ; i++) {\r\n                var cart_item = settings.getCartItemDetails(cart_contents[i]);\r\n                \r\n                if (!cart_item) { continue }\r\n                \r\n                if (typeof cart_item.sku == \"string\") {\r\n                var productsViewed = JSON.parse(localStorage.getItem('asProductsViewed')) || [];\r\n                    if (productsViewed.length > 0) {\r\n                        check_products_loop:\r\n                        for (var prod = 0; prod < productsViewed.length; prod++) {\r\n                            if (productsViewed[prod].sku.toLowerCase() == cart_item.sku.toLowerCase()) {\r\n                                cart_item.image = productsViewed[prod].image;\r\n                                break check_products_loop;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                cart_item.price = parseFloat(cart_item.price);\r\n                cart_item.quantity = parseInt(cart_item.quantity);\r\n                cartContentsArray.push(cart_item);\r\n            }\r\n    \r\n            if (localStorage.getItem('asCartCampaignId') === null) {\r\n                var campaign_id = settings.asAnonCartCampaignIds[Math.floor(Math.random()*settings.asAnonCartCampaignIds.length)];\r\n                localStorage.setItem('asCartCampaignId', campaign_id);\r\n            }\r\n            else {\r\n                var campaign_id = localStorage.getItem('asCartCampaignId');\r\n            }\r\n    \r\n            asPushCartContents(cartContentsArray, asCartValue, campaign_id);\r\n\r\n            localStorage.setItem('asCartPushed', '1');\r\n        }\r\n        // product page\r\n        else if ((localStorage.getItem('asHasViewedProductPage') === 'true' || settings.onProductPage()) && localStorage.getItem('asCartPushed') !== '1' && settings.asAnonProdCampaignIds.length > 0) {\r\n            var productsViewed = JSON.parse(localStorage.getItem('asProductsViewed')) || [];\r\n            var trackProduct = true;\r\n    \r\n\t\t\tif (settings.onProductPage()) {\r\n\t            var productDetails = settings.getProductPageDetails();\r\n\t            for (var i = productsViewed.length-1; i >= 0; i--) {\r\n\t                if (productsViewed[i].sku == productDetails.sku) {\r\n\t                    if (productsViewed[i].product_name == productDetails.product_name\r\n\t                        && productsViewed[i].price == productDetails.price) {\r\n\t                        trackProduct = false;\r\n\t                    }\r\n\t                    productsViewed.splice(i,1);\r\n\t                }\r\n\t            }\r\n\t\t\t}\r\n\r\n            if (trackProduct) {\r\n\t\t\t\tif (settings.onProductPage()) {\r\n\t\t\t\t\tproductsViewed.push(productDetails);\r\n\t\t\t\t}\r\n\r\n                // console.log(productsViewed)\r\n                if (localStorage.getItem('asProdCampaignId') === null) {\r\n                    var campaign_id = settings.asAnonProdCampaignIds[Math.floor(Math.random()*settings.asAnonProdCampaignIds.length)];\r\n                    localStorage.setItem('asProdCampaignId', campaign_id);\r\n                }\r\n                else {\r\n                    var campaign_id = localStorage.getItem('asProdCampaignId');\r\n                }\r\n                \r\n                if (asPageViews >= settings.minPageviewsForGen) {\r\n                    asPushCartContents(productsViewed, 0, campaign_id);\r\n                }\r\n                \r\n                localStorage.setItem('asProductsViewed', JSON.stringify(productsViewed));\r\n                localStorage.setItem('asLastSavedProducts', new Date().toString());\r\n            }\r\n        }\r\n\r\n\r\n        // Exclude email inputs\r\n        for (var i=0; i < settings.emailInputsToExclude.length; i++) {\r\n            xloop:\r\n            for (var x=0; x < settings.emailInputsToExclude[i].length; x++) {\r\n                if (emailInputsTracked.includes(settings.emailInputsToExclude[i][x])) {\r\n                    continue xloop;\r\n                }\r\n                settings.emailInputsToExclude[i][x].addEventListener('blur', function(event) {\r\n                    if (addshopValidateEmail(event.srcElement.value)) {\r\n                        _add.push({\r\n                            \"custom_values\" : { \"as_network\" : false },\r\n                            \"active_cart\" : false\r\n                        });\r\n                        localStorage.setItem('asAnonPushed', '1');\r\n                        localStorage.setItem('asAnonDisable', '1');\r\n                    }\r\n                });\r\n                emailInputsTracked.push(settings.emailInputsToExclude[i][x]);\r\n            }\r\n        }\r\n        \r\n        function excludeEmailUtm() {\r\n            if (settings.emailUtmsToExclude.length == 0) {\r\n                return false;\r\n            }\r\n            for (i=0; i < settings.emailUtmsToExclude.length; i++) {\r\n                if (document.URL.toLowerCase().search(settings.emailUtmsToExclude[i].toLowerCase()) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function asPushCartContents(cartRay, cartValue, campaignId){\r\n            _add.push(settings.addPushCustom({\r\n              'campaign_id': campaignId,\r\n              'active_cart': true, \r\n              'cart_contents': cartRay,\r\n              'cart_value': parseFloat(cartValue)\r\n            }));\r\n        }\r\n        \r\n        if (typeof settings.trackCustom == \"function\") {\r\n            settings.trackCustom()\r\n        }\r\n\r\n    };\r\n\r\n    function addshopValidateEmail(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    var addshopReadyEvent = document.createEvent('Event');\r\n    addshopReadyEvent.initEvent('addshopNetworkReady', true, true);\r\n    document.dispatchEvent(addshopReadyEvent);\r\n    \r\n\r\n//---------END NETWORK EMAILS\r\n\r\n} catch(e){\r\n    console.log(e);\r\n}", "static_coupon": ""});