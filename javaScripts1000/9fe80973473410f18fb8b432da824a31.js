(self.webpackChunkweb_shell=self.webpackChunkweb_shell||[]).push([[9547],{7381:(e,n,t)=>{"use strict";function r(){return"plugin-override-"}function o(e){try{return JSON.parse(e)}catch(n){return e}}function c(e){const n="undefined"!=typeof document&&document&&document.cookie.split(";").reduce(((e,n)=>Object.assign(e,{[n.split("=")[0].trim()]:n.split("=")[1]})),{})||{};return n&&Object.keys(n).filter((n=>n.includes(e))).reduce(((e,t)=>Object.assign(e,{[t]:o(n[t])})),{})}function s(e,n){if("undefined"!=typeof document)try{document.cookie="".concat(e,"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; domain=").concat(n,"; path=/")}catch(e){logger.error("Unable to delete cookie",{},e,"",{})}}function i(e){return c(e)[e]||null}t.d(n,{Yc:()=>r,Nm:()=>c,kT:()=>s,Do:()=>i})},9547:(e,n,t)=>{"use strict";t.d(n,{RW:()=>y,qq:()=>w,Tz:()=>h,Cv:()=>f});var r=t(4060),o=t.n(r),c=t(4829),s=t(7381);function i(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}const l=function e(n,t){const r=new Set([...Object.keys(n)]),o=new Set([...Object.keys(t)]);return[...new Set([...r,...o])].reduce(((r,c)=>(i(n[c])&&i(t[c])?r[c]=e(n[c],t[c]):o.has(c)?r[c]=t[c]:r[c]=n[c],r)),{})},a=e=>0===Object.keys(e).length&&e.constructor===Object,u=(e,n,t)=>{if(n.match(new RegExp(/http(s?):\/\//)))return{id:e,configUrl:n.endsWith("/config.json")?n:"".concat(n,"/config.json"),baseSourceUrl:n};const r="".concat(t,"/").concat(e,"/").concat(n);return{id:e,version:n,configUrl:"".concat(r,"/config.json"),baseSourceUrl:r}},d=e=>{const n=c.Z.isLocalStorageSupported()&&localStorage.getItem(e);return n?JSON.parse(n):null},f=()=>{let e="ecosystem_plugins";const{pluginOverridesLocalStoragePrefix:n}="undefined"!=typeof window&&window.__shellInternal&&window.__shellInternal.customContext||{};return n&&(e="".concat(n,"_").concat(e)),e},h=()=>((e,n)=>{const t=Object.values(n),r=Object.keys(n);return e.plugins&&e.plugins.forEach((e=>{e.id in r||t.push(e)})),0===t.length?{}:{plugins:t}})((()=>{const e=f();return d(e)||{}})(),(()=>{const e=(0,s.Yc)();return(0,s.Nm)(e)||{}})()),p=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const t=new URLSearchParams("undefined"!=typeof window&&window.location.search);return t.get(e)?t.get(e):n},g=(e,n)=>{if(e){const t=e.split(n)[0];return t.substring(0,t.lastIndexOf("/"))}return"https://plugin.intuitcdn.net"},w=e=>{const n=e.configUrl||e.baseSourceUrl;return n.match(/plugin-localhost.intuitcdn/)||n.match(/local./)||!n.match(/plugin.intuitcdn/)?e.baseSourceUrl||e.configUrl.substring(0,e.configUrl.lastIndexOf("/")):o().determineBaseSourceUrl(e,g(n,e.id))},b=e=>fetch(e).then((e=>e.json())),m=(e,n)=>(e=>Promise.resolve().then((()=>{const n={},t=[];let r=[];return!e||e&&0===e.length?n:(({plugins:r}=e),r?(r.forEach((e=>{const r=e.id||e.pluginId,o={id:r,plugin:!0,isLocal:!0};e.configUrl?t.push(b(e.configUrl).then((t=>{let c=!1,s={};!0===e.mergeExtendedProperties&&(s=l(t.extendedProperties||{},e.extendedProperties||{}),c=!0),Object.assign(e,o,t);try{e.baseSourceUrl=w(e)}catch(e){console.error(e)}n[r]=e,c&&(n[r].extendedProperties=s)}),(()=>{throw Error("Couldn't fetch ".concat(r," config from ").concat(e.configUrl,". To resolve this error:\n                    â¢ Try again once your local server is available.\n                    â¢ Clear localStorage to delete the existing local overrides and fetch it from remote.                                   "))}))):e.baseSourceUrl&&(n[r]=Object.assign(e,o),t.push(Promise.resolve()))})),Promise.all(t).then((()=>n))):n)})))(n).then((n=>{Object.keys(n).forEach((t=>{e[t]=n[t]}))})),y=async e=>{const n=e["web-shell"],t=n&&n.staticBaseUrl||"",r=(e=>{const n=(()=>{const e=new URLSearchParams("undefined"!=typeof window&&window.location.search),n={};return e.forEach(((e,t)=>{t.startsWith("plugin.")&&(n[t.split(".")[1]]=e)})),n})(),t=h();if(a(n))return t;let r=[];const o=Object.assign({},n),{plugins:c}=t;if(c&&(r=c.reduce(((t,r)=>{if(n[r.id]){if(o[r.id]){const c=u(r.id,n[r.id],e);t.push(c),delete o[r.id]}}else t.push(r);return t}),[])),!a(o)){const n=((e,n)=>Object.keys(e).reduce(((t,r)=>{const o=u(r,e[r],n);return t.push(o),t}),[]))(o,e);r.push(...n)}return{plugins:r}})(g(t,"web-shell"));return await(e=>{const{id:n}=window&&window.__shellInternal&&window.__shellInternal.appExperience||{},t=(e=>{let n=null;return n=p("appOverride")?{configUrl:p("appOverride")}:(d("ecosystem_apps")||{})[e],n})(n);return t?b(t.configUrl).then((n=>{let{plugins:t}=n;for(const n of Object.keys(t))e[n]=t[n]}),(()=>{throw new Error("Couldn't fetch ".concat(n," app config from ").concat(t.configUrl,". To resolve this error:\n              â¢ Try again once your local server is available.\n              â¢ Clear localStorage to delete the existing local overrides and fetch it from remote.                                   "))})):Promise.resolve()})(e),m(e,r)}}}]);
//# sourceMappingURL=9547.js.map