mmRequestCallbacks[1]({"Scripts":[{"Name":"FODestCookie Attribute Capture Script","Type":"script","Attrs":{"type":"text/javascript"},"Data":"var attrName = \"FODestCookie\";\nvar cookieName = \"FO_DESTINATION_COOKIE\";\nvar cookieValue = cookies.get(cookieName);\ncookieValue = cookieValue ? cookieValue.split('|')[0] : \"\";\nvisitor.storeAttr(attrName, cookieValue);\n","Order":2000,"HighLevelApiVersion":"1.23"},{"Name":"dataLayerTier Attribute Capture Script","Type":"script","Attrs":{"type":"text/javascript"},"Data":"// Below is the code that has been generated automatically from the attribute's rules.\n\nvar attrName = \"dataLayerTier\";\n\n// start config\nvar config = {\n    \"datalayer\": {\n        \"variable\": \"tier\",\n        \"rules\": [\n            {\n                \"condition\": \"equals\",\n                \"text\": \"Blue\",\n                \"value\": \"Blue\"\n            },\n            {\n                \"condition\": \"equals\",\n                \"text\": \"Bronze\",\n                \"value\": \"Bronze\"\n            },\n            {\n                \"condition\": \"equals\",\n                \"text\": \"Silver\",\n                \"value\": \"Silver\"\n            },\n            {\n                \"condition\": \"equals\",\n                \"text\": \"Gold\",\n                \"value\": \"Gold\"\n            },\n            {\n                \"condition\": \"contains\",\n                \"text\": \"blue\",\n                \"value\": \"Blue\"\n            },\n            {\n                \"condition\": \"contains\",\n                \"text\": \"bronze\",\n                \"value\": \"Bronze\"\n            },\n            {\n                \"condition\": \"contains\",\n                \"text\": \"silver\",\n                \"value\": \"Silver\"\n            },\n            {\n                \"condition\": \"contains\",\n                \"text\": \"gold\",\n                \"value\": \"Gold\"\n            }\n        ],\n        \"defaultValue\": \"Null\"\n    }\n};\n// end config\n\nvar getVariable = function (variablePath) {\n    var i, result = window, variables;\n\n    if (typeof variablePath.split !== 'function') {\n        return null;\n    }\n\n    variables = variablePath.split('.');\n\n    for(i = 0; i < variables.length; i++) {\n        if (typeof result === 'object') {\n            result = result[variables[i]];\n        } else {\n            result = null;\n            break;\n        }\n    }\n\n    return result;\n};\n\n\nvar toDecimal = function (value) {\n    var result = null;\n    var parse = /[0-9]+(\\.[0-9]{1,2})?/.exec(value);\n\n    if (parse !== null) {\n        result = parseFloat(parse[0]);\n    }\n\n    return result;\n};\n\nvar checkCondition = function (value, rule) {\n    var decimalValue;\n    var result = false;\n    switch (rule.condition) {\n    case 'equals':\n        if (value === rule.text) {\n            result = true;\n        }\n        break;\n    case 'does not equal':\n        if (value !== rule.text) {\n            result = true;\n        }\n        break;\n    case 'contains':\n        if (value && typeof value.indexOf === 'function' && value.indexOf(rule.text) !== -1) {\n            result = true;\n        }\n        break;\n    case 'does not contain':\n        if (value && typeof value.indexOf === 'function' && value.indexOf(rule.text) === -1) {\n            result = true;\n        }\n        break;\n    case 'has value less than':\n        decimalValue = toDecimal(value);\n        if (decimalValue !== null && decimalValue < parseFloat(rule.text)) {\n            result = true;\n        }\n        break;\n    case 'has value greater than':\n        decimalValue = toDecimal(value);\n        if (decimalValue !== null && decimalValue > parseFloat(rule.text)) {\n            result = true;\n        }\n        break;\n    case 'is true':\n        if ('true' === (value + '').toLowerCase()) {\n            result = true;\n        }\n        break;\n    case 'is false':\n        if ('false' === (value + '').toLowerCase()) {\n            result = true;\n        }\n        break;\n    default:\n        result = false;\n    }\n\n    return result;\n};\n\nvar onReady = function () {\n    var rule, attributeValue;\n    var captureValue = getVariable(config.datalayer.variable);\n\n    for (var i = 0; i < config.datalayer.rules.length; i++) {\n        rule = config.datalayer.rules[i];\n\n        if (checkCondition(captureValue, rule)) {\n            attributeValue = rule.useDatalayerValue ? captureValue : rule.value;\n            visitor.storeAttr(attrName, attributeValue);\n            return;\n        }\n    }\n\n    attributeValue = config.datalayer.defaultUseDatalayerValue ? captureValue : config.datalayer.defaultValue;\n    visitor.storeAttr(attrName, attributeValue);\n};\n\nonReady();","Order":2000,"HighLevelApiVersion":"1.23"},{"Name":"kruxSegments Attribute Capture Script","Type":"script","Attrs":{"type":"text/javascript"},"Data":"// This custom attributes has been created for use in Personalisation campaigns  and is being repurposed for DMP Integrations for DIGIOPT-NNN\n\nvar attrName = \"kruxSegments\";\n\nfunction checkResult(result) {\n  return result === true;\n}\n\nvar getAttributeValue = function () {\n  var result = false;\n  var customerSegments = window.localStorage.kxbritishairwaysuk_segs;\n  var dmpCampaignSegments = 'vfih4ynss';\n\n  if (window.localStorage.kxbritishairwaysuk_segs && window.localStorage.kxbritishairwaysuk_segs.includes(dmpCampaignSegments)) {\n    result = true;\n    // Only allow visitors to see the campaign if all their SAS DMP segments are permitted based on the Krux Control Tag returning valid segments\n      }\n  return (checkResult(result) ? \"Yes\" : \"No\");\n};\n\nvar onReady = function () {\n  var attributeValue = getAttributeValue();\n  // if attributeValue has a velue (Yes or No)\n  if (attributeValue) {\n    visitor.storeAttr(attrName, attributeValue);\n  }\n};\n\nevents.domReady(onReady.bind(this)); \n","Order":2000,"HighLevelApiVersion":"1.23"},{"Name":"kruxCaribbean Attribute Capture Script","Type":"script","Attrs":{"type":"text/javascript"},"Data":"// This custom attributes has been created for use in Personalisation campaigns and is being repurposed for DMP Integrations for DIGIOPT-95\n\nvar attrName = \"kruxCaribbean\";\n\nfunction checkResult(result) {\n  return result === true;\n}\n\nvar getAttributeValue = function () {\n  var result = false;\n  var customerSegments = window.localStorage.kxbritishairwaysuk_segs;\n  var dmpCampaignSegments = 'vfkm6lh3d';\n\n  if (window.localStorage.kxbritishairwaysuk_segs && window.localStorage.kxbritishairwaysuk_segs.includes(dmpCampaignSegments)) {\n    result = true;\n    // Only allow visitors to see the campaign if all their SAS DMP segments are permitted based on the Krux Control Tag returning valid segments\n      }\n  return (checkResult(result) ? \"Yes\" : \"No\");\n};\n\nvar onReady = function () {\n  var attributeValue = getAttributeValue();\n  // if attributeValue has a velue (Yes or No)\n  if (attributeValue) {\n    visitor.storeAttr(attrName, attributeValue);\n  }\n};\n\nevents.domReady(onReady.bind(this)); \n","Order":2000,"HighLevelApiVersion":"1.23"},{"Name":"kruxEurope Attribute Capture Script","Type":"script","Attrs":{"type":"text/javascript"},"Data":"// This custom attributes has been created for use in Personalisation campaigns and is being repurposed for DMP Integrations for DIGIOPT-95 \n\nvar attrName = \"kruxEurope\";\n\nfunction checkResult(result) {\n  return result === true;\n}\n\nvar getAttributeValue = function () {\n  var result = false;\n  var customerSegments = window.localStorage.kxbritishairwaysuk_segs;\n  var dmpCampaignSegments = 'vfkmss44u';\n\n  if (window.localStorage.kxbritishairwaysuk_segs && window.localStorage.kxbritishairwaysuk_segs.includes(dmpCampaignSegments)) {\n    result = true;\n    // Only allow visitors to see the campaign if all their SAS DMP segments are permitted based on the Krux Control Tag returning valid segments\n      }\n  return (checkResult(result) ? \"Yes\" : \"No\");\n};\n\nvar onReady = function () {\n  var attributeValue = getAttributeValue();\n  // if attributeValue has a velue (Yes or No)\n  if (attributeValue) {\n    visitor.storeAttr(attrName, attributeValue);\n  }\n};\n\nevents.domReady(onReady.bind(this)); \n","Order":2000,"HighLevelApiVersion":"1.23"},{"Name":"kruxFreetext Attribute Capture Script","Type":"script","Attrs":{"type":"text/javascript"},"Data":"var attrName = \"kruxFreetext\";\nvar shouldBeStopped = false;\n\nevents.domReady(function() {\n  // set a timeout for the when func\n  setTimeout(function() {\n    shouldBeStopped = true;\n  }, 3000);\n\n  when(function() {\n    return window.localStorage.kxbritishairwaysuk_segs;\n  }, function() {\n    return shouldBeStopped;\n  })\n  .done(function() {\n    // if DMP segments have been populated (window.localStorage.kxbritishairwaysuk_segs is not undefined), update custom attribute value\n    visitor.storeAttr(attrName, window.localStorage.kxbritishairwaysuk_segs);\n  });\n});","Order":2000,"HighLevelApiVersion":"1.23"},{"Name":"mod_cdApiTools","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/**\n * cdapi-tools - Helpers to cdAPI workflow\n * @version v1.4.2\n * @repository /maxymiser-shared2/cdapi-modules/cdAPI-tools.git\n * @author Rafal Maksymiuk, Maksym Mokrozub, Lukasz Straczynski\n */\n\nfunction debounce(r,o,i){var a;return void 0===i&&(i=o,o=!1),function(){var e=this,t=arguments;function n(){try{i.apply(e,t)}catch(e){window.console.error(e)}}!a&&o&&n(),clearTimeout(a),a=setTimeout(o?function(){a=void 0}:n,r)}}function decorate(i,a,c){if(\"function\"!=typeof i)throw new TypeError(\"first argument should be a function\");return function(){var e,t,n,r=this,o=arguments;if(\"function\"==typeof a)try{(t=a.apply(r,o))&&t.length===Object.keys(t).length&&(o=t)}catch(e){window.console.error(e)}if(e=i.apply(r,o),\"function\"==typeof c)try{o=Array.prototype.slice.call(arguments).concat([e]),void 0!==(n=c.apply(r,o))&&(e=n)}catch(e){window.console.error(e)}return e}}function delegate(r,e,o,n,t){function i(e){for(var t=function(){var e=Element.prototype;return e.matches||e.matchesSelector||e.msMatchesSelector||e.webkitMatchesSelector}(),n=e;n&&n!==r;){if(t.call(n,o))return n;n=n.parentElement||n.parentNode}return null}function a(e){var t=i(e.target);t&&n.call(t,e)}e.split(\" \").forEach(function(e){r.addEventListener(e,a,t)})}function hide(e,t){function n(){r&&(r=!1,dom.removeCss(o))}var r,o=\"toolsId\"+Math.floor(1e5*Math.random())+1,i=t||7e3;return e&&(r=!0,dom.addCss(e+\" {opacity:0 !important; pointer-events:none !important;}\",o),\"never\"!==i&&setTimeout(n,i)),n}var Mutator=function(){var o,i;function e(e){var i,a=[],c=!1,u=e;function s(e){var t=a.indexOf(e);-1<t&&(a.splice(t,1),a.length<1&&(i.disconnect(),c=!1))}function d(){for(var e,t=a.slice(),n=t.length;n--;)e=t[n],window.document.querySelector(e.selector)&&(e.def.resolve(),s(e))}this.add=function(e,t){var n=new Deferred,r={selector:e,def:n},o=!1;return\"ready\"===t?\"loading\"!==document.readyState?o=!0:events.domReady(function(){r.def.reject(),s(r)}):t&&\"never\"!==t&&events.domReady(function(){setTimeout(function(){r.def.reject(),s(r)},t)}),a.push(r),c||(i.observe(window.document.documentElement,{childList:!0,subtree:!0,attributes:u}),c=!0),d(),o&&(r.def.reject(),s(r)),n.promise()},i=new MutationObserver(d)}return i=new e(!0),o=new e(!1),{waitForElement:function(e,t,n){var r=t||\"ready\";return(n||!1?i:o).add(e,r)}}}();function parseCurrency(e,t,n){if(\"string\"!=typeof e)throw new TypeError('Parsing failed: invalid input value has been provided, expected \"string\", got \"'+typeof e+'\".');var r,o=e.replace(/^[^\\d]+|[^\\d]+$/g,\"\"),i=Math.max(o.lastIndexOf(\",\"),o.lastIndexOf(\".\")),a=o.charAt(i),c=\"\",u=\"\";return o.indexOf(a)!==i?c=o.replace(/[^\\d]/g,\"\"):(c=o.slice(0,i).replace(/[^\\d]/g,\"\"),u=o.slice(i+1-o.length).replace(/[^\\d]/g,\"\")),c?(\"number\"==typeof t&&u.length!==t&&(c+=u,u=\"0\"),r=Number(c+\".\"+u),n?r:Math.round(100*r)):null}function runOnce(e){var t,n;return function(){return n||(t=e.apply(this,arguments),n=!0),t}}function throttle(o,i,a){var c,u=0;return void 0===a&&(a=i,i=!1),function(){var e=this,t=arguments,n=Number(new Date)-u;function r(){u=Number(new Date);try{a.apply(e,t)}catch(e){window.console.error(e)}}c&&clearTimeout(c),o<n?r():i||(c=setTimeout(r,o-n))}}function toPromise(e){return function(){var t;if(\"function\"!=typeof e)throw new TypeError(\"Argument should be a function\");try{t=e()}catch(e){t=!1}return t?Deferred().resolve(t):Deferred().reject()}}function waitFor(e,t,n){var r=new Deferred,o=n||50,i=t||\"ready\",a=!1;function c(){a?r.reject():e.call()?r.resolve():setTimeout(c,o)}return c(),\"ready\"!==i&&\"never\"!==i?events.domReady(function(){var e=setTimeout(function(){a=!0},i);r.always(function(){clearTimeout(e)})}):\"ready\"===i&&events.domReady(function(){c(),a=!0}),r.promise()}var xhrComplete=function(){var t,n=[];function r(){var t=arguments;n.forEach(function(e){try{e.apply(null,t)}catch(e){window.console.error(e)}})}return function(e){return t||(t=!0,function(n){var r,t;XMLHttpRequest.prototype.open=(r=XMLHttpRequest.prototype.open,function(e,t){return void 0===this.responseURL&&(this.responseURL=t),this.addEventListener(\"readystatechange\",function(e){4===this.readyState&&n(e,this)}),r.apply(this,arguments)}),XMLHttpRequest.prototype.send=(t=XMLHttpRequest.prototype.send,function(e){return this.body=e,t.apply(this,arguments)})}(r)),n.push(e),t}}();modules.define(\"tools\",{autoDefine:!0,singleton:!0},function(){this.waitForElement=Mutator.waitForElement,this.waitFor=waitFor,this.decorate=decorate,this.delegate=delegate,this.xhrComplete=xhrComplete,this.throttle=throttle,this.debounce=debounce,this.runOnce=runOnce,this.hide=hide,this.toPromise=toPromise,this.parseCurrency=parseCurrency});\n","Order":-200,"HighLevelApiVersion":"1.23"},{"Name":"mod_IF","Type":"script","Attrs":{"type":"text/javascript"},"Data":"(function() {\n    function Factory() {\n        // Object to store registered integrations\n        var integrations = {};\n\n\n        /**\n         * Register a new integration using the Integrations module\n         * @param  {String} name    Name of the integration\n         * @param  {Object} options Options to use for this integration\n         * @return {Object} integration object\n         */\n        function register(name, options) {\n            // the new integration being registered\n            var integration;\n            // contains generic integration object properties \n            var defaultProperties;\n\n            options = isObject(options) ? options : {};\n\n            name = (typeof name === 'string' ? name : '').toLowerCase().replace(/^\\s+|\\s+$/g, '');\n            if (!name) {\n                return log(helpers.errors.missingRegisterName), null;\n            }\n\n            // Prevent duplicate registration of an integration\n            if (integrations[name]) {\n                return log(helpers.errors.alreadyRegistered), null;\n            }\n\n            // copy name into options object\n            options.name = name;\n\n            // copy all options to a new integration object\n            integration = extend(options, {});\n\n            // default properties available in all integrations\n            defaultProperties = {\n                // Validate all option parameters are valid\n                validate: isFunction(integration.validate) ? integration.validate : returnTrue,\n                // function to run every `interval` length, until `timeout` has been reached\n                check: isFunction(integration.check) ? integration.check : returnTrue,\n                // Interval at which to `check` for specified conditions\n                interval: isPositiveInteger(integration.interval) ? integration.interval : 50,\n                // Length of time until timeout failure occurs\n                timeout: isPositiveInteger(integration.timeout) ? integration.timeout : 2000,\n                // Function to run when checks have passed, before timeout occurs\n                exec: isFunction(integration.exec) ? integration.exec : returnTrue,\n                // Copy of `options` provided at registration\n                options: integration\n            };\n            // make sure all default properties are present\n            integration = extend(defaultProperties, integration);\n\n            // return integration object\n            return (integrations[name] = integration);\n\n            /**\n             * Log errors into window.mm_error and prefix with the integraiton name\n             * @param  {String} error message\n             * @return {String} error message\n             */\n            function log(error) {\n                name = name || '';\n                return logError('Integrations.register(' + name + '): ' + (error || '').toString());\n            }\n        }\n\n        /**\n         * run function is used to call the integration previously registered\n         * @param  {String} Integration Name to run. Must already be registered\n         * @param  {Object} Data parameters for this integration. This data takes highest priority\n         * @return {Promise}\n         */\n        function run(integrationName, data) {\n            data = isObject(data) ? data : {};\n\n            // Deferred object to return when `run` is called\n            var deferred = new Deferred();\n            var integration;\n            // var campaign;\n            var validationError;\n            var campaignRequiredError;\n\n            integrationName = (integrationName || '').toLowerCase();\n\n            // Pass a reference of the integrationName to the deferred object for better error handling\n            deferred.integrationName = integrationName;\n\n            /**\n             * New Object to store merged integration data (register + defaults + run)\n             * @type {Object}\n             */\n            if (!integrations[integrationName]) {\n                return helpers.reject(deferred, helpers.errors.unregisteredIntegration);\n            }\n\n            integration = extend(integrations[integrationName], {});\n            integration = extend(data, integration);\n\n            // Validate inputs of the integration. True === no errors\n            // A string (non truth) will be rejected as the reason\n            if ((validationError = integration.validate(integration)) !== true) {\n                return helpers.reject(deferred, validationError);\n            }\n\n            // local reference to `campaign` module\n            // @todo issue 23\n            // campaign = integration.campaign;\n\n            /**\n             * `campaignRequired` integrations must be called on generation pages\n             */\n            if ((campaignRequiredError = helpers.validateCampaignRequired(integration, deferred)) !== true) {\n                return helpers.reject(deferred, campaignRequiredError);\n            }\n\n            /**\n             * Property used to differentiate production & sandbox environments\n             * @type {Boolean}\n             */\n            integration.isProduction = helpers.isProduction();\n\n\n            // attributeMapRequired\n            if (integration.attributeMapRequired) {\n                var attributeMapError = helpers.isValidAttributeMap(integration.attributeMap);\n                if (attributeMapError !== true) {\n                    return helpers.reject(deferred, attributeMapError);\n                }\n            }\n\n            // if oncePerSession resolves the promise, no need to continue with exec functions\n            if (deferred.state() !== 'pending') {\n                return deferred.promise();\n            }\n\n            // Reject after integration `timeout` occurs\n            // if `timeout` is set to `never` it will continue to check indefinitely\n            if (integration.timeout !== 'never') {\n                helpers.setFailTimeout(integration, deferred);\n            }\n\n            // if `check` returns a promise, wait for it to resolve\n            // if `check` does not return a promise, wait for it to return `true` {boolean} \n            helpers.check(integration)\n                .then(function() {\n                    // check has passed\n                    return helpers.exec(integration);\n                }).then(function(result) {\n                    // exec has passed\n                    integration.result = result;\n                    return helpers.resolve(deferred, integration);\n                })\n                .fail(function(reason) {\n                    // check or exec has failed\n                    return helpers.reject(deferred, reason);\n                });\n\n            return deferred.promise();\n        }\n\n        /**\n         * Overwrite properties of an integration that were set when it was registered\n         * @param {String} integrationName Name of integration to modify\n         * @param {Object} defaults Object of data to overwrite\n         */\n        function setDefaults(integrationName, defaults) {\n            integrationName = (integrationName || '').toLowerCase();\n            var integration = integrations[integrationName];\n            if (!integration) {\n                return false;\n            }\n            defaults = isObject(defaults) ? defaults : {};\n\n            // extend `defaults` data into the registered integration\n            integrations[integrationName] = extend(defaults, integration);\n            return this;\n        }\n\n        /**\n         * geter function to get a registered integration\n         * @param  {String} Integration Name\n         * @return {Object} Registered Integration\n         */\n        function get(integrationName) {\n            if (!integrationName) {\n                return integrations;\n            }\n            var name = (integrationName || '').toLowerCase();\n            return integrations[name];\n        }\n\n\n        var helpers = {\n            errors: {\n                missingRegisterName: 'Invalid integration reigstration. Name argument is required.',\n                missingRegisterExec: 'Missing `exec` for integration registration',\n                alreadyRegistered: 'Integration has already been registered',\n                missingRunName: 'Missing `name` for `integration.run`',\n                unregisteredIntegration: 'Unknown integration name',\n                noCampaignExperience: 'Integration was run before the campaign has generated',\n                noRedirectCampaign: 'Redirect Integration is not in a valid campaign scope',\n                noRedirectCampaignData: 'Redirect Integration is not on a generation page',\n                campaignRequired: 'Integration must be deployed within a campaign script',\n                failedToSaveRedirectData: 'Failed to save redirect data',\n            },\n            HALFHOUR: 1 / 48,\n            isProduction: function() {\n                var storage = mmsystem.getConfig().storageType;\n                if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n                    if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n\n                var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n                var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n                var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n                var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n                var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n                var storageKeys = {\n                    'mmparams.p': 1,\n                    'mmparams.d': 1\n                };\n                var utils = {\n                    'un': 1,\n                    'cfgID': 1,\n                    'pruh': 1\n                };\n\n                for (var l = storageTypes.length; l--;) {\n                    var storageType = storageTypes[l];\n                    for (var storageKey in (storageKeys || {})) {\n                        for (var util in (utils || {})) {\n                            if ((storageType[storageKey] || {})[util]) {\n                                return false;\n                            }\n                        }\n                    }\n                }\n\n                function readCookieStorage(name) {\n                    var res = {},\n                        whole = '',\n                        i = 0,\n                        chunk;\n                    while ((chunk = getCookie(name + i++))) {\n                        whole += chunk;\n                    }\n                    if (whole) {\n                        whole = decodeURIComponent(whole);\n                        try {\n                            res = JSON.parse(whole);\n                        } catch (e) {\n                            console.log(e);\n                        }\n                        return res;\n                    } else {\n                        return '';\n                    }\n                }\n\n                function getCookie(name) {\n                    var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]+)'),\n                        value = (document.cookie.match(r) || ['', ''])[1];\n                    return value;\n                }\n                return true;\n            },\n            isValidIntegrationName: function(integrationName) {\n                return typeof integrationName === 'string' && /^\\w+/.test(integrationName);\n            },\n            isCampaignScope: function(campaign) {\n                if (!isObject(campaign) ||\n                    !campaign.getName ||\n                    !campaign.getExperience) {\n                    return false;\n                }\n                return true;\n            },\n            getCampaignExperience: function(campaign) {\n                var experience = {};\n                // In a campaign's scope, get its experience\n                if (helpers.isCampaignScope(campaign)) {\n                    experience = campaign.getExperience && campaign.getExperience() || {};\n                }\n                if (!Object.keys(experience)) {\n                    return false;\n                }\n                return helpers.formatCampaignExperience(experience);\n            },\n            formatCampaignExperience: function(experience) {\n                experience = isObject(experience) ? experience : {};\n                var campaignInfo = [];\n                // Collect campaign experience\n                for (var element in experience) {\n                    campaignInfo.push(element + ':' + experience[element]);\n                }\n                // Format and return campaign info\n                return campaignInfo.join('|');\n            },\n            getData: function(integrationName) {\n                integrationName = (integrationName || '').toLowerCase();\n                var data = visitor.getData('Integrations');\n                data = isObject(data) ? data : {};\n                if (integrationName) {\n                    data[integrationName] = data[integrationName] || {};\n                }\n                return data;\n            },\n            setRedirectData: function(integrationName, campaign) {\n                integrationName = (integrationName || '').toLowerCase();\n                if (!helpers.isCampaignScope(campaign)) {\n                    return false;\n                }\n                var data = helpers.getData(integrationName);\n                var campaignName = campaign.getName();\n                data[integrationName][campaignName] = data[integrationName][campaignName] || {};\n                data[integrationName][campaignName].redirectData = campaign.getExperience();\n                visitor.setData('Integrations', data, helpers.HALFHOUR);\n                return true;\n            },\n            removeRedirectData: function(integrationName, campaign) {\n                integrationName = (integrationName || '').toLowerCase();\n                if (!helpers.isCampaignScope(campaign)) {\n                    return false;\n                }\n                var data = helpers.getData(integrationName);\n                var campaignName = campaign.getName();\n                data[integrationName][campaignName] = data[integrationName][campaignName] || {};\n                data[integrationName][campaignName].redirectData = null;\n                visitor.setData('Integrations', data, helpers.HALFHOUR);\n                return true;\n            },\n            getRedirectData: function(integrationName, campaign) {\n                integrationName = (integrationName || '').toLowerCase();\n                // if not in campaign scope, return false\n                if (!helpers.isCampaignScope(campaign)) {\n                    return false;\n                }\n                // get `redirectData` in `visitor` module's stored data\n                var data = helpers.getData(integrationName);\n                var campaignName = campaign.getName();\n                data[integrationName][campaignName] = data[integrationName][campaignName] || {};\n                // if there is no saved redirectData return false and unset any incorrectly formatted data\n                if (!data[integrationName] || !data[integrationName][campaignName]) {\n                    data[integrationName] = data[integrationName] || {};\n                    data[integrationName][campaignName] = data[integrationName][campaignName] || {};\n                    data[integrationName][campaignName].redirectData = null;\n                    visitor.setData('Integrations', data, helpers.HALFHOUR);\n                    return false;\n                }\n\n                for (var existingCampaign in data[integrationName]) {\n                    if (existingCampaign === campaignName) {\n                        return data[integrationName][existingCampaign].redirectData;\n                    }\n                }\n                return false;\n            },\n            getSessionDate: function(integrationName, campaign) {\n                var data = helpers.getData(integrationName);\n                var campaignData = data[integrationName][campaign.getName()] || {};\n                var sessionDate = campaignData.sessionDate;\n                return sessionDate;\n            },\n            setSessionDate: function(integrationName, campaign) {\n                var data = helpers.getData(integrationName);\n                var campaignName = campaign.getName();\n                data[integrationName][campaignName] = data[integrationName][campaignName] || {};\n                data[integrationName][campaignName].sessionDate = new Date().getTime();\n                visitor.setData('Integrations', data, helpers.HALFHOUR);\n            },\n            resolve: function(deferred, data) {\n                deferred.resolve(data);\n                return deferred.promise();\n            },\n            reject: function(deferred, reason) {\n                var name = deferred.integrationName || 'unknown name';\n                reason = reason || 'unknown reason';\n                logError('Integration [' + name + ']: ' + reason.toString());\n                deferred.reject(reason);\n                return deferred.promise();\n            },\n            validateCampaignRequired: function(integration, deferred) {\n                if (!integration.campaignRequired) {\n                    if (integration.oncePerSession) {\n                        return 'campaign option is required when using the oncePerSession option';\n                    }\n                    if (integration.redirect) {\n                        return 'campaign option is required when using the redirect option';\n                    }\n                    return true;\n                }\n                var campaign = integration.campaign;\n                var sessionData = '';\n                // check `run` is being used within the `campaign` scope\n                var isCampaignScope = helpers.isCampaignScope(campaign);\n                if (isCampaignScope !== true) {\n                    return helpers.errors.campaignRequired;\n                }\n\n                // get formatted campaign experience\n                integration.campaignExperience = helpers.getCampaignExperience(campaign);\n\n                // if no experience is found, reject (redirect restoration happens later on)\n                if (integration.campaignExperience === false && !integration.redirect) {\n                    return helpers.errors.noCampaignExperience(integration.name);\n                }\n\n                /**\n                 * `oncePerSession` runs integrations once and then again only after a half hour of inactivity\n                 */\n                if (integration.oncePerSession && !integration.redirect) {\n                    // If integration was called in this session or within last half hour, resolve and don't run again\n                    if (integration.oncePerSession) {\n                        // If integration was called in this session or within last half hour, resolve and don't run again\n                        sessionData = helpers.getSessionDate(integration.name, campaign);\n                        // refresh session timestamp and continue to not run for another half hour\n                        helpers.setSessionDate(integration.name, campaign);\n                        if (new Date().getTime() - helpers.HALFHOUR > sessionData) {\n                            logError('Integration [' + integration.name + ']: data has already been sent this session');\n                            helpers.resolve(deferred, integration);\n                            return true;\n                        }\n                    }\n                }\n\n                // redirect campaigns \n                if (integration.redirect) {\n                    // IE8 does not support Object.keys()\n                    var hasElements = (function() {\n                        var elements = campaign.getElements();\n                        for (var key in elements) {\n                            return true;\n                        }\n                        return false;\n                    })();\n                    // get saved redirect data\n                    if (!hasElements) {\n                        if (integration.oncePerSession) {\n                            // If integration was called in this session or within last half hour, resolve and don't run again\n                            sessionData = helpers.getSessionDate(integration.name, campaign);\n                            // refresh session timestamp and continue to not run for another half hour\n                            helpers.setSessionDate(integration.name, campaign);\n                            if (new Date().getTime() - helpers.HALFHOUR > sessionData) {\n                                logError('Integration [' + integration.name + ']: data has already been sent this session');\n                                helpers.resolve(deferred, integration);\n                                return true;\n                            }\n                        }\n                        // non-generation pages restore `redirectData` to use  as the `integration.campaignExperience`\n                        integration.campaignExperience = helpers.getRedirectData(integration.name, campaign);\n                        integration.campaignExperience = helpers.formatCampaignExperience(integration.campaignExperience);\n                        helpers.removeRedirectData(integration.name, campaign);\n\n                        // if no saved data is found, reject\n                        if (!integration.campaignExperience) {\n                            return helpers.errors.noRedirectCampaignData;\n                        }\n                        return true;\n                    }\n                    if (campaign.isDefault()) {\n                        if (integration.oncePerSession) {\n                            // If integration was called in this session or within last half hour, resolve and don't run again\n                            sessionData = helpers.getSessionDate(integration.name, campaign);\n                            // refresh session timestamp and continue to not run for another half hour\n                            helpers.setSessionDate(integration.name, campaign);\n                            if (new Date().getTime() - helpers.HALFHOUR > sessionData) {\n                                logError('Integration [' + integration.name + ']: data has already been sent this session');\n                                helpers.resolve(deferred, integration);\n                                return true;\n                            }\n                        }\n                        return true;\n                    }\n                    if (helpers.setRedirectData(integration.name, campaign)) {\n                        helpers.resolve(deferred, integration);\n                        return true;\n                    }\n                    return helpers.errors.failedToSaveRedirectData;\n                }\n                return true;\n            },\n            setFailTimeout: function(integration, deferred) {\n                (function(deferred) {\n                    setTimeout(function() {\n                        setTimeout(function() {\n                            if (deferred.state() === 'pending') {\n                                return helpers.reject(deferred, 'Integration timed out after ' + integration.timeout + 'ms');\n                            }\n                        }, 0);\n                    }, integration.timeout + 1);\n                })(deferred);\n            },\n            isValidAttributeMap: function(attributeMap) {\n                if (!attributeMap) {\n                    return 'Missing required attributeMap parameter';\n                }\n                if (!isObject(attributeMap) || !Object.keys(attributeMap).length) {\n                    return 'The attributeMap parameter is empty or not an object';\n                }\n                //var invalid = 'Invalid required attributeMap parameter';\n\n                for (var attributeName in attributeMap) {\n                    var campaign = attributeMap[attributeName];\n                    if (typeof attributeName !== 'string' || !/^[a-zA-Z]+/.test(attributeName)) {\n                        return 'Invalid attribute name in the attributeMap';\n                    }\n                    if (!isObject(campaign)) {\n                        return 'attributeMap values must be stored in an object';\n                    }\n                    if (!Object.keys(campaign).length) {\n                        return 'attributeMap attribute object is empty';\n                    }\n                    for (var attributeId in campaign) {\n                        if (!/^\\w+$/.test(attributeId) && attributeId !== 'default') {\n                            return 'Invalid attribute ID in attributeMap';\n                        }\n                    }\n                }\n                return true;\n            },\n            check: function(integration) {\n                var deferred = new Deferred();\n                var timedOut = false;\n                (function check() {\n                    var value = integration.check.call(this, integration);\n\n                    // if `check` returns a promise\n                    if (isPromise(value)) {\n                        setTimeout(function() {\n                            value.done(function() {\n                                return deferred.resolve();\n                            }).fail(function(reason) {\n                                return deferred.reject(reason);\n                            });\n                        }, 0);\n\n                        return;\n                    }\n                    // if `check` returns a truthy value\n                    if (value) {\n                        setTimeout(function() {\n                            deferred.resolve();\n                        }, 0);\n                        return;\n                    }\n                    if (timedOut) {\n                        return;\n                    }\n                    setTimeout(check, integration.interval);\n                })();\n\n                setTimeout(function() {\n                    timedOut = true;\n                }, integration.timeout);\n\n                return deferred.promise();\n            },\n            exec: function(integration) {\n                var deferred = new Deferred();\n\n                var value = integration.exec.call(this, integration);\n                if (isPromise(value)) {\n                    setTimeout(function() {\n                        value.done(function(result) {\n                            return deferred.resolve(result);\n                        }).fail(function(reason) {\n                            return deferred.reject(reason);\n                        });\n                    }, 0);\n                    return deferred.promise();\n                }\n\n                if (value === true) {\n                    helpers.resolve(deferred, integration.result);\n                } else {\n                    helpers.reject(deferred, value);\n                }\n\n                return deferred.promise();\n            }\n        };\n\n        // Export functions\n        return {\n            // `register` a new integration\n            register: register,\n            // `run` a registered integration\n            run: run,\n            // `setDefaults` of a client's integration (i.e. account #)\n            setDefaults: setDefaults,\n            // get a registered integration\n            get: get\n        };\n    }\n\n    if (typeof modules === 'object' && typeof modules.define === 'function') {\n        var options = {\n            autoDefine: true,\n            singleton: true\n        };\n        modules.define('Integrations', options, Factory);\n    } else {\n        modules = {\n            require: function() {\n                return new Factory();\n            }\n        };\n    }\n\n    // global helper functions\n    /**\n     * Is a promise (\"then-able\")\n     * @param  {*}  promise argument to determine if a promise\n     * @return {Boolean}\n     */\n    function isPromise(promise) {\n        return isObject(promise) && isFunction(promise.then);\n    }\n\n    /**\n     * Is a function\n     * @param  {*} function function to test \n     * @return {Boolean}     \n     */\n    function isFunction(_function) {\n        return typeof _function === 'function';\n    }\n\n    /**\n     * Is a positive Integer\n     * @param  {[type]}  num [description]\n     * @return {Boolean}     [description]\n     */\n    function isPositiveInteger(num) {\n        return typeof num === 'number' && num > 0;\n    }\n\n    /**\n     * Is an object\n     * @param  {*}  object Object to test\n     * @return {Boolean}\n     */\n    function isObject(object) {\n        return typeof object === 'object' && !!object;\n    }\n\n    /**\n     * function that returns true\n     * @return {Function}\n     */\n    function returnTrue() {\n        return true;\n    }\n\n    /**\n     * Log an error to `window.mm_error`\n     * @param  {String} error\n     * @return {undefined}\n     */\n    function logError(error) {\n        window.mm_error = window.mm_error || '';\n        window.mm_error += error + '\\n';\n        return;\n    }\n\n    /**\n     * Extend `fromObject` into `toObject`\n     * @param  {Object} fromObject Object to extend to\n     * @param  {Object} toObject   Object to extend from\n     * @return {Object} returns a new object (not a reference of either)\n     */\n    function extend(fromObject, toObject) {\n        // must be objects\n        fromObject = isObject(fromObject) ? fromObject : {};\n        toObject = isObject(toObject) ? toObject : {};\n\n        // clone toObject\n        var newObject = {};\n        for (var key in toObject) {\n            newObject[key] = toObject[key];\n        }\n        // copy properties of fromObject into newObject\n        for (var prop in fromObject) {\n            newObject[prop] = fromObject[prop];\n        }\n        return newObject;\n    }\n})();","Order":-100,"HighLevelApiVersion":"1.23"},{"Name":"IF_AdobeDataWorkb","Type":"script","Attrs":{"type":"text/javascript"},"Data":"(function() {\n    var DataWorkbench = {\n        version: '1.0.0',\n        campaignRequired: true,\n      \t//oncePerSession: true,\n        validate: function(integration) {\n            return true;\n        },\n        check: function(integration) {\n            return !!window.trackingInfo && \n              \t   window.vsDoTracking && \n              \t   typeof window.vsDoTracking === 'function' &&\n              \t   !!document.getElementById(\"t-tracking-fragment\");\n        },\n        timeout: 9000,\n        exec: function(integration) {\n          var mode = integration.isProduction ? 'MM_Prod_' :\n              'MM_QA_',\n              testString = mode + integration.campaign.getName() +\n              '_' + integration.campaignExperience.replace(\n                  /[:|]/g, '_');\n          if (!window.trackingInfo.opCreativeWaveId) {\n            window.trackingInfo.opCreativeWaveId = [testString];\n          }\n          else {\n            for( var i = 0; i < trackingInfo.opCreativeWaveId.length; i++ ) {\n              if (testString === trackingInfo.opCreativeWaveId[i]) {\n                return false;\n              }\n            }\n            window.trackingInfo.opCreativeWaveId.push(testString);\n          }\n          document.getElementById(\"t-tracking-fragment\").innerHTML = vsDoTracking();\n          return true;\n        }\n    };\n    if (typeof modules === 'object' && typeof modules.define === 'function') {\n        modules.require('Integrations').register('Adobe DataWorkbench', DataWorkbench);\n    }\n})();","Order":-90,"HighLevelApiVersion":"1.23"},{"Name":"IF_DecibelInsight","Type":"script","Attrs":{"type":"text/javascript"},"Data":"(function() {\n    var Decibel = {\n        version: '1.0.0',\n        oncePerSession: false,\n        campaignRequired: true,\n        check: function(integration) {\n            return typeof window.decibelInsight === 'function';\n        },\n        timeout: 7000,\n        exec: function(integration) {\n            var experience = integration.campaign.getName() + '=' + integration.campaignExperience,\n          \tkey = integration.isProduction ? 'Maxymiser' : 'Maxymiser QA';\n            window.decibelInsight('ready', function() {\n                window.decibelInsight('sendIntegrationData', key, experience);\n            });\n            return true;\n        }\n    };\n    // Register and export\n    if (typeof modules === 'object' && typeof modules.define === 'function') {\n        modules.require('Integrations').register('Decibel Insight', Decibel);\n    }\n})();\n","Order":-90,"HighLevelApiVersion":"1.23"},{"Name":"IF_AdobeAnalytics","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/*!\n *\tAdobeAnalytics 1.4.1\n *\t-- Maxymiser Adobe Analytics integration\n *\t-- Built on 2018-03-06\n */\n\n!function(){var r={version:\"1.4.1\",oncePerSession:!0,campaignRequired:!0,render:!1,append:!1,timeout:7e3,validate:function(r){return r.eVar&&!d.isNumber(r.eVar)?d.errors.invalidEvar(r.eVar):r.prop&&!d.isNumber(r.prop)?d.errors.invalidProp(r.prop):r.sVariable&&!d.isSVariable(r.sVariable)?d.errors.invalidSVariable(r.sVariable):d.getParams(r).length?r.trackingServer||r.ignoreTrackingServer?r.render&&!d.checkValidRenderFormat(r.campaign.getName())?d.errors.invalidRenderFormat(r.campaign.getName()):!(r.additionalParams&&!d.checkAdditionalParams(r.additionalParams))||d.errors.invalidAdditionalParams(r.additionalParams):d.errors.missingTrackingServer:d.errors.missingParameters},check:function(r){if(r.sync)return!0;var e=d.getSVariable(r.sVariable);return r.ignoreTrackingServer?e:e&&e.trackingServer===r.trackingServer},exec:function(r){return r.sync?d.populateSyncData(r):d.send(r)}},d={errors:{missingParameters:\"The `eVar` and/or `prop` option are required and missing\",invalidEvar:function(r){return\"Invalid eVar provided [\"+(r||\"\").toString()+\"]\"},invalidProp:function(r){return\"Invalid prop provided [\"+(r||\"\").toString()+\"]\"},invalidSVariable:function(r){return\"Invalid sVariable provided [\"+(r||\"\").toString()+\"] (must be `string` or `s object`)\"},missingTrackingServer:function(){return\"Missing trackingServer option\"},invalidRenderFormat:function(r){return\"Campaign name is in an invalid format to utilize the Render flag: \"+r},invalidAdditionalParams:function(r){return\"additionalParams are not formatted correctly: \"+r}},checkAdditionalParams:function(r){return!!Array.isArray(r)},filterAdditionalParams:function(r,e){return r.filter(function(r){if(e[r])return r}).join()},checkValidRenderFormat:function(r){return-1!==r.indexOf(\"_\")},renderFormat:function(r){return r.split(\"_\")[0]},isSVariable:function(r){return\"string\"==typeof r?/^[A-Za-z0-9_\\-$]+$/.test(r):\"object\"==typeof r&&d.isSObject(r)},isSObject:function(r){return\"object\"==typeof r&&\"function\"==typeof r.t},getSVariable:function(r){return r&&\"string\"!=typeof r?!!d.isSObject(r)&&r:!!d.isSObject(window[r||\"s\"])&&window[r||\"s\"]},isNumber:function(r){return r&&0<(+r).toFixed(0)},append:function(r,e){var a,n=\"\";return\"page\"===r.append?(a=(n=window.mmsystem.AdobeAppendData||\"\")?n+\"~\"+e:e,window.mmsystem.AdobeAppendData=a):\"session\"===r.append&&(a=(n=visitor.getData(\"AdobeAppendData\")||\"\")?n+\"~\"+e:e,visitor.setData(\"AdobeAppendData\",a)),a},send:function(r){var e,a=d.getParams(r),n=d.getSVariable(r.sVariable),i=r.campaign.getName(),t=\"\";n.linkTrackVars=a.join(),i=r.render?d.renderFormat(i):i+\"=\"+r.campaignExperience,t=r.append?d.append(r,i):i;for(var o=0;o<a.length;o++)n[a[o]]=t;return r.additionalParams&&(e=d.filterAdditionalParams(r.additionalParams,n),n.linkTrackVars=n.linkTrackVars+\",\"+e),n.tl(!0,\"o\",\"Maxymiser \"+(r.isProduction?\"Live\":\"QA\")),!0},getParams:function(r){var e=[];return r.eVar&&e.push(\"eVar\"+r.eVar),r.prop&&e.push(\"prop\"+r.prop),e},populateSyncData:function(r){var e=d.getParams(r),a=r.campaign.getName();window.mm_adobe_data=window.mm_adobe_data||{},a=r.render?d.renderFormat(a):a+\"=\"+r.campaignExperience;for(var n=e.length;n--;)r.append?window.mm_adobe_data[e[n]]=d.append(r,a):window.mm_adobe_data[e[n]]=a;return!0}};\"object\"==typeof modules&&\"function\"==typeof modules.define&&modules.require(\"Integrations\").register(\"Adobe Analytics\",r)}();\n","Order":-90,"HighLevelApiVersion":"1.23"},{"Name":"mod_onNotRefresh","Type":"script","Attrs":{"type":"text/javascript"},"Data":"modules.define('onNotRefresh', {\n    extend: 'site'\n}, function() {\n    this.init = function(e, t, n) {\n        t = t || \"default\";\n        n = n || 3;\n\n        if (!visitor.getData('mm_refresh_' + t)) {\n            e();\n        }\n\n        window.onunload = function(e) {\n            return function() {\n                var r;\n\n                visitor.setData(\"mm_refresh_\" + t, 1, n / (24 * 60 * 60));\n\n                if (e) {\n                    r = e.apply(this, arguments)\n                }\n\n                return r\n            }\n        }(window.onunload)\n    };\n});","Order":-50,"HighLevelApiVersion":"1.23"},{"Name":"attr_Flight","Type":"script","Attrs":{"type":"text/javascript"},"Data":"site.scope.isBAorCJ = function() {\n  var operators = document.querySelectorAll('.operator'), i;\n  for (i = 0; i < operators.length; ++i) {\n    var cj = operators[i].querySelector('.connectingFlightContainer.CJ'),\n        ba = operators[i].querySelector('.connectingFlightContainer.BA');\n    if (!cj && !ba) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\nsite.scope.hasBasicFare = function() {\n  return trackingInfo.HBOOB === 'True';\n}\n","Order":-10,"HighLevelApiVersion":"1.23"},{"Name":"PCs_Setter","Type":"script","Attrs":{"type":"text/javascript"},"Data":";(function() {\n    'use strict';\n\n/**\n * @param  {string} val  value in the object\n * @param  {string} obj  object in which value should be found\n * @return {boolean}     value found or not\n */\n    function valueExist(val, obj) {\n      if (!obj) {\n      \tif (typeof trackingInfo === 'undefined') {\n            return false;\n        }\n        obj = trackingInfo;\n      }\n        if (obj && obj[val])\n            return true;\n        else\n            return false;\n    }\n\n\n    var sumOfPass = [], // for FSTotalPasseng PC\n        todayDate = null,\n        returnDate = null,\n        departureDate = null,\n        tripDuration = null,\n        daysToDeparture = null;\n\n/**\n * @param  {string} critTripDur     mmapi PC name\n * @param  {string} critDaysToDep   mmapi PC name\n * @param  {string} paramReturnDate object in which value should be found\n * @param  {string} paramDepartDate object in which value should be found\n */\n    function daysDifference(critTripDur, critDaysToDep, paramReturnDate, paramDepartDate) {\n        todayDate = Date.now();\n        returnDate = +new Date(trackingInfo[paramReturnDate]);\n        departureDate = +new Date(trackingInfo[paramDepartDate]);\n        if (returnDate)\n            tripDuration = Math.round(Math.abs(returnDate - departureDate) / (1000 * 3600 * 24));\n        if (departureDate)\n            daysToDeparture = Math.round(Math.abs(departureDate - todayDate) / (1000 * 3600 * 24));\n\n        if (daysToDeparture)\n            visitor.storeAttr(critDaysToDep, daysToDeparture);\n        if (tripDuration)\n            visitor.storeAttr(critTripDur, tripDuration);\n    }\n\n/**\n * @param  {string} val     value in the object\n * @param  {string} obj     object in which value should be found\n * @param  {string} pcName  mmapi PC name\n */\n    function setFSTotalPassengPC(val, obj, pcName) {\n        sumOfPass.push(obj[val]);\n        if (sumOfPass.length === 4) {\n            for (var i = 0, sum = 0; i < sumOfPass.length; i++) {\n                sum += parseInt(sumOfPass[i], 10);\n            }\n            visitor.storeAttr(pcName, sum);\n        }\n    }\n\n/**\n * @param  {string} val     value in the object\n * @param  {string} obj     object in which value should be found\n * @param  {string} pcName  mmapi PC name\n */\n    function setFAREQUOTEPC(val, obj, pcName) {\n        var basicTarif = ['PH,PH', 'PH,', 'PJ,PH', 'PJ,', 'PJ,PJ', 'PH,PJ', 'PJ,PK', 'PK,PH', 'PK,PJ', 'PK,', 'PH,PK', 'PK,PK', 'PH,ECOLOW', 'ECOLOW,PH'],\n            plusTarif = ['PA,PA', 'PA,', 'PB,PA', 'PA,PB', 'PB,', 'PB,PB', 'PB,PC', 'PC,PB', 'PC,PA', 'PA,PC', 'PA,CLUBLOW', 'CLUBLOW,PA', 'CLUBLOW,PB', 'PB,CLUBLOW', 'PA,CLUBFLEX','CLUBFLEX,PA', 'PB,CLUBFLEX', 'CLUBFLEX,PB', 'PA,ECOLOW', 'ECOLOW,PA', 'ECOLOW,PB', 'PB,ECOFLEX', 'ECOFLEX,PA', 'ECOFLEX,PB', 'PB,ECOLOW', 'PA,ECOFLEX'],\n            flexTarif = ['CLUBFLEX,PC', 'CLUBLOW,PC', 'ECOFLEX,PC', 'ECOLOW,PC', 'PC,CLUBFLEX', 'PC,CLUBLOW', 'PC,ECOFLEX', 'PC,ECOLOW', 'PC,', 'PC,PC'],\n            ticketType;\n\n        if (basicTarif.indexOf(obj[val]) > -1) {\n            visitor.storeAttr(pcName, 'Basic');\n        } else if (plusTarif.indexOf(obj[val]) > -1) {\n            visitor.storeAttr(pcName, 'Plus');\n        } else if (flexTarif.indexOf(obj[val]) > -1) {\n            visitor.storeAttr(pcName, 'Flex');\n        }\n    }\n\n\n/**\n * @param  {string} val     value in the object\n * @param  {string} obj     object in which value should be found\n * @param  {string} pcName  mmapi PC name\n * @return {function} setPC use mmapi method for setting pc\n */\n    function getPcValue(val, obj) {\n        var obj = obj || trackingInfo;\n        function setPC(pcName) {\n            if (pcName) {\n                visitor.storeAttr(pcName, obj[val]);\n                return obj[val];\n            } else { // for calls without first parameter\n                /*\n                    FSTotalPasseng\n                    MMBTripDur\n                    MMBDaysToDep\n                    FAREQUOTE\n                */\n                if (val.indexOf('FQ') !== -1 && val.indexOf('Qty') !== -1) { // for FSTotalPasseng PC\n                    setFSTotalPassengPC(val, obj, 'FSTotalPasseng');\n\n                } else if (val.indexOf('MMB') !== -1) { // for MMBTripDur and MMBDaysToDep\n                    daysDifference('MMBTripDur', 'MMBDaysToDep', 'MMBReturnDate', 'MMBDepartureDate');\n\n                } else if (val.indexOf('FQ') !== -1 && val.indexOf('Date') !== -1) { // for FSTripDuration and FSDaysToDepart\n                    daysDifference('FSTripDuration', 'FSDaysToDepart', 'FQReturnDate', 'FQDepartureDate');\n                \n                } else if (val.indexOf('TicketType') !== -1) { //for FAREQUOTE PC\n                    setFAREQUOTEPC(val, obj, 'FAREQUOTE');\n                }\n            }\n        }\n        return setPC;\n    }\n\n/**\n * @param  {string} pcName  mmapi PC name\n * @param  {string} val     value in the object\n * @param  {string} obj     object in which value should be found\n */\n    function waitForPCValue(pcName, val, obj) {\n        var interval = 50,\n            maxIter = 150,\n            iter = 0,\n            intID;\n\n        if (valueExist(val, obj)) {\n            getPcValue(val)(pcName);\n        } else {\n            intID = setInterval(function() {\n                if (valueExist(val, obj)) {\n                    clearInterval(intID);\n                    getPcValue(val)(pcName);\n                } else {\n                    iter++;\n                    if (iter > maxIter || document.readyState === 'complete') {\n                        clearInterval(intID);\n                    }\n                }\n            }, interval);\n        }\n    }\n\n/**\n * @return {string} page name determined by internal variable 'vsHardCodedName'\n */\n    var thisPageName = function() {\n        var page = window.vsHardCodedName;\n        if (page) {\n            if (page === 'functional/travelbooking/flightbooking/futureflightselling/combinedflightcallist.xslt')\n                return 'FlightsAndDates';\n            if (page === 'functional/travelbooking/flightbooking/vsg_farequote.xsl')\n                return 'FareQuote';\n            if (page === 'functional/mytravelspace/manage_my_booking_II/mmb-concept.xslt')\n                return 'MMB';\n            if (page === 'functional/mytravelspace/yourprofile/cont_profile_welcome.jsp')\n                return 'Welcome';\n            if (page === 'functional/travelbooking/flightbooking/collect_journey_details.xslt')\n                return 'CollectJourneyDetails'\n            if (page.indexOf('functional/home/home') > -1)\n                return 'Homepage';\n        }\n    }();\n\n\n    if (thisPageName === 'Homepage') {\n        waitForPCValue('GENLoggedInTier', 'tier');\n    }\n\n    if (thisPageName === 'Welcome') {\n        waitForPCValue('GENLoggedInTier', 'tier');\n    }\n\n    if (thisPageName === 'FlightsAndDates') {\n        waitForPCValue('FSRequestedHaul', 'LKHAULTYPE');\n        waitForPCValue('FSRequestCabin', 'LKRequestedCabinClass');\n        waitForPCValue('FSRequTcktType', 'LKRestrictionTypeSelected');\n\n        //PCs by input clicks\n        //covering only 1 type of tavle - with Basic and Plus columns\n        events.domReady(function(){\n            $('input[type=\"radio\"]').closest('.priceSelectionContainer').click(function(){\n                \n                var  $row;\n                if ($(this).closest('table.connectingFlights').length) {\n                    $row = $(this).closest('table.connectingFlights');\n                } else {\n                    $row = $(this).closest('tr');\n                }\n                \n                if ($row) {\n                        var $operators = $row.find('.connectingFlightContainer'),\n                        $operatorBA = $row.find('.connectingFlightContainer.BA');\n                        \n                    //Carrier PC\n                    if ($operatorBA.length === 0) { //if no BA operators set Other\n                        visitor.storeAttr('Carrier', 'Other');\n                        \n                    } else if ($operatorBA.length === $operators.length) { //if all operators is BA - set BA\n                        visitor.storeAttr('Carrier', 'British Airways');\n                        \n                    } else { //else if not all operators are BA - set BA and other\n                        visitor.storeAttr('Carrier', 'BA and other');\n                        \n\n                    }\n                }\n            });\n\n        });\n    }\n\n    if (thisPageName === 'FareQuote') {\n\n    // for FSTotalPasseng pc\n        // wait for values\n        waitForPCValue('', 'FQAdPaxQty');\n        waitForPCValue('', 'FQYoAdPaxQty');\n        waitForPCValue('', 'FQChPaxQty');\n        waitForPCValue('', 'FQInfPaxQty');\n\n        waitForPCValue('FSqSellingClass', 'FQSellingClass');\n\n    // for FSTripDuration and FSDaysToDepart pcs\n        // wait for values\n        waitForPCValue('', 'FQReturnDate');\n        waitForPCValue('', 'FQDepartureDate');\n\n    // for FAREQUOTE\n        waitForPCValue('', 'TicketType');        \n    }\n\n    if (thisPageName === 'MMB') {\n        waitForPCValue('MMBDepartPoint', 'MMBDeparturePoint');\n        waitForPCValue('MMBDestPoint', 'MMBDestinationPoint');\n        waitForPCValue('MMBPriorMessage', 'MMBGPriorityMessage');\n\n    // for MMBTripDur and MMBDaysToDep pcs\n        // wait for values\n        waitForPCValue('', 'MMBReturnDate');\n        waitForPCValue('', 'MMBDepartureDate');\n    }\n\n\n//  irrespective of the page\n    waitForPCValue('GENErrorCode', 'ErrorCode');\n\n})();","Order":0,"HighLevelApiVersion":"1.23"},{"Name":"acts_tripFunnel","Type":"script","Attrs":{"type":"text/javascript"},"Data":";\n(function() {\n    'use strict';\n\n    var pages = {\n        'functional/travelbooking/flightbooking/collect_journey_details.xslt': 'PlanTrip',\n        'functional/travelbooking/flightbooking/complex_plan.xslt': 'PlanTripComplex',\n        'functional/travelbooking/flightbooking/select_flights.jsp': 'ClassicFlights',\n        'functional/travelbooking/flightbooking/futureflightselling/combinedflightcallist.xslt': 'FlightBrowse',\n        'functional/travelbooking/flightbooking/vsg_farequote.xsl': 'PricePage',\n        'functional/travelbooking/flightbooking/hold_booking_summary.xslt': 'BookingSummary',\n        'functional/payment/xslt/payment.xslt': 'Payment',\n        'functional/mytravelspace/manage_my_booking_II/mmb-concept.xslt': 'HoldConfirm',\n        'functional/travelbooking/flightbooking/confirm.jsp' : 'AltConfirmation',\n        'functional/mytravelspace/manage_my_booking_II/resp/mmbConceptResp.xslt' : 'MMBConfirmation',\n        'functional/travelbooking/ffsAncillaries/ffsancillaries.xslt': 'Ancillaries',\n        'functional/travelbooking/flightbooking/passenger_details.xslt': 'Passenger',\n        'functional/travelbooking/flightbooking/futureflightselling/Seating/FFSSEATINGSUMM.xslt': 'PaidSeatings',\n        'functional/mytravelspace/manage_my_booking/seatmap.xslt': 'SeatingMap',\n        'functional/payment/instantCredit/ic_offer_main.jsp': 'AmexInstant',\n        'functional/dealFinder/resp/resplowPriceFinderMulti.xslt': 'LowPrice',\n        'functional/holiday_deal_finder/holiday-finder.jsp': 'HolidayFinder',\n        'functional/mytravelspace/manage_my_booking/mmb_seatitinerary.xslt': 'SeatingSummary'\n    }\n\n    //flight types for metrics: Confirmation_Plus, Confirmation_Basic, FQ_TravelClass, CF_TravelClass \n    var basicTarif = ['PH,PH', 'PH,', 'PJ,PH', 'PJ,', 'PJ,PJ', 'PH,PJ', 'PJ,PK', 'PK,PH', 'PK,PJ', 'PK,', 'PH,PK', 'PK,PK', 'PH,ECOLOW', 'ECOLOW,PH'],\n        plusTarif = ['PA,PA', 'PA,', 'PB,PA', 'PA,PB', 'PB,', 'PB,PB', 'PB,PC', 'PC,PB', 'PC,PA', 'PA,PC', 'PA,CLUBLOW', 'CLUBLOW,PA', 'CLUBLOW,PB', 'PB,CLUBLOW', 'PA,CLUBFLEX', 'CLUBFLEX,PA', 'PB,CLUBFLEX', 'CLUBFLEX,PB', 'PA,ECOLOW', 'ECOLOW,PA', 'ECOLOW,PB', 'PB,ECOFLEX', 'ECOFLEX,PA', 'ECOFLEX,PB', 'PB,ECOLOW', 'PA,ECOFLEX'],\n        flexTarif = ['CLUBFLEX,PC', 'CLUBLOW,PC', 'ECOFLEX,PC', 'ECOLOW,PC', 'PC,CLUBFLEX', 'PC,CLUBLOW', 'PC,ECOFLEX', 'PC,ECOLOW', 'PC,', 'PC,PC'],\n        basicClass = ['PH,PH', 'PH,', 'PJ,PH', 'PJ,', 'PJ,PJ', 'PH,PJ', 'PJ,PK', 'PK,PH', 'PK,PJ', 'PK,', 'PH,PK', 'PK,PK', 'PH,ECOLOW', 'ECOLOW,PH'],\n        plusClass = ['PA,PA', 'PA,', 'PB,PA', 'PA,PB', 'PB,', 'PC,CLUBLOW', 'PB,ECOLOW', 'PA,ECOFLEX', 'PB,PB', 'PB,PC', 'PC,PB', 'PC,PA', 'PA,PC', 'PC,', 'PC,PC', 'PA,CLUBLOW', 'ECOLOW,PC', 'PB,CLUBLOW', 'PC,ECOFLEX', 'ECOFLEX,PB', 'PA,CLUBFLEX', 'PB,CLUBFLEX', 'PC,CLUBFLEX', 'PC,CLUBLOW', 'PA,ECOLOW', 'ECOLOW,PA', 'ECOLOW,PB', 'PB,ECOFLEX', 'ECOFLEX,PA', 'PC,ECOLOW'],\n        clubClass = ['CLUBLOW,PA', 'CLUBLOW,PB', 'CLUBFLEX,PA', 'CLUBFLEX,PB', 'CLUBFLEX,PC', 'CLUBLOW,PC', 'CLUBFLEX,PC']\n\n    //LH Cabins for metrics: CF_OBLHCabin, CF_IBLHCabin\n    var worldtravel = ['World Traveller:Y', 'World Traveller:B', 'World Traveller:H', 'World Traveller:K', 'World Traveller:M', 'World Traveller:L', 'World Traveller:V', 'World Traveller:S', 'World Traveller:N', 'World Traveller:Q', 'World Traveller:O', 'World Traveller:G', 'World Traveller:X', '-World Traveller:Y', '-World Traveller:B', '-World Traveller:H', '-World Traveller:K', '-World Traveller:M', '-World Traveller:L', '-World Traveller:V', '-World Traveller:S', '-World Traveller:N', '-World Traveller:Q', '-World Traveller:O', '-World Traveller:G', '-World Traveller:X'],\n        worldtravelplus = ['World Traveller Plus:W', 'World Traveller Plus:E', 'World Traveller Plus:T', 'World Traveller Plus:P', '-World Traveller Plus:W', '-World Traveller Plus:E', '-World Traveller Plus:T', '-World Traveller Plus:P'],\n        club = ['Club World:J', 'Club World:C', 'Club World:D', 'Club World:R', 'Club World:I', 'Club World:U', '-Club World:J', '-Club World:C', '-Club World:D', '-Club World:R', '-Club World:I', '-Club World:U'],\n        first = ['First:F', 'First:A', 'First:Z', '-First:F', '-First:A', '-First:Z']\n        \n        \n    function UK_TypeSwitch_getInfo(that) {\n        var $activeTableColumn = $(that).closest('td'),\n            $tableRow = $(that).closest('table.connectingFlights'),\n            inputTypeAttr = 0,\n            previousInputType,\n            isBAFlight;\n\n        isBAFlight = $tableRow.find('.operator .connectingFlightContainer').hasClass('BA');\n\n        if (isBAFlight) {\n            if ($activeTableColumn && $activeTableColumn.length) {\n                if ($activeTableColumn.hasClass('price-M')) {\n                    inputTypeAttr = 'Economy';\n                } else if ($activeTableColumn.hasClass('price-W')) {\n                    inputTypeAttr = 'Premium_Economy';\n                } else if ($activeTableColumn.hasClass('price-C')) {\n                    inputTypeAttr = 'Business_Class';\n                } else if ($activeTableColumn.hasClass('price-F')) {\n                    inputTypeAttr = 'First_Class';\n                }\n            }\n        }\n\n        if (inputTypeAttr) {\n            actions.send('UK_TypeSwitch', 1, inputTypeAttr);\n        }\n    }\n\n    events.domReady(function() {\n        if (typeof vsHardCodedName === 'undefined') {\n            return;\n        }\n\n        var page = pages[vsHardCodedName],\n            wlh = window.location.href;\n\n        //define Homepage. vsHardCodedName has different part for each country\n        if (vsHardCodedName.indexOf('functional/home/home') > -1) {\n            page = 'Homepage';\n        }\n\n        switch (page) {\n            case 'Homepage':\n                {\n                    //clear cookie if new flight for metric DF_FirstClick\n                    if (cookies.get('mm_DF_FirstClick')) {\n                        $('#flightSearchButton').click(function() {\n                            cookies.remove('mm_DF_FirstClick');\n                        });\n                    }\n                    break;\n                }\n            case 'PlanTrip':\n                {\n                    actions.send('FS_Simple_Plan', 1);\n                    break;\n                }\n            case 'PlanTripComplex':\n                {\n                    actions.send('FS_Complex_Plan', 1);\n                    break;\n                }\n            case 'ClassicFlights':\n                {\n                    actions.send('FS_ClassicFlights', 1);\n                    break;\n                }\n            case 'FlightBrowse':\n                {\n                    actions.send('FS_FlightBrowse', 1);\n\n                    //checking the table with flights and cookie. \n                    //DF_FirstClick metric should fir only once per flight, so we need set cookie on flight page \n                    //and do not track if we have this cookie (user returns from the next page). Cookie clears on Homepage \n                    events.domReady(function() {\n                        if ($('table#outFlightListHeadingContainer h4:contains(\"Basic\")').length &&\n                            $('table#outFlightListHeadingContainer h4:contains(\"Plus\")').length &&\n                            cookies.get('mm_DF_FirstClick') !== 1) {\n\n                            $('input[type=\"radio\"]').one('click', function() {\n                                var value = $(this).val().replace(/[-\\d]/ig, ''), //we need only letters\n                                    attr;\n\n                                switch (value) {\n                                    case 'MH':\n                                        {\n                                            attr = 'Basic';\n                                            break\n                                        };\n                                    case 'M':\n                                        {\n                                            attr = 'Plus';\n                                            break\n                                        };\n                                    case 'C':\n                                        {\n                                            attr = 'Club';\n                                            break\n                                        };\n                                }\n\n                                //checking for not tracking metric again for this flight\n                                if (attr && cookies.get('mm_DF_FirstClick') !== '1') {\n                                    cookies.set('mm_DF_FirstClick', 1);\n                                    actions.send('DF_FirstClick', 1, attr);\n\n                                }\n                            });\n                        }\n\n                        // LongHaul Flight Action\n                        if (trackingInfo.LKHAULTYPE && trackingInfo.LKHAULTYPE === \"FlightLH\") {\n\n                            var $directButton,\n                                $directInputs;\n\n                            // get inbound table input wrapper elements\n                            $directButton = $('.flightList.directFlightsTable #inboundDates .priceSelection input[aria-label]').closest('.priceSelectionContainer');\n                            $directButton.click(function() {\n                                UK_TypeSwitch_getInfo(this);\n                            });\n\n                            // adding click event for outboundDate table\n                            $directInputs = $('.flightList.directFlightsTable #outboundDates .priceSelection input[aria-label]');\n                            $directInputs.click(function() {\n                                var inputWrapper = $(this).closest('.priceSelectionContainer');\n                                UK_TypeSwitch_getInfo(inputWrapper);\n                            });\n\n                            // add events when user clicks on outbound table and ajax rewrites inbound table\n                            $(document).ajaxComplete(function(event, XMLHttpRequest, ajaxOptions) {\n                                if (XMLHttpRequest.readyState === 4 && XMLHttpRequest.status === 200) {\n                                    if (ajaxOptions.url.indexOf('/travel/FX/public?') > -1) {\n\n                                        var $newDirectButton = $('.flightList.directFlightsTable #inboundDates .priceSelection input[aria-label]').closest('.priceSelectionContainer');\n                                        $newDirectButton.click(function() {\n                                            UK_TypeSwitch_getInfo(this);\n                                        });\n\n                                    }\n                                }\n                            });\n                        }\n                    });\n                    break;\n                }\n            case 'PricePage':\n                {\n                    actions.send('FS_PricePage', 1);\n\n                    $('#upgradeOptions input[name=\"upgrade\"]').click(function() {\n                        actions.postpone('FS_CabinUpsell', 1);\n                    });\n\n                    $('a[title=\"Accept these changes\"]').click(function() {\n                        actions.postpone('FS_CabinUpsellAccept', 1);\n                    });\n\n                    $('a[title=\"Decline these changes\"]').click(function() {\n                        actions.postpone('FS_CabinUpsellDeclin', 1);\n                    });\n\n                    //FQ_TravelClass\n                    var ticketType;\n\n                    if (trackingInfo && trackingInfo.TicketType) {\n                        ticketType = trackingInfo.TicketType;\n                    }\n\n                    //setting cookie for Confirmation_Plus and Confirmation_Basic metrics\n                    if (basicTarif.indexOf(ticketType) > -1) {\n                        cookies.set('mm_ticketType', 'Basic');\n                    } else if (plusTarif.indexOf(ticketType) > -1) {\n                        cookies.set('mm_ticketType', 'Plus');\n                    } else if (flexTarif.indexOf(ticketType) > -1) {\n                        cookies.set('mm_ticketType', 'Flex');\n                    }\n\n                    if (basicClass.indexOf(ticketType) > -1) {\n                        actions.send('FQ_TravelClass', 1, 'Basic');\n                    } else if (plusClass.indexOf(ticketType) > -1) {\n                        actions.send('FQ_TravelClass', 1, 'Plus');\n                    } else if (clubClass.indexOf(ticketType) > -1) {\n                        actions.send('FQ_TravelClass', 1, 'Club');\n                    }\n\n                    break;\n                }\n            case 'BookingSummary':\n                {\n                    actions.send('FS_HoldSummary', 1);\n                    break;\n                }\n            case 'Payment':\n                {\n                    if (applicationName === 'FXHB') {\n                        actions.send('FS_HoldPayment', 1);\n                    } else if (applicationName === 'FX') {\n                        actions.send('FS_PaymentPage', 1);\n                    }\n                    break;\n                }\n            case 'HoldConfirm':\n                {\n                    actions.send('MMB_MainPage', 1);\n\n                    if (window.appName === \"FX\" &&\n                        document.getElementById('confirmationMode') &&\n                        document.getElementById('confirmationMode').value === \"true\") {\n                        actions.send('FS_ConfirmationPage', 1);\n\n                        (function() {\n                            var insurancePrice = dblInsurancePolicyPrice * dblExchangeRate, \n                                totalValue = (parseFloat(dblTotalPrice + insurancePrice, 10) * 100).toFixed(0);\n                            // exchangeRate = parseFloat(dblExchangeRate, 10);\n\n                            var attrList = [];\n                            if (trackingInfo && trackingInfo.DiscountCode) {\n                                attrList.push('Avios');\n                            }\n\n                            if (trackingInfo &&\n                                trackingInfo.TotalSeatingCost &&\n                                trackingInfo.TotalSeatingCost !== '0') {\n                                attrList.push('Seat');\n                            }\n\n                            if (totalValue) {\n                                // totalValue = (totalValue * exchangeRate).toFixed(0);\n                                // action tracks for usual confirmation page\n                                actions.set('FlightPurchase', totalValue, attrList.sort().join('-'));\n\n                                //update 25.07.2016 for MaxDISCOVER by Iryna Rud\n                                //MaxDISCOVER should generate before tracking actions\n                                //setTimeout(function() {\n                                if (totalValue < 20000) {\n                                    actions.set('Purchase200', 1);\n                                } else if (totalValue < 50000) {\n                                    actions.set('Purchase201-500', 1);\n                                } else if (totalValue < 100000) {\n                                    actions.set('Purchase501-1000', 1);\n                                } else if (totalValue >= 100000) {\n                                    actions.set('Purchase1000', 1);\n                                }\n                                //}, 1000);\n\n                            }\n\n                            if (cookies.get('mm_ticketType') === 'Basic') {\n                                actions.set('Confirmation_Basic', 1);\n                            } else if (cookies.get('mm_ticketType') === 'Plus') {\n                                actions.set('Confirmation_Plus', 1);\n                            }\n\n                            //CF_TravelClass\n                            var ticketClass;\n\n                            if (trackingInfo && trackingInfo.TicketType) {\n                                ticketClass = trackingInfo.TicketType;\n                            }\n\n                            if (basicClass.indexOf(ticketClass) > -1) {\n                                actions.send('CF_TravelClass', 1, 'Basic');\n                            } else if (plusClass.indexOf(ticketClass) > -1) {\n                                actions.send('CF_TravelClass', 1, 'Plus');\n                            } else if (clubClass.indexOf(ticketClass) > -1) {\n                                actions.send('CF_TravelClass', 1, 'Club');\n                            }\n\n                            setTimeout(function() {\n                                actions.send();\n                            }, 1000); \n                          \n                           //CF_IBLHCabin\n                             var IBLHCabin;\n\n                            if (dblarrCabinClass) {\n                                IBLHCabin = dblarrCabinClass;\n                            }\n                              if (worldtravel.indexOf(IBLHCabin) > -1) {\n                                actions.send('CF_IBLHCabin', 1, 'World Travel');\n                            } else if (worldtravelplus.indexOf(IBLHCabin) > -1) {\n                                actions.send('CF_IBLHCabin', 1, 'World Travel Plus');\n                            } else if (club.indexOf(IBLHCabin) > -1) {\n                                actions.send('CF_IBLHCabin', 1, 'Club');\n                            } else if (first.indexOf(IBLHCabin) > -1) {\n                                actions.send('CF_IBLHCabin', 1, 'First');\n                            }\n                          \n                            //CF_OBLHCabin\n                             var OBLHCabin;\n\n                            if (dbldepCabinClass) {\n                                OBLHCabin = dbldepCabinClass;\n                            }\n                              if (worldtravel.indexOf(OBLHCabin) > -1) {\n                                actions.send('CF_OBLHCabin', 1, 'World Travel');\n                            } else if (worldtravelplus.indexOf(OBLHCabin) > -1) {\n                                actions.send('CF_OBLHCabin', 1, 'World Travel Plus');\n                            } else if (club.indexOf(OBLHCabin) > -1) {\n                                actions.send('CF_OBLHCabin', 1, 'Club');\n                            } else if (first.indexOf(OBLHCabin) > -1) {\n                                actions.send('CF_OBLHCabin', 1, 'First');\n                            }\n\n\n                            //UK_AncilRevenue\n                            var insurancePrice = dblInsurancePolicyPrice * dblExchangeRate,\n                                allAncillaries = (parseFloat(dblTotalPrice - (dblFlightValue * dblExchangeRate) + insurancePrice, 10) * 100).toFixed(0);\n                            actions.send('UK_AncilRevenue', allAncillaries);                           \n\n                        })();\n\n                    }\n\n                    if (document.getElementById('confirmationMode') &&\n                        trackingInfo[\"HB4F\"] === \"true\") {\n                        actions.send('FS_HoldConfirm', 1);\n\n                        (function() {\n                            var totalValue = (parseFloat(trackingInfo[\"HB4FValue\"], 10) * 100).toFixed(0),\n                                exchangeRate = parseFloat(dblExchangeRate, 10);\n\n                            if (totalValue && exchangeRate) {\n                                totalValue = (totalValue * exchangeRate).toFixed(0);\n                                actions.send('FlightHoldBooking', totalValue);\n                            }\n                        })();\n\n                    }\n                    break;\n                }\n            case 'AltConfirmation':\n                {   \n                    var isFlightsTablePresented,\n                        isPaymentSummaryPresented,\n                        isConfirmationPage;\n\n                    isFlightsTablePresented = document.querySelector('#itinerary div.ngtable h2').innerText.indexOf('Your confirmed flights') > -1;\n                    isPaymentSummaryPresented = document.querySelector('#priceBreakdown th.payHead strong').innerText.indexOf('Payment summary') > -1;\n                    isConfirmationPage = isFlightsTablePresented && isPaymentSummaryPresented;\n\n                    if (isConfirmationPage) {\n                        (function() {\n                            // dblTotalPrice already has flight amount in GBP\n                            var totalValue = (parseFloat(dblTotalPrice, 10) * 100).toFixed(0);\n                            // exchangeRate = parseFloat(dblExchangeRate, 10);\n\n                            var attrList = [];\n                            if (trackingInfo && trackingInfo.DiscountCode) {\n                                attrList.push('Avios');\n                            }\n\n                            if (trackingInfo &&\n                                trackingInfo.TotalSeatingCost &&\n                                trackingInfo.TotalSeatingCost !== '0') {\n                                attrList.push('Seat');\n                            }\n\n                            if (totalValue) {\n                                // totalValue = (totalValue * exchangeRate).toFixed(0);\n                                // action tracks for alternative confirmation page\n                                actions.set('FlightPurchase', totalValue, attrList.sort().join('-'));\n                            }\n\n                            setTimeout(function() {\n                                actions.send();\n                            }, 1000);\n\n                        })();\n                    }\n                    break;\n                }\n            case 'MMBConfirmation':\n                {\n                    var isConfirmationPage = typeof dblExchangeRate === 'number';\n                    if (isConfirmationPage) {\n                        (function() {\n                            var totalValue = (parseFloat(dblTotalPrice, 10) * 100).toFixed(0);\n\n                            var attrList = [];\n                            if (trackingInfo && trackingInfo.DiscountCode) {\n                                attrList.push('Avios');\n                            }\n\n                            if (trackingInfo &&\n                                trackingInfo.TotalSeatingCost &&\n                                trackingInfo.TotalSeatingCost !== '0') {\n                                attrList.push('Seat');\n                            }\n\n                            if (totalValue) {\n                                actions.set('FlightPurchase', totalValue, attrList.sort().join('-'));\n                            }\n\n                            setTimeout(function() {\n                                actions.send();\n                            }, 1000);\n\n                        })();\n                    }\n                }\n\n            case 'Ancillaries':\n                {\n                    actions.send('FS_Ancillaries', 1);\n                    break;\n                }\n            case 'Passenger':\n                {\n                    actions.send('FS_PassengerDetails', 1);\n                    break;\n                }\n            case 'PaidSeatings':\n                {\n                    actions.send('FS_PaidSeating', 1);\n                    break;\n                }\n            case 'SeatingMap':\n                {\n                    actions.send('FS_PaidSeatingMap', 1);\n                    break;\n                }\n            case 'AmexInstant':\n                {\n                    actions.send('FS_AmexInstant', 1);\n                    break;\n                }\n            case 'LowPrice':\n                {\n                    actions.send('FS_LowPriceFinder', 1);\n                    break;\n                }\n            case 'HolidayFinder':\n                {\n                    actions.send('BAH_HolidayFinder', 1);\n                    break;\n                }\n            case 'SeatingSummary':\n                {\n                    actions.send('MMB_SeatingSummary', 1);\n                    break;\n                }\n        }\n\n    });\n\n})();","Order":0,"HighLevelApiVersion":"1.23"},{"Name":"checker_MMB1","Type":"script","Attrs":{"type":"text/javascript"},"Data":";\n(function() {\n    'use strict';\n\n    var pages = {\n        'functional/travelbooking/flightbooking/futureflightselling/combinedflightcallist.xslt': 'FlightBrowse',\n        'functional/mytravelspace/manage_my_booking_II/mmb-concept.xslt': 'HoldConfirm'\n    }\n\n    events.domReady(function() {\n\n    var page = pages[vsHardCodedName],\n        wlh = window.location.href;\n\n        switch (page) {\n            \n            case 'FlightBrowse':\n                {\n                    if (trackingInfo.LKHAULTYPE === \"FlightSH\" || trackingInfo.LKHAULTYPE === \"FlightDom\") {\n                    \tcookies.set('mm_maxdiscover', 1);\n                    } else {\n                    \tcookies.remove('mm_maxdiscover');\n                    }\n                    break;\n                }\n            \n            case 'HoldConfirm':\n                {\n                    \n                    if (window.appName === \"FX\" &&\n                        document.getElementById('confirmationMode') &&\n                        document.getElementById('confirmationMode').value === \"true\" &&\n                        cookies.get('mm_maxdiscover')) {\n                        \n                        visitor.requestPage('MaxDiscover_ConfPage');\n                    \t\t\n                    \tcookies.remove('mm_maxdiscover');\t\n\n                    }\n\n                    break;\n                }\n            \n        }\n\n    });\n\n})();","Order":0,"HighLevelApiVersion":"1.23"},{"Name":"Acts_MMB_Confirm","Type":"script","Attrs":{"type":"text/javascript"},"Data":"var ACTION_PURCHASE_BAGGAGE = 'BaggagePurchase';\nvar ACTION_PURCHASE_UPGRADE = 'UpgradePurchase';\n\nvar pages = {\n    'functional/mytravelspace/ExcessBaggage/resp/xsbConfirmation.xslt': ACTION_PURCHASE_BAGGAGE,\n    'functional/mytravelspace/change_booking/resp/confirmATC.xslt': ACTION_PURCHASE_UPGRADE,\n    'functional/mytravelspace/change_booking/confirm.xslt': ACTION_PURCHASE_UPGRADE\n};\n\nvar rates = {\n    AED: 4.83,\n    AFN: 100,\n    ALL: 140,\n    AMD: 640,\n    ANG: 2.4,\n    AOA: 387,\n    ARS: 51.14,\n    AUD: 1.81,\n    AWG: 2.4,\n    AZN: 2.2,\n    BAM: 2.2,\n    BBD: 2.6,\n    BDT: 109,\n    BGN: 2.19,\n    BHD: 0.49,\n    BIF: 2400,\n    BMD: 1.31,\n    BND: 1.8,\n    BOB: 9.1,\n    BRC: 14250,\n    BRL: 5.4,\n    BRN: 720,\n    BSD: 1.31,\n    BTN: 95,\n    BWP: 14.4,\n    BYN: 2.75,\n    BYR: 27528,\n    BZD: 3,\n    CAD: 1.67,\n    CDF: 2126,\n    CHF: 1.25,\n    CLP: 890,\n    CNY: 9.01,\n    COP: 4000,\n    CRC: 760,\n    CUP: 1.31,\n    CVE: 124,\n    CZK: 29,\n    DJF: 234,\n    DKK: 8.37,\n    DOP: 66,\n    DZD: 156,\n    EGP: 23.5,\n    ERN: 20,\n    ETB: 37,\n    EUR: 1.12,\n    FJD: 2.8,\n    FKP: 1,\n    GBP: 1,\n    GEL: 3.5,\n    GHS: 6.56,\n    GIP: 1,\n    GMD: 64,\n    GNF: 12020,\n    GTQ: 10,\n    GWP: 54544.16,\n    GYD: 277,\n    HKD: 10,\n    HNL: 32,\n    HRK: 8.7,\n    HTG: 92,\n    HUF: 364,\n    IDR: 19500,\n    ILS: 4.7,\n    INR: 90,\n    IQD: 1580,\n    IRR: 184400,\n    ISK: 145,\n    JMD: 179,\n    JOD: 0.9,\n    JPY: 140,\n    KES: 137,\n    KGS: 91,\n    KHR: 5417,\n    KMF: 552,\n    KPW: 140.9,\n    KRW: 1470,\n    KWD: 0.4,\n    KYD: 1.08,\n    KZT: 468,\n    LAK: 11278,\n    LBP: 1980,\n    LKR: 221,\n    LRD: 205,\n    LSL: 19.3,\n    LTL: 0,\n    LYD: 1.83,\n    MAD: 12,\n    MDL: 22.2,\n    MGA: 4530,\n    MKD: 69,\n    MMK: 2108,\n    MNT: 3280,\n    MOP: 11,\n    MRO: 474,\n    MRU: 47,\n    MUR: 47,\n    MVR: 20.2,\n    MWK: 964,\n    MXN: 25,\n    MYR: 5.44,\n    MZN: 81,\n    NAD: 19.3,\n    NGN: 477,\n    NIO: 43,\n    NOK: 10.72,\n    NPR: 152,\n    NZD: 1.98,\n    OMR: 0.51,\n    PAB: 1.31,\n    PEN: 4.3,\n    PGK: 4.5,\n    PHP: 71,\n    PKR: 163,\n    PLN: 4.7,\n    PYG: 7700,\n    QAR: 4.8,\n    RON: 5.2,\n    RSD: 132.93,\n    RUB: 89,\n    RWF: 1159,\n    SAR: 4.93,\n    SBD: 10.9,\n    SCR: 18.9,\n    SDG: 23.7,\n    SDR: 1,\n    SEK: 11.62,\n    SGD: 1.8,\n    SHP: 1,\n    SKK: 37,\n    SLL: 11060,\n    SOS: 790,\n    SRD: 9.9,\n    SSP: 193.5,\n    STD: 27602,\n    STN: 28,\n    SVC: 11,\n    SYP: 573,\n    SZL: 19.3,\n    THB: 43,\n    TMT: 4.6,\n    TND: 3.7,\n    TOP: 3.1,\n    TRY: 8.3,\n    TTD: 9,\n    TWD: 40,\n    TZS: 3010,\n    UAH: 36.9,\n    UGX: 5000,\n    USD: 1.29,\n    UYU: 44,\n    UZS: 10574,\n    VEF: 8073004.6,\n    VES: 81,\n    VND: 30702,\n    VUV: 148,\n    WST: 3.5,\n    XAF: 735.6,\n    XCD: 3.5,\n    XDR: 1,\n    XOF: 735.6,\n    XPF: 134,\n    YDD: 2.03,\n    YER: 330,\n    YUX: 20.3,\n    ZAR: 17,\n    ZMW: 15.04,\n    ZWR: 0,\n};\n\nvar $;\n\nfunction normalizePrice(price) {\n    var currency = trackingInfo.CurrencyCode;\n    var rate = currency && rates[currency] ? rates[currency] : 1;\n\n    return Math.ceil(price / rate);\n}\n\nfunction getRevenue() {\n    var $containers = [$('p.totalPrice'), $('td.payPrice > span')];\n    var $price;\n    var revenue;\n\n    $containers.forEach(function($element) {\n        if (!$price && $element.length) {\n            $price = $element;\n        }\n    });\n\n    if ($price && $price.text().replace(/\\D/g, '')) {\n        revenue = normalizePrice(parseInt($price.text().replace(/\\D/g, '')));\n    }\n\n    return revenue;\n}\n\nfunction getBaggage() {\n    var totalRevenue = 0;\n    var totalPrice = $('.total-price').text().replace(/\\.|\\D/g, '');\n    var totalRefund = $('.confirmation-message > p strong:not(.personaldata)').text().replace(/\\D/g, '');\n    var attribute = 'New';\n\n    if (totalPrice) {\n        totalRevenue = normalizePrice(parseInt(totalPrice));\n    }\n\n    if (totalRefund) {\n        attribute = 'Change';\n    }\n\n    return {\n        'revenue': totalRevenue,\n        'attribute': attribute\n    };\n}\n\nfunction isCancelPage() {\n    var $step = $('.progessBarItem.current .mobileNum');\n\n    return $step && $step.text() === '3of4';\n}\n\nfunction handlePages() {\n    var action = pages[vsHardCodedName];\n    var revenue;\n    var attribute;\n    var baggage;\n\n    switch (action) {\n        case ACTION_PURCHASE_BAGGAGE:\n        {\n            if (!isCancelPage()) {\n                baggage = getBaggage();\n                revenue = baggage.revenue;\n                attribute = baggage.attribute;\n            }\n            break;\n        }\n        case ACTION_PURCHASE_UPGRADE:\n        {\n            revenue = getRevenue();\n            break;\n        }\n    }\n\n    if (action && revenue) {\n        actions.send(action, revenue, attribute);\n    }\n}\n\nfunction init() {\n    when(function() {\n        $ = window.jQuery;\n        return typeof trackingInfo === 'object' && typeof vsHardCodedName === 'string' && typeof $ === 'function';\n    }).done(handlePages);\n}\n\nevents.domReady(init);","Order":0,"HighLevelApiVersion":"1.23"},{"Name":"Acts_MMB_SeatsFunnel","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/**\n * T14_Acts_SeatsFunnel.js\n * This script's purpose is to track actions T14_SeatsChoose, T14_SeatsSummary.\n *\n * @author Kajetan Wilczek (email: [email])\n * @date 20.10.2017\n */\n\nvar ACTION_SEATS_CHOOSE = 'SeatsChoose';\nvar ACTION_SEATS_SUMMARY = 'SeatsSummary';\nvar ACTION_SEATS_PAYMENT = 'SeatsPayment';\nvar ACTION_SEATS_PURCHASE = 'SeatsPurchase';\nvar DATA_SUMMARY_CLICK = 'seats-summary-click';\n\nvar rates = {\n    AED: 4.5,\n    AFN: 81,\n    ALL: 150,\n    AMD: 580,\n    ANG: 2.2,\n    AOA: 203,\n    ARS: 18.59,\n    AUD: 1.6,\n    AWG: 2.2,\n    AZN: 2,\n    BAM: 2.2,\n    BBD: 2.4,\n    BDT: 96,\n    BGN: 2.19,\n    BHD: 0.46,\n    BIF: 2100,\n    BMD: 1.22,\n    BND: 1.7,\n    BOB: 8.5,\n    BRC: 14250,\n    BRL: 3.9,\n    BRN: 720,\n    BSD: 1.22,\n    BTN: 82,\n    BWP: 13,\n    BYN: 2,\n    BZD: 2,\n    CAD: 1.62,\n    CDF: 1188,\n    CHF: 1.21,\n    CLP: 810,\n    CNY: 8.27,\n    COP: 3600,\n    CRC: 680,\n    CUP: 1.22,\n    CVE: 124,\n    CZK: 30,\n    DJF: 217,\n    DKK: 8.34,\n    DOP: 57,\n    DZD: 135,\n    EGP: 10.9,\n    ERN: 19,\n    ETB: 27,\n    EUR: 1.12,\n    FJD: 2.5,\n    FKP: 1,\n    GBP: 1,\n    GEL: 2.9,\n    GHS: 4.88,\n    GIP: 1,\n    GMD: 52,\n    GNF: 11160,\n    GTQ: 9,\n    GWP: 54544.16,\n    GYD: 254,\n    HKD: 9.5,\n    HNL: 28,\n    HRK: 8.4,\n    HTG: 79,\n    HUF: 345,\n    IDR: 15900,\n    ILS: 4.7,\n    INR: 82,\n    IQD: 1430,\n    IRR: 43900,\n    ISK: 140,\n    JMD: 157,\n    JOD: 0.9,\n    JPY: 127.16,\n    KES: 124,\n    KGS: 83,\n    KHR: 4997,\n    KMF: 551,\n    KPW: 127.7,\n    KRW: 1380,\n    KWD: 0.37,\n    KYD: 1,\n    KZT: 405,\n    LAK: 9953,\n    LBP: 1850,\n    LKR: 180,\n    LRD: 114,\n    LSL: 17,\n    LTL: 3.9,\n    LYD: 1.72,\n    MAD: 12,\n    MDL: 24.5,\n    MGA: 3940,\n    MKD: 69,\n    MMK: 1574,\n    MNT: 2850,\n    MOP: 10,\n    MRO: 439,\n    MUR: 44,\n    MVR: 18.8,\n    MWK: 880,\n    MXN: 23,\n    MYR: 5.12,\n    MZN: 95,\n    NAD: 17,\n    NGN: 391,\n    NIO: 36,\n    NOK: 10.05,\n    NPR: 131,\n    NZD: 1.7,\n    OMR: 0.47,\n    PAB: 1.22,\n    PEN: 4.1,\n    PGK: 3.9,\n    PHP: 59,\n    PKR: 128,\n    PLN: 4.8,\n    PYG: 6910,\n    QAR: 4.5,\n    RON: 5,\n    RSD: 138.04,\n    RUB: 76,\n    RWF: 957,\n    SAR: 4.59,\n    SBD: 9.5,\n    SCR: 16.4,\n    SDG: 7.3,\n    SDR: 1,\n    SEK: 10.87,\n    SGD: 1.7,\n    SHP: 1,\n    SKK: 37,\n    SLL: 6910,\n    SOS: 710,\n    SRD: 8.5,\n    SSP: 57.2,\n    STD: 27503,\n    SVC: 11,\n    SYP: 633,\n    SZL: 17,\n    THB: 43,\n    TMT: 4.28,\n    TND: 2.8,\n    TOP: 2.6,\n    TRY: 3.8,\n    TTD: 8,\n    TWD: 39,\n    TZS: 2670,\n    UAH: 31.4,\n    UGX: 4200,\n    USD: 1.23,\n    UYU: 34,\n    VEB: 900,\n    VEF: 807.2,\n    VND: 27323,\n    VUV: 132,\n    WST: 3.1,\n    XAF: 735.3,\n    XCD: 3.3,\n    XDR: 1,\n    XOF: 735.3,\n    XPF: 134,\n    YDD: 2.03,\n    YER: 310,\n    YUX: 20.3,\n    ZAR: 17,\n    ZMW: 12.1,\n    ZWD: 499.8,\n    ZWR: 499.8\n};\n\nvar currencies = {\n    'Â£': 'GBP',\n    'â¬': 'EUR',\n    '$': 'USD'\n};\n\nvar $;\n\n\nfunction getCurrencyCode() {\n    var price = $('.total-price-amount').text();\n    var currency = '';\n\n    for (var key in currencies) {\n        if (currencies.hasOwnProperty(key)) {\n            if (price.indexOf(key) > -1) {\n                currency = currencies[key];\n            }\n        }\n    }\n\n    if (!currency) {\n        for (var key in rates) {\n            if (rates.hasOwnProperty(key)) {\n                if (price.indexOf(key) > -1) {\n                    currency = key;\n                }\n            }\n        }\n    }\n\n    return currency.toUpperCase();\n}\n\nfunction normalizePrice(price) {\n    var currency = trackingInfo.CurrencyCode || trackingInfo.SeatingCurrency || trackingInfo.PDCurrencyCode || getCurrencyCode();\n    var rate = currency && rates[currency] ? rates[currency] : 1;\n\n    return Math.ceil(price / rate);\n}\n\nfunction getRevenue() {\n    var $price = $('.total-price-amount');\n    var revenue;\n\n    if ($price && $price.text().replace(/\\D/g, '')) {\n        revenue = normalizePrice(parseInt($price.text().replace(/\\D/g, '')));\n    }\n\n    return revenue;\n}\n\nfunction handlePages() {\n    var $document = $(document);\n    var value = 1;\n    var action;\n\n    if (vsHardCodedName === \"functional/mytravelspace/manage_my_booking/resp/seatMap.xslt\") {\n        action = ACTION_SEATS_CHOOSE;\n        visitor.clearData(DATA_SUMMARY_CLICK);\n    } else if (vsHardCodedName === \"functional/mytravelspace/manage_my_booking/resp/mmbSeatSummary.xslt\") {\n        action = ACTION_SEATS_SUMMARY;\n        visitor.clearData(DATA_SUMMARY_CLICK);\n\n        $document.on('click', '.process-forward-btn > input.button', function() {\n            visitor.setData(DATA_SUMMARY_CLICK, true);\n        });\n    } else if (vsHardCodedName=== \"functional/payment/xslt/resp/payment.xslt\") {\n        if (visitor.getData(DATA_SUMMARY_CLICK)) {\n            action = ACTION_SEATS_PAYMENT;\n        }\n    } else if (vsHardCodedName === \"functional/mytravelspace/manage_my_booking/resp/mmbSeatConfirm.xslt\") {\n        if (visitor.getData(DATA_SUMMARY_CLICK)) {\n            action = ACTION_SEATS_PURCHASE;\n            value = getRevenue();\n            visitor.clearData(DATA_SUMMARY_CLICK);\n        }\n    }\n\n    if (action && value) {\n        actions.send(action, value);\n    }\n}\n\nfunction init() {\n    when(function() {\n        $ = window.jQuery;\n        return typeof trackingInfo === 'object' && typeof vsHardCodedName === 'string' && typeof $ === 'function';\n    }).done(handlePages);\n}\n\nevents.domReady(init);","Order":0,"HighLevelApiVersion":"1.23"},{"Name":"mod_browser","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/**\n* browser-module - CD API module, to handle browser rules logic for Campaign Designer campaigns\n* @version v0.9.0\n* @repository /maxymiser-shared2/cdapi-modules/browser-module.git\n* @author Maksym Mokrozub <maksym.mokrozub@oracle.com>\n*/\n\nfunction Browser(){var t,i,e,n,r=null,o=this;function s(e,n){return(\"any\"===(o=(o=e).toLowerCase())||\"*\"===o||t===o)&&(\"string\"==typeof(r=n)&&\"any\"===r.toLowerCase()||i.match(\"^\"+String(r).replace(\"*\",\"\\\\d*\")));var r,o}return o.is=function(e,n){return s(e,n)&&null===r&&(r=!0),o},o.isNot=function(e,n){return s(e,n)&&(r=!1),o},o.check=function(){return Boolean(r)},(n=navigator.userAgent.match(/(Firefox|Chrome|CriOS|Edge|Version|MSIE)[\\/\\s]([\\d.]+)/))?(e=n[1],t={CriOS:\"chrome\",Version:\"safari\"}[e]||n[1].toLowerCase(),i=n[2]):-1!==navigator.userAgent.indexOf(\"Trident/7.0\")&&(t=\"ie\",i=\"11.0\"),o}\"object\"==typeof modules&&\"function\"==typeof modules.define&&modules.define(\"browser\",{autoDefine:!0,singleton:!1},Browser);\n","Order":0,"HighLevelApiVersion":"1.23"}],"Campaigns":[{"Name":"Full exposure - PPC - skinny plan frag -","Type":"ABnMVT","CSName":"","HighLevelApiVersion":"1.23","PagePrefix":"MDczNTc1","Scripts":[{"Name":"Adobe Analytics","Type":"script","Attrs":{"type":"text/javascript"},"Data":"var config = {\n    \"eVar\": \"100\",\n    \"sVar\": \"\",\n    \"sProp\": \"\"\n}\ntry { if (window.self !== window.top) { return; } }\ncatch (e) { return; }\ncampaign.events.on('lastRequest', function() {\n    if (!isGenerated()) { return }\n    if (!isNewGeneration()) { return; }\n    waitForAdobe(function() {\n        setVariables();\n        sendPageview();\n    });\n});\n\nfunction isGenerated(){\n    var experienceData = getExperienceData();\n    return !!experienceData\n}\n\nfunction isNewGeneration() {\n    var experienceData = getExperienceData();\n    if (campaign.getData('adobe-integration') === experienceData) {\n        return false;\n    }\n    campaign.setData('adobe-integration', experienceData, 0);\n    return true;\n}\nfunction waitForAdobe(callback) {\n    var timeout = false;\n    when(function(){\n        return typeof window[config.sVar || 's'] === 'object';\n    }, function(){\n        return timeout;\n    }).done(function(){\n        callback();\n    });\n    setTimeout(function(){\n        timeout = true;\n    }, 10e3);\n}\nfunction setVariables(){\n    var data = campaign.getName() + (isProduction() ? '' : ' QA' ) + '=' + getExperienceData();\n    window[config.sVar || 's']['eVar' + config.eVar] = data;\n    window[config.sVar || 's']['prop' + config.sProp] = data;\n}\nfunction sendPageview(){\n    window[config.sVar || 's'].linkTrackVars = 'eVar' + config.eVar;\n    window[config.sVar || 's'].tl(true, 'o', 'Maxymiser' + (isProduction ? '' : ' QA'));\n}\nfunction getExperienceData(){\n    var experience = campaign.getExperience();\n    var variants = [];\n    for(var element in experience) {\n        variants.push(element + ':' + experience[element]);\n    }\n    return variants.join('|');\n}\nfunction isProduction(){\n    if (location.search.toLowerCase().indexOf('mmcore.') > -1) {\n        return false;\n    }\n    function removeExpiration(v) {\n        return v ? v.replace(/^\\d\\|/, '') : '';\n    }\n    var storage = mmsystem.getConfig().storageType;\n    if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n        if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n    var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n    var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n    var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n    var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n    var storageKeys = {\n        'mmparams.p': 1,\n        'mmparams.d': 1\n    };\n    var utils = {\n        'un': 1,\n        'cfgID': 1,\n        'pruh': 1\n    };\n    for (var l = storageTypes.length; l--;) {\n        var storageType = storageTypes[l];\n        for (var storageKey in (storageKeys || {})) {\n            for (var util in (utils || {})) {\n                if ((storageType[storageKey] || {})[util]) {\n                    return false;\n                }\n            }\n        }\n    }\n    function readCookieStorage(name) {\n        var res = {},\n            whole = '',\n            i = 0,\n            chunk;\n        while ((chunk = getCookie(name + i++))) {\n            whole += chunk;\n        }\n        whole = decodeURIComponent(whole);\n        try {\n            res = JSON.parse(whole);\n        } catch (e) {}\n        return res;\n    }\n    function getCookie(name) {\n        var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + '=([^;]+)');\n        var value = (document.cookie.match(r) || ['', ''])[1];\n        return value;\n    }\n    return true;\n}","Order":5000,"HighLevelApiVersion":"1.23"},{"Name":"Decibel Insight","Type":"script","Attrs":{"type":"text/javascript"},"Data":"try { if (window.self !== window.top) { return; } }\ncatch (e) { return; }\ncampaign.events.on('lastRequest', function() {\n    waitForDecibelInsight().done(send);\n});\nfunction waitForDecibelInsight() {\n    var timeout = false;\n    setTimeout(function(){\n        timeout = true;\n    }, 10e3);\n    return when(function(){\n        return typeof window.decibelInsight === 'function';\n    }, function(){\n        return timeout;\n    });\n     \n}\nfunction send(){\n    window.decibelInsight('ready', function() {\n        var experience = campaign.getName() + '=' + getExperienceData();\n        var key = isProduction() ? 'Maxymiser' : 'Maxymiser QA';\n        window.decibelInsight('sendIntegrationData', key, experience);\n    });\n}\n \nfunction getExperienceData(){\n    var experience = campaign.getExperience();\n    var variants = [];\n    for(var element in experience) {\n        variants.push(element + ':' + experience[element]);\n    }\n    return variants.join('|');\n}\n \nfunction isProduction(){\n    if (location.search.toLowerCase().indexOf('mmcore.') > -1) {\n        return false;\n    }\n    function removeExpiration(v) {\n        return v ? v.replace(/^\\d\\|/, '') : '';\n    }\n    var storage = mmsystem.getConfig().storageType;\n    if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n        if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n    var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n    var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n    var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n    var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n    var storageKeys = {\n        'mmparams.p': 1,\n        'mmparams.d': 1\n    };\n    var utils = {\n        'un': 1,\n        'cfgID': 1,\n        'pruh': 1\n    };\n    for (var l = storageTypes.length; l--;) {\n        var storageType = storageTypes[l];\n        for (var storageKey in (storageKeys || {})) {\n            for (var util in (utils || {})) {\n                if ((storageType[storageKey] || {})[util]) {\n                    return false;\n                }\n            }\n        }\n    }\n    function readCookieStorage(name) {\n        var res = {},\n            whole = '',\n            i = 0,\n            chunk;\n        while ((chunk = getCookie(name + i++))) {\n            whole += chunk;\n        }\n        whole = decodeURIComponent(whole);\n        try {\n            res = JSON.parse(whole);\n        } catch (e) {}\n        return res;\n    }\n    function getCookie(name) {\n        var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + '=([^;]+)'),\n            value = (document.cookie.match(r) || ['', ''])[1];\n        return value;\n    }\n    return true;\n}","Order":5000,"HighLevelApiVersion":"1.23"}],"Elements":[],"Recommendations":[]},{"Name":"Full exposure - DC2 - skinny plan frag","Type":"ABnMVT","CSName":"","HighLevelApiVersion":"1.23","PagePrefix":"MDgzODcx","Scripts":[{"Name":"Adobe Analytics","Type":"script","Attrs":{"type":"text/javascript"},"Data":"var config = {\n    \"eVar\": \"100\",\n    \"sVar\": \"\",\n    \"sProp\": \"\"\n}\ntry { if (window.self !== window.top) { return; } }\ncatch (e) { return; }\ncampaign.events.on('lastRequest', function() {\n    if (!isGenerated()) { return }\n    if (!isNewGeneration()) { return; }\n    waitForAdobe(function() {\n        setVariables();\n        sendPageview();\n    });\n});\n\nfunction isGenerated(){\n    var experienceData = getExperienceData();\n    return !!experienceData\n}\n\nfunction isNewGeneration() {\n    var experienceData = getExperienceData();\n    if (campaign.getData('adobe-integration') === experienceData) {\n        return false;\n    }\n    campaign.setData('adobe-integration', experienceData, 0);\n    return true;\n}\nfunction waitForAdobe(callback) {\n    var timeout = false;\n    when(function(){\n        return typeof window[config.sVar || 's'] === 'object';\n    }, function(){\n        return timeout;\n    }).done(function(){\n        callback();\n    });\n    setTimeout(function(){\n        timeout = true;\n    }, 10e3);\n}\nfunction setVariables(){\n    var data = campaign.getName() + (isProduction() ? '' : ' QA' ) + '=' + getExperienceData();\n    window[config.sVar || 's']['eVar' + config.eVar] = data;\n    window[config.sVar || 's']['prop' + config.sProp] = data;\n}\nfunction sendPageview(){\n    window[config.sVar || 's'].linkTrackVars = 'eVar' + config.eVar;\n    window[config.sVar || 's'].tl(true, 'o', 'Maxymiser' + (isProduction ? '' : ' QA'));\n}\nfunction getExperienceData(){\n    var experience = campaign.getExperience();\n    var variants = [];\n    for(var element in experience) {\n        variants.push(element + ':' + experience[element]);\n    }\n    return variants.join('|');\n}\nfunction isProduction(){\n    if (location.search.toLowerCase().indexOf('mmcore.') > -1) {\n        return false;\n    }\n    function removeExpiration(v) {\n        return v ? v.replace(/^\\d\\|/, '') : '';\n    }\n    var storage = mmsystem.getConfig().storageType;\n    if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n        if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n    var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n    var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n    var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n    var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n    var storageKeys = {\n        'mmparams.p': 1,\n        'mmparams.d': 1\n    };\n    var utils = {\n        'un': 1,\n        'cfgID': 1,\n        'pruh': 1\n    };\n    for (var l = storageTypes.length; l--;) {\n        var storageType = storageTypes[l];\n        for (var storageKey in (storageKeys || {})) {\n            for (var util in (utils || {})) {\n                if ((storageType[storageKey] || {})[util]) {\n                    return false;\n                }\n            }\n        }\n    }\n    function readCookieStorage(name) {\n        var res = {},\n            whole = '',\n            i = 0,\n            chunk;\n        while ((chunk = getCookie(name + i++))) {\n            whole += chunk;\n        }\n        whole = decodeURIComponent(whole);\n        try {\n            res = JSON.parse(whole);\n        } catch (e) {}\n        return res;\n    }\n    function getCookie(name) {\n        var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + '=([^;]+)');\n        var value = (document.cookie.match(r) || ['', ''])[1];\n        return value;\n    }\n    return true;\n}","Order":5000,"HighLevelApiVersion":"1.23"},{"Name":"Decibel Insight","Type":"script","Attrs":{"type":"text/javascript"},"Data":"try { if (window.self !== window.top) { return; } }\ncatch (e) { return; }\ncampaign.events.on('lastRequest', function() {\n    waitForDecibelInsight().done(send);\n});\nfunction waitForDecibelInsight() {\n    var timeout = false;\n    setTimeout(function(){\n        timeout = true;\n    }, 10e3);\n    return when(function(){\n        return typeof window.decibelInsight === 'function';\n    }, function(){\n        return timeout;\n    });\n     \n}\nfunction send(){\n    window.decibelInsight('ready', function() {\n        var experience = campaign.getName() + '=' + getExperienceData();\n        var key = isProduction() ? 'Maxymiser' : 'Maxymiser QA';\n        window.decibelInsight('sendIntegrationData', key, experience);\n    });\n}\n \nfunction getExperienceData(){\n    var experience = campaign.getExperience();\n    var variants = [];\n    for(var element in experience) {\n        variants.push(element + ':' + experience[element]);\n    }\n    return variants.join('|');\n}\n \nfunction isProduction(){\n    if (location.search.toLowerCase().indexOf('mmcore.') > -1) {\n        return false;\n    }\n    function removeExpiration(v) {\n        return v ? v.replace(/^\\d\\|/, '') : '';\n    }\n    var storage = mmsystem.getConfig().storageType;\n    if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n        if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n    var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n    var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n    var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n    var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n    var storageKeys = {\n        'mmparams.p': 1,\n        'mmparams.d': 1\n    };\n    var utils = {\n        'un': 1,\n        'cfgID': 1,\n        'pruh': 1\n    };\n    for (var l = storageTypes.length; l--;) {\n        var storageType = storageTypes[l];\n        for (var storageKey in (storageKeys || {})) {\n            for (var util in (utils || {})) {\n                if ((storageType[storageKey] || {})[util]) {\n                    return false;\n                }\n            }\n        }\n    }\n    function readCookieStorage(name) {\n        var res = {},\n            whole = '',\n            i = 0,\n            chunk;\n        while ((chunk = getCookie(name + i++))) {\n            whole += chunk;\n        }\n        whole = decodeURIComponent(whole);\n        try {\n            res = JSON.parse(whole);\n        } catch (e) {}\n        return res;\n    }\n    function getCookie(name) {\n        var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + '=([^;]+)'),\n            value = (document.cookie.match(r) || ['', ''])[1];\n        return value;\n    }\n    return true;\n}","Order":5000,"HighLevelApiVersion":"1.23"}],"Elements":[],"Recommendations":[]},{"Name":"T19_CheckoutFlowReorganization","Type":"ABnMVT","CSName":"","HighLevelApiVersion":"1.23","PagePrefix":"","Scripts":[{"Name":"interstitialPage","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/**\n* Compiled with gulp-campaign-compiler:\n* version: 2.3.0\n* release url: /maxymiser-emea-travel-utils/gulp-campaign-compiler/tree/ver_2.3.0\n* git: /maxymiser-emea-travel-utils/gulp-campaign-compiler\n*/\n\n// campaign.scope.interstitialPage = function () {\n//     sessionStorage.setItem('t19_interstitial_referrer', dataLayer.referrer || '');\n// };\n\ntools.waitFor(function () {\n    return window.dataLayer && window.dataLayer.pagename;\n}, '15000').then(function () {\n    var pagename = window.dataLayer.pagename;\n\n    if (pagename.indexOf('INTERSTITIAL') > -1) {\n        sessionStorage.setItem('t19_interstitial_referrer', document.referrer || '');\n    } else if (pagename.indexOf('HOME') > -1) {\n        sessionStorage.setItem('t19_interstitial_referrer', '');\n    }\n});","Order":5000,"HighLevelApiVersion":"1.23"}],"Elements":[],"Recommendations":[]},{"Name":"T23_combinedT09_T19","Type":"ABnMVT","CSName":"","HighLevelApiVersion":"1.23","PagePrefix":"","Scripts":[{"Name":"interstitialPage","Type":"script","Attrs":{"type":"text/javascript"},"Data":"tools.waitFor(function () {\n    return window.dataLayer && window.dataLayer.pagename;\n}, '15000').then(function () {\n    var pagename = window.dataLayer.pagename;\n\n    if (pagename.indexOf('INTERSTITIAL') > -1) {\n        sessionStorage.setItem('t23_interstitial_referrer', document.referrer || '');\n    } else if (pagename.indexOf('HOME') > -1) {\n        sessionStorage.setItem('t23_interstitial_referrer', '');\n    }\n});","Order":5000,"HighLevelApiVersion":"1.23"}],"Elements":[],"Recommendations":[]},{"Name":"DIGIOPT-154 - Booking Confirmation - Ready to Fly Cross-Selling","Type":"ABnMVT","CSName":"","HighLevelApiVersion":"1.23","PagePrefix":"MDg5MTE3","Scripts":[{"Name":"C1949211138","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/*configuration block begin*/\nvar config = {\n\t\"actionName\": \"Testing\",\n\t\"selectorsDefault\": {\n\t\t\"#maxymiser-testing-action\": {\n\t\t\t\"value\": 1,\n\t\t\t\"attr\": \"\"\n\t\t}\n\t},\n\t\"selectorsAfter\": {},\n\t\"urls\": {\n\t\t\"includedUrls\": [\n\t\t\t\"https://ecp-prelive.baplc.com/travel/book/public/en_gb/confirmation\",\n\t\t\t\"https://www.britishairways.com/travel/book/public/en_gb/confirmation\",\n\t\t\t\"https://www.britishairways.com/travel/book/execclub/_gf/en_gb/confirmation\"\n\t\t],\n\t\t\"excludedUrls\": []\n\t}\n};\n/*configuration block end*/\n\nvar domReadyDeferred = Deferred();\nevents.domReady(function(){\n    domReadyDeferred.resolve();\n});\n\nvar isUrlMatched = function(url, includedUrls, excludedUrls) {\n    var isIncluded = isMasksMatch(url, includedUrls);\n    var isExcluded = isMasksMatch(url, excludedUrls);\n    return isIncluded && !isExcluded;\n};\n\nvar isMasksMatch = function(url, masks) {\n    if (!url) {\n        return false;\n    }\n    url = url.toLowerCase();\n\n    for (var i = 0; i < masks.length; i++) {\n        var mask = masks[i].toLowerCase();\n        if (isMaskMatch(url, window.deproxy ? window.deproxy({\n            href: mask\n        }).href : mask)) {\n            return true;\n        }\n    }\n    return false;\n};\n\nvar isMaskMatch = function(url, originalMask) {\n    var mask = '^';\n    var pos = 0;\n    while (originalMask.length > pos) {\n        var char = originalMask[pos];\n        if (char == '*') {\n            mask = mask + '.*';\n            pos = pos + 1;\n        } else if (char == '(') {\n            var posClosing = originalMask.indexOf(')', pos + 1);\n            var posNextOpening = originalMask.indexOf('(', pos + 1);\n            if (posClosing > pos && (posNextOpening < 0 || posClosing < posNextOpening)) {\n                mask = mask + '.*';\n                pos = posClosing + 1;\n            } else {\n                return false;\n            }\n        } else {\n            mask = mask + char;\n            pos = pos + 1;\n        }\n    }\n    mask = mask + '$';\n    mask = mask.replace('?', \"\\\\?\");\n    var r = new RegExp(mask);\n    return r.test(url);\n};\n\nvar waitForElement = function(elementSelector, timeoutValue){\n    var elementDeferred = Deferred();\n    var timeout = false;\n    domReadyDeferred.promise().then(function(){\n        setTimeout(function () {\n            timeout = true;\n        }, timeoutValue);\n    });\n\n    renderer.when(function(){\n        return timeout || dom.find(elementSelector).length;\n    })\n        .done(function(){ elementDeferred.resolve(); })\n        .fail(function(){ elementDeferred.reject(); });\n\n    return elementDeferred.promise();\n};\n\nvar getActionElement = function(selector, data) {\n    var deferred = Deferred();\n\n    if (selector) {\n        waitForElement(selector, 2000)\n            .done(function(){\n                var elements = dom.find(selector);\n                if (elements.length) {\n                    var elementData = {\n                        selector: selector,\n                        data: data\n                    };\n                    deferred.resolveWith(this, [elements[0], elementData]);\n                } else {\n                    deferred.reject();\n                }\n            })\n            .fail(function(){\n                deferred.reject();\n            });\n    } else {\n        deferred.reject();\n    }\n\n    return deferred.promise();\n};\n\nvar getCurrentUrl = function() {\n    return window.deproxy\n        ? window.deproxy(window.location).href\n        : window.location.href;\n};\n\nvar isActionRequired = function() {\n    return !config.urls\n        ? true\n        : !!isUrlMatched(\n            getCurrentUrl(),\n            config.urls.includedUrls,\n            config.urls.excludedUrls);\n};\n\nvar trackClicksAction = function(selectors) {\n    if (isActionRequired()) {\n        for(var selector in selectors){\n            getActionElement(selector, selectors[selector]).done(function (element, elementData){\n                if(element && (!element.attachedActions || !element.attachedActions[config.actionName])){\n                    actions.trackClicks(elementData.selector, {name: config.actionName, value:elementData.data.value, attribute:elementData.data.attr});\n                    if (!element.attachedActions) { element.attachedActions = {}; }\n                    element.attachedActions[config.actionName] = true;\n                }\n            });\n        }\n    }\n};\n\ntrackClicksAction(config.selectorsDefault);\n\ncampaign.events.on('urlChange', function(){ trackClicksAction(config.selectorsDefault); });\n\ncampaign.events.variantJsExecuted(function(elementName, variantName){\n    var selectorsAfter = (config.selectorsAfter[elementName] || {})[variantName.toLowerCase()] || {};\n    trackClicksAction(selectorsAfter);\n});\n","Order":4000,"HighLevelApiVersion":"1.23"},{"Name":"C358749448","Type":"script","Attrs":{"type":"text/javascript"},"Data":"/*configuration block begin*/\nvar config = {\n\t\"actionName\": \"Insurance 2\",\n\t\"selectorsDefault\": {\n\t\t\"#maxymiser-insurance-action\": {\n\t\t\t\"value\": 1,\n\t\t\t\"attr\": \"\"\n\t\t}\n\t},\n\t\"selectorsAfter\": {},\n\t\"urls\": {\n\t\t\"includedUrls\": [\n\t\t\t\"https://ecp-prelive.baplc.com/travel/book/public/en_gb/confirmation\",\n\t\t\t\"https://www.britishairways.com/travel/book/public/en_gb/confirmation\",\n\t\t\t\"https://www.britishairways.com/travel/book/execclub/_gf/en_gb/confirmation\"\n\t\t],\n\t\t\"excludedUrls\": []\n\t}\n};\n/*configuration block end*/\n\nvar domReadyDeferred = Deferred();\nevents.domReady(function(){\n    domReadyDeferred.resolve();\n});\n\nvar isUrlMatched = function(url, includedUrls, excludedUrls) {\n    var isIncluded = isMasksMatch(url, includedUrls);\n    var isExcluded = isMasksMatch(url, excludedUrls);\n    return isIncluded && !isExcluded;\n};\n\nvar isMasksMatch = function(url, masks) {\n    if (!url) {\n        return false;\n    }\n    url = url.toLowerCase();\n\n    for (var i = 0; i < masks.length; i++) {\n        var mask = masks[i].toLowerCase();\n        if (isMaskMatch(url, window.deproxy ? window.deproxy({\n            href: mask\n        }).href : mask)) {\n            return true;\n        }\n    }\n    return false;\n};\n\nvar isMaskMatch = function(url, originalMask) {\n    var mask = '^';\n    var pos = 0;\n    while (originalMask.length > pos) {\n        var char = originalMask[pos];\n        if (char == '*') {\n            mask = mask + '.*';\n            pos = pos + 1;\n        } else if (char == '(') {\n            var posClosing = originalMask.indexOf(')', pos + 1);\n            var posNextOpening = originalMask.indexOf('(', pos + 1);\n            if (posClosing > pos && (posNextOpening < 0 || posClosing < posNextOpening)) {\n                mask = mask + '.*';\n                pos = posClosing + 1;\n            } else {\n                return false;\n            }\n        } else {\n            mask = mask + char;\n            pos = pos + 1;\n        }\n    }\n    mask = mask + '$';\n    mask = mask.replace('?', \"\\\\?\");\n    var r = new RegExp(mask);\n    return r.test(url);\n};\n\nvar waitForElement = function(elementSelector, timeoutValue){\n    var elementDeferred = Deferred();\n    var timeout = false;\n    domReadyDeferred.promise().then(function(){\n        setTimeout(function () {\n            timeout = true;\n        }, timeoutValue);\n    });\n\n    renderer.when(function(){\n        return timeout || dom.find(elementSelector).length;\n    })\n        .done(function(){ elementDeferred.resolve(); })\n        .fail(function(){ elementDeferred.reject(); });\n\n    return elementDeferred.promise();\n};\n\nvar getActionElement = function(selector, data) {\n    var deferred = Deferred();\n\n    if (selector) {\n        waitForElement(selector, 2000)\n            .done(function(){\n                var elements = dom.find(selector);\n                if (elements.length) {\n                    var elementData = {\n                        selector: selector,\n                        data: data\n                    };\n                    deferred.resolveWith(this, [elements[0], elementData]);\n                } else {\n                    deferred.reject();\n                }\n            })\n            .fail(function(){\n                deferred.reject();\n            });\n    } else {\n        deferred.reject();\n    }\n\n    return deferred.promise();\n};\n\nvar getCurrentUrl = function() {\n    return window.deproxy\n        ? window.deproxy(window.location).href\n        : window.location.href;\n};\n\nvar isActionRequired = function() {\n    return !config.urls\n        ? true\n        : !!isUrlMatched(\n            getCurrentUrl(),\n            config.urls.includedUrls,\n            config.urls.excludedUrls);\n};\n\nvar trackClicksAction = function(selectors) {\n    if (isActionRequired()) {\n        for(var selector in selectors){\n            getActionElement(selector, selectors[selector]).done(function (element, elementData){\n                if(element && (!element.attachedActions || !element.attachedActions[config.actionName])){\n                    actions.trackClicks(elementData.selector, {name: config.actionName, value:elementData.data.value, attribute:elementData.data.attr});\n                    if (!element.attachedActions) { element.attachedActions = {}; }\n                    element.attachedActions[config.actionName] = true;\n                }\n            });\n        }\n    }\n};\n\ntrackClicksAction(config.selectorsDefault);\n\ncampaign.events.on('urlChange', function(){ trackClicksAction(config.selectorsDefault); });\n\ncampaign.events.variantJsExecuted(function(elementName, variantName){\n    var selectorsAfter = (config.selectorsAfter[elementName] || {})[variantName.toLowerCase()] || {};\n    trackClicksAction(selectorsAfter);\n});\n","Order":4000,"HighLevelApiVersion":"1.23"}],"Elements":[],"Recommendations":[]},{"Name":"Late Deals - Redirect","Type":"ABnMVT","CSName":"","HighLevelApiVersion":"1.23","PagePrefix":"MDg5OTE4","Scripts":[{"Name":"Adobe Analytics","Type":"script","Attrs":{"type":"text/javascript"},"Data":"var config = {\n    \"eVar\": \"100\",\n    \"sVar\": \"\",\n    \"sProp\": \"\"\n}\ntry { if (window.self !== window.top) { return; } }\ncatch (e) { return; }\ncampaign.events.on('lastRequest', function() {\n    if (!isGenerated()) { return }\n    if (!isNewGeneration()) { return; }\n    waitForAdobe(function() {\n        setVariables();\n        sendPageview();\n    });\n});\n\nfunction isGenerated(){\n    var experienceData = getExperienceData();\n    return !!experienceData\n}\n\nfunction isNewGeneration() {\n    var experienceData = getExperienceData();\n    if (campaign.getData('adobe-integration') === experienceData) {\n        return false;\n    }\n    campaign.setData('adobe-integration', experienceData, 0);\n    return true;\n}\nfunction waitForAdobe(callback) {\n    var timeout = false;\n    when(function(){\n        return typeof window[config.sVar || 's'] === 'object';\n    }, function(){\n        return timeout;\n    }).done(function(){\n        callback();\n    });\n    setTimeout(function(){\n        timeout = true;\n    }, 10e3);\n}\nfunction setVariables(){\n    var data = campaign.getName() + (isProduction() ? '' : ' QA' ) + '=' + getExperienceData();\n    window[config.sVar || 's']['eVar' + config.eVar] = data;\n    window[config.sVar || 's']['prop' + config.sProp] = data;\n}\nfunction sendPageview(){\n    window[config.sVar || 's'].linkTrackVars = 'eVar' + config.eVar;\n    window[config.sVar || 's'].tl(true, 'o', 'Maxymiser' + (isProduction ? '' : ' QA'));\n}\nfunction getExperienceData(){\n    var experience = campaign.getExperience();\n    var variants = [];\n    for(var element in experience) {\n        variants.push(element + ':' + experience[element]);\n    }\n    return variants.join('|');\n}\nfunction isProduction(){\n    if (location.search.toLowerCase().indexOf('mmcore.') > -1) {\n        return false;\n    }\n    function removeExpiration(v) {\n        return v ? v.replace(/^\\d\\|/, '') : '';\n    }\n    var storage = mmsystem.getConfig().storageType;\n    if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n        if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n    var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n    var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n    var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n    var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n    var storageKeys = {\n        'mmparams.p': 1,\n        'mmparams.d': 1\n    };\n    var utils = {\n        'un': 1,\n        'cfgID': 1,\n        'pruh': 1\n    };\n    for (var l = storageTypes.length; l--;) {\n        var storageType = storageTypes[l];\n        for (var storageKey in (storageKeys || {})) {\n            for (var util in (utils || {})) {\n                if ((storageType[storageKey] || {})[util]) {\n                    return false;\n                }\n            }\n        }\n    }\n    function readCookieStorage(name) {\n        var res = {},\n            whole = '',\n            i = 0,\n            chunk;\n        while ((chunk = getCookie(name + i++))) {\n            whole += chunk;\n        }\n        whole = decodeURIComponent(whole);\n        try {\n            res = JSON.parse(whole);\n        } catch (e) {}\n        return res;\n    }\n    function getCookie(name) {\n        var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + '=([^;]+)');\n        var value = (document.cookie.match(r) || ['', ''])[1];\n        return value;\n    }\n    return true;\n}","Order":5000,"HighLevelApiVersion":"1.23"},{"Name":"Decibel Insight","Type":"script","Attrs":{"type":"text/javascript"},"Data":"try { if (window.self !== window.top) { return; } }\ncatch (e) { return; }\ncampaign.events.on('lastRequest', function() {\n    waitForDecibelInsight().done(send);\n});\nfunction waitForDecibelInsight() {\n    var timeout = false;\n    setTimeout(function(){\n        timeout = true;\n    }, 10e3);\n    return when(function(){\n        return typeof window.decibelInsight === 'function';\n    }, function(){\n        return timeout;\n    });\n     \n}\nfunction send(){\n    window.decibelInsight('ready', function() {\n        var experience = campaign.getName() + '=' + getExperienceData();\n        var key = isProduction() ? 'Maxymiser' : 'Maxymiser QA';\n        window.decibelInsight('sendIntegrationData', key, experience);\n    });\n}\n \nfunction getExperienceData(){\n    var experience = campaign.getExperience();\n    var variants = [];\n    for(var element in experience) {\n        variants.push(element + ':' + experience[element]);\n    }\n    return variants.join('|');\n}\n \nfunction isProduction(){\n    if (location.search.toLowerCase().indexOf('mmcore.') > -1) {\n        return false;\n    }\n    function removeExpiration(v) {\n        return v ? v.replace(/^\\d\\|/, '') : '';\n    }\n    var storage = mmsystem.getConfig().storageType;\n    if (storage === 'cookie-key-value' || storage === 'cookie-key-value-secure') {\n        if (/mmapi.p.cfgid/i.test(document.cookie) || /mmapi.p.un/i.test(document.cookie)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    var mmcoreP = readCookieStorage('mmcore.store.p.') || {};\n    var mmcoreS = readCookieStorage('mmcore.store.s.') || {};\n    var mmapiP = readCookieStorage('mmapi.store.p.') || {};\n    var mmapiS = readCookieStorage('mmapi.store.s.') || {};\n    var storageTypes = [mmcoreP, mmcoreS, mmapiP, mmapiS];\n    var storageKeys = {\n        'mmparams.p': 1,\n        'mmparams.d': 1\n    };\n    var utils = {\n        'un': 1,\n        'cfgID': 1,\n        'pruh': 1\n    };\n    for (var l = storageTypes.length; l--;) {\n        var storageType = storageTypes[l];\n        for (var storageKey in (storageKeys || {})) {\n            for (var util in (utils || {})) {\n                if ((storageType[storageKey] || {})[util]) {\n                    return false;\n                }\n            }\n        }\n    }\n    function readCookieStorage(name) {\n        var res = {},\n            whole = '',\n            i = 0,\n            chunk;\n        while ((chunk = getCookie(name + i++))) {\n            whole += chunk;\n        }\n        whole = decodeURIComponent(whole);\n        try {\n            res = JSON.parse(whole);\n        } catch (e) {}\n        return res;\n    }\n    function getCookie(name) {\n        var r = new RegExp('(?:^|; )' + encodeURIComponent(name).replace(/([.$?*|{}()\\[\\]\\\\\\/+^])/g, '\\\\$1') + '=([^;]+)'),\n            value = (document.cookie.match(r) || ['', ''])[1];\n        return value;\n    }\n    return true;\n}","Order":5000,"HighLevelApiVersion":"1.23"}],"Elements":[],"Recommendations":[]}],"MRRules":[],"PersistData":[{"Name":"srv","IsGlobal":false,"Value":"prodphxcgeu01","Expiration":365},{"Name":"bid","IsGlobal":false,"Value":"prodphxcgeu01","Expiration":0.00694},{"Name":"pd","IsGlobal":false,"Value":"THGf7Mr0HkWeDiBWGGdMs1MX1QXceLY8HuEh2zOdCyw=|AQAAAApDH4sIAAAAAAAEAGNhMPFPdrsgssiWgbkgo4JRiIHRieHqxNLnjAzMF08ssAy76QGjGYDgPxQwsLlkFqUmlzBeEGEEiYPBizJGhAIGNoZ0eUaGsvnujAyLlusyMki8cmFkWCUbw8iQZhfPyKAC1MLoCgAH578nfwAAAA==","Expiration":365}],"SiteInfo":[{"Url":"britishairways.com","ID":1124}],"SystemData":[{"Version":"1.0","RequestId":1,"ResponseId":1}],"GenInfo":{},"ServerAttributes":{"sessionStorage":"","FSDestination":"","kruxFreetext":"","dataLayerTier":"","FODestCookie":"","kruxEurope":"","kruxUSA":"","kruxCaribbean":"","kruxME":"","kruxSegments":"","kruxIO":"","kruxAsia":"","kruxAfrica":"","POUUpgrade":"","clicksteamPilot":""},"Iteration":"6BKaKC80E62QaPUGwlhkUibjwSc","Packages":["mmpackage-1.23.js"]});