(function(global,factory){"use strict";if(typeof module==="object"&&typeof module.exports==="object"){module.exports=global.document?factory(global,true):function(w){if(!w.document){throw new Error("jQuery requires a window with a document");}
return factory(w);};}else{factory(global);}})(typeof window!=="undefined"?window:this,function(window,noGlobal){"use strict";var arr=[];var document=window.document;var getProto=Object.getPrototypeOf;var slice=arr.slice;var concat=arr.concat;var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var fnToString=hasOwn.toString;var ObjectFunctionString=fnToString.call(Object);var support={};function DOMEval(code,doc){doc=doc||document;var script=doc.createElement("script");script.text=code;doc.head.appendChild(script).parentNode.removeChild(script);}
var
version="3.2.1",jQuery=function(selector,context){return new jQuery.fn.init(selector,context);},rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,rmsPrefix=/^-ms-/,rdashAlpha=/-([a-z])/g,fcamelCase=function(all,letter){return letter.toUpperCase();};jQuery.fn=jQuery.prototype={jquery:version,constructor:jQuery,length:0,toArray:function(){return slice.call(this);},get:function(num){if(num==null){return slice.call(this);}
return num<0?this[num+this.length]:this[num];},pushStack:function(elems){var ret=jQuery.merge(this.constructor(),elems);ret.prevObject=this;return ret;},each:function(callback){return jQuery.each(this,callback);},map:function(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},slice:function(){return this.pushStack(slice.apply(this,arguments));},first:function(){return this.eq(0);},last:function(){return this.eq(-1);},eq:function(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[]);},end:function(){return this.prevObject||this.constructor();},push:push,sort:arr.sort,splice:arr.splice};jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;if(typeof target==="boolean"){deep=target;target=arguments[i]||{};i++;}
if(typeof target!=="object"&&!jQuery.isFunction(target)){target={};}
if(i===length){target=this;i--;}
for(;i<length;i++){if((options=arguments[i])!=null){for(name in options){src=target[name];copy=options[name];if(target===copy){continue;}
if(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&Array.isArray(src)?src:[];}else{clone=src&&jQuery.isPlainObject(src)?src:{};}
target[name]=jQuery.extend(deep,clone,copy);}else if(copy!==undefined){target[name]=copy;}}}}
return target;};jQuery.extend({expando:"jQuery"+(version+Math.random()).replace(/\D/g,""),isReady:true,error:function(msg){throw new Error(msg);},noop:function(){},isFunction:function(obj){return jQuery.type(obj)==="function";},isWindow:function(obj){return obj!=null&&obj===obj.window;},isNumeric:function(obj){var type=jQuery.type(obj);return(type==="number"||type==="string")&&!isNaN(obj-parseFloat(obj));},isPlainObject:function(obj){var proto,Ctor;if(!obj||toString.call(obj)!=="[object Object]"){return false;}
proto=getProto(obj);if(!proto){return true;}
Ctor=hasOwn.call(proto,"constructor")&&proto.constructor;return typeof Ctor==="function"&&fnToString.call(Ctor)===ObjectFunctionString;},isEmptyObject:function(obj){var name;for(name in obj){return false;}
return true;},type:function(obj){if(obj==null){return obj+"";}
return typeof obj==="object"||typeof obj==="function"?class2type[toString.call(obj)]||"object":typeof obj;},globalEval:function(code){DOMEval(code);},camelCase:function(string){return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase);},each:function(obj,callback){var length,i=0;if(isArrayLike(obj)){length=obj.length;for(;i<length;i++){if(callback.call(obj[i],i,obj[i])===false){break;}}}else{for(i in obj){if(callback.call(obj[i],i,obj[i])===false){break;}}}
return obj;},trim:function(text){return text==null?"":(text+"").replace(rtrim,"");},makeArray:function(arr,results){var ret=results||[];if(arr!=null){if(isArrayLike(Object(arr))){jQuery.merge(ret,typeof arr==="string"?[arr]:arr);}else{push.call(ret,arr);}}
return ret;},inArray:function(elem,arr,i){return arr==null?-1:indexOf.call(arr,elem,i);},merge:function(first,second){var len=+second.length,j=0,i=first.length;for(;j<len;j++){first[i++]=second[j];}
first.length=i;return first;},grep:function(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;for(;i<length;i++){callbackInverse=!callback(elems[i],i);if(callbackInverse!==callbackExpect){matches.push(elems[i]);}}
return matches;},map:function(elems,callback,arg){var length,value,i=0,ret=[];if(isArrayLike(elems)){length=elems.length;for(;i<length;i++){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}else{for(i in elems){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}
return concat.apply([],ret);},guid:1,proxy:function(fn,context){var tmp,args,proxy;if(typeof context==="string"){tmp=fn[context];context=fn;fn=tmp;}
if(!jQuery.isFunction(fn)){return undefined;}
args=slice.call(arguments,2);proxy=function(){return fn.apply(context||this,args.concat(slice.call(arguments)));};proxy.guid=fn.guid=fn.guid||jQuery.guid++;return proxy;},now:Date.now,support:support});if(typeof Symbol==="function"){jQuery.fn[Symbol.iterator]=arr[Symbol.iterator];}
jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(i,name){class2type["[object "+name+"]"]=name.toLowerCase();});function isArrayLike(obj){var length=!!obj&&"length"in obj&&obj.length,type=jQuery.type(obj);if(type==="function"||jQuery.isWindow(obj)){return false;}
return type==="array"||length===0||typeof length==="number"&&length>0&&(length-1)in obj;}
var Sizzle=(function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,expando="sizzle"+1*new Date(),preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),sortOrder=function(a,b){if(a===b){hasDuplicate=true;}
return 0;},hasOwn=({}).hasOwnProperty,arr=[],pop=arr.pop,push_native=arr.push,push=arr.push,slice=arr.slice,indexOf=function(list,elem){var i=0,len=list.length;for(;i<len;i++){if(list[i]===elem){return i;}}
return-1;},booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",whitespace="[\\x20\\t\\r\\n\\f]",identifier="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",attributes="\\["+whitespace+"*("+identifier+")(?:"+whitespace+"*([*^$|!~]?=)"+whitespace+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+identifier+"))|)"+whitespace+"*\\]",pseudos=":("+identifier+")(?:\\(("+"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+"((?:\\\\.|[^\\\\()[\\]]|"+attributes+")*)|"+".*"+")\\)|)",rwhitespace=new RegExp(whitespace+"+","g"),rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),rattributeQuotes=new RegExp("="+whitespace+"*([^\\]'\"]*?)"+whitespace+"*\\]","g"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp("^"+identifier+"$"),matchExpr={"ID":new RegExp("^#("+identifier+")"),"CLASS":new RegExp("^\\.("+identifier+")"),"TAG":new RegExp("^("+identifier+"|[*])"),"ATTR":new RegExp("^"+attributes),"PSEUDO":new RegExp("^"+pseudos),"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+"*(\\d+)|))"+whitespace+"*\\)|)","i"),"bool":new RegExp("^(?:"+booleans+")$","i"),"needsContext":new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+
whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")},rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native \w/,rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,runescape=new RegExp("\\\\([\\da-f]{1,6}"+whitespace+"?|("+whitespace+")|.)","ig"),funescape=function(_,escaped,escapedWhitespace){var high="0x"+escaped-0x10000;return high!==high||escapedWhitespace?escaped:high<0?String.fromCharCode(high+0x10000):String.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);},rcssescape=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,fcssescape=function(ch,asCodePoint){if(asCodePoint){if(ch==="\0"){return"\uFFFD";}
return ch.slice(0,-1)+"\\"+ch.charCodeAt(ch.length-1).toString(16)+" ";}
return"\\"+ch;},unloadHandler=function(){setDocument();},disabledAncestor=addCombinator(function(elem){return elem.disabled===true&&("form"in elem||"label"in elem);},{dir:"parentNode",next:"legend"});try{push.apply((arr=slice.call(preferredDoc.childNodes)),preferredDoc.childNodes);arr[preferredDoc.childNodes.length].nodeType;}catch(e){push={apply:arr.length?function(target,els){push_native.apply(target,slice.call(els));}:function(target,els){var j=target.length,i=0;while((target[j++]=els[i++])){}
target.length=j-1;}};}
function Sizzle(selector,context,results,seed){var m,i,elem,nid,match,groups,newSelector,newContext=context&&context.ownerDocument,nodeType=context?context.nodeType:9;results=results||[];if(typeof selector!=="string"||!selector||nodeType!==1&&nodeType!==9&&nodeType!==11){return results;}
if(!seed){if((context?context.ownerDocument||context:preferredDoc)!==document){setDocument(context);}
context=context||document;if(documentIsHTML){if(nodeType!==11&&(match=rquickExpr.exec(selector))){if((m=match[1])){if(nodeType===9){if((elem=context.getElementById(m))){if(elem.id===m){results.push(elem);return results;}}else{return results;}}else{if(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results;}}}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results;}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results;}}
if(support.qsa&&!compilerCache[selector+" "]&&(!rbuggyQSA||!rbuggyQSA.test(selector))){if(nodeType!==1){newContext=context;newSelector=selector;}else if(context.nodeName.toLowerCase()!=="object"){if((nid=context.getAttribute("id"))){nid=nid.replace(rcssescape,fcssescape);}else{context.setAttribute("id",(nid=expando));}
groups=tokenize(selector);i=groups.length;while(i--){groups[i]="#"+nid+" "+toSelector(groups[i]);}
newSelector=groups.join(",");newContext=rsibling.test(selector)&&testContext(context.parentNode)||context;}
if(newSelector){try{push.apply(results,newContext.querySelectorAll(newSelector));return results;}catch(qsaError){}finally{if(nid===expando){context.removeAttribute("id");}}}}}}
return select(selector.replace(rtrim,"$1"),context,results,seed);}
function createCache(){var keys=[];function cache(key,value){if(keys.push(key+" ")>Expr.cacheLength){delete cache[keys.shift()];}
return(cache[key+" "]=value);}
return cache;}
function markFunction(fn){fn[expando]=true;return fn;}
function assert(fn){var el=document.createElement("fieldset");try{return!!fn(el);}catch(e){return false;}finally{if(el.parentNode){el.parentNode.removeChild(el);}
el=null;}}
function addHandle(attrs,handler){var arr=attrs.split("|"),i=arr.length;while(i--){Expr.attrHandle[arr[i]]=handler;}}
function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&a.sourceIndex-b.sourceIndex;if(diff){return diff;}
if(cur){while((cur=cur.nextSibling)){if(cur===b){return-1;}}}
return a?1:-1;}
function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type===type;};}
function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name==="input"||name==="button")&&elem.type===type;};}
function createDisabledPseudo(disabled){return function(elem){if("form"in elem){if(elem.parentNode&&elem.disabled===false){if("label"in elem){if("label"in elem.parentNode){return elem.parentNode.disabled===disabled;}else{return elem.disabled===disabled;}}
return elem.isDisabled===disabled||elem.isDisabled!==!disabled&&disabledAncestor(elem)===disabled;}
return elem.disabled===disabled;}else if("label"in elem){return elem.disabled===disabled;}
return false;};}
function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;while(i--){if(seed[(j=matchIndexes[i])]){seed[j]=!(matches[j]=seed[j]);}}});});}
function testContext(context){return context&&typeof context.getElementsByTagName!=="undefined"&&context;}
support=Sizzle.support={};isXML=Sizzle.isXML=function(elem){var documentElement=elem&&(elem.ownerDocument||elem).documentElement;return documentElement?documentElement.nodeName!=="HTML":false;};setDocument=Sizzle.setDocument=function(node){var hasCompare,subWindow,doc=node?node.ownerDocument||node:preferredDoc;if(doc===document||doc.nodeType!==9||!doc.documentElement){return document;}
document=doc;docElem=document.documentElement;documentIsHTML=!isXML(document);if(preferredDoc!==document&&(subWindow=document.defaultView)&&subWindow.top!==subWindow){if(subWindow.addEventListener){subWindow.addEventListener("unload",unloadHandler,false);}else if(subWindow.attachEvent){subWindow.attachEvent("onunload",unloadHandler);}}
support.attributes=assert(function(el){el.className="i";return!el.getAttribute("className");});support.getElementsByTagName=assert(function(el){el.appendChild(document.createComment(""));return!el.getElementsByTagName("*").length;});support.getElementsByClassName=rnative.test(document.getElementsByClassName);support.getById=assert(function(el){docElem.appendChild(el).id=expando;return!document.getElementsByName||!document.getElementsByName(expando).length;});if(support.getById){Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute("id")===attrId;};};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var elem=context.getElementById(id);return elem?[elem]:[];}};}else{Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!=="undefined"&&elem.getAttributeNode("id");return node&&node.value===attrId;};};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var node,i,elems,elem=context.getElementById(id);if(elem){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem];}
elems=context.getElementsByName(id);i=0;while((elem=elems[i++])){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem];}}}
return[];}};}
Expr.find["TAG"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!=="undefined"){return context.getElementsByTagName(tag);}else if(support.qsa){return context.querySelectorAll(tag);}}:function(tag,context){var elem,tmp=[],i=0,results=context.getElementsByTagName(tag);if(tag==="*"){while((elem=results[i++])){if(elem.nodeType===1){tmp.push(elem);}}
return tmp;}
return results;};Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!=="undefined"&&documentIsHTML){return context.getElementsByClassName(className);}};rbuggyMatches=[];rbuggyQSA=[];if((support.qsa=rnative.test(document.querySelectorAll))){assert(function(el){docElem.appendChild(el).innerHTML="<a id='"+expando+"'></a>"+"<select id='"+expando+"-\r\\' msallowcapture=''>"+"<option selected=''></option></select>";if(el.querySelectorAll("[msallowcapture^='']").length){rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")");}
if(!el.querySelectorAll("[selected]").length){rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")");}
if(!el.querySelectorAll("[id~="+expando+"-]").length){rbuggyQSA.push("~=");}
if(!el.querySelectorAll(":checked").length){rbuggyQSA.push(":checked");}
if(!el.querySelectorAll("a#"+expando+"+*").length){rbuggyQSA.push(".#.+[+~]");}});assert(function(el){el.innerHTML="<a href='' disabled='disabled'></a>"+"<select disabled='disabled'><option/></select>";var input=document.createElement("input");input.setAttribute("type","hidden");el.appendChild(input).setAttribute("name","D");if(el.querySelectorAll("[name=d]").length){rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?=");}
if(el.querySelectorAll(":enabled").length!==2){rbuggyQSA.push(":enabled",":disabled");}
docElem.appendChild(el).disabled=true;if(el.querySelectorAll(":disabled").length!==2){rbuggyQSA.push(":enabled",":disabled");}
el.querySelectorAll("*,:x");rbuggyQSA.push(",.*:");});}
if((support.matchesSelector=rnative.test((matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)))){assert(function(el){support.disconnectedMatch=matches.call(el,"*");matches.call(el,"[s!='']:x");rbuggyMatches.push("!=",pseudos);});}
rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));hasCompare=rnative.test(docElem.compareDocumentPosition);contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16));}:function(a,b){if(b){while((b=b.parentNode)){if(b===a){return true;}}}
return false;};sortOrder=hasCompare?function(a,b){if(a===b){hasDuplicate=true;return 0;}
var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare;}
compare=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1;if(compare&1||(!support.sortDetached&&b.compareDocumentPosition(a)===compare)){if(a===document||a.ownerDocument===preferredDoc&&contains(preferredDoc,a)){return-1;}
if(b===document||b.ownerDocument===preferredDoc&&contains(preferredDoc,b)){return 1;}
return sortInput?(indexOf(sortInput,a)-indexOf(sortInput,b)):0;}
return compare&4?-1:1;}:function(a,b){if(a===b){hasDuplicate=true;return 0;}
var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];if(!aup||!bup){return a===document?-1:b===document?1:aup?-1:bup?1:sortInput?(indexOf(sortInput,a)-indexOf(sortInput,b)):0;}else if(aup===bup){return siblingCheck(a,b);}
cur=a;while((cur=cur.parentNode)){ap.unshift(cur);}
cur=b;while((cur=cur.parentNode)){bp.unshift(cur);}
while(ap[i]===bp[i]){i++;}
return i?siblingCheck(ap[i],bp[i]):ap[i]===preferredDoc?-1:bp[i]===preferredDoc?1:0;};return document;};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements);};Sizzle.matchesSelector=function(elem,expr){if((elem.ownerDocument||elem)!==document){setDocument(elem);}
expr=expr.replace(rattributeQuotes,"='$1']");if(support.matchesSelector&&documentIsHTML&&!compilerCache[expr+" "]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);if(ret||support.disconnectedMatch||elem.document&&elem.document.nodeType!==11){return ret;}}catch(e){}}
return Sizzle(expr,document,null,[elem]).length>0;};Sizzle.contains=function(context,elem){if((context.ownerDocument||context)!==document){setDocument(context);}
return contains(context,elem);};Sizzle.attr=function(elem,name){if((elem.ownerDocument||elem)!==document){setDocument(elem);}
var fn=Expr.attrHandle[name.toLowerCase()],val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null;};Sizzle.escape=function(sel){return(sel+"").replace(rcssescape,fcssescape);};Sizzle.error=function(msg){throw new Error("Syntax error, unrecognized expression: "+msg);};Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;hasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while((elem=results[i++])){if(elem===results[i]){j=duplicates.push(i);}}
while(j--){results.splice(duplicates[j],1);}}
sortInput=null;return results;};getText=Sizzle.getText=function(elem){var node,ret="",i=0,nodeType=elem.nodeType;if(!nodeType){while((node=elem[i++])){ret+=getText(node);}}else if(nodeType===1||nodeType===9||nodeType===11){if(typeof elem.textContent==="string"){return elem.textContent;}else{for(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem);}}}else if(nodeType===3||nodeType===4){return elem.nodeValue;}
return ret;};Expr=Sizzle.selectors={cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{"ATTR":function(match){match[1]=match[1].replace(runescape,funescape);match[3]=(match[3]||match[4]||match[5]||"").replace(runescape,funescape);if(match[2]==="~="){match[3]=" "+match[3]+" ";}
return match.slice(0,4);},"CHILD":function(match){match[1]=match[1].toLowerCase();if(match[1].slice(0,3)==="nth"){if(!match[3]){Sizzle.error(match[0]);}
match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));match[5]=+((match[7]+match[8])||match[3]==="odd");}else if(match[3]){Sizzle.error(match[0]);}
return match;},"PSEUDO":function(match){var excess,unquoted=!match[6]&&match[2];if(matchExpr["CHILD"].test(match[0])){return null;}
if(match[3]){match[2]=match[4]||match[5]||"";}else if(unquoted&&rpseudo.test(unquoted)&&(excess=tokenize(unquoted,true))&&(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){match[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess);}
return match.slice(0,3);}},filter:{"TAG":function(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector==="*"?function(){return true;}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;};},"CLASS":function(className){var pattern=classCache[className+" "];return pattern||(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&classCache(className,function(elem){return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!=="undefined"&&elem.getAttribute("class")||"");});},"ATTR":function(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator==="!=";}
if(!operator){return true;}
result+="";return operator==="="?result===check:operator==="!="?result!==check:operator==="^="?check&&result.indexOf(check)===0:operator==="*="?check&&result.indexOf(check)>-1:operator==="$="?check&&result.slice(-check.length)===check:operator==="~="?(" "+result.replace(rwhitespace," ")+" ").indexOf(check)>-1:operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":false;};},"CHILD":function(type,what,argument,first,last){var simple=type.slice(0,3)!=="nth",forward=type.slice(-4)!=="last",ofType=what==="of-type";return first===1&&last===0?function(elem){return!!elem.parentNode;}:function(elem,context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?"nextSibling":"previousSibling",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=false;if(parent){if(simple){while(dir){node=elem;while((node=node[dir])){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false;}}
start=dir=type==="only"&&!start&&"nextSibling";}
return true;}
start=[forward?parent.firstChild:parent.lastChild];if(forward&&useCache){node=parent;outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while((node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop())){if(node.nodeType===1&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break;}}}else{if(useCache){node=elem;outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex;}
if(diff===false){while((node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop())){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){if(useCache){outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});uniqueCache[type]=[dirruns,diff];}
if(node===elem){break;}}}}}
diff-=last;return diff===first||(diff%first===0&&diff / first>=0);}};},"PSEUDO":function(pseudo,argument){var args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error("unsupported pseudo: "+pseudo);if(fn[expando]){return fn(argument);}
if(fn.length>1){args=[pseudo,pseudo,"",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i]);}}):function(elem){return fn(elem,0,args);};}
return fn;}},pseudos:{"not":markFunction(function(selector){var input=[],results=[],matcher=compile(selector.replace(rtrim,"$1"));return matcher[expando]?markFunction(function(seed,matches,context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;while(i--){if((elem=unmatched[i])){seed[i]=!(matches[i]=elem);}}}):function(elem,context,xml){input[0]=elem;matcher(input,null,xml,results);input[0]=null;return!results.pop();};}),"has":markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0;};}),"contains":markFunction(function(text){text=text.replace(runescape,funescape);return function(elem){return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)>-1;};}),"lang":markFunction(function(lang){if(!ridentifier.test(lang||"")){Sizzle.error("unsupported lang: "+lang);}
lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if((elemLang=documentIsHTML?elem.lang:elem.getAttribute("xml:lang")||elem.getAttribute("lang"))){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+"-")===0;}}while((elem=elem.parentNode)&&elem.nodeType===1);return false;};}),"target":function(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id;},"root":function(elem){return elem===docElem;},"focus":function(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);},"enabled":createDisabledPseudo(false),"disabled":createDisabledPseudo(true),"checked":function(elem){var nodeName=elem.nodeName.toLowerCase();return(nodeName==="input"&&!!elem.checked)||(nodeName==="option"&&!!elem.selected);},"selected":function(elem){if(elem.parentNode){elem.parentNode.selectedIndex;}
return elem.selected===true;},"empty":function(elem){for(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false;}}
return true;},"parent":function(elem){return!Expr.pseudos["empty"](elem);},"header":function(elem){return rheader.test(elem.nodeName);},"input":function(elem){return rinputs.test(elem.nodeName);},"button":function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type==="button"||name==="button";},"text":function(elem){var attr;return elem.nodeName.toLowerCase()==="input"&&elem.type==="text"&&((attr=elem.getAttribute("type"))==null||attr.toLowerCase()==="text");},"first":createPositionalPseudo(function(){return[0];}),"last":createPositionalPseudo(function(matchIndexes,length){return[length-1];}),"eq":createPositionalPseudo(function(matchIndexes,length,argument){return[argument<0?argument+length:argument];}),"even":createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i);}
return matchIndexes;}),"odd":createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i);}
return matchIndexes;}),"lt":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;--i>=0;){matchIndexes.push(i);}
return matchIndexes;}),"gt":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i);}
return matchIndexes;})}};Expr.pseudos["nth"]=Expr.pseudos["eq"];for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i);}
for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i);}
function setFilters(){}
setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters();tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+" "];if(cached){return parseOnly?0:cached.slice(0);}
soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){if(!matched||(match=rcomma.exec(soFar))){if(match){soFar=soFar.slice(match[0].length)||soFar;}
groups.push((tokens=[]));}
matched=false;if((match=rcombinators.exec(soFar))){matched=match.shift();tokens.push({value:matched,type:match[0].replace(rtrim," ")});soFar=soFar.slice(matched.length);}
for(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length);}}
if(!matched){break;}}
return parseOnly?soFar.length:soFar?Sizzle.error(selector):tokenCache(selector,groups).slice(0);};function toSelector(tokens){var i=0,len=tokens.length,selector="";for(;i<len;i++){selector+=tokens[i].value;}
return selector;}
function addCombinator(matcher,combinator,base){var dir=combinator.dir,skip=combinator.next,key=skip||dir,checkNonElements=base&&key==="parentNode",doneName=done++;return combinator.first?function(elem,context,xml){while((elem=elem[dir])){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml);}}
return false;}:function(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];if(xml){while((elem=elem[dir])){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true;}}}}else{while((elem=elem[dir])){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});uniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});if(skip&&skip===elem.nodeName.toLowerCase()){elem=elem[dir]||elem;}else if((oldCache=uniqueCache[key])&&oldCache[0]===dirruns&&oldCache[1]===doneName){return(newCache[2]=oldCache[2]);}else{uniqueCache[key]=newCache;if((newCache[2]=matcher(elem,context,xml))){return true;}}}}}
return false;};}
function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false;}}
return true;}:matchers[0];}
function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results);}
return results;}
function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if((elem=unmatched[i])){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i);}}}}
return newUnmatched;}
function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter);}
if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector);}
return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),matcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?postFinder||(seed?preFilter:preexisting||postFilter)?[]:results:matcherIn;if(matcher){matcher(matcherIn,matcherOut,context,xml);}
if(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);i=temp.length;while(i--){if((elem=temp[i])){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);}}}
if(seed){if(postFinder||preFilter){if(postFinder){temp=[];i=matcherOut.length;while(i--){if((elem=matcherOut[i])){temp.push((matcherIn[i]=elem));}}
postFinder(null,(matcherOut=[]),temp,xml);}
i=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem);}}}}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml);}else{push.apply(results,matcherOut);}}});}
function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[" "],i=leadingRelative?1:0,matchContext=addCombinator(function(elem){return elem===checkContext;},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem)>-1;},implicitRelative,true),matchers=[function(elem,context,xml){var ret=(!leadingRelative&&(xml||context!==outermostContext))||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));checkContext=null;return ret;}];for(;i<len;i++){if((matcher=Expr.relative[tokens[i].type])){matchers=[addCombinator(elementMatcher(matchers),matcher)];}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);if(matcher[expando]){j=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break;}}
return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})).replace(rtrim,"$1"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens((tokens=tokens.slice(j))),j<len&&toSelector(tokens));}
matchers.push(matcher);}}
return elementMatcher(matchers);}
function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i="0",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,elems=seed||byElement&&Expr.find["TAG"]("*",outermost),dirrunsUnique=(dirruns+=contextBackup==null?1:Math.random()||0.1),len=elems.length;if(outermost){outermostContext=context===document||context||outermost;}
for(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;if(!context&&elem.ownerDocument!==document){setDocument(elem);xml=!documentIsHTML;}
while((matcher=elementMatchers[j++])){if(matcher(elem,context||document,xml)){results.push(elem);break;}}
if(outermost){dirruns=dirrunsUnique;}}
if(bySet){if((elem=!matcher&&elem)){matchedCount--;}
if(seed){unmatched.push(elem);}}}
matchedCount+=i;if(bySet&&i!==matchedCount){j=0;while((matcher=setMatchers[j++])){matcher(unmatched,setMatched,context,xml);}
if(seed){if(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results);}}}
setMatched=condense(setMatched);}
push.apply(results,setMatched);if(outermost&&!seed&&setMatched.length>0&&(matchedCount+setMatchers.length)>1){Sizzle.uniqueSort(results);}}
if(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup;}
return unmatched;};return bySet?markFunction(superMatcher):superMatcher;}
compile=Sizzle.compile=function(selector,match){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+" "];if(!cached){if(!match){match=tokenize(selector);}
i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached);}else{elementMatchers.push(cached);}}
cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));cached.selector=selector;}
return cached;};select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector==="function"&&selector,match=!seed&&tokenize((selector=compiled.selector||selector));results=results||[];if(match.length===1){tokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type==="ID"&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results;}else if(compiled){context=context.parentNode;}
selector=selector.slice(tokens.shift().value.length);}
i=matchExpr["needsContext"].test(selector)?0:tokens.length;while(i--){token=tokens[i];if(Expr.relative[(type=token.type)]){break;}
if((find=Expr.find[type])){if((seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context))){tokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results;}
break;}}}}
(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context);return results;};support.sortStable=expando.split("").sort(sortOrder).join("")===expando;support.detectDuplicates=!!hasDuplicate;setDocument();support.sortDetached=assert(function(el){return el.compareDocumentPosition(document.createElement("fieldset"))&1;});if(!assert(function(el){el.innerHTML="<a href='#'></a>";return el.firstChild.getAttribute("href")==="#";})){addHandle("type|href|height|width",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()==="type"?1:2);}});}
if(!support.attributes||!assert(function(el){el.innerHTML="<input/>";el.firstChild.setAttribute("value","");return el.firstChild.getAttribute("value")==="";})){addHandle("value",function(elem,name,isXML){if(!isXML&&elem.nodeName.toLowerCase()==="input"){return elem.defaultValue;}});}
if(!assert(function(el){return el.getAttribute("disabled")==null;})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null;}});}
return Sizzle;})(window);jQuery.find=Sizzle;jQuery.expr=Sizzle.selectors;jQuery.expr[":"]=jQuery.expr.pseudos;jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;jQuery.text=Sizzle.getText;jQuery.isXMLDoc=Sizzle.isXML;jQuery.contains=Sizzle.contains;jQuery.escapeSelector=Sizzle.escape;var dir=function(elem,dir,until){var matched=[],truncate=until!==undefined;while((elem=elem[dir])&&elem.nodeType!==9){if(elem.nodeType===1){if(truncate&&jQuery(elem).is(until)){break;}
matched.push(elem);}}
return matched;};var siblings=function(n,elem){var matched=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==elem){matched.push(n);}}
return matched;};var rneedsContext=jQuery.expr.match.needsContext;function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();};var rsingleTag=(/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i);var risSimple=/^.[^:#\[\.,]*$/;function winnow(elements,qualifier,not){if(jQuery.isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){return!!qualifier.call(elem,i,elem)!==not;});}
if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return(elem===qualifier)!==not;});}
if(typeof qualifier!=="string"){return jQuery.grep(elements,function(elem){return(indexOf.call(qualifier,elem)>-1)!==not;});}
if(risSimple.test(qualifier)){return jQuery.filter(qualifier,elements,not);}
qualifier=jQuery.filter(qualifier,elements);return jQuery.grep(elements,function(elem){return(indexOf.call(qualifier,elem)>-1)!==not&&elem.nodeType===1;});}
jQuery.filter=function(expr,elems,not){var elem=elems[0];if(not){expr=":not("+expr+")";}
if(elems.length===1&&elem.nodeType===1){return jQuery.find.matchesSelector(elem,expr)?[elem]:[];}
return jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType===1;}));};jQuery.fn.extend({find:function(selector){var i,ret,len=this.length,self=this;if(typeof selector!=="string"){return this.pushStack(jQuery(selector).filter(function(){for(i=0;i<len;i++){if(jQuery.contains(self[i],this)){return true;}}}));}
ret=this.pushStack([]);for(i=0;i<len;i++){jQuery.find(selector,self[i],ret);}
return len>1?jQuery.uniqueSort(ret):ret;},filter:function(selector){return this.pushStack(winnow(this,selector||[],false));},not:function(selector){return this.pushStack(winnow(this,selector||[],true));},is:function(selector){return!!winnow(this,typeof selector==="string"&&rneedsContext.test(selector)?jQuery(selector):selector||[],false).length;}});var rootjQuery,rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,init=jQuery.fn.init=function(selector,context,root){var match,elem;if(!selector){return this;}
root=root||rootjQuery;if(typeof selector==="string"){if(selector[0]==="<"&&selector[selector.length-1]===">"&&selector.length>=3){match=[null,selector,null];}else{match=rquickExpr.exec(selector);}
if(match&&(match[1]||!context)){if(match[1]){context=context instanceof jQuery?context[0]:context;jQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,true));if(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){for(match in context){if(jQuery.isFunction(this[match])){this[match](context[match]);}else{this.attr(match,context[match]);}}}
return this;}else{elem=document.getElementById(match[2]);if(elem){this[0]=elem;this.length=1;}
return this;}}else if(!context||context.jquery){return(context||root).find(selector);}else{return this.constructor(context).find(selector);}}else if(selector.nodeType){this[0]=selector;this.length=1;return this;}else if(jQuery.isFunction(selector)){return root.ready!==undefined?root.ready(selector):selector(jQuery);}
return jQuery.makeArray(selector,this);};init.prototype=jQuery.fn;rootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,guaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.fn.extend({has:function(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i<l;i++){if(jQuery.contains(this,targets[i])){return true;}}});},closest:function(selectors,context){var cur,i=0,l=this.length,matched=[],targets=typeof selectors!=="string"&&jQuery(selectors);if(!rneedsContext.test(selectors)){for(;i<l;i++){for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){if(cur.nodeType<11&&(targets?targets.index(cur)>-1:cur.nodeType===1&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break;}}}}
return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched);},index:function(elem){if(!elem){return(this[0]&&this[0].parentNode)?this.first().prevAll().length:-1;}
if(typeof elem==="string"){return indexOf.call(jQuery(elem),this[0]);}
return indexOf.call(this,elem.jquery?elem[0]:elem);},add:function(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))));},addBack:function(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));}});function sibling(cur,dir){while((cur=cur[dir])&&cur.nodeType!==1){}
return cur;}
jQuery.each({parent:function(elem){var parent=elem.parentNode;return parent&&parent.nodeType!==11?parent:null;},parents:function(elem){return dir(elem,"parentNode");},parentsUntil:function(elem,i,until){return dir(elem,"parentNode",until);},next:function(elem){return sibling(elem,"nextSibling");},prev:function(elem){return sibling(elem,"previousSibling");},nextAll:function(elem){return dir(elem,"nextSibling");},prevAll:function(elem){return dir(elem,"previousSibling");},nextUntil:function(elem,i,until){return dir(elem,"nextSibling",until);},prevUntil:function(elem,i,until){return dir(elem,"previousSibling",until);},siblings:function(elem){return siblings((elem.parentNode||{}).firstChild,elem);},children:function(elem){return siblings(elem.firstChild);},contents:function(elem){if(nodeName(elem,"iframe")){return elem.contentDocument;}
if(nodeName(elem,"template")){elem=elem.content||elem;}
return jQuery.merge([],elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5)!=="Until"){selector=until;}
if(selector&&typeof selector==="string"){matched=jQuery.filter(selector,matched);}
if(this.length>1){if(!guaranteedUnique[name]){jQuery.uniqueSort(matched);}
if(rparentsprev.test(name)){matched.reverse();}}
return this.pushStack(matched);};});var rnothtmlwhite=(/[^\x20\t\r\n\f]+/g);function createOptions(options){var object={};jQuery.each(options.match(rnothtmlwhite)||[],function(_,flag){object[flag]=true;});return object;}
jQuery.Callbacks=function(options){options=typeof options==="string"?createOptions(options):jQuery.extend({},options);var
firing,memory,fired,locked,list=[],queue=[],firingIndex=-1,fire=function(){locked=locked||options.once;fired=firing=true;for(;queue.length;firingIndex=-1){memory=queue.shift();while(++firingIndex<list.length){if(list[firingIndex].apply(memory[0],memory[1])===false&&options.stopOnFalse){firingIndex=list.length;memory=false;}}}
if(!options.memory){memory=false;}
firing=false;if(locked){if(memory){list=[];}else{list="";}}},self={add:function(){if(list){if(memory&&!firing){firingIndex=list.length-1;queue.push(memory);}
(function add(args){jQuery.each(args,function(_,arg){if(jQuery.isFunction(arg)){if(!options.unique||!self.has(arg)){list.push(arg);}}else if(arg&&arg.length&&jQuery.type(arg)!=="string"){add(arg);}});})(arguments);if(memory&&!firing){fire();}}
return this;},remove:function(){jQuery.each(arguments,function(_,arg){var index;while((index=jQuery.inArray(arg,list,index))>-1){list.splice(index,1);if(index<=firingIndex){firingIndex--;}}});return this;},has:function(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0;},empty:function(){if(list){list=[];}
return this;},disable:function(){locked=queue=[];list=memory="";return this;},disabled:function(){return!list;},lock:function(){locked=queue=[];if(!memory&&!firing){list=memory="";}
return this;},locked:function(){return!!locked;},fireWith:function(context,args){if(!locked){args=args||[];args=[context,args.slice?args.slice():args];queue.push(args);if(!firing){fire();}}
return this;},fire:function(){self.fireWith(this,arguments);return this;},fired:function(){return!!fired;}};return self;};function Identity(v){return v;}
function Thrower(ex){throw ex;}
function adoptValue(value,resolve,reject,noValue){var method;try{if(value&&jQuery.isFunction((method=value.promise))){method.call(value).done(resolve).fail(reject);}else if(value&&jQuery.isFunction((method=value.then))){method.call(value,resolve,reject);}else{resolve.apply(undefined,[value].slice(noValue));}}catch(value){reject.apply(undefined,[value]);}}
jQuery.extend({Deferred:function(func){var tuples=[["notify","progress",jQuery.Callbacks("memory"),jQuery.Callbacks("memory"),2],["resolve","done",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),0,"resolved"],["reject","fail",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),1,"rejected"]],state="pending",promise={state:function(){return state;},always:function(){deferred.done(arguments).fail(arguments);return this;},"catch":function(fn){return promise.then(null,fn);},pipe:function(){var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(i,tuple){var fn=jQuery.isFunction(fns[tuple[4]])&&fns[tuple[4]];deferred[tuple[1]](function(){var returned=fn&&fn.apply(this,arguments);if(returned&&jQuery.isFunction(returned.promise)){returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);}else{newDefer[tuple[0]+"With"](this,fn?[returned]:arguments);}});});fns=null;}).promise();},then:function(onFulfilled,onRejected,onProgress){var maxDepth=0;function resolve(depth,deferred,handler,special){return function(){var that=this,args=arguments,mightThrow=function(){var returned,then;if(depth<maxDepth){return;}
returned=handler.apply(that,args);if(returned===deferred.promise()){throw new TypeError("Thenable self-resolution");}
then=returned&&(typeof returned==="object"||typeof returned==="function")&&returned.then;if(jQuery.isFunction(then)){if(special){then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special));}else{maxDepth++;then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special),resolve(maxDepth,deferred,Identity,deferred.notifyWith));}}else{if(handler!==Identity){that=undefined;args=[returned];}
(special||deferred.resolveWith)(that,args);}},process=special?mightThrow:function(){try{mightThrow();}catch(e){if(jQuery.Deferred.exceptionHook){jQuery.Deferred.exceptionHook(e,process.stackTrace);}
if(depth+1>=maxDepth){if(handler!==Thrower){that=undefined;args=[e];}
deferred.rejectWith(that,args);}}};if(depth){process();}else{if(jQuery.Deferred.getStackHook){process.stackTrace=jQuery.Deferred.getStackHook();}
window.setTimeout(process);}};}
return jQuery.Deferred(function(newDefer){tuples[0][3].add(resolve(0,newDefer,jQuery.isFunction(onProgress)?onProgress:Identity,newDefer.notifyWith));tuples[1][3].add(resolve(0,newDefer,jQuery.isFunction(onFulfilled)?onFulfilled:Identity));tuples[2][3].add(resolve(0,newDefer,jQuery.isFunction(onRejected)?onRejected:Thrower));}).promise();},promise:function(obj){return obj!=null?jQuery.extend(obj,promise):promise;}},deferred={};jQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[5];promise[tuple[1]]=list.add;if(stateString){list.add(function(){state=stateString;},tuples[3-i][2].disable,tuples[0][2].lock);}
list.add(tuple[3].fire);deferred[tuple[0]]=function(){deferred[tuple[0]+"With"](this===deferred?undefined:this,arguments);return this;};deferred[tuple[0]+"With"]=list.fireWith;});promise.promise(deferred);if(func){func.call(deferred,deferred);}
return deferred;},when:function(singleValue){var
remaining=arguments.length,i=remaining,resolveContexts=Array(i),resolveValues=slice.call(arguments),master=jQuery.Deferred(),updateFunc=function(i){return function(value){resolveContexts[i]=this;resolveValues[i]=arguments.length>1?slice.call(arguments):value;if(!(--remaining)){master.resolveWith(resolveContexts,resolveValues);}};};if(remaining<=1){adoptValue(singleValue,master.done(updateFunc(i)).resolve,master.reject,!remaining);if(master.state()==="pending"||jQuery.isFunction(resolveValues[i]&&resolveValues[i].then)){return master.then();}}
while(i--){adoptValue(resolveValues[i],updateFunc(i),master.reject);}
return master.promise();}});var rerrorNames=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;jQuery.Deferred.exceptionHook=function(error,stack){if(window.console&&window.console.warn&&error&&rerrorNames.test(error.name)){window.console.warn("jQuery.Deferred exception: "+error.message,error.stack,stack);}};jQuery.readyException=function(error){window.setTimeout(function(){throw error;});};var readyList=jQuery.Deferred();jQuery.fn.ready=function(fn){readyList.then(fn).catch(function(error){jQuery.readyException(error);});return this;};jQuery.extend({isReady:false,readyWait:1,ready:function(wait){if(wait===true?--jQuery.readyWait:jQuery.isReady){return;}
jQuery.isReady=true;if(wait!==true&&--jQuery.readyWait>0){return;}
readyList.resolveWith(document,[jQuery]);}});jQuery.ready.then=readyList.then;function completed(){document.removeEventListener("DOMContentLoaded",completed);window.removeEventListener("load",completed);jQuery.ready();}
if(document.readyState==="complete"||(document.readyState!=="loading"&&!document.documentElement.doScroll)){window.setTimeout(jQuery.ready);}else{document.addEventListener("DOMContentLoaded",completed);window.addEventListener("load",completed);}
var access=function(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key==null;if(jQuery.type(key)==="object"){chainable=true;for(i in key){access(elems,fn,i,key[i],true,emptyGet,raw);}}else if(value!==undefined){chainable=true;if(!jQuery.isFunction(value)){raw=true;}
if(bulk){if(raw){fn.call(elems,value);fn=null;}else{bulk=fn;fn=function(elem,key,value){return bulk.call(jQuery(elem),value);};}}
if(fn){for(;i<len;i++){fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));}}}
if(chainable){return elems;}
if(bulk){return fn.call(elems);}
return len?fn(elems[0],key):emptyGet;};var acceptData=function(owner){return owner.nodeType===1||owner.nodeType===9||!(+owner.nodeType);};function Data(){this.expando=jQuery.expando+Data.uid++;}
Data.uid=1;Data.prototype={cache:function(owner){var value=owner[this.expando];if(!value){value={};if(acceptData(owner)){if(owner.nodeType){owner[this.expando]=value;}else{Object.defineProperty(owner,this.expando,{value:value,configurable:true});}}}
return value;},set:function(owner,data,value){var prop,cache=this.cache(owner);if(typeof data==="string"){cache[jQuery.camelCase(data)]=value;}else{for(prop in data){cache[jQuery.camelCase(prop)]=data[prop];}}
return cache;},get:function(owner,key){return key===undefined?this.cache(owner):owner[this.expando]&&owner[this.expando][jQuery.camelCase(key)];},access:function(owner,key,value){if(key===undefined||((key&&typeof key==="string")&&value===undefined)){return this.get(owner,key);}
this.set(owner,key,value);return value!==undefined?value:key;},remove:function(owner,key){var i,cache=owner[this.expando];if(cache===undefined){return;}
if(key!==undefined){if(Array.isArray(key)){key=key.map(jQuery.camelCase);}else{key=jQuery.camelCase(key);key=key in cache?[key]:(key.match(rnothtmlwhite)||[]);}
i=key.length;while(i--){delete cache[key[i]];}}
if(key===undefined||jQuery.isEmptyObject(cache)){if(owner.nodeType){owner[this.expando]=undefined;}else{delete owner[this.expando];}}},hasData:function(owner){var cache=owner[this.expando];return cache!==undefined&&!jQuery.isEmptyObject(cache);}};var dataPriv=new Data();var dataUser=new Data();var rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,rmultiDash=/[A-Z]/g;function getData(data){if(data==="true"){return true;}
if(data==="false"){return false;}
if(data==="null"){return null;}
if(data===+data+""){return+data;}
if(rbrace.test(data)){return JSON.parse(data);}
return data;}
function dataAttr(elem,key,data){var name;if(data===undefined&&elem.nodeType===1){name="data-"+key.replace(rmultiDash,"-$&").toLowerCase();data=elem.getAttribute(name);if(typeof data==="string"){try{data=getData(data);}catch(e){}
dataUser.set(elem,key,data);}else{data=undefined;}}
return data;}
jQuery.extend({hasData:function(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem);},data:function(elem,name,data){return dataUser.access(elem,name,data);},removeData:function(elem,name){dataUser.remove(elem,name);},_data:function(elem,name,data){return dataPriv.access(elem,name,data);},_removeData:function(elem,name){dataPriv.remove(elem,name);}});jQuery.fn.extend({data:function(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;if(key===undefined){if(this.length){data=dataUser.get(elem);if(elem.nodeType===1&&!dataPriv.get(elem,"hasDataAttrs")){i=attrs.length;while(i--){if(attrs[i]){name=attrs[i].name;if(name.indexOf("data-")===0){name=jQuery.camelCase(name.slice(5));dataAttr(elem,name,data[name]);}}}
dataPriv.set(elem,"hasDataAttrs",true);}}
return data;}
if(typeof key==="object"){return this.each(function(){dataUser.set(this,key);});}
return access(this,function(value){var data;if(elem&&value===undefined){data=dataUser.get(elem,key);if(data!==undefined){return data;}
data=dataAttr(elem,key);if(data!==undefined){return data;}
return;}
this.each(function(){dataUser.set(this,key,value);});},null,value,arguments.length>1,null,true);},removeData:function(key){return this.each(function(){dataUser.remove(this,key);});}});jQuery.extend({queue:function(elem,type,data){var queue;if(elem){type=(type||"fx")+"queue";queue=dataPriv.get(elem,type);if(data){if(!queue||Array.isArray(data)){queue=dataPriv.access(elem,type,jQuery.makeArray(data));}else{queue.push(data);}}
return queue||[];}},dequeue:function(elem,type){type=type||"fx";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function(){jQuery.dequeue(elem,type);};if(fn==="inprogress"){fn=queue.shift();startLength--;}
if(fn){if(type==="fx"){queue.unshift("inprogress");}
delete hooks.stop;fn.call(elem,next,hooks);}
if(!startLength&&hooks){hooks.empty.fire();}},_queueHooks:function(elem,type){var key=type+"queueHooks";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks("once memory").add(function(){dataPriv.remove(elem,[type+"queue",key]);})});}});jQuery.fn.extend({queue:function(type,data){var setter=2;if(typeof type!=="string"){data=type;type="fx";setter--;}
if(arguments.length<setter){return jQuery.queue(this[0],type);}
return data===undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data);jQuery._queueHooks(this,type);if(type==="fx"&&queue[0]!=="inprogress"){jQuery.dequeue(this,type);}});},dequeue:function(type){return this.each(function(){jQuery.dequeue(this,type);});},clearQueue:function(type){return this.queue(type||"fx",[]);},promise:function(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function(){if(!(--count)){defer.resolveWith(elements,[elements]);}};if(typeof type!=="string"){obj=type;type=undefined;}
type=type||"fx";while(i--){tmp=dataPriv.get(elements[i],type+"queueHooks");if(tmp&&tmp.empty){count++;tmp.empty.add(resolve);}}
resolve();return defer.promise(obj);}});var pnum=(/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;var rcssNum=new RegExp("^(?:([+-])=|)("+pnum+")([a-z%]*)$","i");var cssExpand=["Top","Right","Bottom","Left"];var isHiddenWithinTree=function(elem,el){elem=el||elem;return elem.style.display==="none"||elem.style.display===""&&jQuery.contains(elem.ownerDocument,elem)&&jQuery.css(elem,"display")==="none";};var swap=function(elem,options,callback,args){var ret,name,old={};for(name in options){old[name]=elem.style[name];elem.style[name]=options[name];}
ret=callback.apply(elem,args||[]);for(name in options){elem.style[name]=old[name];}
return ret;};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale=1,maxIterations=20,currentValue=tween?function(){return tween.cur();}:function(){return jQuery.css(elem,prop,"");},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?"":"px"),initialInUnit=(jQuery.cssNumber[prop]||unit!=="px"&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){unit=unit||initialInUnit[3];valueParts=valueParts||[];initialInUnit=+initial||1;do{scale=scale||".5";initialInUnit=initialInUnit / scale;jQuery.style(elem,prop,initialInUnit+unit);}while(scale!==(scale=currentValue()/ initial)&&scale!==1&&--maxIterations);}
if(valueParts){initialInUnit=+initialInUnit||+initial||0;adjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2];if(tween){tween.unit=unit;tween.start=initialInUnit;tween.end=adjusted;}}
return adjusted;}
var defaultDisplayMap={};function getDefaultDisplay(elem){var temp,doc=elem.ownerDocument,nodeName=elem.nodeName,display=defaultDisplayMap[nodeName];if(display){return display;}
temp=doc.body.appendChild(doc.createElement(nodeName));display=jQuery.css(temp,"display");temp.parentNode.removeChild(temp);if(display==="none"){display="block";}
defaultDisplayMap[nodeName]=display;return display;}
function showHide(elements,show){var display,elem,values=[],index=0,length=elements.length;for(;index<length;index++){elem=elements[index];if(!elem.style){continue;}
display=elem.style.display;if(show){if(display==="none"){values[index]=dataPriv.get(elem,"display")||null;if(!values[index]){elem.style.display="";}}
if(elem.style.display===""&&isHiddenWithinTree(elem)){values[index]=getDefaultDisplay(elem);}}else{if(display!=="none"){values[index]="none";dataPriv.set(elem,"display",display);}}}
for(index=0;index<length;index++){if(values[index]!=null){elements[index].style.display=values[index];}}
return elements;}
jQuery.fn.extend({show:function(){return showHide(this,true);},hide:function(){return showHide(this);},toggle:function(state){if(typeof state==="boolean"){return state?this.show():this.hide();}
return this.each(function(){if(isHiddenWithinTree(this)){jQuery(this).show();}else{jQuery(this).hide();}});}});var rcheckableType=(/^(?:checkbox|radio)$/i);var rtagName=(/<([a-z][^\/\0>\x20\t\r\n\f]+)/i);var rscriptType=(/^$|\/(?:java|ecma)script/i);var wrapMap={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};wrapMap.optgroup=wrapMap.option;wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;function getAll(context,tag){var ret;if(typeof context.getElementsByTagName!=="undefined"){ret=context.getElementsByTagName(tag||"*");}else if(typeof context.querySelectorAll!=="undefined"){ret=context.querySelectorAll(tag||"*");}else{ret=[];}
if(tag===undefined||tag&&nodeName(context,tag)){return jQuery.merge([context],ret);}
return ret;}
function setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i<l;i++){dataPriv.set(elems[i],"globalEval",!refElements||dataPriv.get(refElements[i],"globalEval"));}}
var rhtml=/<|&#?\w+;/;function buildFragment(elems,context,scripts,selection,ignored){var elem,tmp,tag,wrap,contains,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i<l;i++){elem=elems[i];if(elem||elem===0){if(jQuery.type(elem)==="object"){jQuery.merge(nodes,elem.nodeType?[elem]:elem);}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem));}else{tmp=tmp||fragment.appendChild(context.createElement("div"));tag=(rtagName.exec(elem)||["",""])[1].toLowerCase();wrap=wrapMap[tag]||wrapMap._default;tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];j=wrap[0];while(j--){tmp=tmp.lastChild;}
jQuery.merge(nodes,tmp.childNodes);tmp=fragment.firstChild;tmp.textContent="";}}}
fragment.textContent="";i=0;while((elem=nodes[i++])){if(selection&&jQuery.inArray(elem,selection)>-1){if(ignored){ignored.push(elem);}
continue;}
contains=jQuery.contains(elem.ownerDocument,elem);tmp=getAll(fragment.appendChild(elem),"script");if(contains){setGlobalEval(tmp);}
if(scripts){j=0;while((elem=tmp[j++])){if(rscriptType.test(elem.type||"")){scripts.push(elem);}}}}
return fragment;}
(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement("div")),input=document.createElement("input");input.setAttribute("type","radio");input.setAttribute("checked","checked");input.setAttribute("name","t");div.appendChild(input);support.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;div.innerHTML="<textarea>x</textarea>";support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;})();var documentElement=document.documentElement;var
rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,rtypenamespace=/^([^.]*)(?:\.(.+)|)/;function returnTrue(){return true;}
function returnFalse(){return false;}
function safeActiveElement(){try{return document.activeElement;}catch(err){}}
function on(elem,types,selector,data,fn,one){var origFn,type;if(typeof types==="object"){if(typeof selector!=="string"){data=data||selector;selector=undefined;}
for(type in types){on(elem,type,selector,data,types[type],one);}
return elem;}
if(data==null&&fn==null){fn=selector;data=selector=undefined;}else if(fn==null){if(typeof selector==="string"){fn=data;data=undefined;}else{fn=data;data=selector;selector=undefined;}}
if(fn===false){fn=returnFalse;}else if(!fn){return elem;}
if(one===1){origFn=fn;fn=function(event){jQuery().off(event);return origFn.apply(this,arguments);};fn.guid=origFn.guid||(origFn.guid=jQuery.guid++);}
return elem.each(function(){jQuery.event.add(this,types,fn,data,selector);});}
jQuery.event={global:{},add:function(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);if(!elemData){return;}
if(handler.handler){handleObjIn=handler;handler=handleObjIn.handler;selector=handleObjIn.selector;}
if(selector){jQuery.find.matchesSelector(documentElement,selector);}
if(!handler.guid){handler.guid=jQuery.guid++;}
if(!(events=elemData.events)){events=elemData.events={};}
if(!(eventHandle=elemData.handle)){eventHandle=elemData.handle=function(e){return typeof jQuery!=="undefined"&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):undefined;};}
types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();if(!type){continue;}
special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;special=jQuery.event.special[type]||{};handleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(".")},handleObjIn);if(!(handlers=events[type])){handlers=events[type]=[];handlers.delegateCount=0;if(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){if(elem.addEventListener){elem.addEventListener(type,eventHandle);}}}
if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid=handler.guid;}}
if(selector){handlers.splice(handlers.delegateCount++,0,handleObj);}else{handlers.push(handleObj);}
jQuery.event.global[type]=true;}},remove:function(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(!elemData||!(events=elemData.events)){return;}
types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();if(!type){for(type in events){jQuery.event.remove(elem,type+types[t],handler,selector,true);}
continue;}
special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;handlers=events[type]||[];tmp=tmp[2]&&new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)");origCount=j=handlers.length;while(j--){handleObj=handlers[j];if((mappedTypes||origType===handleObj.origType)&&(!handler||handler.guid===handleObj.guid)&&(!tmp||tmp.test(handleObj.namespace))&&(!selector||selector===handleObj.selector||selector==="**"&&handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--;}
if(special.remove){special.remove.call(elem,handleObj);}}}
if(origCount&&!handlers.length){if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){jQuery.removeEvent(elem,type,elemData.handle);}
delete events[type];}}
if(jQuery.isEmptyObject(events)){dataPriv.remove(elem,"handle events");}},dispatch:function(nativeEvent){var event=jQuery.event.fix(nativeEvent);var i,j,ret,matched,handleObj,handlerQueue,args=new Array(arguments.length),handlers=(dataPriv.get(this,"events")||{})[event.type]||[],special=jQuery.event.special[event.type]||{};args[0]=event;for(i=1;i<arguments.length;i++){args[i]=arguments[i];}
event.delegateTarget=this;if(special.preDispatch&&special.preDispatch.call(this,event)===false){return;}
handlerQueue=jQuery.event.handlers.call(this,event,handlers);i=0;while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){event.currentTarget=matched.elem;j=0;while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){if(!event.rnamespace||event.rnamespace.test(handleObj.namespace)){event.handleObj=handleObj;event.data=handleObj.data;ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args);if(ret!==undefined){if((event.result=ret)===false){event.preventDefault();event.stopPropagation();}}}}}
if(special.postDispatch){special.postDispatch.call(this,event);}
return event.result;},handlers:function(event,handlers){var i,handleObj,sel,matchedHandlers,matchedSelectors,handlerQueue=[],delegateCount=handlers.delegateCount,cur=event.target;if(delegateCount&&cur.nodeType&&!(event.type==="click"&&event.button>=1)){for(;cur!==this;cur=cur.parentNode||this){if(cur.nodeType===1&&!(event.type==="click"&&cur.disabled===true)){matchedHandlers=[];matchedSelectors={};for(i=0;i<delegateCount;i++){handleObj=handlers[i];sel=handleObj.selector+" ";if(matchedSelectors[sel]===undefined){matchedSelectors[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length;}
if(matchedSelectors[sel]){matchedHandlers.push(handleObj);}}
if(matchedHandlers.length){handlerQueue.push({elem:cur,handlers:matchedHandlers});}}}}
cur=this;if(delegateCount<handlers.length){handlerQueue.push({elem:cur,handlers:handlers.slice(delegateCount)});}
return handlerQueue;},addProp:function(name,hook){Object.defineProperty(jQuery.Event.prototype,name,{enumerable:true,configurable:true,get:jQuery.isFunction(hook)?function(){if(this.originalEvent){return hook(this.originalEvent);}}:function(){if(this.originalEvent){return this.originalEvent[name];}},set:function(value){Object.defineProperty(this,name,{enumerable:true,configurable:true,writable:true,value:value});}});},fix:function(originalEvent){return originalEvent[jQuery.expando]?originalEvent:new jQuery.Event(originalEvent);},special:{load:{noBubble:true},focus:{trigger:function(){if(this!==safeActiveElement()&&this.focus){this.focus();return false;}},delegateType:"focusin"},blur:{trigger:function(){if(this===safeActiveElement()&&this.blur){this.blur();return false;}},delegateType:"focusout"},click:{trigger:function(){if(this.type==="checkbox"&&this.click&&nodeName(this,"input")){this.click();return false;}},_default:function(event){return nodeName(event.target,"a");}},beforeunload:{postDispatch:function(event){if(event.result!==undefined&&event.originalEvent){event.originalEvent.returnValue=event.result;}}}}};jQuery.removeEvent=function(elem,type,handle){if(elem.removeEventListener){elem.removeEventListener(type,handle);}};jQuery.Event=function(src,props){if(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props);}
if(src&&src.type){this.originalEvent=src;this.type=src.type;this.isDefaultPrevented=src.defaultPrevented||src.defaultPrevented===undefined&&src.returnValue===false?returnTrue:returnFalse;this.target=(src.target&&src.target.nodeType===3)?src.target.parentNode:src.target;this.currentTarget=src.currentTarget;this.relatedTarget=src.relatedTarget;}else{this.type=src;}
if(props){jQuery.extend(this,props);}
this.timeStamp=src&&src.timeStamp||jQuery.now();this[jQuery.expando]=true;};jQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,isSimulated:false,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue;if(e&&!this.isSimulated){e.preventDefault();}},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopPropagation();}},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopImmediatePropagation();}
this.stopPropagation();}};jQuery.each({altKey:true,bubbles:true,cancelable:true,changedTouches:true,ctrlKey:true,detail:true,eventPhase:true,metaKey:true,pageX:true,pageY:true,shiftKey:true,view:true,"char":true,charCode:true,key:true,keyCode:true,button:true,buttons:true,clientX:true,clientY:true,offsetX:true,offsetY:true,pointerId:true,pointerType:true,screenX:true,screenY:true,targetTouches:true,toElement:true,touches:true,which:function(event){var button=event.button;if(event.which==null&&rkeyEvent.test(event.type)){return event.charCode!=null?event.charCode:event.keyCode;}
if(!event.which&&button!==undefined&&rmouseEvent.test(event.type)){if(button&1){return 1;}
if(button&2){return 3;}
if(button&4){return 2;}
return 0;}
return event.which;}},jQuery.event.addProp);jQuery.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;if(!related||(related!==target&&!jQuery.contains(target,related))){event.type=handleObj.origType;ret=handleObj.handler.apply(this,arguments);event.type=fix;}
return ret;}};});jQuery.fn.extend({on:function(types,selector,data,fn){return on(this,types,selector,data,fn);},one:function(types,selector,data,fn){return on(this,types,selector,data,fn,1);},off:function(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj){handleObj=types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+"."+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this;}
if(typeof types==="object"){for(type in types){this.off(type,selector,types[type]);}
return this;}
if(selector===false||typeof selector==="function"){fn=selector;selector=undefined;}
if(fn===false){fn=returnFalse;}
return this.each(function(){jQuery.event.remove(this,types,fn,selector);});}});var
rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,rnoInnerhtml=/<script|<style|<link/i,rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,rscriptTypeMasked=/^true\/(.*)/,rcleanScript=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function manipulationTarget(elem,content){if(nodeName(elem,"table")&&nodeName(content.nodeType!==11?content:content.firstChild,"tr")){return jQuery(">tbody",elem)[0]||elem;}
return elem;}
function disableScript(elem){elem.type=(elem.getAttribute("type")!==null)+"/"+elem.type;return elem;}
function restoreScript(elem){var match=rscriptTypeMasked.exec(elem.type);if(match){elem.type=match[1];}else{elem.removeAttribute("type");}
return elem;}
function cloneCopyEvent(src,dest){var i,l,type,pdataOld,pdataCur,udataOld,udataCur,events;if(dest.nodeType!==1){return;}
if(dataPriv.hasData(src)){pdataOld=dataPriv.access(src);pdataCur=dataPriv.set(dest,pdataOld);events=pdataOld.events;if(events){delete pdataCur.handle;pdataCur.events={};for(type in events){for(i=0,l=events[type].length;i<l;i++){jQuery.event.add(dest,type,events[type][i]);}}}}
if(dataUser.hasData(src)){udataOld=dataUser.access(src);udataCur=jQuery.extend({},udataOld);dataUser.set(dest,udataCur);}}
function fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();if(nodeName==="input"&&rcheckableType.test(src.type)){dest.checked=src.checked;}else if(nodeName==="input"||nodeName==="textarea"){dest.defaultValue=src.defaultValue;}}
function domManip(collection,args,callback,ignored){args=concat.apply([],args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],isFunction=jQuery.isFunction(value);if(isFunction||(l>1&&typeof value==="string"&&!support.checkClone&&rchecked.test(value))){return collection.each(function(index){var self=collection.eq(index);if(isFunction){args[0]=value.call(this,index,self.html());}
domManip(self,args,callback,ignored);});}
if(l){fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);first=fragment.firstChild;if(fragment.childNodes.length===1){fragment=first;}
if(first||ignored){scripts=jQuery.map(getAll(fragment,"script"),disableScript);hasScripts=scripts.length;for(;i<l;i++){node=fragment;if(i!==iNoClone){node=jQuery.clone(node,true,true);if(hasScripts){jQuery.merge(scripts,getAll(node,"script"));}}
callback.call(collection[i],node,i);}
if(hasScripts){doc=scripts[scripts.length-1].ownerDocument;jQuery.map(scripts,restoreScript);for(i=0;i<hasScripts;i++){node=scripts[i];if(rscriptType.test(node.type||"")&&!dataPriv.access(node,"globalEval")&&jQuery.contains(doc,node)){if(node.src){if(jQuery._evalUrl){jQuery._evalUrl(node.src);}}else{DOMEval(node.textContent.replace(rcleanScript,""),doc);}}}}}}
return collection;}
function remove(elem,selector,keepData){var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;for(;(node=nodes[i])!=null;i++){if(!keepData&&node.nodeType===1){jQuery.cleanData(getAll(node));}
if(node.parentNode){if(keepData&&jQuery.contains(node.ownerDocument,node)){setGlobalEval(getAll(node,"script"));}
node.parentNode.removeChild(node);}}
return elem;}
jQuery.extend({htmlPrefilter:function(html){return html.replace(rxhtmlTag,"<$1></$2>");},clone:function(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=jQuery.contains(elem.ownerDocument,elem);if(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){destElements=getAll(clone);srcElements=getAll(elem);for(i=0,l=srcElements.length;i<l;i++){fixInput(srcElements[i],destElements[i]);}}
if(dataAndEvents){if(deepDataAndEvents){srcElements=srcElements||getAll(elem);destElements=destElements||getAll(clone);for(i=0,l=srcElements.length;i<l;i++){cloneCopyEvent(srcElements[i],destElements[i]);}}else{cloneCopyEvent(elem,clone);}}
destElements=getAll(clone,"script");if(destElements.length>0){setGlobalEval(destElements,!inPage&&getAll(elem,"script"));}
return clone;},cleanData:function(elems){var data,elem,type,special=jQuery.event.special,i=0;for(;(elem=elems[i])!==undefined;i++){if(acceptData(elem)){if((data=elem[dataPriv.expando])){if(data.events){for(type in data.events){if(special[type]){jQuery.event.remove(elem,type);}else{jQuery.removeEvent(elem,type,data.handle);}}}
elem[dataPriv.expando]=undefined;}
if(elem[dataUser.expando]){elem[dataUser.expando]=undefined;}}}}});jQuery.fn.extend({detach:function(selector){return remove(this,selector,true);},remove:function(selector){return remove(this,selector);},text:function(value){return access(this,function(value){return value===undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){this.textContent=value;}});},null,value,arguments.length);},append:function(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.appendChild(elem);}});},prepend:function(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild);}});},before:function(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this);}});},after:function(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling);}});},empty:function(){var elem,i=0;for(;(elem=this[i])!=null;i++){if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.textContent="";}}
return this;},clone:function(dataAndEvents,deepDataAndEvents){dataAndEvents=dataAndEvents==null?false:dataAndEvents;deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},html:function(value){return access(this,function(value){var elem=this[0]||{},i=0,l=this.length;if(value===undefined&&elem.nodeType===1){return elem.innerHTML;}
if(typeof value==="string"&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++){elem=this[i]||{};if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.innerHTML=value;}}
elem=0;}catch(e){}}
if(elem){this.empty().append(value);}},null,value,arguments.length);},replaceWith:function(){var ignored=[];return domManip(this,arguments,function(elem){var parent=this.parentNode;if(jQuery.inArray(this,ignored)<0){jQuery.cleanData(getAll(this));if(parent){parent.replaceChild(elem,this);}}},ignored);}});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;for(;i<=last;i++){elems=i===last?this:this.clone(true);jQuery(insert[i])[original](elems);push.apply(ret,elems.get());}
return this.pushStack(ret);};});var rmargin=(/^margin/);var rnumnonpx=new RegExp("^("+pnum+")(?!px)[a-z%]+$","i");var getStyles=function(elem){var view=elem.ownerDocument.defaultView;if(!view||!view.opener){view=window;}
return view.getComputedStyle(elem);};(function(){function computeStyleTests(){if(!div){return;}
div.style.cssText="box-sizing:border-box;"+"position:relative;display:block;"+"margin:auto;border:1px;padding:1px;"+"top:1%;width:50%";div.innerHTML="";documentElement.appendChild(container);var divStyle=window.getComputedStyle(div);pixelPositionVal=divStyle.top!=="1%";reliableMarginLeftVal=divStyle.marginLeft==="2px";boxSizingReliableVal=divStyle.width==="4px";div.style.marginRight="50%";pixelMarginRightVal=divStyle.marginRight==="4px";documentElement.removeChild(container);div=null;}
var pixelPositionVal,boxSizingReliableVal,pixelMarginRightVal,reliableMarginLeftVal,container=document.createElement("div"),div=document.createElement("div");if(!div.style){return;}
div.style.backgroundClip="content-box";div.cloneNode(true).style.backgroundClip="";support.clearCloneStyle=div.style.backgroundClip==="content-box";container.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;"+"padding:0;margin-top:1px;position:absolute";container.appendChild(div);jQuery.extend(support,{pixelPosition:function(){computeStyleTests();return pixelPositionVal;},boxSizingReliable:function(){computeStyleTests();return boxSizingReliableVal;},pixelMarginRight:function(){computeStyleTests();return pixelMarginRightVal;},reliableMarginLeft:function(){computeStyleTests();return reliableMarginLeftVal;}});})();function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,style=elem.style;computed=computed||getStyles(elem);if(computed){ret=computed.getPropertyValue(name)||computed[name];if(ret===""&&!jQuery.contains(elem.ownerDocument,elem)){ret=jQuery.style(elem,name);}
if(!support.pixelMarginRight()&&rnumnonpx.test(ret)&&rmargin.test(name)){width=style.width;minWidth=style.minWidth;maxWidth=style.maxWidth;style.minWidth=style.maxWidth=style.width=ret;ret=computed.width;style.width=width;style.minWidth=minWidth;style.maxWidth=maxWidth;}}
return ret!==undefined?ret+"":ret;}
function addGetHookIf(conditionFn,hookFn){return{get:function(){if(conditionFn()){delete this.get;return;}
return(this.get=hookFn).apply(this,arguments);}};}
var
rdisplayswap=/^(none|table(?!-c[ea]).+)/,rcustomProp=/^--/,cssShow={position:"absolute",visibility:"hidden",display:"block"},cssNormalTransform={letterSpacing:"0",fontWeight:"400"},cssPrefixes=["Webkit","Moz","ms"],emptyStyle=document.createElement("div").style;function vendorPropName(name){if(name in emptyStyle){return name;}
var capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;while(i--){name=cssPrefixes[i]+capName;if(name in emptyStyle){return name;}}}
function finalPropName(name){var ret=jQuery.cssProps[name];if(!ret){ret=jQuery.cssProps[name]=vendorPropName(name)||name;}
return ret;}
function setPositiveNumber(elem,value,subtract){var matches=rcssNum.exec(value);return matches?Math.max(0,matches[2]-(subtract||0))+(matches[3]||"px"):value;}
function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){var i,val=0;if(extra===(isBorderBox?"border":"content")){i=4;}else{i=name==="width"?1:0;}
for(;i<4;i+=2){if(extra==="margin"){val+=jQuery.css(elem,extra+cssExpand[i],true,styles);}
if(isBorderBox){if(extra==="content"){val-=jQuery.css(elem,"padding"+cssExpand[i],true,styles);}
if(extra!=="margin"){val-=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}}else{val+=jQuery.css(elem,"padding"+cssExpand[i],true,styles);if(extra!=="padding"){val+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}}}
return val;}
function getWidthOrHeight(elem,name,extra){var valueIsBorderBox,styles=getStyles(elem),val=curCSS(elem,name,styles),isBorderBox=jQuery.css(elem,"boxSizing",false,styles)==="border-box";if(rnumnonpx.test(val)){return val;}
valueIsBorderBox=isBorderBox&&(support.boxSizingReliable()||val===elem.style[name]);if(val==="auto"){val=elem["offset"+name[0].toUpperCase()+name.slice(1)];}
val=parseFloat(val)||0;return(val+
augmentWidthOrHeight(elem,name,extra||(isBorderBox?"border":"content"),valueIsBorderBox,styles))+"px";}
jQuery.extend({cssHooks:{opacity:{get:function(elem,computed){if(computed){var ret=curCSS(elem,"opacity");return ret===""?"1":ret;}}}},cssNumber:{"animationIterationCount":true,"columnCount":true,"fillOpacity":true,"flexGrow":true,"flexShrink":true,"fontWeight":true,"lineHeight":true,"opacity":true,"order":true,"orphans":true,"widows":true,"zIndex":true,"zoom":true},cssProps:{"float":"cssFloat"},style:function(elem,name,value,extra){if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){return;}
var ret,type,hooks,origName=jQuery.camelCase(name),isCustomProp=rcustomProp.test(name),style=elem.style;if(!isCustomProp){name=finalPropName(origName);}
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];if(value!==undefined){type=typeof value;if(type==="string"&&(ret=rcssNum.exec(value))&&ret[1]){value=adjustCSS(elem,name,ret);type="number";}
if(value==null||value!==value){return;}
if(type==="number"){value+=ret&&ret[3]||(jQuery.cssNumber[origName]?"":"px");}
if(!support.clearCloneStyle&&value===""&&name.indexOf("background")===0){style[name]="inherit";}
if(!hooks||!("set"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){if(isCustomProp){style.setProperty(name,value);}else{style[name]=value;}}}else{if(hooks&&"get"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){return ret;}
return style[name];}},css:function(elem,name,extra,styles){var val,num,hooks,origName=jQuery.camelCase(name),isCustomProp=rcustomProp.test(name);if(!isCustomProp){name=finalPropName(origName);}
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];if(hooks&&"get"in hooks){val=hooks.get(elem,true,extra);}
if(val===undefined){val=curCSS(elem,name,styles);}
if(val==="normal"&&name in cssNormalTransform){val=cssNormalTransform[name];}
if(extra===""||extra){num=parseFloat(val);return extra===true||isFinite(num)?num||0:val;}
return val;}});jQuery.each(["height","width"],function(i,name){jQuery.cssHooks[name]={get:function(elem,computed,extra){if(computed){return rdisplayswap.test(jQuery.css(elem,"display"))&&(!elem.getClientRects().length||!elem.getBoundingClientRect().width)?swap(elem,cssShow,function(){return getWidthOrHeight(elem,name,extra);}):getWidthOrHeight(elem,name,extra);}},set:function(elem,value,extra){var matches,styles=extra&&getStyles(elem),subtract=extra&&augmentWidthOrHeight(elem,name,extra,jQuery.css(elem,"boxSizing",false,styles)==="border-box",styles);if(subtract&&(matches=rcssNum.exec(value))&&(matches[3]||"px")!=="px"){elem.style[name]=value;value=jQuery.css(elem,name);}
return setPositiveNumber(elem,value,subtract);}};});jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,function(elem,computed){if(computed){return(parseFloat(curCSS(elem,"marginLeft"))||elem.getBoundingClientRect().left-
swap(elem,{marginLeft:0},function(){return elem.getBoundingClientRect().left;}))+"px";}});jQuery.each({margin:"",padding:"",border:"Width"},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function(value){var i=0,expanded={},parts=typeof value==="string"?value.split(" "):[value];for(;i<4;i++){expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];}
return expanded;}};if(!rmargin.test(prefix)){jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;}});jQuery.fn.extend({css:function(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(Array.isArray(name)){styles=getStyles(elem);len=name.length;for(;i<len;i++){map[name[i]]=jQuery.css(elem,name[i],false,styles);}
return map;}
return value!==undefined?jQuery.style(elem,name,value):jQuery.css(elem,name);},name,value,arguments.length>1);}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing);}
jQuery.Tween=Tween;Tween.prototype={constructor:Tween,init:function(elem,options,prop,end,easing,unit){this.elem=elem;this.prop=prop;this.easing=easing||jQuery.easing._default;this.options=options;this.start=this.now=this.cur();this.end=end;this.unit=unit||(jQuery.cssNumber[prop]?"":"px");},cur:function(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this);},run:function(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration);}else{this.pos=eased=percent;}
this.now=(this.end-this.start)*eased+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this);}
if(hooks&&hooks.set){hooks.set(this);}else{Tween.propHooks._default.set(this);}
return this;}};Tween.prototype.init.prototype=Tween.prototype;Tween.propHooks={_default:{get:function(tween){var result;if(tween.elem.nodeType!==1||tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){return tween.elem[tween.prop];}
result=jQuery.css(tween.elem,tween.prop,"");return!result||result==="auto"?0:result;},set:function(tween){if(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween);}else if(tween.elem.nodeType===1&&(tween.elem.style[jQuery.cssProps[tween.prop]]!=null||jQuery.cssHooks[tween.prop])){jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);}else{tween.elem[tween.prop]=tween.now;}}}};Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function(tween){if(tween.elem.nodeType&&tween.elem.parentNode){tween.elem[tween.prop]=tween.now;}}};jQuery.easing={linear:function(p){return p;},swing:function(p){return 0.5-Math.cos(p*Math.PI)/ 2;},_default:"swing"};jQuery.fx=Tween.prototype.init;jQuery.fx.step={};var
fxNow,inProgress,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;function schedule(){if(inProgress){if(document.hidden===false&&window.requestAnimationFrame){window.requestAnimationFrame(schedule);}else{window.setTimeout(schedule,jQuery.fx.interval);}
jQuery.fx.tick();}}
function createFxNow(){window.setTimeout(function(){fxNow=undefined;});return(fxNow=jQuery.now());}
function genFx(type,includeWidth){var which,i=0,attrs={height:type};includeWidth=includeWidth?1:0;for(;i<4;i+=2-includeWidth){which=cssExpand[i];attrs["margin"+which]=attrs["padding"+which]=type;}
if(includeWidth){attrs.opacity=attrs.width=type;}
return attrs;}
function createTween(value,prop,animation){var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners["*"]),index=0,length=collection.length;for(;index<length;index++){if((tween=collection[index].call(animation,prop,value))){return tween;}}}
function defaultPrefilter(elem,props,opts){var prop,value,toggle,hooks,oldfire,propTween,restoreDisplay,display,isBox="width"in props||"height"in props,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHiddenWithinTree(elem),dataShow=dataPriv.get(elem,"fxshow");if(!opts.queue){hooks=jQuery._queueHooks(elem,"fx");if(hooks.unqueued==null){hooks.unqueued=0;oldfire=hooks.empty.fire;hooks.empty.fire=function(){if(!hooks.unqueued){oldfire();}};}
hooks.unqueued++;anim.always(function(){anim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,"fx").length){hooks.empty.fire();}});});}
for(prop in props){value=props[prop];if(rfxtypes.test(value)){delete props[prop];toggle=toggle||value==="toggle";if(value===(hidden?"hide":"show")){if(value==="show"&&dataShow&&dataShow[prop]!==undefined){hidden=true;}else{continue;}}
orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);}}
propTween=!jQuery.isEmptyObject(props);if(!propTween&&jQuery.isEmptyObject(orig)){return;}
if(isBox&&elem.nodeType===1){opts.overflow=[style.overflow,style.overflowX,style.overflowY];restoreDisplay=dataShow&&dataShow.display;if(restoreDisplay==null){restoreDisplay=dataPriv.get(elem,"display");}
display=jQuery.css(elem,"display");if(display==="none"){if(restoreDisplay){display=restoreDisplay;}else{showHide([elem],true);restoreDisplay=elem.style.display||restoreDisplay;display=jQuery.css(elem,"display");showHide([elem]);}}
if(display==="inline"||display==="inline-block"&&restoreDisplay!=null){if(jQuery.css(elem,"float")==="none"){if(!propTween){anim.done(function(){style.display=restoreDisplay;});if(restoreDisplay==null){display=style.display;restoreDisplay=display==="none"?"":display;}}
style.display="inline-block";}}}
if(opts.overflow){style.overflow="hidden";anim.always(function(){style.overflow=opts.overflow[0];style.overflowX=opts.overflow[1];style.overflowY=opts.overflow[2];});}
propTween=false;for(prop in orig){if(!propTween){if(dataShow){if("hidden"in dataShow){hidden=dataShow.hidden;}}else{dataShow=dataPriv.access(elem,"fxshow",{display:restoreDisplay});}
if(toggle){dataShow.hidden=!hidden;}
if(hidden){showHide([elem],true);}
anim.done(function(){if(!hidden){showHide([elem]);}
dataPriv.remove(elem,"fxshow");for(prop in orig){jQuery.style(elem,prop,orig[prop]);}});}
propTween=createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop]=propTween.start;if(hidden){propTween.end=propTween.start;propTween.start=0;}}}}
function propFilter(props,specialEasing){var index,name,easing,value,hooks;for(index in props){name=jQuery.camelCase(index);easing=specialEasing[name];value=props[index];if(Array.isArray(value)){easing=value[1];value=props[index]=value[0];}
if(index!==name){props[name]=value;delete props[index];}
hooks=jQuery.cssHooks[name];if(hooks&&"expand"in hooks){value=hooks.expand(value);delete props[name];for(index in value){if(!(index in props)){props[index]=value[index];specialEasing[index]=easing;}}}else{specialEasing[name]=easing;}}}
function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always(function(){delete tick.elem;}),tick=function(){if(stopped){return false;}
var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),temp=remaining / animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;for(;index<length;index++){animation.tweens[index].run(percent);}
deferred.notifyWith(elem,[animation,percent,remaining]);if(percent<1&&length){return remaining;}
if(!length){deferred.notifyWith(elem,[animation,1,0]);}
deferred.resolveWith(elem,[animation]);return false;},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);animation.tweens.push(tween);return tween;},stop:function(gotoEnd){var index=0,length=gotoEnd?animation.tweens.length:0;if(stopped){return this;}
stopped=true;for(;index<length;index++){animation.tweens[index].run(1);}
if(gotoEnd){deferred.notifyWith(elem,[animation,1,0]);deferred.resolveWith(elem,[animation,gotoEnd]);}else{deferred.rejectWith(elem,[animation,gotoEnd]);}
return this;}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index<length;index++){result=Animation.prefilters[index].call(animation,elem,props,animation.opts);if(result){if(jQuery.isFunction(result.stop)){jQuery._queueHooks(animation.elem,animation.opts.queue).stop=jQuery.proxy(result.stop,result);}
return result;}}
jQuery.map(props,createTween,animation);if(jQuery.isFunction(animation.opts.start)){animation.opts.start.call(elem,animation);}
animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue}));return animation;}
jQuery.Animation=jQuery.extend(Animation,{tweeners:{"*":[function(prop,value){var tween=this.createTween(prop,value);adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);return tween;}]},tweener:function(props,callback){if(jQuery.isFunction(props)){callback=props;props=["*"];}else{props=props.match(rnothtmlwhite);}
var prop,index=0,length=props.length;for(;index<length;index++){prop=props[index];Animation.tweeners[prop]=Animation.tweeners[prop]||[];Animation.tweeners[prop].unshift(callback);}},prefilters:[defaultPrefilter],prefilter:function(callback,prepend){if(prepend){Animation.prefilters.unshift(callback);}else{Animation.prefilters.push(callback);}}});jQuery.speed=function(speed,easing,fn){var opt=speed&&typeof speed==="object"?jQuery.extend({},speed):{complete:fn||!fn&&easing||jQuery.isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFunction(easing)&&easing};if(jQuery.fx.off){opt.duration=0;}else{if(typeof opt.duration!=="number"){if(opt.duration in jQuery.fx.speeds){opt.duration=jQuery.fx.speeds[opt.duration];}else{opt.duration=jQuery.fx.speeds._default;}}}
if(opt.queue==null||opt.queue===true){opt.queue="fx";}
opt.old=opt.complete;opt.complete=function(){if(jQuery.isFunction(opt.old)){opt.old.call(this);}
if(opt.queue){jQuery.dequeue(this,opt.queue);}};return opt;};jQuery.fn.extend({fadeTo:function(speed,to,easing,callback){return this.filter(isHiddenWithinTree).css("opacity",0).show().end().animate({opacity:to},speed,easing,callback);},animate:function(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function(){var anim=Animation(this,jQuery.extend({},prop),optall);if(empty||dataPriv.get(this,"finish")){anim.stop(true);}};doAnimation.finish=doAnimation;return empty||optall.queue===false?this.each(doAnimation):this.queue(optall.queue,doAnimation);},stop:function(type,clearQueue,gotoEnd){var stopQueue=function(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd);};if(typeof type!=="string"){gotoEnd=clearQueue;clearQueue=type;type=undefined;}
if(clearQueue&&type!==false){this.queue(type||"fx",[]);}
return this.each(function(){var dequeue=true,index=type!=null&&type+"queueHooks",timers=jQuery.timers,data=dataPriv.get(this);if(index){if(data[index]&&data[index].stop){stopQueue(data[index]);}}else{for(index in data){if(data[index]&&data[index].stop&&rrun.test(index)){stopQueue(data[index]);}}}
for(index=timers.length;index--;){if(timers[index].elem===this&&(type==null||timers[index].queue===type)){timers[index].anim.stop(gotoEnd);dequeue=false;timers.splice(index,1);}}
if(dequeue||!gotoEnd){jQuery.dequeue(this,type);}});},finish:function(type){if(type!==false){type=type||"fx";}
return this.each(function(){var index,data=dataPriv.get(this),queue=data[type+"queue"],hooks=data[type+"queueHooks"],timers=jQuery.timers,length=queue?queue.length:0;data.finish=true;jQuery.queue(this,type,[]);if(hooks&&hooks.stop){hooks.stop.call(this,true);}
for(index=timers.length;index--;){if(timers[index].elem===this&&timers[index].queue===type){timers[index].anim.stop(true);timers.splice(index,1);}}
for(index=0;index<length;index++){if(queue[index]&&queue[index].finish){queue[index].finish.call(this);}}
delete data.finish;});}});jQuery.each(["toggle","show","hide"],function(i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return speed==null||typeof speed==="boolean"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback);};});jQuery.each({slideDown:genFx("show"),slideUp:genFx("hide"),slideToggle:genFx("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback);};});jQuery.timers=[];jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;fxNow=jQuery.now();for(;i<timers.length;i++){timer=timers[i];if(!timer()&&timers[i]===timer){timers.splice(i--,1);}}
if(!timers.length){jQuery.fx.stop();}
fxNow=undefined;};jQuery.fx.timer=function(timer){jQuery.timers.push(timer);jQuery.fx.start();};jQuery.fx.interval=13;jQuery.fx.start=function(){if(inProgress){return;}
inProgress=true;schedule();};jQuery.fx.stop=function(){inProgress=null;};jQuery.fx.speeds={slow:600,fast:200,_default:400};jQuery.fn.delay=function(time,type){time=jQuery.fx?jQuery.fx.speeds[time]||time:time;type=type||"fx";return this.queue(type,function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout);};});};(function(){var input=document.createElement("input"),select=document.createElement("select"),opt=select.appendChild(document.createElement("option"));input.type="checkbox";support.checkOn=input.value!=="";support.optSelected=opt.selected;input=document.createElement("input");input.value="t";input.type="radio";support.radioValue=input.value==="t";})();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function(name,value){return access(this,jQuery.attr,name,value,arguments.length>1);},removeAttr:function(name){return this.each(function(){jQuery.removeAttr(this,name);});}});jQuery.extend({attr:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(nType===3||nType===8||nType===2){return;}
if(typeof elem.getAttribute==="undefined"){return jQuery.prop(elem,name,value);}
if(nType!==1||!jQuery.isXMLDoc(elem)){hooks=jQuery.attrHooks[name.toLowerCase()]||(jQuery.expr.match.bool.test(name)?boolHook:undefined);}
if(value!==undefined){if(value===null){jQuery.removeAttr(elem,name);return;}
if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}
elem.setAttribute(name,value+"");return value;}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}
ret=jQuery.find.attr(elem,name);return ret==null?undefined:ret;},attrHooks:{type:{set:function(elem,value){if(!support.radioValue&&value==="radio"&&nodeName(elem,"input")){var val=elem.value;elem.setAttribute("type",value);if(val){elem.value=val;}
return value;}}}},removeAttr:function(elem,value){var name,i=0,attrNames=value&&value.match(rnothtmlwhite);if(attrNames&&elem.nodeType===1){while((name=attrNames[i++])){elem.removeAttribute(name);}}}});boolHook={set:function(elem,value,name){if(value===false){jQuery.removeAttr(elem,name);}else{elem.setAttribute(name,name);}
return name;}};jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle,lowercaseName=name.toLowerCase();if(!isXML){handle=attrHandle[lowercaseName];attrHandle[lowercaseName]=ret;ret=getter(elem,name,isXML)!=null?lowercaseName:null;attrHandle[lowercaseName]=handle;}
return ret;};});var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;jQuery.fn.extend({prop:function(name,value){return access(this,jQuery.prop,name,value,arguments.length>1);},removeProp:function(name){return this.each(function(){delete this[jQuery.propFix[name]||name];});}});jQuery.extend({prop:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(nType===3||nType===8||nType===2){return;}
if(nType!==1||!jQuery.isXMLDoc(elem)){name=jQuery.propFix[name]||name;hooks=jQuery.propHooks[name];}
if(value!==undefined){if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}
return(elem[name]=value);}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}
return elem[name];},propHooks:{tabIndex:{get:function(elem){var tabindex=jQuery.find.attr(elem,"tabindex");if(tabindex){return parseInt(tabindex,10);}
if(rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href){return 0;}
return-1;}}},propFix:{"for":"htmlFor","class":"className"}});if(!support.optSelected){jQuery.propHooks.selected={get:function(elem){var parent=elem.parentNode;if(parent&&parent.parentNode){parent.parentNode.selectedIndex;}
return null;},set:function(elem){var parent=elem.parentNode;if(parent){parent.selectedIndex;if(parent.parentNode){parent.parentNode.selectedIndex;}}}};}
jQuery.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){jQuery.propFix[this.toLowerCase()]=this;});function stripAndCollapse(value){var tokens=value.match(rnothtmlwhite)||[];return tokens.join(" ");}
function getClass(elem){return elem.getAttribute&&elem.getAttribute("class")||"";}
jQuery.fn.extend({addClass:function(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,getClass(this)));});}
if(typeof value==="string"&&value){classes=value.match(rnothtmlwhite)||[];while((elem=this[i++])){curValue=getClass(elem);cur=elem.nodeType===1&&(" "+stripAndCollapse(curValue)+" ");if(cur){j=0;while((clazz=classes[j++])){if(cur.indexOf(" "+clazz+" ")<0){cur+=clazz+" ";}}
finalValue=stripAndCollapse(cur);if(curValue!==finalValue){elem.setAttribute("class",finalValue);}}}}
return this;},removeClass:function(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)));});}
if(!arguments.length){return this.attr("class","");}
if(typeof value==="string"&&value){classes=value.match(rnothtmlwhite)||[];while((elem=this[i++])){curValue=getClass(elem);cur=elem.nodeType===1&&(" "+stripAndCollapse(curValue)+" ");if(cur){j=0;while((clazz=classes[j++])){while(cur.indexOf(" "+clazz+" ")>-1){cur=cur.replace(" "+clazz+" "," ");}}
finalValue=stripAndCollapse(cur);if(curValue!==finalValue){elem.setAttribute("class",finalValue);}}}}
return this;},toggleClass:function(value,stateVal){var type=typeof value;if(typeof stateVal==="boolean"&&type==="string"){return stateVal?this.addClass(value):this.removeClass(value);}
if(jQuery.isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal);});}
return this.each(function(){var className,i,self,classNames;if(type==="string"){i=0;self=jQuery(this);classNames=value.match(rnothtmlwhite)||[];while((className=classNames[i++])){if(self.hasClass(className)){self.removeClass(className);}else{self.addClass(className);}}}else if(value===undefined||type==="boolean"){className=getClass(this);if(className){dataPriv.set(this,"__className__",className);}
if(this.setAttribute){this.setAttribute("class",className||value===false?"":dataPriv.get(this,"__className__")||"");}}});},hasClass:function(selector){var className,elem,i=0;className=" "+selector+" ";while((elem=this[i++])){if(elem.nodeType===1&&(" "+stripAndCollapse(getClass(elem))+" ").indexOf(className)>-1){return true;}}
return false;}});var rreturn=/\r/g;jQuery.fn.extend({val:function(value){var hooks,ret,isFunction,elem=this[0];if(!arguments.length){if(elem){hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks&&"get"in hooks&&(ret=hooks.get(elem,"value"))!==undefined){return ret;}
ret=elem.value;if(typeof ret==="string"){return ret.replace(rreturn,"");}
return ret==null?"":ret;}
return;}
isFunction=jQuery.isFunction(value);return this.each(function(i){var val;if(this.nodeType!==1){return;}
if(isFunction){val=value.call(this,i,jQuery(this).val());}else{val=value;}
if(val==null){val="";}else if(typeof val==="number"){val+="";}else if(Array.isArray(val)){val=jQuery.map(val,function(value){return value==null?"":value+"";});}
hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){this.value=val;}});}});jQuery.extend({valHooks:{option:{get:function(elem){var val=jQuery.find.attr(elem,"value");return val!=null?val:stripAndCollapse(jQuery.text(elem));}},select:{get:function(elem){var value,option,i,options=elem.options,index=elem.selectedIndex,one=elem.type==="select-one",values=one?null:[],max=one?index+1:options.length;if(index<0){i=max;}else{i=one?index:0;}
for(;i<max;i++){option=options[i];if((option.selected||i===index)&&!option.disabled&&(!option.parentNode.disabled||!nodeName(option.parentNode,"optgroup"))){value=jQuery(option).val();if(one){return value;}
values.push(value);}}
return values;},set:function(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--){option=options[i];if(option.selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1){optionSet=true;}}
if(!optionSet){elem.selectedIndex=-1;}
return values;}}}});jQuery.each(["radio","checkbox"],function(){jQuery.valHooks[this]={set:function(elem,value){if(Array.isArray(value)){return(elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1);}}};if(!support.checkOn){jQuery.valHooks[this].get=function(elem){return elem.getAttribute("value")===null?"on":elem.value;};}});var rfocusMorph=/^(?:focusinfocus|focusoutblur)$/;jQuery.extend(jQuery.event,{trigger:function(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,eventPath=[elem||document],type=hasOwn.call(event,"type")?event.type:event,namespaces=hasOwn.call(event,"namespace")?event.namespace.split("."):[];cur=tmp=elem=elem||document;if(elem.nodeType===3||elem.nodeType===8){return;}
if(rfocusMorph.test(type+jQuery.event.triggered)){return;}
if(type.indexOf(".")>-1){namespaces=type.split(".");type=namespaces.shift();namespaces.sort();}
ontype=type.indexOf(":")<0&&"on"+type;event=event[jQuery.expando]?event:new jQuery.Event(type,typeof event==="object"&&event);event.isTrigger=onlyHandlers?2:3;event.namespace=namespaces.join(".");event.rnamespace=event.namespace?new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;event.result=undefined;if(!event.target){event.target=elem;}
data=data==null?[event]:jQuery.makeArray(data,[event]);special=jQuery.event.special[type]||{};if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){return;}
if(!onlyHandlers&&!special.noBubble&&!jQuery.isWindow(elem)){bubbleType=special.delegateType||type;if(!rfocusMorph.test(bubbleType+type)){cur=cur.parentNode;}
for(;cur;cur=cur.parentNode){eventPath.push(cur);tmp=cur;}
if(tmp===(elem.ownerDocument||document)){eventPath.push(tmp.defaultView||tmp.parentWindow||window);}}
i=0;while((cur=eventPath[i++])&&!event.isPropagationStopped()){event.type=i>1?bubbleType:special.bindType||type;handle=(dataPriv.get(cur,"events")||{})[event.type]&&dataPriv.get(cur,"handle");if(handle){handle.apply(cur,data);}
handle=ontype&&cur[ontype];if(handle&&handle.apply&&acceptData(cur)){event.result=handle.apply(cur,data);if(event.result===false){event.preventDefault();}}}
event.type=type;if(!onlyHandlers&&!event.isDefaultPrevented()){if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&acceptData(elem)){if(ontype&&jQuery.isFunction(elem[type])&&!jQuery.isWindow(elem)){tmp=elem[ontype];if(tmp){elem[ontype]=null;}
jQuery.event.triggered=type;elem[type]();jQuery.event.triggered=undefined;if(tmp){elem[ontype]=tmp;}}}}
return event.result;},simulate:function(type,elem,event){var e=jQuery.extend(new jQuery.Event(),event,{type:type,isSimulated:true});jQuery.event.trigger(e,null,elem);}});jQuery.fn.extend({trigger:function(type,data){return this.each(function(){jQuery.event.trigger(type,data,this);});},triggerHandler:function(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true);}}});jQuery.each(("blur focus focusin focusout resize scroll click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup contextmenu").split(" "),function(i,name){jQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name);};});jQuery.fn.extend({hover:function(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);}});support.focusin="onfocusin"in window;if(!support.focusin){jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){var handler=function(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event));};jQuery.event.special[fix]={setup:function(){var doc=this.ownerDocument||this,attaches=dataPriv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true);}
dataPriv.access(doc,fix,(attaches||0)+1);},teardown:function(){var doc=this.ownerDocument||this,attaches=dataPriv.access(doc,fix)-1;if(!attaches){doc.removeEventListener(orig,handler,true);dataPriv.remove(doc,fix);}else{dataPriv.access(doc,fix,attaches);}}};});}
var location=window.location;var nonce=jQuery.now();var rquery=(/\?/);jQuery.parseXML=function(data){var xml;if(!data||typeof data!=="string"){return null;}
try{xml=(new window.DOMParser()).parseFromString(data,"text/xml");}catch(e){xml=undefined;}
if(!xml||xml.getElementsByTagName("parsererror").length){jQuery.error("Invalid XML: "+data);}
return xml;};var
rbracket=/\[\]$/,rCRLF=/\r?\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(Array.isArray(obj)){jQuery.each(obj,function(i,v){if(traditional||rbracket.test(prefix)){add(prefix,v);}else{buildParams(prefix+"["+(typeof v==="object"&&v!=null?i:"")+"]",v,traditional,add);}});}else if(!traditional&&jQuery.type(obj)==="object"){for(name in obj){buildParams(prefix+"["+name+"]",obj[name],traditional,add);}}else{add(prefix,obj);}}
jQuery.param=function(a,traditional){var prefix,s=[],add=function(key,valueOrFunction){var value=jQuery.isFunction(valueOrFunction)?valueOrFunction():valueOrFunction;s[s.length]=encodeURIComponent(key)+"="+
encodeURIComponent(value==null?"":value);};if(Array.isArray(a)||(a.jquery&&!jQuery.isPlainObject(a))){jQuery.each(a,function(){add(this.name,this.value);});}else{for(prefix in a){buildParams(prefix,a[prefix],traditional,add);}}
return s.join("&");};jQuery.fn.extend({serialize:function(){return jQuery.param(this.serializeArray());},serializeArray:function(){return this.map(function(){var elements=jQuery.prop(this,"elements");return elements?jQuery.makeArray(elements):this;}).filter(function(){var type=this.type;return this.name&&!jQuery(this).is(":disabled")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type));}).map(function(i,elem){var val=jQuery(this).val();if(val==null){return null;}
if(Array.isArray(val)){return jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,"\r\n")};});}
return{name:elem.name,value:val.replace(rCRLF,"\r\n")};}).get();}});var
r20=/%20/g,rhash=/#.*$/,rantiCache=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \t]*([^\r\n]*)$/mg,rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\/\//,prefilters={},transports={},allTypes="*/".concat("*"),originAnchor=document.createElement("a");originAnchor.href=location.href;function addToPrefiltersOrTransports(structure){return function(dataTypeExpression,func){if(typeof dataTypeExpression!=="string"){func=dataTypeExpression;dataTypeExpression="*";}
var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnothtmlwhite)||[];if(jQuery.isFunction(func)){while((dataType=dataTypes[i++])){if(dataType[0]==="+"){dataType=dataType.slice(1)||"*";(structure[dataType]=structure[dataType]||[]).unshift(func);}else{(structure[dataType]=structure[dataType]||[]).push(func);}}}};}
function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=(structure===transports);function inspect(dataType){var selected;inspected[dataType]=true;jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport==="string"&&!seekingTransport&&!inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false;}else if(seekingTransport){return!(selected=dataTypeOrTransport);}});return selected;}
return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*");}
function ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src){if(src[key]!==undefined){(flatOptions[key]?target:(deep||(deep={})))[key]=src[key];}}
if(deep){jQuery.extend(true,target,deep);}
return target;}
function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;while(dataTypes[0]==="*"){dataTypes.shift();if(ct===undefined){ct=s.mimeType||jqXHR.getResponseHeader("Content-Type");}}
if(ct){for(type in contents){if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break;}}}
if(dataTypes[0]in responses){finalDataType=dataTypes[0];}else{for(type in responses){if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){finalDataType=type;break;}
if(!firstDataType){firstDataType=type;}}
finalDataType=finalDataType||firstDataType;}
if(finalDataType){if(finalDataType!==dataTypes[0]){dataTypes.unshift(finalDataType);}
return responses[finalDataType];}}
function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},dataTypes=s.dataTypes.slice();if(dataTypes[1]){for(conv in s.converters){converters[conv.toLowerCase()]=s.converters[conv];}}
current=dataTypes.shift();while(current){if(s.responseFields[current]){jqXHR[s.responseFields[current]]=response;}
if(!prev&&isSuccess&&s.dataFilter){response=s.dataFilter(response,s.dataType);}
prev=current;current=dataTypes.shift();if(current){if(current==="*"){current=prev;}else if(prev!=="*"&&prev!==current){conv=converters[prev+" "+current]||converters["* "+current];if(!conv){for(conv2 in converters){tmp=conv2.split(" ");if(tmp[1]===current){conv=converters[prev+" "+tmp[0]]||converters["* "+tmp[0]];if(conv){if(conv===true){conv=converters[conv2];}else if(converters[conv2]!==true){current=tmp[0];dataTypes.unshift(tmp[1]);}
break;}}}}
if(conv!==true){if(conv&&s.throws){response=conv(response);}else{try{response=conv(response);}catch(e){return{state:"parsererror",error:conv?e:"No conversion from "+prev+" to "+current};}}}}}}
return{state:"success",data:response};}
jQuery.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:location.href,type:"GET",isLocal:rlocalProtocol.test(location.protocol),global:true,processData:true,async:true,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":allTypes,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":true,"text json":JSON.parse,"text xml":jQuery.parseXML},flatOptions:{url:true,context:true}},ajaxSetup:function(target,settings){return settings?ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):ajaxExtend(jQuery.ajaxSettings,target);},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),ajax:function(url,options){if(typeof url==="object"){options=url;url=undefined;}
options=options||{};var transport,cacheURL,responseHeadersString,responseHeaders,timeoutTimer,urlAnchor,completed,fireGlobals,i,uncached,s=jQuery.ajaxSetup({},options),callbackContext=s.context||s,globalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,deferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks("once memory"),statusCode=s.statusCode||{},requestHeaders={},requestHeadersNames={},strAbort="canceled",jqXHR={readyState:0,getResponseHeader:function(key){var match;if(completed){if(!responseHeaders){responseHeaders={};while((match=rheaders.exec(responseHeadersString))){responseHeaders[match[1].toLowerCase()]=match[2];}}
match=responseHeaders[key.toLowerCase()];}
return match==null?null:match;},getAllResponseHeaders:function(){return completed?responseHeadersString:null;},setRequestHeader:function(name,value){if(completed==null){name=requestHeadersNames[name.toLowerCase()]=requestHeadersNames[name.toLowerCase()]||name;requestHeaders[name]=value;}
return this;},overrideMimeType:function(type){if(completed==null){s.mimeType=type;}
return this;},statusCode:function(map){var code;if(map){if(completed){jqXHR.always(map[jqXHR.status]);}else{for(code in map){statusCode[code]=[statusCode[code],map[code]];}}}
return this;},abort:function(statusText){var finalText=statusText||strAbort;if(transport){transport.abort(finalText);}
done(0,finalText);return this;}};deferred.promise(jqXHR);s.url=((url||s.url||location.href)+"").replace(rprotocol,location.protocol+"//");s.type=options.method||options.type||s.method||s.type;s.dataTypes=(s.dataType||"*").toLowerCase().match(rnothtmlwhite)||[""];if(s.crossDomain==null){urlAnchor=document.createElement("a");try{urlAnchor.href=s.url;urlAnchor.href=urlAnchor.href;s.crossDomain=originAnchor.protocol+"//"+originAnchor.host!==urlAnchor.protocol+"//"+urlAnchor.host;}catch(e){s.crossDomain=true;}}
if(s.data&&s.processData&&typeof s.data!=="string"){s.data=jQuery.param(s.data,s.traditional);}
inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);if(completed){return jqXHR;}
fireGlobals=jQuery.event&&s.global;if(fireGlobals&&jQuery.active++===0){jQuery.event.trigger("ajaxStart");}
s.type=s.type.toUpperCase();s.hasContent=!rnoContent.test(s.type);cacheURL=s.url.replace(rhash,"");if(!s.hasContent){uncached=s.url.slice(cacheURL.length);if(s.data){cacheURL+=(rquery.test(cacheURL)?"&":"?")+s.data;delete s.data;}
if(s.cache===false){cacheURL=cacheURL.replace(rantiCache,"$1");uncached=(rquery.test(cacheURL)?"&":"?")+"_="+(nonce++)+uncached;}
s.url=cacheURL+uncached;}else if(s.data&&s.processData&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0){s.data=s.data.replace(r20,"+");}
if(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL]);}
if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL]);}}
if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){jqXHR.setRequestHeader("Content-Type",s.contentType);}
jqXHR.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+
(s.dataTypes[0]!=="*"?", "+allTypes+"; q=0.01":""):s.accepts["*"]);for(i in s.headers){jqXHR.setRequestHeader(i,s.headers[i]);}
if(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||completed)){return jqXHR.abort();}
strAbort="abort";completeDeferred.add(s.complete);jqXHR.done(s.success);jqXHR.fail(s.error);transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);if(!transport){done(-1,"No Transport");}else{jqXHR.readyState=1;if(fireGlobals){globalEventContext.trigger("ajaxSend",[jqXHR,s]);}
if(completed){return jqXHR;}
if(s.async&&s.timeout>0){timeoutTimer=window.setTimeout(function(){jqXHR.abort("timeout");},s.timeout);}
try{completed=false;transport.send(requestHeaders,done);}catch(e){if(completed){throw e;}
done(-1,e);}}
function done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;if(completed){return;}
completed=true;if(timeoutTimer){window.clearTimeout(timeoutTimer);}
transport=undefined;responseHeadersString=headers||"";jqXHR.readyState=status>0?4:0;isSuccess=status>=200&&status<300||status===304;if(responses){response=ajaxHandleResponses(s,jqXHR,responses);}
response=ajaxConvert(s,response,jqXHR,isSuccess);if(isSuccess){if(s.ifModified){modified=jqXHR.getResponseHeader("Last-Modified");if(modified){jQuery.lastModified[cacheURL]=modified;}
modified=jqXHR.getResponseHeader("etag");if(modified){jQuery.etag[cacheURL]=modified;}}
if(status===204||s.type==="HEAD"){statusText="nocontent";}else if(status===304){statusText="notmodified";}else{statusText=response.state;success=response.data;error=response.error;isSuccess=!error;}}else{error=statusText;if(status||!statusText){statusText="error";if(status<0){status=0;}}}
jqXHR.status=status;jqXHR.statusText=(nativeStatusText||statusText)+"";if(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else{deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);}
jqXHR.statusCode(statusCode);statusCode=undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",[jqXHR,s,isSuccess?success:error]);}
completeDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger("ajaxComplete",[jqXHR,s]);if(!(--jQuery.active)){jQuery.event.trigger("ajaxStop");}}}
return jqXHR;},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json");},getScript:function(url,callback){return jQuery.get(url,undefined,callback,"script");}});jQuery.each(["get","post"],function(i,method){jQuery[method]=function(url,data,callback,type){if(jQuery.isFunction(data)){type=type||callback;callback=data;data=undefined;}
return jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url));};});jQuery._evalUrl=function(url){return jQuery.ajax({url:url,type:"GET",dataType:"script",cache:true,async:false,global:false,"throws":true});};jQuery.fn.extend({wrapAll:function(html){var wrap;if(this[0]){if(jQuery.isFunction(html)){html=html.call(this[0]);}
wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0]);}
wrap.map(function(){var elem=this;while(elem.firstElementChild){elem=elem.firstElementChild;}
return elem;}).append(this);}
return this;},wrapInner:function(html){if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i));});}
return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html);}else{self.append(html);}});},wrap:function(html){var isFunction=jQuery.isFunction(html);return this.each(function(i){jQuery(this).wrapAll(isFunction?html.call(this,i):html);});},unwrap:function(selector){this.parent(selector).not("body").each(function(){jQuery(this).replaceWith(this.childNodes);});return this;}});jQuery.expr.pseudos.hidden=function(elem){return!jQuery.expr.pseudos.visible(elem);};jQuery.expr.pseudos.visible=function(elem){return!!(elem.offsetWidth||elem.offsetHeight||elem.getClientRects().length);};jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest();}catch(e){}};var xhrSuccessStatus={0:200,1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&("withCredentials"in xhrSupported);support.ajax=xhrSupported=!!xhrSupported;jQuery.ajaxTransport(function(options){var callback,errorCallback;if(support.cors||xhrSupported&&!options.crossDomain){return{send:function(headers,complete){var i,xhr=options.xhr();xhr.open(options.type,options.url,options.async,options.username,options.password);if(options.xhrFields){for(i in options.xhrFields){xhr[i]=options.xhrFields[i];}}
if(options.mimeType&&xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType);}
if(!options.crossDomain&&!headers["X-Requested-With"]){headers["X-Requested-With"]="XMLHttpRequest";}
for(i in headers){xhr.setRequestHeader(i,headers[i]);}
callback=function(type){return function(){if(callback){callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.onreadystatechange=null;if(type==="abort"){xhr.abort();}else if(type==="error"){if(typeof xhr.status!=="number"){complete(0,"error");}else{complete(xhr.status,xhr.statusText);}}else{complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,(xhr.responseType||"text")!=="text"||typeof xhr.responseText!=="string"?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders());}}};};xhr.onload=callback();errorCallback=xhr.onerror=callback("error");if(xhr.onabort!==undefined){xhr.onabort=errorCallback;}else{xhr.onreadystatechange=function(){if(xhr.readyState===4){window.setTimeout(function(){if(callback){errorCallback();}});}};}
callback=callback("abort");try{xhr.send(options.hasContent&&options.data||null);}catch(e){if(callback){throw e;}}},abort:function(){if(callback){callback();}}};}});jQuery.ajaxPrefilter(function(s){if(s.crossDomain){s.contents.script=false;}});jQuery.ajaxSetup({accepts:{script:"text/javascript, application/javascript, "+"application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(text){jQuery.globalEval(text);return text;}}});jQuery.ajaxPrefilter("script",function(s){if(s.cache===undefined){s.cache=false;}
if(s.crossDomain){s.type="GET";}});jQuery.ajaxTransport("script",function(s){if(s.crossDomain){var script,callback;return{send:function(_,complete){script=jQuery("<script>").prop({charset:s.scriptCharset,src:s.url}).on("load error",callback=function(evt){script.remove();callback=null;if(evt){complete(evt.type==="error"?404:200,evt.type);}});document.head.appendChild(script[0]);},abort:function(){if(callback){callback();}}};}});var oldCallbacks=[],rjsonp=/(=)\?(?=&|$)|\?\?/;jQuery.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var callback=oldCallbacks.pop()||(jQuery.expando+"_"+(nonce++));this[callback]=true;return callback;}});jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?"url":typeof s.data==="string"&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&rjsonp.test(s.data)&&"data");if(jsonProp||s.dataTypes[0]==="jsonp"){callbackName=s.jsonpCallback=jQuery.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;if(jsonProp){s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName);}else if(s.jsonp!==false){s.url+=(rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName;}
s.converters["script json"]=function(){if(!responseContainer){jQuery.error(callbackName+" was not called");}
return responseContainer[0];};s.dataTypes[0]="json";overwritten=window[callbackName];window[callbackName]=function(){responseContainer=arguments;};jqXHR.always(function(){if(overwritten===undefined){jQuery(window).removeProp(callbackName);}else{window[callbackName]=overwritten;}
if(s[callbackName]){s.jsonpCallback=originalSettings.jsonpCallback;oldCallbacks.push(callbackName);}
if(responseContainer&&jQuery.isFunction(overwritten)){overwritten(responseContainer[0]);}
responseContainer=overwritten=undefined;});return"script";}});support.createHTMLDocument=(function(){var body=document.implementation.createHTMLDocument("").body;body.innerHTML="<form></form><form></form>";return body.childNodes.length===2;})();jQuery.parseHTML=function(data,context,keepScripts){if(typeof data!=="string"){return[];}
if(typeof context==="boolean"){keepScripts=context;context=false;}
var base,parsed,scripts;if(!context){if(support.createHTMLDocument){context=document.implementation.createHTMLDocument("");base=context.createElement("base");base.href=document.location.href;context.head.appendChild(base);}else{context=document;}}
parsed=rsingleTag.exec(data);scripts=!keepScripts&&[];if(parsed){return[context.createElement(parsed[1])];}
parsed=buildFragment([data],context,scripts);if(scripts&&scripts.length){jQuery(scripts).remove();}
return jQuery.merge([],parsed.childNodes);};jQuery.fn.load=function(url,params,callback){var selector,type,response,self=this,off=url.indexOf(" ");if(off>-1){selector=stripAndCollapse(url.slice(off));url=url.slice(0,off);}
if(jQuery.isFunction(params)){callback=params;params=undefined;}else if(params&&typeof params==="object"){type="POST";}
if(self.length>0){jQuery.ajax({url:url,type:type||"GET",dataType:"html",data:params}).done(function(responseText){response=arguments;self.html(selector?jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):responseText);}).always(callback&&function(jqXHR,status){self.each(function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR]);});});}
return this;};jQuery.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(i,type){jQuery.fn[type]=function(fn){return this.on(type,fn);};});jQuery.expr.pseudos.animated=function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem===fn.elem;}).length;};jQuery.offset={setOffset:function(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,"position"),curElem=jQuery(elem),props={};if(position==="static"){elem.style.position="relative";}
curOffset=curElem.offset();curCSSTop=jQuery.css(elem,"top");curCSSLeft=jQuery.css(elem,"left");calculatePosition=(position==="absolute"||position==="fixed")&&(curCSSTop+curCSSLeft).indexOf("auto")>-1;if(calculatePosition){curPosition=curElem.position();curTop=curPosition.top;curLeft=curPosition.left;}else{curTop=parseFloat(curCSSTop)||0;curLeft=parseFloat(curCSSLeft)||0;}
if(jQuery.isFunction(options)){options=options.call(elem,i,jQuery.extend({},curOffset));}
if(options.top!=null){props.top=(options.top-curOffset.top)+curTop;}
if(options.left!=null){props.left=(options.left-curOffset.left)+curLeft;}
if("using"in options){options.using.call(elem,props);}else{curElem.css(props);}}};jQuery.fn.extend({offset:function(options){if(arguments.length){return options===undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i);});}
var doc,docElem,rect,win,elem=this[0];if(!elem){return;}
if(!elem.getClientRects().length){return{top:0,left:0};}
rect=elem.getBoundingClientRect();doc=elem.ownerDocument;docElem=doc.documentElement;win=doc.defaultView;return{top:rect.top+win.pageYOffset-docElem.clientTop,left:rect.left+win.pageXOffset-docElem.clientLeft};},position:function(){if(!this[0]){return;}
var offsetParent,offset,elem=this[0],parentOffset={top:0,left:0};if(jQuery.css(elem,"position")==="fixed"){offset=elem.getBoundingClientRect();}else{offsetParent=this.offsetParent();offset=this.offset();if(!nodeName(offsetParent[0],"html")){parentOffset=offsetParent.offset();}
parentOffset={top:parentOffset.top+jQuery.css(offsetParent[0],"borderTopWidth",true),left:parentOffset.left+jQuery.css(offsetParent[0],"borderLeftWidth",true)};}
return{top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",true),left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",true)};},offsetParent:function(){return this.map(function(){var offsetParent=this.offsetParent;while(offsetParent&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.offsetParent;}
return offsetParent||documentElement;});}});jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(method,prop){var top="pageYOffset"===prop;jQuery.fn[method]=function(val){return access(this,function(elem,method,val){var win;if(jQuery.isWindow(elem)){win=elem;}else if(elem.nodeType===9){win=elem.defaultView;}
if(val===undefined){return win?win[prop]:elem[method];}
if(win){win.scrollTo(!top?val:win.pageXOffset,top?val:win.pageYOffset);}else{elem[method]=val;}},method,val,arguments.length);};});jQuery.each(["top","left"],function(i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed=curCSS(elem,prop);return rnumnonpx.test(computed)?jQuery(elem).position()[prop]+"px":computed;}});});jQuery.each({Height:"height",Width:"width"},function(name,type){jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},function(defaultExtra,funcName){jQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||typeof margin!=="boolean"),extra=defaultExtra||(margin===true||value===true?"margin":"border");return access(this,function(elem,type,value){var doc;if(jQuery.isWindow(elem)){return funcName.indexOf("outer")===0?elem["inner"+name]:elem.document.documentElement["client"+name];}
if(elem.nodeType===9){doc=elem.documentElement;return Math.max(elem.body["scroll"+name],doc["scroll"+name],elem.body["offset"+name],doc["offset"+name],doc["client"+name]);}
return value===undefined?jQuery.css(elem,type,extra):jQuery.style(elem,type,value,extra);},type,chainable?margin:undefined,chainable);};});});jQuery.fn.extend({bind:function(types,data,fn){return this.on(types,null,data,fn);},unbind:function(types,fn){return this.off(types,null,fn);},delegate:function(selector,types,data,fn){return this.on(types,selector,data,fn);},undelegate:function(selector,types,fn){return arguments.length===1?this.off(selector,"**"):this.off(types,selector||"**",fn);}});jQuery.holdReady=function(hold){if(hold){jQuery.readyWait++;}else{jQuery.ready(true);}};jQuery.isArray=Array.isArray;jQuery.parseJSON=JSON.parse;jQuery.nodeName=nodeName;if(typeof define==="function"&&define.amd){define("jquery",[],function(){return jQuery;});}
var
_jQuery=window.jQuery,_$=window.$;jQuery.noConflict=function(deep){if(window.$===jQuery){window.$=_$;}
if(deep&&window.jQuery===jQuery){window.jQuery=_jQuery;}
return jQuery;};if(!noGlobal){window.jQuery=window.$=jQuery;}
return jQuery;});;;window.yii=(function($){var pub={reloadableScripts:[],clickableSelector:'a, button, input[type="submit"], input[type="button"], input[type="reset"], '+'input[type="image"]',changeableSelector:'select, input, textarea',getCsrfParam:function(){return $('meta[name=csrf-param]').attr('content');},getCsrfToken:function(){return $('meta[name=csrf-token]').attr('content');},setCsrfToken:function(name,value){$('meta[name=csrf-param]').attr('content',name);$('meta[name=csrf-token]').attr('content',value);},refreshCsrfToken:function(){var token=pub.getCsrfToken();if(token){$('form input[name="'+pub.getCsrfParam()+'"]').val(token);}},confirm:function(message,ok,cancel){if(window.confirm(message)){!ok||ok();}else{!cancel||cancel();}},handleAction:function($e,event){var $form=$e.attr('data-form')?$('#'+$e.attr('data-form')):$e.closest('form'),method=!$e.data('method')&&$form?$form.attr('method'):$e.data('method'),action=$e.attr('href'),isValidAction=action&&action!=='#',params=$e.data('params'),areValidParams=params&&$.isPlainObject(params),pjax=$e.data('pjax'),usePjax=pjax!==undefined&&pjax!==0&&$.support.pjax,pjaxContainer,pjaxOptions={};if(usePjax){pjaxContainer=$e.data('pjax-container');if(pjaxContainer===undefined||!pjaxContainer.length){pjaxContainer=$e.closest('[data-pjax-container]').attr('id')?('#'+$e.closest('[data-pjax-container]').attr('id')):'';}
if(!pjaxContainer.length){pjaxContainer='body';}
pjaxOptions={container:pjaxContainer,push:!!$e.data('pjax-push-state'),replace:!!$e.data('pjax-replace-state'),scrollTo:$e.data('pjax-scrollto'),pushRedirect:$e.data('pjax-push-redirect'),replaceRedirect:$e.data('pjax-replace-redirect'),skipOuterContainers:$e.data('pjax-skip-outer-containers'),timeout:$e.data('pjax-timeout'),originalEvent:event,originalTarget:$e};}
if(method===undefined){if(isValidAction){usePjax?$.pjax.click(event,pjaxOptions):window.location.assign(action);}else if($e.is(':submit')&&$form.length){if(usePjax){$form.on('submit',function(e){$.pjax.submit(e,pjaxOptions);});}
$form.trigger('submit');}
return;}
var oldMethod,oldAction,newForm=!$form.length;if(!newForm){oldMethod=$form.attr('method');$form.attr('method',method);if(isValidAction){oldAction=$form.attr('action');$form.attr('action',action);}}else{if(!isValidAction){action=pub.getCurrentUrl();}
$form=$('<form/>',{method:method,action:action});var target=$e.attr('target');if(target){$form.attr('target',target);}
if(!/(get|post)/i.test(method)){$form.append($('<input/>',{name:'_method',value:method,type:'hidden'}));method='post';$form.attr('method',method);}
if(/post/i.test(method)){var csrfParam=pub.getCsrfParam();if(csrfParam){$form.append($('<input/>',{name:csrfParam,value:pub.getCsrfToken(),type:'hidden'}));}}
$form.hide().appendTo('body');}
var activeFormData=$form.data('yiiActiveForm');if(activeFormData){activeFormData.submitObject=$e;}
if(areValidParams){$.each(params,function(name,value){$form.append($('<input/>').attr({name:name,value:value,type:'hidden'}));});}
if(usePjax){$form.on('submit',function(e){$.pjax.submit(e,pjaxOptions);});}
$form.trigger('submit');$.when($form.data('yiiSubmitFinalizePromise')).done(function(){if(newForm){$form.remove();return;}
if(oldAction!==undefined){$form.attr('action',oldAction);}
$form.attr('method',oldMethod);if(areValidParams){$.each(params,function(name){$('input[name="'+name+'"]',$form).remove();});}});},getQueryParams:function(url){var pos=url.indexOf('?');if(pos<0){return{};}
var pairs=$.grep(url.substring(pos+1).split('#')[0].split('&'),function(value){return value!=='';});var params={};for(var i=0,len=pairs.length;i<len;i++){var pair=pairs[i].split('=');var name=decodeURIComponent(pair[0].replace(/\+/g,'%20'));var value=decodeURIComponent(pair[1].replace(/\+/g,'%20'));if(!name.length){continue;}
if(params[name]===undefined){params[name]=value||'';}else{if(!$.isArray(params[name])){params[name]=[params[name]];}
params[name].push(value||'');}}
return params;},initModule:function(module){if(module.isActive!==undefined&&!module.isActive){return;}
if($.isFunction(module.init)){module.init();}
$.each(module,function(){if($.isPlainObject(this)){pub.initModule(this);}});},init:function(){initCsrfHandler();initRedirectHandler();initAssetFilters();initDataMethods();},getBaseCurrentUrl:function(){return window.location.protocol+'//'+window.location.host;},getCurrentUrl:function(){return window.location.href;}};function initCsrfHandler(){$.ajaxPrefilter(function(options,originalOptions,xhr){if(!options.crossDomain&&pub.getCsrfParam()){xhr.setRequestHeader('X-CSRF-Token',pub.getCsrfToken());}});pub.refreshCsrfToken();}
function initRedirectHandler(){$(document).ajaxComplete(function(event,xhr){var url=xhr&&xhr.getResponseHeader('X-Redirect');if(url){window.location.assign(url);}});}
function initAssetFilters(){var loadedScripts={};$('script[src]').each(function(){var url=getAbsoluteUrl(this.src);loadedScripts[url]=true;});$.ajaxPrefilter('script',function(options,originalOptions,xhr){if(options.dataType=='jsonp'){return;}
var url=getAbsoluteUrl(options.url),forbiddenRepeatedLoad=loadedScripts[url]===true&&!isReloadableAsset(url),cleanupRunning=loadedScripts[url]!==undefined&&loadedScripts[url]['xhrDone']===true;if(forbiddenRepeatedLoad||cleanupRunning){xhr.abort();return;}
if(loadedScripts[url]===undefined||loadedScripts[url]===true){loadedScripts[url]={xhrList:[],xhrDone:false};}
xhr.done(function(data,textStatus,jqXHR){if(loadedScripts[jqXHR.yiiUrl]['xhrDone']===true){return;}
loadedScripts[jqXHR.yiiUrl]['xhrDone']=true;for(var i=0,len=loadedScripts[jqXHR.yiiUrl]['xhrList'].length;i<len;i++){var singleXhr=loadedScripts[jqXHR.yiiUrl]['xhrList'][i];if(singleXhr&&singleXhr.readyState!==XMLHttpRequest.DONE){singleXhr.abort();}}
loadedScripts[jqXHR.yiiUrl]=true;}).fail(function(jqXHR,textStatus){if(textStatus==='abort'){return;}
delete loadedScripts[jqXHR.yiiUrl]['xhrList'][jqXHR.yiiIndex];var allFailed=true;for(var i=0,len=loadedScripts[jqXHR.yiiUrl]['xhrList'].length;i<len;i++){if(loadedScripts[jqXHR.yiiUrl]['xhrList'][i]){allFailed=false;}}
if(allFailed){delete loadedScripts[jqXHR.yiiUrl];}});xhr.yiiIndex=loadedScripts[url]['xhrList'].length;xhr.yiiUrl=url;loadedScripts[url]['xhrList'][xhr.yiiIndex]=xhr;});$(document).ajaxComplete(function(){var styleSheets=[];$('link[rel=stylesheet]').each(function(){var url=getAbsoluteUrl(this.href);if(isReloadableAsset(url)){return;}
$.inArray(url,styleSheets)===-1?styleSheets.push(url):$(this).remove();});});}
function initDataMethods(){var handler=function(event){var $this=$(this),method=$this.data('method'),message=$this.data('confirm'),form=$this.data('form');if(method===undefined&&message===undefined&&form===undefined){return true;}
if(message!==undefined){$.proxy(pub.confirm,this)(message,function(){pub.handleAction($this,event);});}else{pub.handleAction($this,event);}
event.stopImmediatePropagation();return false;};$(document).on('click.yii',pub.clickableSelector,handler).on('change.yii',pub.changeableSelector,handler);}
function isReloadableAsset(url){for(var i=0;i<pub.reloadableScripts.length;i++){var rule=getAbsoluteUrl(pub.reloadableScripts[i]);var match=new RegExp("^"+escapeRegExp(rule).split('\\*').join('.+')+"$").test(url);if(match===true){return true;}}
return false;}
function escapeRegExp(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");}
function getAbsoluteUrl(url){return url.charAt(0)==='/'?pub.getBaseCurrentUrl()+url:url;}
return pub;})(window.jQuery);window.jQuery(function(){window.yii.initModule(window.yii);});;;(function(factory){if(typeof define==="function"&&define.amd){define(["jquery"],factory);}else{factory(jQuery);}}(function($){$.ui=$.ui||{};var version=$.ui.version="1.12.1";var widgetUuid=0;var widgetSlice=Array.prototype.slice;$.cleanData=(function(orig){return function(elems){var events,elem,i;for(i=0;(elem=elems[i])!=null;i++){try{events=$._data(elem,"events");if(events&&events.remove){$(elem).triggerHandler("remove");}}catch(e){}}
orig(elems);};})($.cleanData);$.widget=function(name,base,prototype){var existingConstructor,constructor,basePrototype;var proxiedPrototype={};var namespace=name.split(".")[0];name=name.split(".")[1];var fullName=namespace+"-"+name;if(!prototype){prototype=base;base=$.Widget;}
if($.isArray(prototype)){prototype=$.extend.apply(null,[{}].concat(prototype));}
$.expr[":"][fullName.toLowerCase()]=function(elem){return!!$.data(elem,fullName);};$[namespace]=$[namespace]||{};existingConstructor=$[namespace][name];constructor=$[namespace][name]=function(options,element){if(!this._createWidget){return new constructor(options,element);}
if(arguments.length){this._createWidget(options,element);}};$.extend(constructor,existingConstructor,{version:prototype.version,_proto:$.extend({},prototype),_childConstructors:[]});basePrototype=new base();basePrototype.options=$.widget.extend({},basePrototype.options);$.each(prototype,function(prop,value){if(!$.isFunction(value)){proxiedPrototype[prop]=value;return;}
proxiedPrototype[prop]=(function(){function _super(){return base.prototype[prop].apply(this,arguments);}
function _superApply(args){return base.prototype[prop].apply(this,args);}
return function(){var __super=this._super;var __superApply=this._superApply;var returnValue;this._super=_super;this._superApply=_superApply;returnValue=value.apply(this,arguments);this._super=__super;this._superApply=__superApply;return returnValue;};})();});constructor.prototype=$.widget.extend(basePrototype,{widgetEventPrefix:existingConstructor?(basePrototype.widgetEventPrefix||name):name},proxiedPrototype,{constructor:constructor,namespace:namespace,widgetName:name,widgetFullName:fullName});if(existingConstructor){$.each(existingConstructor._childConstructors,function(i,child){var childPrototype=child.prototype;$.widget(childPrototype.namespace+"."+childPrototype.widgetName,constructor,child._proto);});delete existingConstructor._childConstructors;}else{base._childConstructors.push(constructor);}
$.widget.bridge(name,constructor);return constructor;};$.widget.extend=function(target){var input=widgetSlice.call(arguments,1);var inputIndex=0;var inputLength=input.length;var key;var value;for(;inputIndex<inputLength;inputIndex++){for(key in input[inputIndex]){value=input[inputIndex][key];if(input[inputIndex].hasOwnProperty(key)&&value!==undefined){if($.isPlainObject(value)){target[key]=$.isPlainObject(target[key])?$.widget.extend({},target[key],value):$.widget.extend({},value);}else{target[key]=value;}}}}
return target;};$.widget.bridge=function(name,object){var fullName=object.prototype.widgetFullName||name;$.fn[name]=function(options){var isMethodCall=typeof options==="string";var args=widgetSlice.call(arguments,1);var returnValue=this;if(isMethodCall){if(!this.length&&options==="instance"){returnValue=undefined;}else{this.each(function(){var methodValue;var instance=$.data(this,fullName);if(options==="instance"){returnValue=instance;return false;}
if(!instance){return $.error("cannot call methods on "+name+" prior to initialization; "+"attempted to call method '"+options+"'");}
if(!$.isFunction(instance[options])||options.charAt(0)==="_"){return $.error("no such method '"+options+"' for "+name+" widget instance");}
methodValue=instance[options].apply(instance,args);if(methodValue!==instance&&methodValue!==undefined){returnValue=methodValue&&methodValue.jquery?returnValue.pushStack(methodValue.get()):methodValue;return false;}});}}else{if(args.length){options=$.widget.extend.apply(null,[options].concat(args));}
this.each(function(){var instance=$.data(this,fullName);if(instance){instance.option(options||{});if(instance._init){instance._init();}}else{$.data(this,fullName,new object(options,this));}});}
return returnValue;};};$.Widget=function(){};$.Widget._childConstructors=[];$.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:false,create:null},_createWidget:function(options,element){element=$(element||this.defaultElement||this)[0];this.element=$(element);this.uuid=widgetUuid++;this.eventNamespace="."+this.widgetName+this.uuid;this.bindings=$();this.hoverable=$();this.focusable=$();this.classesElementLookup={};if(element!==this){$.data(element,this.widgetFullName,this);this._on(true,this.element,{remove:function(event){if(event.target===element){this.destroy();}}});this.document=$(element.style?element.ownerDocument:element.document||element);this.window=$(this.document[0].defaultView||this.document[0].parentWindow);}
this.options=$.widget.extend({},this.options,this._getCreateOptions(),options);this._create();if(this.options.disabled){this._setOptionDisabled(this.options.disabled);}
this._trigger("create",null,this._getCreateEventData());this._init();},_getCreateOptions:function(){return{};},_getCreateEventData:$.noop,_create:$.noop,_init:$.noop,destroy:function(){var that=this;this._destroy();$.each(this.classesElementLookup,function(key,value){that._removeClass(value,key);});this.element.off(this.eventNamespace).removeData(this.widgetFullName);this.widget().off(this.eventNamespace).removeAttr("aria-disabled");this.bindings.off(this.eventNamespace);},_destroy:$.noop,widget:function(){return this.element;},option:function(key,value){var options=key;var parts;var curOption;var i;if(arguments.length===0){return $.widget.extend({},this.options);}
if(typeof key==="string"){options={};parts=key.split(".");key=parts.shift();if(parts.length){curOption=options[key]=$.widget.extend({},this.options[key]);for(i=0;i<parts.length-1;i++){curOption[parts[i]]=curOption[parts[i]]||{};curOption=curOption[parts[i]];}
key=parts.pop();if(arguments.length===1){return curOption[key]===undefined?null:curOption[key];}
curOption[key]=value;}else{if(arguments.length===1){return this.options[key]===undefined?null:this.options[key];}
options[key]=value;}}
this._setOptions(options);return this;},_setOptions:function(options){var key;for(key in options){this._setOption(key,options[key]);}
return this;},_setOption:function(key,value){if(key==="classes"){this._setOptionClasses(value);}
this.options[key]=value;if(key==="disabled"){this._setOptionDisabled(value);}
return this;},_setOptionClasses:function(value){var classKey,elements,currentElements;for(classKey in value){currentElements=this.classesElementLookup[classKey];if(value[classKey]===this.options.classes[classKey]||!currentElements||!currentElements.length){continue;}
elements=$(currentElements.get());this._removeClass(currentElements,classKey);elements.addClass(this._classes({element:elements,keys:classKey,classes:value,add:true}));}},_setOptionDisabled:function(value){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!value);if(value){this._removeClass(this.hoverable,null,"ui-state-hover");this._removeClass(this.focusable,null,"ui-state-focus");}},enable:function(){return this._setOptions({disabled:false});},disable:function(){return this._setOptions({disabled:true});},_classes:function(options){var full=[];var that=this;options=$.extend({element:this.element,classes:this.options.classes||{}},options);function processClassString(classes,checkOption){var current,i;for(i=0;i<classes.length;i++){current=that.classesElementLookup[classes[i]]||$();if(options.add){current=$($.unique(current.get().concat(options.element.get())));}else{current=$(current.not(options.element).get());}
that.classesElementLookup[classes[i]]=current;full.push(classes[i]);if(checkOption&&options.classes[classes[i]]){full.push(options.classes[classes[i]]);}}}
this._on(options.element,{"remove":"_untrackClassesElement"});if(options.keys){processClassString(options.keys.match(/\S+/g)||[],true);}
if(options.extra){processClassString(options.extra.match(/\S+/g)||[]);}
return full.join(" ");},_untrackClassesElement:function(event){var that=this;$.each(that.classesElementLookup,function(key,value){if($.inArray(event.target,value)!==-1){that.classesElementLookup[key]=$(value.not(event.target).get());}});},_removeClass:function(element,keys,extra){return this._toggleClass(element,keys,extra,false);},_addClass:function(element,keys,extra){return this._toggleClass(element,keys,extra,true);},_toggleClass:function(element,keys,extra,add){add=(typeof add==="boolean")?add:extra;var shift=(typeof element==="string"||element===null),options={extra:shift?keys:extra,keys:shift?element:keys,element:shift?this.element:element,add:add};options.element.toggleClass(this._classes(options),add);return this;},_on:function(suppressDisabledCheck,element,handlers){var delegateElement;var instance=this;if(typeof suppressDisabledCheck!=="boolean"){handlers=element;element=suppressDisabledCheck;suppressDisabledCheck=false;}
if(!handlers){handlers=element;element=this.element;delegateElement=this.widget();}else{element=delegateElement=$(element);this.bindings=this.bindings.add(element);}
$.each(handlers,function(event,handler){function handlerProxy(){if(!suppressDisabledCheck&&(instance.options.disabled===true||$(this).hasClass("ui-state-disabled"))){return;}
return(typeof handler==="string"?instance[handler]:handler).apply(instance,arguments);}
if(typeof handler!=="string"){handlerProxy.guid=handler.guid=handler.guid||handlerProxy.guid||$.guid++;}
var match=event.match(/^([\w:-]*)\s*(.*)$/);var eventName=match[1]+instance.eventNamespace;var selector=match[2];if(selector){delegateElement.on(eventName,selector,handlerProxy);}else{element.on(eventName,handlerProxy);}});},_off:function(element,eventName){eventName=(eventName||"").split(" ").join(this.eventNamespace+" ")+
this.eventNamespace;element.off(eventName).off(eventName);this.bindings=$(this.bindings.not(element).get());this.focusable=$(this.focusable.not(element).get());this.hoverable=$(this.hoverable.not(element).get());},_delay:function(handler,delay){function handlerProxy(){return(typeof handler==="string"?instance[handler]:handler).apply(instance,arguments);}
var instance=this;return setTimeout(handlerProxy,delay||0);},_hoverable:function(element){this.hoverable=this.hoverable.add(element);this._on(element,{mouseenter:function(event){this._addClass($(event.currentTarget),null,"ui-state-hover");},mouseleave:function(event){this._removeClass($(event.currentTarget),null,"ui-state-hover");}});},_focusable:function(element){this.focusable=this.focusable.add(element);this._on(element,{focusin:function(event){this._addClass($(event.currentTarget),null,"ui-state-focus");},focusout:function(event){this._removeClass($(event.currentTarget),null,"ui-state-focus");}});},_trigger:function(type,event,data){var prop,orig;var callback=this.options[type];data=data||{};event=$.Event(event);event.type=(type===this.widgetEventPrefix?type:this.widgetEventPrefix+type).toLowerCase();event.target=this.element[0];orig=event.originalEvent;if(orig){for(prop in orig){if(!(prop in event)){event[prop]=orig[prop];}}}
this.element.trigger(event,data);return!($.isFunction(callback)&&callback.apply(this.element[0],[event].concat(data))===false||event.isDefaultPrevented());}};$.each({show:"fadeIn",hide:"fadeOut"},function(method,defaultEffect){$.Widget.prototype["_"+method]=function(element,options,callback){if(typeof options==="string"){options={effect:options};}
var hasOptions;var effectName=!options?method:options===true||typeof options==="number"?defaultEffect:options.effect||defaultEffect;options=options||{};if(typeof options==="number"){options={duration:options};}
hasOptions=!$.isEmptyObject(options);options.complete=callback;if(options.delay){element.delay(options.delay);}
if(hasOptions&&$.effects&&$.effects.effect[effectName]){element[method](options);}else if(effectName!==method&&element[effectName]){element[effectName](options.duration,options.easing,callback);}else{element.queue(function(next){$(this)[method]();if(callback){callback.call(element[0]);}
next();});}};});var widget=$.widget;(function(){var cachedScrollbarWidth,max=Math.max,abs=Math.abs,rhorizontal=/left|center|right/,rvertical=/top|center|bottom/,roffset=/[\+\-]\d+(\.[\d]+)?%?/,rposition=/^\w+/,rpercent=/%$/,_position=$.fn.position;function getOffsets(offsets,width,height){return[parseFloat(offsets[0])*(rpercent.test(offsets[0])?width / 100:1),parseFloat(offsets[1])*(rpercent.test(offsets[1])?height / 100:1)];}
function parseCss(element,property){return parseInt($.css(element,property),10)||0;}
function getDimensions(elem){var raw=elem[0];if(raw.nodeType===9){return{width:elem.width(),height:elem.height(),offset:{top:0,left:0}};}
if($.isWindow(raw)){return{width:elem.width(),height:elem.height(),offset:{top:elem.scrollTop(),left:elem.scrollLeft()}};}
if(raw.preventDefault){return{width:0,height:0,offset:{top:raw.pageY,left:raw.pageX}};}
return{width:elem.outerWidth(),height:elem.outerHeight(),offset:elem.offset()};}
$.position={scrollbarWidth:function(){if(cachedScrollbarWidth!==undefined){return cachedScrollbarWidth;}
var w1,w2,div=$("<div "+"style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'>"+"<div style='height:100px;width:auto;'></div></div>"),innerDiv=div.children()[0];$("body").append(div);w1=innerDiv.offsetWidth;div.css("overflow","scroll");w2=innerDiv.offsetWidth;if(w1===w2){w2=div[0].clientWidth;}
div.remove();return(cachedScrollbarWidth=w1-w2);},getScrollInfo:function(within){var overflowX=within.isWindow||within.isDocument?"":within.element.css("overflow-x"),overflowY=within.isWindow||within.isDocument?"":within.element.css("overflow-y"),hasOverflowX=overflowX==="scroll"||(overflowX==="auto"&&within.width<within.element[0].scrollWidth),hasOverflowY=overflowY==="scroll"||(overflowY==="auto"&&within.height<within.element[0].scrollHeight);return{width:hasOverflowY?$.position.scrollbarWidth():0,height:hasOverflowX?$.position.scrollbarWidth():0};},getWithinInfo:function(element){var withinElement=$(element||window),isWindow=$.isWindow(withinElement[0]),isDocument=!!withinElement[0]&&withinElement[0].nodeType===9,hasOffset=!isWindow&&!isDocument;return{element:withinElement,isWindow:isWindow,isDocument:isDocument,offset:hasOffset?$(element).offset():{left:0,top:0},scrollLeft:withinElement.scrollLeft(),scrollTop:withinElement.scrollTop(),width:withinElement.outerWidth(),height:withinElement.outerHeight()};}};$.fn.position=function(options){if(!options||!options.of){return _position.apply(this,arguments);}
options=$.extend({},options);var atOffset,targetWidth,targetHeight,targetOffset,basePosition,dimensions,target=$(options.of),within=$.position.getWithinInfo(options.within),scrollInfo=$.position.getScrollInfo(within),collision=(options.collision||"flip").split(" "),offsets={};dimensions=getDimensions(target);if(target[0].preventDefault){options.at="left top";}
targetWidth=dimensions.width;targetHeight=dimensions.height;targetOffset=dimensions.offset;basePosition=$.extend({},targetOffset);$.each(["my","at"],function(){var pos=(options[this]||"").split(" "),horizontalOffset,verticalOffset;if(pos.length===1){pos=rhorizontal.test(pos[0])?pos.concat(["center"]):rvertical.test(pos[0])?["center"].concat(pos):["center","center"];}
pos[0]=rhorizontal.test(pos[0])?pos[0]:"center";pos[1]=rvertical.test(pos[1])?pos[1]:"center";horizontalOffset=roffset.exec(pos[0]);verticalOffset=roffset.exec(pos[1]);offsets[this]=[horizontalOffset?horizontalOffset[0]:0,verticalOffset?verticalOffset[0]:0];options[this]=[rposition.exec(pos[0])[0],rposition.exec(pos[1])[0]];});if(collision.length===1){collision[1]=collision[0];}
if(options.at[0]==="right"){basePosition.left+=targetWidth;}else if(options.at[0]==="center"){basePosition.left+=targetWidth / 2;}
if(options.at[1]==="bottom"){basePosition.top+=targetHeight;}else if(options.at[1]==="center"){basePosition.top+=targetHeight / 2;}
atOffset=getOffsets(offsets.at,targetWidth,targetHeight);basePosition.left+=atOffset[0];basePosition.top+=atOffset[1];return this.each(function(){var collisionPosition,using,elem=$(this),elemWidth=elem.outerWidth(),elemHeight=elem.outerHeight(),marginLeft=parseCss(this,"marginLeft"),marginTop=parseCss(this,"marginTop"),collisionWidth=elemWidth+marginLeft+parseCss(this,"marginRight")+
scrollInfo.width,collisionHeight=elemHeight+marginTop+parseCss(this,"marginBottom")+
scrollInfo.height,position=$.extend({},basePosition),myOffset=getOffsets(offsets.my,elem.outerWidth(),elem.outerHeight());if(options.my[0]==="right"){position.left-=elemWidth;}else if(options.my[0]==="center"){position.left-=elemWidth / 2;}
if(options.my[1]==="bottom"){position.top-=elemHeight;}else if(options.my[1]==="center"){position.top-=elemHeight / 2;}
position.left+=myOffset[0];position.top+=myOffset[1];collisionPosition={marginLeft:marginLeft,marginTop:marginTop};$.each(["left","top"],function(i,dir){if($.ui.position[collision[i]]){$.ui.position[collision[i]][dir](position,{targetWidth:targetWidth,targetHeight:targetHeight,elemWidth:elemWidth,elemHeight:elemHeight,collisionPosition:collisionPosition,collisionWidth:collisionWidth,collisionHeight:collisionHeight,offset:[atOffset[0]+myOffset[0],atOffset[1]+myOffset[1]],my:options.my,at:options.at,within:within,elem:elem});}});if(options.using){using=function(props){var left=targetOffset.left-position.left,right=left+targetWidth-elemWidth,top=targetOffset.top-position.top,bottom=top+targetHeight-elemHeight,feedback={target:{element:target,left:targetOffset.left,top:targetOffset.top,width:targetWidth,height:targetHeight},element:{element:elem,left:position.left,top:position.top,width:elemWidth,height:elemHeight},horizontal:right<0?"left":left>0?"right":"center",vertical:bottom<0?"top":top>0?"bottom":"middle"};if(targetWidth<elemWidth&&abs(left+right)<targetWidth){feedback.horizontal="center";}
if(targetHeight<elemHeight&&abs(top+bottom)<targetHeight){feedback.vertical="middle";}
if(max(abs(left),abs(right))>max(abs(top),abs(bottom))){feedback.important="horizontal";}else{feedback.important="vertical";}
options.using.call(this,props,feedback);};}
elem.offset($.extend(position,{using:using}));});};$.ui.position={fit:{left:function(position,data){var within=data.within,withinOffset=within.isWindow?within.scrollLeft:within.offset.left,outerWidth=within.width,collisionPosLeft=position.left-data.collisionPosition.marginLeft,overLeft=withinOffset-collisionPosLeft,overRight=collisionPosLeft+data.collisionWidth-outerWidth-withinOffset,newOverRight;if(data.collisionWidth>outerWidth){if(overLeft>0&&overRight<=0){newOverRight=position.left+overLeft+data.collisionWidth-outerWidth-
withinOffset;position.left+=overLeft-newOverRight;}else if(overRight>0&&overLeft<=0){position.left=withinOffset;}else{if(overLeft>overRight){position.left=withinOffset+outerWidth-data.collisionWidth;}else{position.left=withinOffset;}}}else if(overLeft>0){position.left+=overLeft;}else if(overRight>0){position.left-=overRight;}else{position.left=max(position.left-collisionPosLeft,position.left);}},top:function(position,data){var within=data.within,withinOffset=within.isWindow?within.scrollTop:within.offset.top,outerHeight=data.within.height,collisionPosTop=position.top-data.collisionPosition.marginTop,overTop=withinOffset-collisionPosTop,overBottom=collisionPosTop+data.collisionHeight-outerHeight-withinOffset,newOverBottom;if(data.collisionHeight>outerHeight){if(overTop>0&&overBottom<=0){newOverBottom=position.top+overTop+data.collisionHeight-outerHeight-
withinOffset;position.top+=overTop-newOverBottom;}else if(overBottom>0&&overTop<=0){position.top=withinOffset;}else{if(overTop>overBottom){position.top=withinOffset+outerHeight-data.collisionHeight;}else{position.top=withinOffset;}}}else if(overTop>0){position.top+=overTop;}else if(overBottom>0){position.top-=overBottom;}else{position.top=max(position.top-collisionPosTop,position.top);}}},flip:{left:function(position,data){var within=data.within,withinOffset=within.offset.left+within.scrollLeft,outerWidth=within.width,offsetLeft=within.isWindow?within.scrollLeft:within.offset.left,collisionPosLeft=position.left-data.collisionPosition.marginLeft,overLeft=collisionPosLeft-offsetLeft,overRight=collisionPosLeft+data.collisionWidth-outerWidth-offsetLeft,myOffset=data.my[0]==="left"?-data.elemWidth:data.my[0]==="right"?data.elemWidth:0,atOffset=data.at[0]==="left"?data.targetWidth:data.at[0]==="right"?-data.targetWidth:0,offset=-2*data.offset[0],newOverRight,newOverLeft;if(overLeft<0){newOverRight=position.left+myOffset+atOffset+offset+data.collisionWidth-
outerWidth-withinOffset;if(newOverRight<0||newOverRight<abs(overLeft)){position.left+=myOffset+atOffset+offset;}}else if(overRight>0){newOverLeft=position.left-data.collisionPosition.marginLeft+myOffset+
atOffset+offset-offsetLeft;if(newOverLeft>0||abs(newOverLeft)<overRight){position.left+=myOffset+atOffset+offset;}}},top:function(position,data){var within=data.within,withinOffset=within.offset.top+within.scrollTop,outerHeight=within.height,offsetTop=within.isWindow?within.scrollTop:within.offset.top,collisionPosTop=position.top-data.collisionPosition.marginTop,overTop=collisionPosTop-offsetTop,overBottom=collisionPosTop+data.collisionHeight-outerHeight-offsetTop,top=data.my[1]==="top",myOffset=top?-data.elemHeight:data.my[1]==="bottom"?data.elemHeight:0,atOffset=data.at[1]==="top"?data.targetHeight:data.at[1]==="bottom"?-data.targetHeight:0,offset=-2*data.offset[1],newOverTop,newOverBottom;if(overTop<0){newOverBottom=position.top+myOffset+atOffset+offset+data.collisionHeight-
outerHeight-withinOffset;if(newOverBottom<0||newOverBottom<abs(overTop)){position.top+=myOffset+atOffset+offset;}}else if(overBottom>0){newOverTop=position.top-data.collisionPosition.marginTop+myOffset+atOffset+
offset-offsetTop;if(newOverTop>0||abs(newOverTop)<overBottom){position.top+=myOffset+atOffset+offset;}}}},flipfit:{left:function(){$.ui.position.flip.left.apply(this,arguments);$.ui.position.fit.left.apply(this,arguments);},top:function(){$.ui.position.flip.top.apply(this,arguments);$.ui.position.fit.top.apply(this,arguments);}}};})();var position=$.ui.position;var data=$.extend($.expr[":"],{data:$.expr.createPseudo?$.expr.createPseudo(function(dataName){return function(elem){return!!$.data(elem,dataName);};}):function(elem,i,match){return!!$.data(elem,match[3]);}});var disableSelection=$.fn.extend({disableSelection:(function(){var eventType="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(eventType+".ui-disableSelection",function(event){event.preventDefault();});};})(),enableSelection:function(){return this.off(".ui-disableSelection");}});var dataSpace="ui-effects-",dataSpaceStyle="ui-effects-style",dataSpaceAnimated="ui-effects-animated",jQuery=$;$.effects={effect:{}};(function(jQuery,undefined){var stepHooks="backgroundColor borderBottomColor borderLeftColor borderRightColor "+"borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",rplusequals=/^([\-+])=\s*(\d+\.?\d*)/,stringParsers=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(execResult){return[execResult[1],execResult[2],execResult[3],execResult[4]];}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(execResult){return[execResult[1]*2.55,execResult[2]*2.55,execResult[3]*2.55,execResult[4]];}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(execResult){return[parseInt(execResult[1],16),parseInt(execResult[2],16),parseInt(execResult[3],16)];}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(execResult){return[parseInt(execResult[1]+execResult[1],16),parseInt(execResult[2]+execResult[2],16),parseInt(execResult[3]+execResult[3],16)];}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(execResult){return[execResult[1],execResult[2]/ 100,execResult[3]/ 100,execResult[4]];}}],color=jQuery.Color=function(color,green,blue,alpha){return new jQuery.Color.fn.parse(color,green,blue,alpha);},spaces={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},propTypes={"byte":{floor:true,max:255},"percent":{max:1},"degrees":{mod:360,floor:true}},support=color.support={},supportElem=jQuery("<p>")[0],colors,each=jQuery.each;supportElem.style.cssText="background-color:rgba(1,1,1,.5)";support.rgba=supportElem.style.backgroundColor.indexOf("rgba")>-1;each(spaces,function(spaceName,space){space.cache="_"+spaceName;space.props.alpha={idx:3,type:"percent",def:1};});function clamp(value,prop,allowEmpty){var type=propTypes[prop.type]||{};if(value==null){return(allowEmpty||!prop.def)?null:prop.def;}
value=type.floor?~~value:parseFloat(value);if(isNaN(value)){return prop.def;}
if(type.mod){return(value+type.mod)%type.mod;}
return 0>value?0:type.max<value?type.max:value;}
function stringParse(string){var inst=color(),rgba=inst._rgba=[];string=string.toLowerCase();each(stringParsers,function(i,parser){var parsed,match=parser.re.exec(string),values=match&&parser.parse(match),spaceName=parser.space||"rgba";if(values){parsed=inst[spaceName](values);inst[spaces[spaceName].cache]=parsed[spaces[spaceName].cache];rgba=inst._rgba=parsed._rgba;return false;}});if(rgba.length){if(rgba.join()==="0,0,0,0"){jQuery.extend(rgba,colors.transparent);}
return inst;}
return colors[string];}
color.fn=jQuery.extend(color.prototype,{parse:function(red,green,blue,alpha){if(red===undefined){this._rgba=[null,null,null,null];return this;}
if(red.jquery||red.nodeType){red=jQuery(red).css(green);green=undefined;}
var inst=this,type=jQuery.type(red),rgba=this._rgba=[];if(green!==undefined){red=[red,green,blue,alpha];type="array";}
if(type==="string"){return this.parse(stringParse(red)||colors._default);}
if(type==="array"){each(spaces.rgba.props,function(key,prop){rgba[prop.idx]=clamp(red[prop.idx],prop);});return this;}
if(type==="object"){if(red instanceof color){each(spaces,function(spaceName,space){if(red[space.cache]){inst[space.cache]=red[space.cache].slice();}});}else{each(spaces,function(spaceName,space){var cache=space.cache;each(space.props,function(key,prop){if(!inst[cache]&&space.to){if(key==="alpha"||red[key]==null){return;}
inst[cache]=space.to(inst._rgba);}
inst[cache][prop.idx]=clamp(red[key],prop,true);});if(inst[cache]&&jQuery.inArray(null,inst[cache].slice(0,3))<0){inst[cache][3]=1;if(space.from){inst._rgba=space.from(inst[cache]);}}});}
return this;}},is:function(compare){var is=color(compare),same=true,inst=this;each(spaces,function(_,space){var localCache,isCache=is[space.cache];if(isCache){localCache=inst[space.cache]||space.to&&space.to(inst._rgba)||[];each(space.props,function(_,prop){if(isCache[prop.idx]!=null){same=(isCache[prop.idx]===localCache[prop.idx]);return same;}});}
return same;});return same;},_space:function(){var used=[],inst=this;each(spaces,function(spaceName,space){if(inst[space.cache]){used.push(spaceName);}});return used.pop();},transition:function(other,distance){var end=color(other),spaceName=end._space(),space=spaces[spaceName],startColor=this.alpha()===0?color("transparent"):this,start=startColor[space.cache]||space.to(startColor._rgba),result=start.slice();end=end[space.cache];each(space.props,function(key,prop){var index=prop.idx,startValue=start[index],endValue=end[index],type=propTypes[prop.type]||{};if(endValue===null){return;}
if(startValue===null){result[index]=endValue;}else{if(type.mod){if(endValue-startValue>type.mod / 2){startValue+=type.mod;}else if(startValue-endValue>type.mod / 2){startValue-=type.mod;}}
result[index]=clamp((endValue-startValue)*distance+startValue,prop);}});return this[spaceName](result);},blend:function(opaque){if(this._rgba[3]===1){return this;}
var rgb=this._rgba.slice(),a=rgb.pop(),blend=color(opaque)._rgba;return color(jQuery.map(rgb,function(v,i){return(1-a)*blend[i]+a*v;}));},toRgbaString:function(){var prefix="rgba(",rgba=jQuery.map(this._rgba,function(v,i){return v==null?(i>2?1:0):v;});if(rgba[3]===1){rgba.pop();prefix="rgb(";}
return prefix+rgba.join()+")";},toHslaString:function(){var prefix="hsla(",hsla=jQuery.map(this.hsla(),function(v,i){if(v==null){v=i>2?1:0;}
if(i&&i<3){v=Math.round(v*100)+"%";}
return v;});if(hsla[3]===1){hsla.pop();prefix="hsl(";}
return prefix+hsla.join()+")";},toHexString:function(includeAlpha){var rgba=this._rgba.slice(),alpha=rgba.pop();if(includeAlpha){rgba.push(~~(alpha*255));}
return"#"+jQuery.map(rgba,function(v){v=(v||0).toString(16);return v.length===1?"0"+v:v;}).join("");},toString:function(){return this._rgba[3]===0?"transparent":this.toRgbaString();}});color.fn.parse.prototype=color.fn;function hue2rgb(p,q,h){h=(h+1)%1;if(h*6<1){return p+(q-p)*h*6;}
if(h*2<1){return q;}
if(h*3<2){return p+(q-p)*((2 / 3)-h)*6;}
return p;}
spaces.hsla.to=function(rgba){if(rgba[0]==null||rgba[1]==null||rgba[2]==null){return[null,null,null,rgba[3]];}
var r=rgba[0]/ 255,g=rgba[1]/ 255,b=rgba[2]/ 255,a=rgba[3],max=Math.max(r,g,b),min=Math.min(r,g,b),diff=max-min,add=max+min,l=add*0.5,h,s;if(min===max){h=0;}else if(r===max){h=(60*(g-b)/ diff)+360;}else if(g===max){h=(60*(b-r)/ diff)+120;}else{h=(60*(r-g)/ diff)+240;}
if(diff===0){s=0;}else if(l<=0.5){s=diff / add;}else{s=diff /(2-add);}
return[Math.round(h)%360,s,l,a==null?1:a];};spaces.hsla.from=function(hsla){if(hsla[0]==null||hsla[1]==null||hsla[2]==null){return[null,null,null,hsla[3]];}
var h=hsla[0]/ 360,s=hsla[1],l=hsla[2],a=hsla[3],q=l<=0.5?l*(1+s):l+s-l*s,p=2*l-q;return[Math.round(hue2rgb(p,q,h+(1 / 3))*255),Math.round(hue2rgb(p,q,h)*255),Math.round(hue2rgb(p,q,h-(1 / 3))*255),a];};each(spaces,function(spaceName,space){var props=space.props,cache=space.cache,to=space.to,from=space.from;color.fn[spaceName]=function(value){if(to&&!this[cache]){this[cache]=to(this._rgba);}
if(value===undefined){return this[cache].slice();}
var ret,type=jQuery.type(value),arr=(type==="array"||type==="object")?value:arguments,local=this[cache].slice();each(props,function(key,prop){var val=arr[type==="object"?key:prop.idx];if(val==null){val=local[prop.idx];}
local[prop.idx]=clamp(val,prop);});if(from){ret=color(from(local));ret[cache]=local;return ret;}else{return color(local);}};each(props,function(key,prop){if(color.fn[key]){return;}
color.fn[key]=function(value){var vtype=jQuery.type(value),fn=(key==="alpha"?(this._hsla?"hsla":"rgba"):spaceName),local=this[fn](),cur=local[prop.idx],match;if(vtype==="undefined"){return cur;}
if(vtype==="function"){value=value.call(this,cur);vtype=jQuery.type(value);}
if(value==null&&prop.empty){return this;}
if(vtype==="string"){match=rplusequals.exec(value);if(match){value=cur+parseFloat(match[2])*(match[1]==="+"?1:-1);}}
local[prop.idx]=value;return this[fn](local);};});});color.hook=function(hook){var hooks=hook.split(" ");each(hooks,function(i,hook){jQuery.cssHooks[hook]={set:function(elem,value){var parsed,curElem,backgroundColor="";if(value!=="transparent"&&(jQuery.type(value)!=="string"||(parsed=stringParse(value)))){value=color(parsed||value);if(!support.rgba&&value._rgba[3]!==1){curElem=hook==="backgroundColor"?elem.parentNode:elem;while((backgroundColor===""||backgroundColor==="transparent")&&curElem&&curElem.style){try{backgroundColor=jQuery.css(curElem,"backgroundColor");curElem=curElem.parentNode;}catch(e){}}
value=value.blend(backgroundColor&&backgroundColor!=="transparent"?backgroundColor:"_default");}
value=value.toRgbaString();}
try{elem.style[hook]=value;}catch(e){}}};jQuery.fx.step[hook]=function(fx){if(!fx.colorInit){fx.start=color(fx.elem,hook);fx.end=color(fx.end);fx.colorInit=true;}
jQuery.cssHooks[hook].set(fx.elem,fx.start.transition(fx.end,fx.pos));};});};color.hook(stepHooks);jQuery.cssHooks.borderColor={expand:function(value){var expanded={};each(["Top","Right","Bottom","Left"],function(i,part){expanded["border"+part+"Color"]=value;});return expanded;}};colors=jQuery.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"};})(jQuery);(function(){var classAnimationActions=["add","remove","toggle"],shorthandStyles={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};$.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(_,prop){$.fx.step[prop]=function(fx){if(fx.end!=="none"&&!fx.setAttr||fx.pos===1&&!fx.setAttr){jQuery.style(fx.elem,prop,fx.end);fx.setAttr=true;}};});function getElementStyles(elem){var key,len,style=elem.ownerDocument.defaultView?elem.ownerDocument.defaultView.getComputedStyle(elem,null):elem.currentStyle,styles={};if(style&&style.length&&style[0]&&style[style[0]]){len=style.length;while(len--){key=style[len];if(typeof style[key]==="string"){styles[$.camelCase(key)]=style[key];}}}else{for(key in style){if(typeof style[key]==="string"){styles[key]=style[key];}}}
return styles;}
function styleDifference(oldStyle,newStyle){var diff={},name,value;for(name in newStyle){value=newStyle[name];if(oldStyle[name]!==value){if(!shorthandStyles[name]){if($.fx.step[name]||!isNaN(parseFloat(value))){diff[name]=value;}}}}
return diff;}
if(!$.fn.addBack){$.fn.addBack=function(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));};}
$.effects.animateClass=function(value,duration,easing,callback){var o=$.speed(duration,easing,callback);return this.queue(function(){var animated=$(this),baseClass=animated.attr("class")||"",applyClassChange,allAnimations=o.children?animated.find("*").addBack():animated;allAnimations=allAnimations.map(function(){var el=$(this);return{el:el,start:getElementStyles(this)};});applyClassChange=function(){$.each(classAnimationActions,function(i,action){if(value[action]){animated[action+"Class"](value[action]);}});};applyClassChange();allAnimations=allAnimations.map(function(){this.end=getElementStyles(this.el[0]);this.diff=styleDifference(this.start,this.end);return this;});animated.attr("class",baseClass);allAnimations=allAnimations.map(function(){var styleInfo=this,dfd=$.Deferred(),opts=$.extend({},o,{queue:false,complete:function(){dfd.resolve(styleInfo);}});this.el.animate(this.diff,opts);return dfd.promise();});$.when.apply($,allAnimations.get()).done(function(){applyClassChange();$.each(arguments,function(){var el=this.el;$.each(this.diff,function(key){el.css(key,"");});});o.complete.call(animated[0]);});});};$.fn.extend({addClass:(function(orig){return function(classNames,speed,easing,callback){return speed?$.effects.animateClass.call(this,{add:classNames},speed,easing,callback):orig.apply(this,arguments);};})($.fn.addClass),removeClass:(function(orig){return function(classNames,speed,easing,callback){return arguments.length>1?$.effects.animateClass.call(this,{remove:classNames},speed,easing,callback):orig.apply(this,arguments);};})($.fn.removeClass),toggleClass:(function(orig){return function(classNames,force,speed,easing,callback){if(typeof force==="boolean"||force===undefined){if(!speed){return orig.apply(this,arguments);}else{return $.effects.animateClass.call(this,(force?{add:classNames}:{remove:classNames}),speed,easing,callback);}}else{return $.effects.animateClass.call(this,{toggle:classNames},force,speed,easing);}};})($.fn.toggleClass),switchClass:function(remove,add,speed,easing,callback){return $.effects.animateClass.call(this,{add:add,remove:remove},speed,easing,callback);}});})();(function(){if($.expr&&$.expr.filters&&$.expr.filters.animated){$.expr.filters.animated=(function(orig){return function(elem){return!!$(elem).data(dataSpaceAnimated)||orig(elem);};})($.expr.filters.animated);}
if($.uiBackCompat!==false){$.extend($.effects,{save:function(element,set){var i=0,length=set.length;for(;i<length;i++){if(set[i]!==null){element.data(dataSpace+set[i],element[0].style[set[i]]);}}},restore:function(element,set){var val,i=0,length=set.length;for(;i<length;i++){if(set[i]!==null){val=element.data(dataSpace+set[i]);element.css(set[i],val);}}},setMode:function(el,mode){if(mode==="toggle"){mode=el.is(":hidden")?"show":"hide";}
return mode;},createWrapper:function(element){if(element.parent().is(".ui-effects-wrapper")){return element.parent();}
var props={width:element.outerWidth(true),height:element.outerHeight(true),"float":element.css("float")},wrapper=$("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),size={width:element.width(),height:element.height()},active=document.activeElement;try{active.id;}catch(e){active=document.body;}
element.wrap(wrapper);if(element[0]===active||$.contains(element[0],active)){$(active).trigger("focus");}
wrapper=element.parent();if(element.css("position")==="static"){wrapper.css({position:"relative"});element.css({position:"relative"});}else{$.extend(props,{position:element.css("position"),zIndex:element.css("z-index")});$.each(["top","left","bottom","right"],function(i,pos){props[pos]=element.css(pos);if(isNaN(parseInt(props[pos],10))){props[pos]="auto";}});element.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"});}
element.css(size);return wrapper.css(props).show();},removeWrapper:function(element){var active=document.activeElement;if(element.parent().is(".ui-effects-wrapper")){element.parent().replaceWith(element);if(element[0]===active||$.contains(element[0],active)){$(active).trigger("focus");}}
return element;}});}
$.extend($.effects,{version:"1.12.1",define:function(name,mode,effect){if(!effect){effect=mode;mode="effect";}
$.effects.effect[name]=effect;$.effects.effect[name].mode=mode;return effect;},scaledDimensions:function(element,percent,direction){if(percent===0){return{height:0,width:0,outerHeight:0,outerWidth:0};}
var x=direction!=="horizontal"?((percent||100)/ 100):1,y=direction!=="vertical"?((percent||100)/ 100):1;return{height:element.height()*y,width:element.width()*x,outerHeight:element.outerHeight()*y,outerWidth:element.outerWidth()*x};},clipToBox:function(animation){return{width:animation.clip.right-animation.clip.left,height:animation.clip.bottom-animation.clip.top,left:animation.clip.left,top:animation.clip.top};},unshift:function(element,queueLength,count){var queue=element.queue();if(queueLength>1){queue.splice.apply(queue,[1,0].concat(queue.splice(queueLength,count)));}
element.dequeue();},saveStyle:function(element){element.data(dataSpaceStyle,element[0].style.cssText);},restoreStyle:function(element){element[0].style.cssText=element.data(dataSpaceStyle)||"";element.removeData(dataSpaceStyle);},mode:function(element,mode){var hidden=element.is(":hidden");if(mode==="toggle"){mode=hidden?"show":"hide";}
if(hidden?mode==="hide":mode==="show"){mode="none";}
return mode;},getBaseline:function(origin,original){var y,x;switch(origin[0]){case"top":y=0;break;case"middle":y=0.5;break;case"bottom":y=1;break;default:y=origin[0]/ original.height;}
switch(origin[1]){case"left":x=0;break;case"center":x=0.5;break;case"right":x=1;break;default:x=origin[1]/ original.width;}
return{x:x,y:y};},createPlaceholder:function(element){var placeholder,cssPosition=element.css("position"),position=element.position();element.css({marginTop:element.css("marginTop"),marginBottom:element.css("marginBottom"),marginLeft:element.css("marginLeft"),marginRight:element.css("marginRight")}).outerWidth(element.outerWidth()).outerHeight(element.outerHeight());if(/^(static|relative)/.test(cssPosition)){cssPosition="absolute";placeholder=$("<"+element[0].nodeName+">").insertAfter(element).css({display:/^(inline|ruby)/.test(element.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:element.css("marginTop"),marginBottom:element.css("marginBottom"),marginLeft:element.css("marginLeft"),marginRight:element.css("marginRight"),"float":element.css("float")}).outerWidth(element.outerWidth()).outerHeight(element.outerHeight()).addClass("ui-effects-placeholder");element.data(dataSpace+"placeholder",placeholder);}
element.css({position:cssPosition,left:position.left,top:position.top});return placeholder;},removePlaceholder:function(element){var dataKey=dataSpace+"placeholder",placeholder=element.data(dataKey);if(placeholder){placeholder.remove();element.removeData(dataKey);}},cleanUp:function(element){$.effects.restoreStyle(element);$.effects.removePlaceholder(element);},setTransition:function(element,list,factor,value){value=value||{};$.each(list,function(i,x){var unit=element.cssUnit(x);if(unit[0]>0){value[x]=unit[0]*factor+unit[1];}});return value;}});function _normalizeArguments(effect,options,speed,callback){if($.isPlainObject(effect)){options=effect;effect=effect.effect;}
effect={effect:effect};if(options==null){options={};}
if($.isFunction(options)){callback=options;speed=null;options={};}
if(typeof options==="number"||$.fx.speeds[options]){callback=speed;speed=options;options={};}
if($.isFunction(speed)){callback=speed;speed=null;}
if(options){$.extend(effect,options);}
speed=speed||options.duration;effect.duration=$.fx.off?0:typeof speed==="number"?speed:speed in $.fx.speeds?$.fx.speeds[speed]:$.fx.speeds._default;effect.complete=callback||options.complete;return effect;}
function standardAnimationOption(option){if(!option||typeof option==="number"||$.fx.speeds[option]){return true;}
if(typeof option==="string"&&!$.effects.effect[option]){return true;}
if($.isFunction(option)){return true;}
if(typeof option==="object"&&!option.effect){return true;}
return false;}
$.fn.extend({effect:function(){var args=_normalizeArguments.apply(this,arguments),effectMethod=$.effects.effect[args.effect],defaultMode=effectMethod.mode,queue=args.queue,queueName=queue||"fx",complete=args.complete,mode=args.mode,modes=[],prefilter=function(next){var el=$(this),normalizedMode=$.effects.mode(el,mode)||defaultMode;el.data(dataSpaceAnimated,true);modes.push(normalizedMode);if(defaultMode&&(normalizedMode==="show"||(normalizedMode===defaultMode&&normalizedMode==="hide"))){el.show();}
if(!defaultMode||normalizedMode!=="none"){$.effects.saveStyle(el);}
if($.isFunction(next)){next();}};if($.fx.off||!effectMethod){if(mode){return this[mode](args.duration,complete);}else{return this.each(function(){if(complete){complete.call(this);}});}}
function run(next){var elem=$(this);function cleanup(){elem.removeData(dataSpaceAnimated);$.effects.cleanUp(elem);if(args.mode==="hide"){elem.hide();}
done();}
function done(){if($.isFunction(complete)){complete.call(elem[0]);}
if($.isFunction(next)){next();}}
args.mode=modes.shift();if($.uiBackCompat!==false&&!defaultMode){if(elem.is(":hidden")?mode==="hide":mode==="show"){elem[mode]();done();}else{effectMethod.call(elem[0],args,done);}}else{if(args.mode==="none"){elem[mode]();done();}else{effectMethod.call(elem[0],args,cleanup);}}}
return queue===false?this.each(prefilter).each(run):this.queue(queueName,prefilter).queue(queueName,run);},show:(function(orig){return function(option){if(standardAnimationOption(option)){return orig.apply(this,arguments);}else{var args=_normalizeArguments.apply(this,arguments);args.mode="show";return this.effect.call(this,args);}};})($.fn.show),hide:(function(orig){return function(option){if(standardAnimationOption(option)){return orig.apply(this,arguments);}else{var args=_normalizeArguments.apply(this,arguments);args.mode="hide";return this.effect.call(this,args);}};})($.fn.hide),toggle:(function(orig){return function(option){if(standardAnimationOption(option)||typeof option==="boolean"){return orig.apply(this,arguments);}else{var args=_normalizeArguments.apply(this,arguments);args.mode="toggle";return this.effect.call(this,args);}};})($.fn.toggle),cssUnit:function(key){var style=this.css(key),val=[];$.each(["em","px","%","pt"],function(i,unit){if(style.indexOf(unit)>0){val=[parseFloat(style),unit];}});return val;},cssClip:function(clipObj){if(clipObj){return this.css("clip","rect("+clipObj.top+"px "+clipObj.right+"px "+
clipObj.bottom+"px "+clipObj.left+"px)");}
return parseClip(this.css("clip"),this);},transfer:function(options,done){var element=$(this),target=$(options.to),targetFixed=target.css("position")==="fixed",body=$("body"),fixTop=targetFixed?body.scrollTop():0,fixLeft=targetFixed?body.scrollLeft():0,endPosition=target.offset(),animation={top:endPosition.top-fixTop,left:endPosition.left-fixLeft,height:target.innerHeight(),width:target.innerWidth()},startPosition=element.offset(),transfer=$("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(options.className).css({top:startPosition.top-fixTop,left:startPosition.left-fixLeft,height:element.innerHeight(),width:element.innerWidth(),position:targetFixed?"fixed":"absolute"}).animate(animation,options.duration,options.easing,function(){transfer.remove();if($.isFunction(done)){done();}});}});function parseClip(str,element){var outerWidth=element.outerWidth(),outerHeight=element.outerHeight(),clipRegex=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,values=clipRegex.exec(str)||["",0,outerWidth,outerHeight,0];return{top:parseFloat(values[1])||0,right:values[2]==="auto"?outerWidth:parseFloat(values[2]),bottom:values[3]==="auto"?outerHeight:parseFloat(values[3]),left:parseFloat(values[4])||0};}
$.fx.step.clip=function(fx){if(!fx.clipInit){fx.start=$(fx.elem).cssClip();if(typeof fx.end==="string"){fx.end=parseClip(fx.end,fx.elem);}
fx.clipInit=true;}
$(fx.elem).cssClip({top:fx.pos*(fx.end.top-fx.start.top)+fx.start.top,right:fx.pos*(fx.end.right-fx.start.right)+fx.start.right,bottom:fx.pos*(fx.end.bottom-fx.start.bottom)+fx.start.bottom,left:fx.pos*(fx.end.left-fx.start.left)+fx.start.left});};})();(function(){var baseEasings={};$.each(["Quad","Cubic","Quart","Quint","Expo"],function(i,name){baseEasings[name]=function(p){return Math.pow(p,i+2);};});$.extend(baseEasings,{Sine:function(p){return 1-Math.cos(p*Math.PI / 2);},Circ:function(p){return 1-Math.sqrt(1-p*p);},Elastic:function(p){return p===0||p===1?p:-Math.pow(2,8*(p-1))*Math.sin(((p-1)*80-7.5)*Math.PI / 15);},Back:function(p){return p*p*(3*p-2);},Bounce:function(p){var pow2,bounce=4;while(p<((pow2=Math.pow(2,--bounce))-1)/ 11){}
return 1 / Math.pow(4,3-bounce)-7.5625*Math.pow((pow2*3-2)/ 22-p,2);}});$.each(baseEasings,function(name,easeIn){$.easing["easeIn"+name]=easeIn;$.easing["easeOut"+name]=function(p){return 1-easeIn(1-p);};$.easing["easeInOut"+name]=function(p){return p<0.5?easeIn(p*2)/ 2:1-easeIn(p*-2+2)/ 2;};});})();var effect=$.effects;var effectsEffectBlind=$.effects.define("blind","hide",function(options,done){var map={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},element=$(this),direction=options.direction||"up",start=element.cssClip(),animate={clip:$.extend({},start)},placeholder=$.effects.createPlaceholder(element);animate.clip[map[direction][0]]=animate.clip[map[direction][1]];if(options.mode==="show"){element.cssClip(animate.clip);if(placeholder){placeholder.css($.effects.clipToBox(animate));}
animate.clip=start;}
if(placeholder){placeholder.animate($.effects.clipToBox(animate),options.duration,options.easing);}
element.animate(animate,{queue:false,duration:options.duration,easing:options.easing,complete:done});});var effectsEffectBounce=$.effects.define("bounce",function(options,done){var upAnim,downAnim,refValue,element=$(this),mode=options.mode,hide=mode==="hide",show=mode==="show",direction=options.direction||"up",distance=options.distance,times=options.times||5,anims=times*2+(show||hide?1:0),speed=options.duration / anims,easing=options.easing,ref=(direction==="up"||direction==="down")?"top":"left",motion=(direction==="up"||direction==="left"),i=0,queuelen=element.queue().length;$.effects.createPlaceholder(element);refValue=element.css(ref);if(!distance){distance=element[ref==="top"?"outerHeight":"outerWidth"]()/ 3;}
if(show){downAnim={opacity:1};downAnim[ref]=refValue;element.css("opacity",0).css(ref,motion?-distance*2:distance*2).animate(downAnim,speed,easing);}
if(hide){distance=distance / Math.pow(2,times-1);}
downAnim={};downAnim[ref]=refValue;for(;i<times;i++){upAnim={};upAnim[ref]=(motion?"-=":"+=")+distance;element.animate(upAnim,speed,easing).animate(downAnim,speed,easing);distance=hide?distance*2:distance / 2;}
if(hide){upAnim={opacity:0};upAnim[ref]=(motion?"-=":"+=")+distance;element.animate(upAnim,speed,easing);}
element.queue(done);$.effects.unshift(element,queuelen,anims+1);});var effectsEffectClip=$.effects.define("clip","hide",function(options,done){var start,animate={},element=$(this),direction=options.direction||"vertical",both=direction==="both",horizontal=both||direction==="horizontal",vertical=both||direction==="vertical";start=element.cssClip();animate.clip={top:vertical?(start.bottom-start.top)/ 2:start.top,right:horizontal?(start.right-start.left)/ 2:start.right,bottom:vertical?(start.bottom-start.top)/ 2:start.bottom,left:horizontal?(start.right-start.left)/ 2:start.left};$.effects.createPlaceholder(element);if(options.mode==="show"){element.cssClip(animate.clip);animate.clip=start;}
element.animate(animate,{queue:false,duration:options.duration,easing:options.easing,complete:done});});var effectsEffectDrop=$.effects.define("drop","hide",function(options,done){var distance,element=$(this),mode=options.mode,show=mode==="show",direction=options.direction||"left",ref=(direction==="up"||direction==="down")?"top":"left",motion=(direction==="up"||direction==="left")?"-=":"+=",oppositeMotion=(motion==="+=")?"-=":"+=",animation={opacity:0};$.effects.createPlaceholder(element);distance=options.distance||element[ref==="top"?"outerHeight":"outerWidth"](true)/ 2;animation[ref]=motion+distance;if(show){element.css(animation);animation[ref]=oppositeMotion+distance;animation.opacity=1;}
element.animate(animation,{queue:false,duration:options.duration,easing:options.easing,complete:done});});var effectsEffectExplode=$.effects.define("explode","hide",function(options,done){var i,j,left,top,mx,my,rows=options.pieces?Math.round(Math.sqrt(options.pieces)):3,cells=rows,element=$(this),mode=options.mode,show=mode==="show",offset=element.show().css("visibility","hidden").offset(),width=Math.ceil(element.outerWidth()/ cells),height=Math.ceil(element.outerHeight()/ rows),pieces=[];function childComplete(){pieces.push(this);if(pieces.length===rows*cells){animComplete();}}
for(i=0;i<rows;i++){top=offset.top+i*height;my=i-(rows-1)/ 2;for(j=0;j<cells;j++){left=offset.left+j*width;mx=j-(cells-1)/ 2;element.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-j*width,top:-i*height}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:width,height:height,left:left+(show?mx*width:0),top:top+(show?my*height:0),opacity:show?0:1}).animate({left:left+(show?0:mx*width),top:top+(show?0:my*height),opacity:show?1:0},options.duration||500,options.easing,childComplete);}}
function animComplete(){element.css({visibility:"visible"});$(pieces).remove();done();}});var effectsEffectFade=$.effects.define("fade","toggle",function(options,done){var show=options.mode==="show";$(this).css("opacity",show?0:1).animate({opacity:show?1:0},{queue:false,duration:options.duration,easing:options.easing,complete:done});});var effectsEffectFold=$.effects.define("fold","hide",function(options,done){var element=$(this),mode=options.mode,show=mode==="show",hide=mode==="hide",size=options.size||15,percent=/([0-9]+)%/.exec(size),horizFirst=!!options.horizFirst,ref=horizFirst?["right","bottom"]:["bottom","right"],duration=options.duration / 2,placeholder=$.effects.createPlaceholder(element),start=element.cssClip(),animation1={clip:$.extend({},start)},animation2={clip:$.extend({},start)},distance=[start[ref[0]],start[ref[1]]],queuelen=element.queue().length;if(percent){size=parseInt(percent[1],10)/ 100*distance[hide?0:1];}
animation1.clip[ref[0]]=size;animation2.clip[ref[0]]=size;animation2.clip[ref[1]]=0;if(show){element.cssClip(animation2.clip);if(placeholder){placeholder.css($.effects.clipToBox(animation2));}
animation2.clip=start;}
element.queue(function(next){if(placeholder){placeholder.animate($.effects.clipToBox(animation1),duration,options.easing).animate($.effects.clipToBox(animation2),duration,options.easing);}
next();}).animate(animation1,duration,options.easing).animate(animation2,duration,options.easing).queue(done);$.effects.unshift(element,queuelen,4);});var effectsEffectHighlight=$.effects.define("highlight","show",function(options,done){var element=$(this),animation={backgroundColor:element.css("backgroundColor")};if(options.mode==="hide"){animation.opacity=0;}
$.effects.saveStyle(element);element.css({backgroundImage:"none",backgroundColor:options.color||"#ffff99"}).animate(animation,{queue:false,duration:options.duration,easing:options.easing,complete:done});});var effectsEffectSize=$.effects.define("size",function(options,done){var baseline,factor,temp,element=$(this),cProps=["fontSize"],vProps=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],hProps=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],mode=options.mode,restore=mode!=="effect",scale=options.scale||"both",origin=options.origin||["middle","center"],position=element.css("position"),pos=element.position(),original=$.effects.scaledDimensions(element),from=options.from||original,to=options.to||$.effects.scaledDimensions(element,0);$.effects.createPlaceholder(element);if(mode==="show"){temp=from;from=to;to=temp;}
factor={from:{y:from.height / original.height,x:from.width / original.width},to:{y:to.height / original.height,x:to.width / original.width}};if(scale==="box"||scale==="both"){if(factor.from.y!==factor.to.y){from=$.effects.setTransition(element,vProps,factor.from.y,from);to=$.effects.setTransition(element,vProps,factor.to.y,to);}
if(factor.from.x!==factor.to.x){from=$.effects.setTransition(element,hProps,factor.from.x,from);to=$.effects.setTransition(element,hProps,factor.to.x,to);}}
if(scale==="content"||scale==="both"){if(factor.from.y!==factor.to.y){from=$.effects.setTransition(element,cProps,factor.from.y,from);to=$.effects.setTransition(element,cProps,factor.to.y,to);}}
if(origin){baseline=$.effects.getBaseline(origin,original);from.top=(original.outerHeight-from.outerHeight)*baseline.y+pos.top;from.left=(original.outerWidth-from.outerWidth)*baseline.x+pos.left;to.top=(original.outerHeight-to.outerHeight)*baseline.y+pos.top;to.left=(original.outerWidth-to.outerWidth)*baseline.x+pos.left;}
element.css(from);if(scale==="content"||scale==="both"){vProps=vProps.concat(["marginTop","marginBottom"]).concat(cProps);hProps=hProps.concat(["marginLeft","marginRight"]);element.find("*[width]").each(function(){var child=$(this),childOriginal=$.effects.scaledDimensions(child),childFrom={height:childOriginal.height*factor.from.y,width:childOriginal.width*factor.from.x,outerHeight:childOriginal.outerHeight*factor.from.y,outerWidth:childOriginal.outerWidth*factor.from.x},childTo={height:childOriginal.height*factor.to.y,width:childOriginal.width*factor.to.x,outerHeight:childOriginal.height*factor.to.y,outerWidth:childOriginal.width*factor.to.x};if(factor.from.y!==factor.to.y){childFrom=$.effects.setTransition(child,vProps,factor.from.y,childFrom);childTo=$.effects.setTransition(child,vProps,factor.to.y,childTo);}
if(factor.from.x!==factor.to.x){childFrom=$.effects.setTransition(child,hProps,factor.from.x,childFrom);childTo=$.effects.setTransition(child,hProps,factor.to.x,childTo);}
if(restore){$.effects.saveStyle(child);}
child.css(childFrom);child.animate(childTo,options.duration,options.easing,function(){if(restore){$.effects.restoreStyle(child);}});});}
element.animate(to,{queue:false,duration:options.duration,easing:options.easing,complete:function(){var offset=element.offset();if(to.opacity===0){element.css("opacity",from.opacity);}
if(!restore){element.css("position",position==="static"?"relative":position).offset(offset);$.effects.saveStyle(element);}
done();}});});var effectsEffectScale=$.effects.define("scale",function(options,done){var el=$(this),mode=options.mode,percent=parseInt(options.percent,10)||(parseInt(options.percent,10)===0?0:(mode!=="effect"?0:100)),newOptions=$.extend(true,{from:$.effects.scaledDimensions(el),to:$.effects.scaledDimensions(el,percent,options.direction||"both"),origin:options.origin||["middle","center"]},options);if(options.fade){newOptions.from.opacity=1;newOptions.to.opacity=0;}
$.effects.effect.size.call(this,newOptions,done);});var effectsEffectPuff=$.effects.define("puff","hide",function(options,done){var newOptions=$.extend(true,{},options,{fade:true,percent:parseInt(options.percent,10)||150});$.effects.effect.scale.call(this,newOptions,done);});var effectsEffectPulsate=$.effects.define("pulsate","show",function(options,done){var element=$(this),mode=options.mode,show=mode==="show",hide=mode==="hide",showhide=show||hide,anims=((options.times||5)*2)+(showhide?1:0),duration=options.duration / anims,animateTo=0,i=1,queuelen=element.queue().length;if(show||!element.is(":visible")){element.css("opacity",0).show();animateTo=1;}
for(;i<anims;i++){element.animate({opacity:animateTo},duration,options.easing);animateTo=1-animateTo;}
element.animate({opacity:animateTo},duration,options.easing);element.queue(done);$.effects.unshift(element,queuelen,anims+1);});var effectsEffectShake=$.effects.define("shake",function(options,done){var i=1,element=$(this),direction=options.direction||"left",distance=options.distance||20,times=options.times||3,anims=times*2+1,speed=Math.round(options.duration / anims),ref=(direction==="up"||direction==="down")?"top":"left",positiveMotion=(direction==="up"||direction==="left"),animation={},animation1={},animation2={},queuelen=element.queue().length;$.effects.createPlaceholder(element);animation[ref]=(positiveMotion?"-=":"+=")+distance;animation1[ref]=(positiveMotion?"+=":"-=")+distance*2;animation2[ref]=(positiveMotion?"-=":"+=")+distance*2;element.animate(animation,speed,options.easing);for(;i<times;i++){element.animate(animation1,speed,options.easing).animate(animation2,speed,options.easing);}
element.animate(animation1,speed,options.easing).animate(animation,speed / 2,options.easing).queue(done);$.effects.unshift(element,queuelen,anims+1);});var effectsEffectSlide=$.effects.define("slide","show",function(options,done){var startClip,startRef,element=$(this),map={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},mode=options.mode,direction=options.direction||"left",ref=(direction==="up"||direction==="down")?"top":"left",positiveMotion=(direction==="up"||direction==="left"),distance=options.distance||element[ref==="top"?"outerHeight":"outerWidth"](true),animation={};$.effects.createPlaceholder(element);startClip=element.cssClip();startRef=element.position()[ref];animation[ref]=(positiveMotion?-1:1)*distance+startRef;animation.clip=element.cssClip();animation.clip[map[direction][1]]=animation.clip[map[direction][0]];if(mode==="show"){element.cssClip(animation.clip);element.css(ref,animation[ref]);animation.clip=startClip;animation[ref]=startRef;}
element.animate(animation,{queue:false,duration:options.duration,easing:options.easing,complete:done});});var effect;if($.uiBackCompat!==false){effect=$.effects.define("transfer",function(options,done){$(this).transfer(options,done);});}
var effectsEffectTransfer=effect;$.ui.focusable=function(element,hasTabindex){var map,mapName,img,focusableIfVisible,fieldset,nodeName=element.nodeName.toLowerCase();if("area"===nodeName){map=element.parentNode;mapName=map.name;if(!element.href||!mapName||map.nodeName.toLowerCase()!=="map"){return false;}
img=$("img[usemap='#"+mapName+"']");return img.length>0&&img.is(":visible");}
if(/^(input|select|textarea|button|object)$/.test(nodeName)){focusableIfVisible=!element.disabled;if(focusableIfVisible){fieldset=$(element).closest("fieldset")[0];if(fieldset){focusableIfVisible=!fieldset.disabled;}}}else if("a"===nodeName){focusableIfVisible=element.href||hasTabindex;}else{focusableIfVisible=hasTabindex;}
return focusableIfVisible&&$(element).is(":visible")&&visible($(element));};function visible(element){var visibility=element.css("visibility");while(visibility==="inherit"){element=element.parent();visibility=element.css("visibility");}
return visibility!=="hidden";}
$.extend($.expr[":"],{focusable:function(element){return $.ui.focusable(element,$.attr(element,"tabindex")!=null);}});var focusable=$.ui.focusable;var form=$.fn.form=function(){return typeof this[0].form==="string"?this.closest("form"):$(this[0].form);};var formResetMixin=$.ui.formResetMixin={_formResetHandler:function(){var form=$(this);setTimeout(function(){var instances=form.data("ui-form-reset-instances");$.each(instances,function(){this.refresh();});});},_bindFormResetHandler:function(){this.form=this.element.form();if(!this.form.length){return;}
var instances=this.form.data("ui-form-reset-instances")||[];if(!instances.length){this.form.on("reset.ui-form-reset",this._formResetHandler);}
instances.push(this);this.form.data("ui-form-reset-instances",instances);},_unbindFormResetHandler:function(){if(!this.form.length){return;}
var instances=this.form.data("ui-form-reset-instances");instances.splice($.inArray(this,instances),1);if(instances.length){this.form.data("ui-form-reset-instances",instances);}else{this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset");}}};if($.fn.jquery.substring(0,3)==="1.7"){$.each(["Width","Height"],function(i,name){var side=name==="Width"?["Left","Right"]:["Top","Bottom"],type=name.toLowerCase(),orig={innerWidth:$.fn.innerWidth,innerHeight:$.fn.innerHeight,outerWidth:$.fn.outerWidth,outerHeight:$.fn.outerHeight};function reduce(elem,size,border,margin){$.each(side,function(){size-=parseFloat($.css(elem,"padding"+this))||0;if(border){size-=parseFloat($.css(elem,"border"+this+"Width"))||0;}
if(margin){size-=parseFloat($.css(elem,"margin"+this))||0;}});return size;}
$.fn["inner"+name]=function(size){if(size===undefined){return orig["inner"+name].call(this);}
return this.each(function(){$(this).css(type,reduce(this,size)+"px");});};$.fn["outer"+name]=function(size,margin){if(typeof size!=="number"){return orig["outer"+name].call(this,size);}
return this.each(function(){$(this).css(type,reduce(this,size,true,margin)+"px");});};});$.fn.addBack=function(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));};};var keycode=$.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38};var escapeSelector=$.ui.escapeSelector=(function(){var selectorEscape=/([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
 return function( selector ) {
  return selector.replace( selectorEscape, "\\$1" );
 };
} )();


/*!
 * jQuery UI Labels 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: labels
//>>group: Core
//>>description: Find all the labels associated with a given input
//>>docs: http://api.jqueryui.com/labels/



var labels = $.fn.labels = function() {
 var ancestor, selector, id, labels, ancestors;

 // Check control.labels first
 if ( this[ 0 ].labels && this[ 0 ].labels.length ) {
  return this.pushStack( this[ 0 ].labels );
 }

 // Support: IE <= 11, FF <= 37, Android <= 2.3 only
 // Above browsers do not support control.labels. Everything below is to support them
 // as well as document fragments. control.labels does not work on document fragments
 labels = this.eq( 0 ).parents( "label" );

 // Look for the label based on the id
 id = this.attr( "id" );
 if ( id ) {

  // We don't search against the document in case the element
  // is disconnected from the DOM
  ancestor = this.eq( 0 ).parents().last();

  // Get a full set of top level ancestors
  ancestors = ancestor.add( ancestor.length ? ancestor.siblings() : this.siblings() );

  // Create a selector for the label based on the id
  selector = "label[for='" + $.ui.escapeSelector( id ) + "']";

  labels = labels.add( ancestors.find( selector ).addBack( selector ) );

 }

 // Return whatever we have found for labels
 return this.pushStack( labels );
};


/*!
 * jQuery UI Scroll Parent 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: scrollParent
//>>group: Core
//>>description: Get the closest ancestor element that is scrollable.
//>>docs: http://api.jqueryui.com/scrollParent/



var scrollParent = $.fn.scrollParent = function( includeHidden ) {
 var position = this.css( "position" ),
  excludeStaticParent = position === "absolute",
  overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
  scrollParent = this.parents().filter( function() {
   var parent = $( this );
   if ( excludeStaticParent && parent.css( "position" ) === "static" ) {
    return false;
   }
   return overflowRegex.test( parent.css( "overflow" ) + parent.css( "overflow-y" ) +
    parent.css( "overflow-x" ) );
  } ).eq( 0 );

 return position === "fixed" || !scrollParent.length ?
  $( this[ 0 ].ownerDocument || document ) :
  scrollParent;
};


/*!
 * jQuery UI Tabbable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: :tabbable Selector
//>>group: Core
//>>description: Selects elements which can be tabbed to.
//>>docs: http://api.jqueryui.com/tabbable-selector/



var tabbable = $.extend( $.expr[ ":" ], {
 tabbable: function( element ) {
  var tabIndex = $.attr( element, "tabindex" ),
   hasTabindex = tabIndex != null;
  return ( !hasTabindex || tabIndex >= 0 ) && $.ui.focusable( element, hasTabindex );
 }
} );


/*!
 * jQuery UI Unique ID 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: uniqueId
//>>group: Core
//>>description: Functions to generate and remove uniqueId's
//>>docs: http://api.jqueryui.com/uniqueId/



var uniqueId = $.fn.extend( {
 uniqueId: ( function() {
  var uuid = 0;

  return function() {
   return this.each( function() {
    if ( !this.id ) {
     this.id = "ui-id-" + ( ++uuid );
    }
   } );
  };
 } )(),

 removeUniqueId: function() {
  return this.each( function() {
   if ( /^ui-id-\d+$/.test( this.id ) ) {
    $( this ).removeAttr( "id" );
   }
  } );
 }
} );


/*!
 * jQuery UI Accordion 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Accordion
//>>group: Widgets
// jscs:disable maximumLineLength
//>>description: Displays collapsible content panels for presenting information in a limited amount of space.
// jscs:enable maximumLineLength
//>>docs: http://api.jqueryui.com/accordion/
//>>demos: http://jqueryui.com/accordion/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/accordion.css
//>>css.theme: ../../themes/base/theme.css



var widgetsAccordion = $.widget( "ui.accordion", {
 version: "1.12.1",
 options: {
  active: 0,
  animate: {},
  classes: {
   "ui-accordion-header": "ui-corner-top",
   "ui-accordion-header-collapsed": "ui-corner-all",
   "ui-accordion-content": "ui-corner-bottom"
  },
  collapsible: false,
  event: "click",
  header: "> li > :first-child, > :not(li):even",
  heightStyle: "auto",
  icons: {
   activeHeader: "ui-icon-triangle-1-s",
   header: "ui-icon-triangle-1-e"
  },

  // Callbacks
  activate: null,
  beforeActivate: null
 },

 hideProps: {
  borderTopWidth: "hide",
  borderBottomWidth: "hide",
  paddingTop: "hide",
  paddingBottom: "hide",
  height: "hide"
 },

 showProps: {
  borderTopWidth: "show",
  borderBottomWidth: "show",
  paddingTop: "show",
  paddingBottom: "show",
  height: "show"
 },

 _create: function() {
  var options = this.options;

  this.prevShow = this.prevHide = $();
  this._addClass( "ui-accordion", "ui-widget ui-helper-reset" );
  this.element.attr( "role", "tablist" );

  // Don't allow collapsible: false and active: false / null
  if ( !options.collapsible && ( options.active === false || options.active == null ) ) {
   options.active = 0;
  }

  this._processPanels();

  // handle negative values
  if ( options.active < 0 ) {
   options.active += this.headers.length;
  }
  this._refresh();
 },

 _getCreateEventData: function() {
  return {
   header: this.active,
   panel: !this.active.length ? $() : this.active.next()
  };
 },

 _createIcons: function() {
  var icon, children,
   icons = this.options.icons;

  if ( icons ) {
   icon = $( "<span>" );
   this._addClass( icon, "ui-accordion-header-icon", "ui-icon " + icons.header );
   icon.prependTo( this.headers );
   children = this.active.children( ".ui-accordion-header-icon" );
   this._removeClass( children, icons.header )
    ._addClass( children, null, icons.activeHeader )
    ._addClass( this.headers, "ui-accordion-icons" );
  }
 },

 _destroyIcons: function() {
  this._removeClass( this.headers, "ui-accordion-icons" );
  this.headers.children( ".ui-accordion-header-icon" ).remove();
 },

 _destroy: function() {
  var contents;

  // Clean up main element
  this.element.removeAttr( "role" );

  // Clean up headers
  this.headers
   .removeAttr( "role aria-expanded aria-selected aria-controls tabIndex" )
   .removeUniqueId();

  this._destroyIcons();

  // Clean up content panels
  contents = this.headers.next()
   .css( "display", "" )
   .removeAttr( "role aria-hidden aria-labelledby" )
   .removeUniqueId();

  if ( this.options.heightStyle !== "content" ) {
   contents.css( "height", "" );
  }
 },

 _setOption: function( key, value ) {
  if ( key === "active" ) {

   // _activate() will handle invalid values and update this.options
   this._activate( value );
   return;
  }

  if ( key === "event" ) {
   if ( this.options.event ) {
    this._off( this.headers, this.options.event );
   }
   this._setupEvents( value );
  }

  this._super( key, value );

  // Setting collapsible: false while collapsed; open first panel
  if ( key === "collapsible" && !value && this.options.active === false ) {
   this._activate( 0 );
  }

  if ( key === "icons" ) {
   this._destroyIcons();
   if ( value ) {
    this._createIcons();
   }
  }
 },

 _setOptionDisabled: function( value ) {
  this._super( value );

  this.element.attr( "aria-disabled", value );

  // Support: IE8 Only
  // #5332 / #6059 - opacity doesn't cascade to positioned elements in IE
  // so we need to add the disabled class to the headers and panels
  this._toggleClass( null, "ui-state-disabled", !!value );
  this._toggleClass( this.headers.add( this.headers.next() ), null, "ui-state-disabled",
   !!value );
 },

 _keydown: function( event ) {
  if ( event.altKey || event.ctrlKey ) {
   return;
  }

  var keyCode = $.ui.keyCode,
   length = this.headers.length,
   currentIndex = this.headers.index( event.target ),
   toFocus = false;

  switch ( event.keyCode ) {
  case keyCode.RIGHT:
  case keyCode.DOWN:
   toFocus = this.headers[ ( currentIndex + 1 ) % length ];
   break;
  case keyCode.LEFT:
  case keyCode.UP:
   toFocus = this.headers[ ( currentIndex - 1 + length ) % length ];
   break;
  case keyCode.SPACE:
  case keyCode.ENTER:
   this._eventHandler( event );
   break;
  case keyCode.HOME:
   toFocus = this.headers[ 0 ];
   break;
  case keyCode.END:
   toFocus = this.headers[ length - 1 ];
   break;
  }

  if ( toFocus ) {
   $( event.target ).attr( "tabIndex", -1 );
   $( toFocus ).attr( "tabIndex", 0 );
   $( toFocus ).trigger( "focus" );
   event.preventDefault();
  }
 },

 _panelKeyDown: function( event ) {
  if ( event.keyCode === $.ui.keyCode.UP && event.ctrlKey ) {
   $( event.currentTarget ).prev().trigger( "focus" );
  }
 },

 refresh: function() {
  var options = this.options;
  this._processPanels();

  // Was collapsed or no panel
  if ( ( options.active === false && options.collapsible === true ) ||
    !this.headers.length ) {
   options.active = false;
   this.active = $();

  // active false only when collapsible is true
  } else if ( options.active === false ) {
   this._activate( 0 );

  // was active, but active panel is gone
  } else if ( this.active.length && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {

   // all remaining panel are disabled
   if ( this.headers.length === this.headers.find( ".ui-state-disabled" ).length ) {
    options.active = false;
    this.active = $();

   // activate previous panel
   } else {
    this._activate( Math.max( 0, options.active - 1 ) );
   }

  // was active, active panel still exists
  } else {

   // make sure active index is correct
   options.active = this.headers.index( this.active );
  }

  this._destroyIcons();

  this._refresh();
 },

 _processPanels: function() {
  var prevHeaders = this.headers,
   prevPanels = this.panels;

  this.headers = this.element.find( this.options.header );
  this._addClass( this.headers, "ui-accordion-header ui-accordion-header-collapsed",
   "ui-state-default" );

  this.panels = this.headers.next().filter( ":not(.ui-accordion-content-active)" ).hide();
  this._addClass( this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content" );

  // Avoid memory leaks (#10056)
  if ( prevPanels ) {
   this._off( prevHeaders.not( this.headers ) );
   this._off( prevPanels.not( this.panels ) );
  }
 },

 _refresh: function() {
  var maxHeight,
   options = this.options,
   heightStyle = options.heightStyle,
   parent = this.element.parent();

  this.active = this._findActive( options.active );
  this._addClass( this.active, "ui-accordion-header-active", "ui-state-active" )
   ._removeClass( this.active, "ui-accordion-header-collapsed" );
  this._addClass( this.active.next(), "ui-accordion-content-active" );
  this.active.next().show();

  this.headers
   .attr( "role", "tab" )
   .each( function() {
    var header = $( this ),
     headerId = header.uniqueId().attr( "id" ),
     panel = header.next(),
     panelId = panel.uniqueId().attr( "id" );
    header.attr( "aria-controls", panelId );
    panel.attr( "aria-labelledby", headerId );
   } )
   .next()
    .attr( "role", "tabpanel" );

  this.headers
   .not( this.active )
    .attr( {
     "aria-selected": "false",
     "aria-expanded": "false",
     tabIndex: -1
    } )
    .next()
     .attr( {
      "aria-hidden": "true"
     } )
     .hide();

  // Make sure at least one header is in the tab order
  if ( !this.active.length ) {
   this.headers.eq( 0 ).attr( "tabIndex", 0 );
  } else {
   this.active.attr( {
    "aria-selected": "true",
    "aria-expanded": "true",
    tabIndex: 0
   } )
    .next()
     .attr( {
      "aria-hidden": "false"
     } );
  }

  this._createIcons();

  this._setupEvents( options.event );

  if ( heightStyle === "fill" ) {
   maxHeight = parent.height();
   this.element.siblings( ":visible" ).each( function() {
    var elem = $( this ),
     position = elem.css( "position" );

    if ( position === "absolute" || position === "fixed" ) {
     return;
    }
    maxHeight -= elem.outerHeight( true );
   } );

   this.headers.each( function() {
    maxHeight -= $( this ).outerHeight( true );
   } );

   this.headers.next()
    .each( function() {
     $( this ).height( Math.max( 0, maxHeight -
      $( this ).innerHeight() + $( this ).height() ) );
    } )
    .css( "overflow", "auto" );
  } else if ( heightStyle === "auto" ) {
   maxHeight = 0;
   this.headers.next()
    .each( function() {
     var isVisible = $( this ).is( ":visible" );
     if ( !isVisible ) {
      $( this ).show();
     }
     maxHeight = Math.max( maxHeight, $( this ).css( "height", "" ).height() );
     if ( !isVisible ) {
      $( this ).hide();
     }
    } )
    .height( maxHeight );
  }
 },

 _activate: function( index ) {
  var active = this._findActive( index )[ 0 ];

  // Trying to activate the already active panel
  if ( active === this.active[ 0 ] ) {
   return;
  }

  // Trying to collapse, simulate a click on the currently active header
  active = active || this.active[ 0 ];

  this._eventHandler( {
   target: active,
   currentTarget: active,
   preventDefault: $.noop
  } );
 },

 _findActive: function( selector ) {
  return typeof selector === "number" ? this.headers.eq( selector ) : $();
 },

 _setupEvents: function( event ) {
  var events = {
   keydown: "_keydown"
  };
  if ( event ) {
   $.each( event.split( " " ), function( index, eventName ) {
    events[ eventName ] = "_eventHandler";
   } );
  }

  this._off( this.headers.add( this.headers.next() ) );
  this._on( this.headers, events );
  this._on( this.headers.next(), { keydown: "_panelKeyDown" } );
  this._hoverable( this.headers );
  this._focusable( this.headers );
 },

 _eventHandler: function( event ) {
  var activeChildren, clickedChildren,
   options = this.options,
   active = this.active,
   clicked = $( event.currentTarget ),
   clickedIsActive = clicked[ 0 ] === active[ 0 ],
   collapsing = clickedIsActive && options.collapsible,
   toShow = collapsing ? $() : clicked.next(),
   toHide = active.next(),
   eventData = {
    oldHeader: active,
    oldPanel: toHide,
    newHeader: collapsing ? $() : clicked,
    newPanel: toShow
   };

  event.preventDefault();

  if (

    // click on active header, but not collapsible
    ( clickedIsActive && !options.collapsible ) ||

    // allow canceling activation
    ( this._trigger( "beforeActivate", event, eventData ) === false ) ) {
   return;
  }

  options.active = collapsing ? false : this.headers.index( clicked );

  // When the call to ._toggle() comes after the class changes
  // it causes a very odd bug in IE 8 (see #6720)
  this.active = clickedIsActive ? $() : clicked;
  this._toggle( eventData );

  // Switch classes
  // corner classes on the previously active header stay after the animation
  this._removeClass( active, "ui-accordion-header-active", "ui-state-active" );
  if ( options.icons ) {
   activeChildren = active.children( ".ui-accordion-header-icon" );
   this._removeClass( activeChildren, null, options.icons.activeHeader )
    ._addClass( activeChildren, null, options.icons.header );
  }

  if ( !clickedIsActive ) {
   this._removeClass( clicked, "ui-accordion-header-collapsed" )
    ._addClass( clicked, "ui-accordion-header-active", "ui-state-active" );
   if ( options.icons ) {
    clickedChildren = clicked.children( ".ui-accordion-header-icon" );
    this._removeClass( clickedChildren, null, options.icons.header )
     ._addClass( clickedChildren, null, options.icons.activeHeader );
   }

   this._addClass( clicked.next(), "ui-accordion-content-active" );
  }
 },

 _toggle: function( data ) {
  var toShow = data.newPanel,
   toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

  // Handle activating a panel during the animation for another activation
  this.prevShow.add( this.prevHide ).stop( true, true );
  this.prevShow = toShow;
  this.prevHide = toHide;

  if ( this.options.animate ) {
   this._animate( toShow, toHide, data );
  } else {
   toHide.hide();
   toShow.show();
   this._toggleComplete( data );
  }

  toHide.attr( {
   "aria-hidden": "true"
  } );
  toHide.prev().attr( {
   "aria-selected": "false",
   "aria-expanded": "false"
  } );

  // if we're switching panels, remove the old header from the tab order
  // if we're opening from collapsed state, remove the previous header from the tab order
  // if we're collapsing, then keep the collapsing header in the tab order
  if ( toShow.length && toHide.length ) {
   toHide.prev().attr( {
    "tabIndex": -1,
    "aria-expanded": "false"
   } );
  } else if ( toShow.length ) {
   this.headers.filter( function() {
    return parseInt( $( this ).attr( "tabIndex" ), 10 ) === 0;
   } )
    .attr( "tabIndex", -1 );
  }

  toShow
   .attr( "aria-hidden", "false" )
   .prev()
    .attr( {
     "aria-selected": "true",
     "aria-expanded": "true",
     tabIndex: 0
    } );
 },

 _animate: function( toShow, toHide, data ) {
  var total, easing, duration,
   that = this,
   adjust = 0,
   boxSizing = toShow.css( "box-sizing" ),
   down = toShow.length &&
    ( !toHide.length || ( toShow.index() < toHide.index() ) ),
   animate = this.options.animate || {},
   options = down && animate.down || animate,
   complete = function() {
    that._toggleComplete( data );
   };

  if ( typeof options === "number" ) {
   duration = options;
  }
  if ( typeof options === "string" ) {
   easing = options;
  }

  // fall back from options to animation in case of partial down settings
  easing = easing || options.easing || animate.easing;
  duration = duration || options.duration || animate.duration;

  if ( !toHide.length ) {
   return toShow.animate( this.showProps, duration, easing, complete );
  }
  if ( !toShow.length ) {
   return toHide.animate( this.hideProps, duration, easing, complete );
  }

  total = toShow.show().outerHeight();
  toHide.animate( this.hideProps, {
   duration: duration,
   easing: easing,
   step: function( now, fx ) {
    fx.now = Math.round( now );
   }
  } );
  toShow
   .hide()
   .animate( this.showProps, {
    duration: duration,
    easing: easing,
    complete: complete,
    step: function( now, fx ) {
     fx.now = Math.round( now );
     if ( fx.prop !== "height" ) {
      if ( boxSizing === "content-box" ) {
       adjust += fx.now;
      }
     } else if ( that.options.heightStyle !== "content" ) {
      fx.now = Math.round( total - toHide.outerHeight() - adjust );
      adjust = 0;
     }
    }
   } );
 },

 _toggleComplete: function( data ) {
  var toHide = data.oldPanel,
   prev = toHide.prev();

  this._removeClass( toHide, "ui-accordion-content-active" );
  this._removeClass( prev, "ui-accordion-header-active" )
   ._addClass( prev, "ui-accordion-header-collapsed" );

  // Work around for rendering bug in IE (#5421)
  if ( toHide.length ) {
   toHide.parent()[ 0 ].className = toHide.parent()[ 0 ].className;
  }
  this._trigger( "activate", null, data );
 }
} );



var safeActiveElement = $.ui.safeActiveElement = function( document ) {
 var activeElement;

 // Support: IE 9 only
 // IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
 try {
  activeElement = document.activeElement;
 } catch ( error ) {
  activeElement = document.body;
 }

 // Support: IE 9 - 11 only
 // IE may return null instead of an element
 // Interestingly, this only seems to occur when NOT in an iframe
 if ( !activeElement ) {
  activeElement = document.body;
 }

 // Support: IE 11 only
 // IE11 returns a seemingly empty object in some cases when accessing
 // document.activeElement from an <iframe>
 if ( !activeElement.nodeName ) {
  activeElement = document.body;
 }

 return activeElement;
};


/*!
 * jQuery UI Menu 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Menu
//>>group: Widgets
//>>description: Creates nestable menus.
//>>docs: http://api.jqueryui.com/menu/
//>>demos: http://jqueryui.com/menu/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/menu.css
//>>css.theme: ../../themes/base/theme.css



var widgetsMenu = $.widget( "ui.menu", {
 version: "1.12.1",
 defaultElement: "<ul>",
 delay: 300,
 options: {
  icons: {
   submenu: "ui-icon-caret-1-e"
  },
  items: "> *",
  menus: "ul",
  position: {
   my: "left top",
   at: "right top"
  },
  role: "menu",

  // Callbacks
  blur: null,
  focus: null,
  select: null
 },

 _create: function() {
  this.activeMenu = this.element;

  // Flag used to prevent firing of the click handler
  // as the event bubbles up through nested menus
  this.mouseHandled = false;
  this.element
   .uniqueId()
   .attr( {
    role: this.options.role,
    tabIndex: 0
   } );

  this._addClass( "ui-menu", "ui-widget ui-widget-content" );
  this._on( {

   // Prevent focus from sticking to links inside menu after clicking
   // them (focus should always stay on UL during navigation).
   "mousedown .ui-menu-item": function( event ) {
    event.preventDefault();
   },
   "click .ui-menu-item": function( event ) {
    var target = $( event.target );
    var active = $( $.ui.safeActiveElement( this.document[ 0 ] ) );
    if ( !this.mouseHandled && target.not( ".ui-state-disabled" ).length ) {
     this.select( event );

     // Only set the mouseHandled flag if the event will bubble, see #9469.
     if ( !event.isPropagationStopped() ) {
      this.mouseHandled = true;
     }

     // Open submenu on click
     if ( target.has( ".ui-menu" ).length ) {
      this.expand( event );
     } else if ( !this.element.is( ":focus" ) &&
       active.closest( ".ui-menu" ).length ) {

      // Redirect focus to the menu
      this.element.trigger( "focus", [ true ] );

      // If the active item is on the top level, let it stay active.
      // Otherwise, blur the active item since it is no longer visible.
      if ( this.active && this.active.parents( ".ui-menu" ).length === 1 ) {
       clearTimeout( this.timer );
      }
     }
    }
   },
   "mouseenter .ui-menu-item": function( event ) {

    // Ignore mouse events while typeahead is active, see #10458.
    // Prevents focusing the wrong item when typeahead causes a scroll while the mouse
    // is over an item in the menu
    if ( this.previousFilter ) {
     return;
    }

    var actualTarget = $( event.target ).closest( ".ui-menu-item" ),
     target = $( event.currentTarget );

    // Ignore bubbled events on parent items, see #11641
    if ( actualTarget[ 0 ] !== target[ 0 ] ) {
     return;
    }

    // Remove ui-state-active class from siblings of the newly focused menu item
    // to avoid a jump caused by adjacent elements both having a class with a border
    this._removeClass( target.siblings().children( ".ui-state-active" ),
     null, "ui-state-active" );
    this.focus( event, target );
   },
   mouseleave: "collapseAll",
   "mouseleave .ui-menu": "collapseAll",
   focus: function( event, keepActiveItem ) {

    // If there's already an active item, keep it active
    // If not, activate the first item
    var item = this.active || this.element.find( this.options.items ).eq( 0 );

    if ( !keepActiveItem ) {
     this.focus( event, item );
    }
   },
   blur: function( event ) {
    this._delay( function() {
     var notContained = !$.contains(
      this.element[ 0 ],
      $.ui.safeActiveElement( this.document[ 0 ] )
     );
     if ( notContained ) {
      this.collapseAll( event );
     }
    } );
   },
   keydown: "_keydown"
  } );

  this.refresh();

  // Clicks outside of a menu collapse any open menus
  this._on( this.document, {
   click: function( event ) {
    if ( this._closeOnDocumentClick( event ) ) {
     this.collapseAll( event );
    }

    // Reset the mouseHandled flag
    this.mouseHandled = false;
   }
  } );
 },

 _destroy: function() {
  var items = this.element.find( ".ui-menu-item" )
    .removeAttr( "role aria-disabled" ),
   submenus = items.children( ".ui-menu-item-wrapper" )
    .removeUniqueId()
    .removeAttr( "tabIndex role aria-haspopup" );

  // Destroy (sub)menus
  this.element
   .removeAttr( "aria-activedescendant" )
   .find( ".ui-menu" ).addBack()
    .removeAttr( "role aria-labelledby aria-expanded aria-hidden aria-disabled " +
     "tabIndex" )
    .removeUniqueId()
    .show();

  submenus.children().each( function() {
   var elem = $( this );
   if ( elem.data( "ui-menu-submenu-caret" ) ) {
    elem.remove();
   }
  } );
 },

 _keydown: function( event ) {
  var match, prev, character, skip,
   preventDefault = true;

  switch ( event.keyCode ) {
  case $.ui.keyCode.PAGE_UP:
   this.previousPage( event );
   break;
  case $.ui.keyCode.PAGE_DOWN:
   this.nextPage( event );
   break;
  case $.ui.keyCode.HOME:
   this._move( "first", "first", event );
   break;
  case $.ui.keyCode.END:
   this._move( "last", "last", event );
   break;
  case $.ui.keyCode.UP:
   this.previous( event );
   break;
  case $.ui.keyCode.DOWN:
   this.next( event );
   break;
  case $.ui.keyCode.LEFT:
   this.collapse( event );
   break;
  case $.ui.keyCode.RIGHT:
   if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
    this.expand( event );
   }
   break;
  case $.ui.keyCode.ENTER:
  case $.ui.keyCode.SPACE:
   this._activate( event );
   break;
  case $.ui.keyCode.ESCAPE:
   this.collapse( event );
   break;
  default:
   preventDefault = false;
   prev = this.previousFilter || "";
   skip = false;

   // Support number pad values
   character = event.keyCode >= 96 && event.keyCode <= 105 ?
    ( event.keyCode - 96 ).toString() : String.fromCharCode( event.keyCode );

   clearTimeout( this.filterTimer );

   if ( character === prev ) {
    skip = true;
   } else {
    character = prev + character;
   }

   match = this._filterMenuItems( character );
   match = skip && match.index( this.active.next() ) !== -1 ?
    this.active.nextAll( ".ui-menu-item" ) :
    match;

   // If no matches on the current filter, reset to the last character pressed
   // to move down the menu to the first item that starts with that character
   if ( !match.length ) {
    character = String.fromCharCode( event.keyCode );
    match = this._filterMenuItems( character );
   }

   if ( match.length ) {
    this.focus( event, match );
    this.previousFilter = character;
    this.filterTimer = this._delay( function() {
     delete this.previousFilter;
    }, 1000 );
   } else {
    delete this.previousFilter;
   }
  }

  if ( preventDefault ) {
   event.preventDefault();
  }
 },

 _activate: function( event ) {
  if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
   if ( this.active.children( "[aria-haspopup='true']" ).length ) {
    this.expand( event );
   } else {
    this.select( event );
   }
  }
 },

 refresh: function() {
  var menus, items, newSubmenus, newItems, newWrappers,
   that = this,
   icon = this.options.icons.submenu,
   submenus = this.element.find( this.options.menus );

  this._toggleClass( "ui-menu-icons", null, !!this.element.find( ".ui-icon" ).length );

  // Initialize nested menus
  newSubmenus = submenus.filter( ":not(.ui-menu)" )
   .hide()
   .attr( {
    role: this.options.role,
    "aria-hidden": "true",
    "aria-expanded": "false"
   } )
   .each( function() {
    var menu = $( this ),
     item = menu.prev(),
     submenuCaret = $( "<span>" ).data( "ui-menu-submenu-caret", true );

    that._addClass( submenuCaret, "ui-menu-icon", "ui-icon " + icon );
    item
     .attr( "aria-haspopup", "true" )
     .prepend( submenuCaret );
    menu.attr( "aria-labelledby", item.attr( "id" ) );
   } );

  this._addClass( newSubmenus, "ui-menu", "ui-widget ui-widget-content ui-front" );

  menus = submenus.add( this.element );
  items = menus.find( this.options.items );

  // Initialize menu-items containing spaces and/or dashes only as dividers
  items.not( ".ui-menu-item" ).each( function() {
   var item = $( this );
   if ( that._isDivider( item ) ) {
    that._addClass( item, "ui-menu-divider", "ui-widget-content" );
   }
  } );

  // Don't refresh list items that are already adapted
  newItems = items.not( ".ui-menu-item, .ui-menu-divider" );
  newWrappers = newItems.children()
   .not( ".ui-menu" )
    .uniqueId()
    .attr( {
     tabIndex: -1,
     role: this._itemRole()
    } );
  this._addClass( newItems, "ui-menu-item" )
   ._addClass( newWrappers, "ui-menu-item-wrapper" );

  // Add aria-disabled attribute to any disabled menu item
  items.filter( ".ui-state-disabled" ).attr( "aria-disabled", "true" );

  // If the active item has been removed, blur the menu
  if ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
   this.blur();
  }
 },

 _itemRole: function() {
  return {
   menu: "menuitem",
   listbox: "option"
  }[ this.options.role ];
 },

 _setOption: function( key, value ) {
  if ( key === "icons" ) {
   var icons = this.element.find( ".ui-menu-icon" );
   this._removeClass( icons, null, this.options.icons.submenu )
    ._addClass( icons, null, value.submenu );
  }
  this._super( key, value );
 },

 _setOptionDisabled: function( value ) {
  this._super( value );

  this.element.attr( "aria-disabled", String( value ) );
  this._toggleClass( null, "ui-state-disabled", !!value );
 },

 focus: function( event, item ) {
  var nested, focused, activeParent;
  this.blur( event, event && event.type === "focus" );

  this._scrollIntoView( item );

  this.active = item.first();

  focused = this.active.children( ".ui-menu-item-wrapper" );
  this._addClass( focused, null, "ui-state-active" );

  // Only update aria-activedescendant if there's a role
  // otherwise we assume focus is managed elsewhere
  if ( this.options.role ) {
   this.element.attr( "aria-activedescendant", focused.attr( "id" ) );
  }

  // Highlight active parent menu item, if any
  activeParent = this.active
   .parent()
    .closest( ".ui-menu-item" )
     .children( ".ui-menu-item-wrapper" );
  this._addClass( activeParent, null, "ui-state-active" );

  if ( event && event.type === "keydown" ) {
   this._close();
  } else {
   this.timer = this._delay( function() {
    this._close();
   }, this.delay );
  }

  nested = item.children( ".ui-menu" );
  if ( nested.length && event && ( /^mouse/.test( event.type ) ) ) {
   this._startOpening( nested );
  }
  this.activeMenu = item.parent();

  this._trigger( "focus", event, { item: item } );
 },

 _scrollIntoView: function( item ) {
  var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
  if ( this._hasScroll() ) {
   borderTop = parseFloat( $.css( this.activeMenu[ 0 ], "borderTopWidth" ) ) || 0;
   paddingTop = parseFloat( $.css( this.activeMenu[ 0 ], "paddingTop" ) ) || 0;
   offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
   scroll = this.activeMenu.scrollTop();
   elementHeight = this.activeMenu.height();
   itemHeight = item.outerHeight();

   if ( offset < 0 ) {
    this.activeMenu.scrollTop( scroll + offset );
   } else if ( offset + itemHeight > elementHeight ) {
    this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );
   }
  }
 },

 blur: function( event, fromFocus ) {
  if ( !fromFocus ) {
   clearTimeout( this.timer );
  }

  if ( !this.active ) {
   return;
  }

  this._removeClass( this.active.children( ".ui-menu-item-wrapper" ),
   null, "ui-state-active" );

  this._trigger( "blur", event, { item: this.active } );
  this.active = null;
 },

 _startOpening: function( submenu ) {
  clearTimeout( this.timer );

  // Don't open if already open fixes a Firefox bug that caused a .5 pixel
  // shift in the submenu position when mousing over the caret icon
  if ( submenu.attr( "aria-hidden" ) !== "true" ) {
   return;
  }

  this.timer = this._delay( function() {
   this._close();
   this._open( submenu );
  }, this.delay );
 },

 _open: function( submenu ) {
  var position = $.extend( {
   of: this.active
  }, this.options.position );

  clearTimeout( this.timer );
  this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )
   .hide()
   .attr( "aria-hidden", "true" );

  submenu
   .show()
   .removeAttr( "aria-hidden" )
   .attr( "aria-expanded", "true" )
   .position( position );
 },

 collapseAll: function( event, all ) {
  clearTimeout( this.timer );
  this.timer = this._delay( function() {

   // If we were passed an event, look for the submenu that contains the event
   var currentMenu = all ? this.element :
    $( event && event.target ).closest( this.element.find( ".ui-menu" ) );

   // If we found no valid submenu ancestor, use the main menu to close all
   // sub menus anyway
   if ( !currentMenu.length ) {
    currentMenu = this.element;
   }

   this._close( currentMenu );

   this.blur( event );

   // Work around active item staying active after menu is blurred
   this._removeClass( currentMenu.find( ".ui-state-active" ), null, "ui-state-active" );

   this.activeMenu = currentMenu;
  }, this.delay );
 },

 // With no arguments, closes the currently active menu - if nothing is active
 // it closes all menus.  If passed an argument, it will search for menus BELOW
 _close: function( startMenu ) {
  if ( !startMenu ) {
   startMenu = this.active ? this.active.parent() : this.element;
  }

  startMenu.find( ".ui-menu" )
   .hide()
   .attr( "aria-hidden", "true" )
   .attr( "aria-expanded", "false" );
 },

 _closeOnDocumentClick: function( event ) {
  return !$( event.target ).closest( ".ui-menu" ).length;
 },

 _isDivider: function( item ) {

  // Match hyphen, em dash, en dash
  return !/[^\-\u2014\u2013\s]/.test( item.text() );
 },

 collapse: function( event ) {
  var newItem = this.active &&
   this.active.parent().closest( ".ui-menu-item", this.element );
  if ( newItem && newItem.length ) {
   this._close();
   this.focus( event, newItem );
  }
 },

 expand: function( event ) {
  var newItem = this.active &&
   this.active
    .children( ".ui-menu " )
     .find( this.options.items )
      .first();

  if ( newItem && newItem.length ) {
   this._open( newItem.parent() );

   // Delay so Firefox will not hide activedescendant change in expanding submenu from AT
   this._delay( function() {
    this.focus( event, newItem );
   } );
  }
 },

 next: function( event ) {
  this._move( "next", "first", event );
 },

 previous: function( event ) {
  this._move( "prev", "last", event );
 },

 isFirstItem: function() {
  return this.active && !this.active.prevAll( ".ui-menu-item" ).length;
 },

 isLastItem: function() {
  return this.active && !this.active.nextAll( ".ui-menu-item" ).length;
 },

 _move: function( direction, filter, event ) {
  var next;
  if ( this.active ) {
   if ( direction === "first" || direction === "last" ) {
    next = this.active
     [ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )
     .eq( -1 );
   } else {
    next = this.active
     [ direction + "All" ]( ".ui-menu-item" )
     .eq( 0 );
   }
  }
  if ( !next || !next.length || !this.active ) {
   next = this.activeMenu.find( this.options.items )[ filter ]();
  }

  this.focus( event, next );
 },

 nextPage: function( event ) {
  var item, base, height;

  if ( !this.active ) {
   this.next( event );
   return;
  }
  if ( this.isLastItem() ) {
   return;
  }
  if ( this._hasScroll() ) {
   base = this.active.offset().top;
   height = this.element.height();
   this.active.nextAll( ".ui-menu-item" ).each( function() {
    item = $( this );
    return item.offset().top - base - height < 0;
   } );

   this.focus( event, item );
  } else {
   this.focus( event, this.activeMenu.find( this.options.items )
    [ !this.active ? "first" : "last" ]() );
  }
 },

 previousPage: function( event ) {
  var item, base, height;
  if ( !this.active ) {
   this.next( event );
   return;
  }
  if ( this.isFirstItem() ) {
   return;
  }
  if ( this._hasScroll() ) {
   base = this.active.offset().top;
   height = this.element.height();
   this.active.prevAll( ".ui-menu-item" ).each( function() {
    item = $( this );
    return item.offset().top - base + height > 0;
   } );

   this.focus( event, item );
  } else {
   this.focus( event, this.activeMenu.find( this.options.items ).first() );
  }
 },

 _hasScroll: function() {
  return this.element.outerHeight() < this.element.prop( "scrollHeight" );
 },

 select: function( event ) {

  // TODO: It should never be possible to not have an active item at this
  // point, but the tests don't trigger mouseenter before click.
  this.active = this.active || $( event.target ).closest( ".ui-menu-item" );
  var ui = { item: this.active };
  if ( !this.active.has( ".ui-menu" ).length ) {
   this.collapseAll( event, true );
  }
  this._trigger( "select", event, ui );
 },

 _filterMenuItems: function( character ) {
  var escapedCharacter = character.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" ),
   regex = new RegExp( "^" + escapedCharacter, "i" );

  return this.activeMenu
   .find( this.options.items )

    // Only match on items, not dividers or other content (#10571)
    .filter( ".ui-menu-item" )
     .filter( function() {
      return regex.test(
       $.trim( $( this ).children( ".ui-menu-item-wrapper" ).text() ) );
     } );
 }
} );


/*!
 * jQuery UI Autocomplete 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Autocomplete
//>>group: Widgets
//>>description: Lists suggested words as the user is typing.
//>>docs: http://api.jqueryui.com/autocomplete/
//>>demos: http://jqueryui.com/autocomplete/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/autocomplete.css
//>>css.theme: ../../themes/base/theme.css



$.widget( "ui.autocomplete", {
 version: "1.12.1",
 defaultElement: "<input>",
 options: {
  appendTo: null,
  autoFocus: false,
  delay: 300,
  minLength: 1,
  position: {
   my: "left top",
   at: "left bottom",
   collision: "none"
  },
  source: null,

  // Callbacks
  change: null,
  close: null,
  focus: null,
  open: null,
  response: null,
  search: null,
  select: null
 },

 requestIndex: 0,
 pending: 0,

 _create: function() {

  // Some browsers only repeat keydown events, not keypress events,
  // so we use the suppressKeyPress flag to determine if we've already
  // handled the keydown event. #7269
  // Unfortunately the code for & in keypress is the same as the up arrow,
  // so we use the suppressKeyPressRepeat flag to avoid handling keypress
  // events when we know the keydown event was used to modify the
  // search term. #7799
  var suppressKeyPress, suppressKeyPressRepeat, suppressInput,
   nodeName = this.element[ 0 ].nodeName.toLowerCase(),
   isTextarea = nodeName === "textarea",
   isInput = nodeName === "input";

  // Textareas are always multi-line
  // Inputs are always single-line, even if inside a contentEditable element
  // IE also treats inputs as contentEditable
  // All other element types are determined by whether or not they're contentEditable
  this.isMultiLine = isTextarea || !isInput && this._isContentEditable( this.element );

  this.valueMethod = this.element[ isTextarea || isInput ? "val" : "text" ];
  this.isNewMenu = true;

  this._addClass( "ui-autocomplete-input" );
  this.element.attr( "autocomplete", "off" );

  this._on( this.element, {
   keydown: function( event ) {
    if ( this.element.prop( "readOnly" ) ) {
     suppressKeyPress = true;
     suppressInput = true;
     suppressKeyPressRepeat = true;
     return;
    }

    suppressKeyPress = false;
    suppressInput = false;
    suppressKeyPressRepeat = false;
    var keyCode = $.ui.keyCode;
    switch ( event.keyCode ) {
    case keyCode.PAGE_UP:
     suppressKeyPress = true;
     this._move( "previousPage", event );
     break;
    case keyCode.PAGE_DOWN:
     suppressKeyPress = true;
     this._move( "nextPage", event );
     break;
    case keyCode.UP:
     suppressKeyPress = true;
     this._keyEvent( "previous", event );
     break;
    case keyCode.DOWN:
     suppressKeyPress = true;
     this._keyEvent( "next", event );
     break;
    case keyCode.ENTER:

     // when menu is open and has focus
     if ( this.menu.active ) {

      // #6055 - Opera still allows the keypress to occur
      // which causes forms to submit
      suppressKeyPress = true;
      event.preventDefault();
      this.menu.select( event );
     }
     break;
    case keyCode.TAB:
     if ( this.menu.active ) {
      this.menu.select( event );
     }
     break;
    case keyCode.ESCAPE:
     if ( this.menu.element.is( ":visible" ) ) {
      if ( !this.isMultiLine ) {
       this._value( this.term );
      }
      this.close( event );

      // Different browsers have different default behavior for escape
      // Single press can mean undo or clear
      // Double press in IE means clear the whole form
      event.preventDefault();
     }
     break;
    default:
     suppressKeyPressRepeat = true;

     // search timeout should be triggered before the input value is changed
     this._searchTimeout( event );
     break;
    }
   },
   keypress: function( event ) {
    if ( suppressKeyPress ) {
     suppressKeyPress = false;
     if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
      event.preventDefault();
     }
     return;
    }
    if ( suppressKeyPressRepeat ) {
     return;
    }

    // Replicate some key handlers to allow them to repeat in Firefox and Opera
    var keyCode = $.ui.keyCode;
    switch ( event.keyCode ) {
    case keyCode.PAGE_UP:
     this._move( "previousPage", event );
     break;
    case keyCode.PAGE_DOWN:
     this._move( "nextPage", event );
     break;
    case keyCode.UP:
     this._keyEvent( "previous", event );
     break;
    case keyCode.DOWN:
     this._keyEvent( "next", event );
     break;
    }
   },
   input: function( event ) {
    if ( suppressInput ) {
     suppressInput = false;
     event.preventDefault();
     return;
    }
    this._searchTimeout( event );
   },
   focus: function() {
    this.selectedItem = null;
    this.previous = this._value();
   },
   blur: function( event ) {
    if ( this.cancelBlur ) {
     delete this.cancelBlur;
     return;
    }

    clearTimeout( this.searching );
    this.close( event );
    this._change( event );
   }
  } );

  this._initSource();
  this.menu = $( "<ul>" )
   .appendTo( this._appendTo() )
   .menu( {

    // disable ARIA support, the live region takes care of that
    role: null
   } )
   .hide()
   .menu( "instance" );

  this._addClass( this.menu.element, "ui-autocomplete", "ui-front" );
  this._on( this.menu.element, {
   mousedown: function( event ) {

    // prevent moving focus out of the text field
    event.preventDefault();

    // IE doesn't prevent moving focus even with event.preventDefault()
    // so we set a flag to know when we should ignore the blur event
    this.cancelBlur = true;
    this._delay( function() {
     delete this.cancelBlur;

     // Support: IE 8 only
     // Right clicking a menu item or selecting text from the menu items will
     // result in focus moving out of the input. However, we've already received
     // and ignored the blur event because of the cancelBlur flag set above. So
     // we restore focus to ensure that the menu closes properly based on the user's
     // next actions.
     if ( this.element[ 0 ] !== $.ui.safeActiveElement( this.document[ 0 ] ) ) {
      this.element.trigger( "focus" );
     }
    } );
   },
   menufocus: function( event, ui ) {
    var label, item;

    // support: Firefox
    // Prevent accidental activation of menu items in Firefox (#7024 #9118)
    if ( this.isNewMenu ) {
     this.isNewMenu = false;
     if ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {
      this.menu.blur();

      this.document.one( "mousemove", function() {
       $( event.target ).trigger( event.originalEvent );
      } );

      return;
     }
    }

    item = ui.item.data( "ui-autocomplete-item" );
    if ( false !== this._trigger( "focus", event, { item: item } ) ) {

     // use value to match what will end up in the input, if it was a key event
     if ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {
      this._value( item.value );
     }
    }

    // Announce the value in the liveRegion
    label = ui.item.attr( "aria-label" ) || item.value;
    if ( label && $.trim( label ).length ) {
     this.liveRegion.children().hide();
     $( "<div>" ).text( label ).appendTo( this.liveRegion );
    }
   },
   menuselect: function( event, ui ) {
    var item = ui.item.data( "ui-autocomplete-item" ),
     previous = this.previous;

    // Only trigger when focus was lost (click on menu)
    if ( this.element[ 0 ] !== $.ui.safeActiveElement( this.document[ 0 ] ) ) {
     this.element.trigger( "focus" );
     this.previous = previous;

     // #6109 - IE triggers two focus events and the second
     // is asynchronous, so we need to reset the previous
     // term synchronously and asynchronously :-(
     this._delay( function() {
      this.previous = previous;
      this.selectedItem = item;
     } );
    }

    if ( false !== this._trigger( "select", event, { item: item } ) ) {
     this._value( item.value );
    }

    // reset the term after the select event
    // this allows custom select handling to work properly
    this.term = this._value();

    this.close( event );
    this.selectedItem = item;
   }
  } );

  this.liveRegion = $( "<div>", {
   role: "status",
   "aria-live": "assertive",
   "aria-relevant": "additions"
  } )
   .appendTo( this.document[ 0 ].body );

  this._addClass( this.liveRegion, null, "ui-helper-hidden-accessible" );

  // Turning off autocomplete prevents the browser from remembering the
  // value when navigating through history, so we re-enable autocomplete
  // if the page is unloaded before the widget is destroyed. #7790
  this._on( this.window, {
   beforeunload: function() {
    this.element.removeAttr( "autocomplete" );
   }
  } );
 },

 _destroy: function() {
  clearTimeout( this.searching );
  this.element.removeAttr( "autocomplete" );
  this.menu.element.remove();
  this.liveRegion.remove();
 },

 _setOption: function( key, value ) {
  this._super( key, value );
  if ( key === "source" ) {
   this._initSource();
  }
  if ( key === "appendTo" ) {
   this.menu.element.appendTo( this._appendTo() );
  }
  if ( key === "disabled" && value && this.xhr ) {
   this.xhr.abort();
  }
 },

 _isEventTargetInWidget: function( event ) {
  var menuElement = this.menu.element[ 0 ];

  return event.target === this.element[ 0 ] ||
   event.target === menuElement ||
   $.contains( menuElement, event.target );
 },

 _closeOnClickOutside: function( event ) {
  if ( !this._isEventTargetInWidget( event ) ) {
   this.close();
  }
 },

 _appendTo: function() {
  var element = this.options.appendTo;

  if ( element ) {
   element = element.jquery || element.nodeType ?
    $( element ) :
    this.document.find( element ).eq( 0 );
  }

  if ( !element || !element[ 0 ] ) {
   element = this.element.closest( ".ui-front, dialog" );
  }

  if ( !element.length ) {
   element = this.document[ 0 ].body;
  }

  return element;
 },

 _initSource: function() {
  var array, url,
   that = this;
  if ( $.isArray( this.options.source ) ) {
   array = this.options.source;
   this.source = function( request, response ) {
    response( $.ui.autocomplete.filter( array, request.term ) );
   };
  } else if ( typeof this.options.source === "string" ) {
   url = this.options.source;
   this.source = function( request, response ) {
    if ( that.xhr ) {
     that.xhr.abort();
    }
    that.xhr = $.ajax( {
     url: url,
     data: request,
     dataType: "json",
     success: function( data ) {
      response( data );
     },
     error: function() {
      response( [] );
     }
    } );
   };
  } else {
   this.source = this.options.source;
  }
 },

 _searchTimeout: function( event ) {
  clearTimeout( this.searching );
  this.searching = this._delay( function() {

   // Search if the value has changed, or if the user retypes the same value (see #7434)
   var equalValues = this.term === this._value(),
    menuVisible = this.menu.element.is( ":visible" ),
    modifierKey = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;

   if ( !equalValues || ( equalValues && !menuVisible && !modifierKey ) ) {
    this.selectedItem = null;
    this.search( null, event );
   }
  }, this.options.delay );
 },

 search: function( value, event ) {
  value = value != null ? value : this._value();

  // Always save the actual value, not the one passed as an argument
  this.term = this._value();

  if ( value.length < this.options.minLength ) {
   return this.close( event );
  }

  if ( this._trigger( "search", event ) === false ) {
   return;
  }

  return this._search( value );
 },

 _search: function( value ) {
  this.pending++;
  this._addClass( "ui-autocomplete-loading" );
  this.cancelSearch = false;

  this.source( { term: value }, this._response() );
 },

 _response: function() {
  var index = ++this.requestIndex;

  return $.proxy( function( content ) {
   if ( index === this.requestIndex ) {
    this.__response( content );
   }

   this.pending--;
   if ( !this.pending ) {
    this._removeClass( "ui-autocomplete-loading" );
   }
  }, this );
 },

 __response: function( content ) {
  if ( content ) {
   content = this._normalize( content );
  }
  this._trigger( "response", null, { content: content } );
  if ( !this.options.disabled && content && content.length && !this.cancelSearch ) {
   this._suggest( content );
   this._trigger( "open" );
  } else {

   // use ._close() instead of .close() so we don't cancel future searches
   this._close();
  }
 },

 close: function( event ) {
  this.cancelSearch = true;
  this._close( event );
 },

 _close: function( event ) {

  // Remove the handler that closes the menu on outside clicks
  this._off( this.document, "mousedown" );

  if ( this.menu.element.is( ":visible" ) ) {
   this.menu.element.hide();
   this.menu.blur();
   this.isNewMenu = true;
   this._trigger( "close", event );
  }
 },

 _change: function( event ) {
  if ( this.previous !== this._value() ) {
   this._trigger( "change", event, { item: this.selectedItem } );
  }
 },

 _normalize: function( items ) {

  // assume all items have the right format when the first item is complete
  if ( items.length && items[ 0 ].label && items[ 0 ].value ) {
   return items;
  }
  return $.map( items, function( item ) {
   if ( typeof item === "string" ) {
    return {
     label: item,
     value: item
    };
   }
   return $.extend( {}, item, {
    label: item.label || item.value,
    value: item.value || item.label
   } );
  } );
 },

 _suggest: function( items ) {
  var ul = this.menu.element.empty();
  this._renderMenu( ul, items );
  this.isNewMenu = true;
  this.menu.refresh();

  // Size and position menu
  ul.show();
  this._resizeMenu();
  ul.position( $.extend( {
   of: this.element
  }, this.options.position ) );

  if ( this.options.autoFocus ) {
   this.menu.next();
  }

  // Listen for interactions outside of the widget (#6642)
  this._on( this.document, {
   mousedown: "_closeOnClickOutside"
  } );
 },

 _resizeMenu: function() {
  var ul = this.menu.element;
  ul.outerWidth( Math.max(

   // Firefox wraps long text (possibly a rounding bug)
   // so we add 1px to avoid the wrapping (#7513)
   ul.width( "" ).outerWidth() + 1,
   this.element.outerWidth()
  ) );
 },

 _renderMenu: function( ul, items ) {
  var that = this;
  $.each( items, function( index, item ) {
   that._renderItemData( ul, item );
  } );
 },

 _renderItemData: function( ul, item ) {
  return this._renderItem( ul, item ).data( "ui-autocomplete-item", item );
 },

 _renderItem: function( ul, item ) {
  return $( "<li>" )
   .append( $( "<div>" ).text( item.label ) )
   .appendTo( ul );
 },

 _move: function( direction, event ) {
  if ( !this.menu.element.is( ":visible" ) ) {
   this.search( null, event );
   return;
  }
  if ( this.menu.isFirstItem() && /^previous/.test( direction ) ||
    this.menu.isLastItem() && /^next/.test( direction ) ) {

   if ( !this.isMultiLine ) {
    this._value( this.term );
   }

   this.menu.blur();
   return;
  }
  this.menu[ direction ]( event );
 },

 widget: function() {
  return this.menu.element;
 },

 _value: function() {
  return this.valueMethod.apply( this.element, arguments );
 },

 _keyEvent: function( keyEvent, event ) {
  if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
   this._move( keyEvent, event );

   // Prevents moving cursor to beginning/end of the text field in some browsers
   event.preventDefault();
  }
 },

 // Support: Chrome <=50
 // We should be able to just use this.element.prop( "isContentEditable" )
 // but hidden elements always report false in Chrome.
 // https://code.google.com/p/chromium/issues/detail?id=313082
 _isContentEditable: function( element ) {
  if ( !element.length ) {
   return false;
  }

  var editable = element.prop( "contentEditable" );

  if ( editable === "inherit" ) {
    return this._isContentEditable( element.parent() );
  }

  return editable === "true";
 }
} );

$.extend( $.ui.autocomplete, {
 escapeRegex: function( value ) {
  return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
 },
 filter: function( array, term ) {
  var matcher = new RegExp( $.ui.autocomplete.escapeRegex( term ), "i" );
  return $.grep( array, function( value ) {
   return matcher.test( value.label || value.value || value );
  } );
 }
} );

// Live region extension, adding a `messages` option
// NOTE: This is an experimental API. We are still investigating
// a full solution for string manipulation and internationalization.
$.widget( "ui.autocomplete", $.ui.autocomplete, {
 options: {
  messages: {
   noResults: "No search results.",
   results: function( amount ) {
    return amount + ( amount > 1 ? " results are" : " result is" ) +
     " available, use up and down arrow keys to navigate.";
   }
  }
 },

 __response: function( content ) {
  var message;
  this._superApply( arguments );
  if ( this.options.disabled || this.cancelSearch ) {
   return;
  }
  if ( content && content.length ) {
   message = this.options.messages.results( content.length );
  } else {
   message = this.options.messages.noResults;
  }
  this.liveRegion.children().hide();
  $( "<div>" ).text( message ).appendTo( this.liveRegion );
 }
} );

var widgetsAutocomplete = $.ui.autocomplete;


/*!
 * jQuery UI Controlgroup 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Controlgroup
//>>group: Widgets
//>>description: Visually groups form control widgets
//>>docs: http://api.jqueryui.com/controlgroup/
//>>demos: http://jqueryui.com/controlgroup/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/controlgroup.css
//>>css.theme: ../../themes/base/theme.css


var controlgroupCornerRegex = /ui-corner-([a-z]){2,6}/g;

var widgetsControlgroup = $.widget( "ui.controlgroup", {
 version: "1.12.1",
 defaultElement: "<div>",
 options: {
  direction: "horizontal",
  disabled: null,
  onlyVisible: true,
  items: {
   "button": "input[type=button], input[type=submit], input[type=reset], button, a",
   "controlgroupLabel": ".ui-controlgroup-label",
   "checkboxradio": "input[type='checkbox'], input[type='radio']",
   "selectmenu": "select",
   "spinner": ".ui-spinner-input"
  }
 },

 _create: function() {
  this._enhance();
 },

 // To support the enhanced option in jQuery Mobile, we isolate DOM manipulation
 _enhance: function() {
  this.element.attr( "role", "toolbar" );
  this.refresh();
 },

 _destroy: function() {
  this._callChildMethod( "destroy" );
  this.childWidgets.removeData( "ui-controlgroup-data" );
  this.element.removeAttr( "role" );
  if ( this.options.items.controlgroupLabel ) {
   this.element
    .find( this.options.items.controlgroupLabel )
    .find( ".ui-controlgroup-label-contents" )
    .contents().unwrap();
  }
 },

 _initWidgets: function() {
  var that = this,
   childWidgets = [];

  // First we iterate over each of the items options
  $.each( this.options.items, function( widget, selector ) {
   var labels;
   var options = {};

   // Make sure the widget has a selector set
   if ( !selector ) {
    return;
   }

   if ( widget === "controlgroupLabel" ) {
    labels = that.element.find( selector );
    labels.each( function() {
     var element = $( this );

     if ( element.children( ".ui-controlgroup-label-contents" ).length ) {
      return;
     }
     element.contents()
      .wrapAll( "<span class='ui-controlgroup-label-contents'></span>" );
    } );
    that._addClass( labels, null, "ui-widget ui-widget-content ui-state-default" );
    childWidgets = childWidgets.concat( labels.get() );
    return;
   }

   // Make sure the widget actually exists
   if ( !$.fn[ widget ] ) {
    return;
   }

   // We assume everything is in the middle to start because we can't determine
   // first / last elements until all enhancments are done.
   if ( that[ "_" + widget + "Options" ] ) {
    options = that[ "_" + widget + "Options" ]( "middle" );
   } else {
    options = { classes: {} };
   }

   // Find instances of this widget inside controlgroup and init them
   that.element
    .find( selector )
    .each( function() {
     var element = $( this );
     var instance = element[ widget ]( "instance" );

     // We need to clone the default options for this type of widget to avoid
     // polluting the variable options which has a wider scope than a single widget.
     var instanceOptions = $.widget.extend( {}, options );

     // If the button is the child of a spinner ignore it
     // TODO: Find a more generic solution
     if ( widget === "button" && element.parent( ".ui-spinner" ).length ) {
      return;
     }

     // Create the widget if it doesn't exist
     if ( !instance ) {
      instance = element[ widget ]()[ widget ]( "instance" );
     }
     if ( instance ) {
      instanceOptions.classes =
       that._resolveClassesValues( instanceOptions.classes, instance );
     }
     element[ widget ]( instanceOptions );

     // Store an instance of the controlgroup to be able to reference
     // from the outermost element for changing options and refresh
     var widgetElement = element[ widget ]( "widget" );
     $.data( widgetElement[ 0 ], "ui-controlgroup-data",
      instance ? instance : element[ widget ]( "instance" ) );

     childWidgets.push( widgetElement[ 0 ] );
    } );
  } );

  this.childWidgets = $( $.unique( childWidgets ) );
  this._addClass( this.childWidgets, "ui-controlgroup-item" );
 },

 _callChildMethod: function( method ) {
  this.childWidgets.each( function() {
   var element = $( this ),
    data = element.data( "ui-controlgroup-data" );
   if ( data && data[ method ] ) {
    data[ method ]();
   }
  } );
 },

 _updateCornerClass: function( element, position ) {
  var remove = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all";
  var add = this._buildSimpleOptions( position, "label" ).classes.label;

  this._removeClass( element, null, remove );
  this._addClass( element, null, add );
 },

 _buildSimpleOptions: function( position, key ) {
  var direction = this.options.direction === "vertical";
  var result = {
   classes: {}
  };
  result.classes[ key ] = {
   "middle": "",
   "first": "ui-corner-" + ( direction ? "top" : "left" ),
   "last": "ui-corner-" + ( direction ? "bottom" : "right" ),
   "only": "ui-corner-all"
  }[ position ];

  return result;
 },

 _spinnerOptions: function( position ) {
  var options = this._buildSimpleOptions( position, "ui-spinner" );

  options.classes[ "ui-spinner-up" ] = "";
  options.classes[ "ui-spinner-down" ] = "";

  return options;
 },

 _buttonOptions: function( position ) {
  return this._buildSimpleOptions( position, "ui-button" );
 },

 _checkboxradioOptions: function( position ) {
  return this._buildSimpleOptions( position, "ui-checkboxradio-label" );
 },

 _selectmenuOptions: function( position ) {
  var direction = this.options.direction === "vertical";
  return {
   width: direction ? "auto" : false,
   classes: {
    middle: {
     "ui-selectmenu-button-open": "",
     "ui-selectmenu-button-closed": ""
    },
    first: {
     "ui-selectmenu-button-open": "ui-corner-" + ( direction ? "top" : "tl" ),
     "ui-selectmenu-button-closed": "ui-corner-" + ( direction ? "top" : "left" )
    },
    last: {
     "ui-selectmenu-button-open": direction ? "" : "ui-corner-tr",
     "ui-selectmenu-button-closed": "ui-corner-" + ( direction ? "bottom" : "right" )
    },
    only: {
     "ui-selectmenu-button-open": "ui-corner-top",
     "ui-selectmenu-button-closed": "ui-corner-all"
    }

   }[ position ]
  };
 },

 _resolveClassesValues: function( classes, instance ) {
  var result = {};
  $.each( classes, function( key ) {
   var current = instance.options.classes[ key ] || "";
   current = $.trim( current.replace( controlgroupCornerRegex, "" ) );
   result[ key ] = ( current + " " + classes[ key ] ).replace( /\s+/g, " " );
  } );
  return result;
 },

 _setOption: function( key, value ) {
  if ( key === "direction" ) {
   this._removeClass( "ui-controlgroup-" + this.options.direction );
  }

  this._super( key, value );
  if ( key === "disabled" ) {
   this._callChildMethod( value ? "disable" : "enable" );
   return;
  }

  this.refresh();
 },

 refresh: function() {
  var children,
   that = this;

  this._addClass( "ui-controlgroup ui-controlgroup-" + this.options.direction );

  if ( this.options.direction === "horizontal" ) {
   this._addClass( null, "ui-helper-clearfix" );
  }
  this._initWidgets();

  children = this.childWidgets;

  // We filter here because we need to track all childWidgets not just the visible ones
  if ( this.options.onlyVisible ) {
   children = children.filter( ":visible" );
  }

  if ( children.length ) {

   // We do this last because we need to make sure all enhancment is done
   // before determining first and last
   $.each( [ "first", "last" ], function( index, value ) {
    var instance = children[ value ]().data( "ui-controlgroup-data" );

    if ( instance && that[ "_" + instance.widgetName + "Options" ] ) {
     var options = that[ "_" + instance.widgetName + "Options" ](
      children.length === 1 ? "only" : value
     );
     options.classes = that._resolveClassesValues( options.classes, instance );
     instance.element[ instance.widgetName ]( options );
    } else {
     that._updateCornerClass( children[ value ](), value );
    }
   } );

   // Finally call the refresh method on each of the child widgets.
   this._callChildMethod( "refresh" );
  }
 }
} );

/*!
 * jQuery UI Checkboxradio 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Checkboxradio
//>>group: Widgets
//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.
//>>docs: http://api.jqueryui.com/checkboxradio/
//>>demos: http://jqueryui.com/checkboxradio/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/button.css
//>>css.structure: ../../themes/base/checkboxradio.css
//>>css.theme: ../../themes/base/theme.css



$.widget( "ui.checkboxradio", [ $.ui.formResetMixin, {
 version: "1.12.1",
 options: {
  disabled: null,
  label: null,
  icon: true,
  classes: {
   "ui-checkboxradio-label": "ui-corner-all",
   "ui-checkboxradio-icon": "ui-corner-all"
  }
 },

 _getCreateOptions: function() {
  var disabled, labels;
  var that = this;
  var options = this._super() || {};

  // We read the type here, because it makes more sense to throw a element type error first,
  // rather then the error for lack of a label. Often if its the wrong type, it
  // won't have a label (e.g. calling on a div, btn, etc)
  this._readType();

  labels = this.element.labels();

  // If there are multiple labels, use the last one
  this.label = $( labels[ labels.length - 1 ] );
  if ( !this.label.length ) {
   $.error( "No label found for checkboxradio widget" );
  }

  this.originalLabel = "";

  // We need to get the label text but this may also need to make sure it does not contain the
  // input itself.
  this.label.contents().not( this.element[ 0 ] ).each( function() {

   // The label contents could be text, html, or a mix. We concat each element to get a
   // string representation of the label, without the input as part of it.
   that.originalLabel += this.nodeType === 3 ? $( this ).text() : this.outerHTML;
  } );

  // Set the label option if we found label text
  if ( this.originalLabel ) {
   options.label = this.originalLabel;
  }

  disabled = this.element[ 0 ].disabled;
  if ( disabled != null ) {
   options.disabled = disabled;
  }
  return options;
 },

 _create: function() {
  var checked = this.element[ 0 ].checked;

  this._bindFormResetHandler();

  if ( this.options.disabled == null ) {
   this.options.disabled = this.element[ 0 ].disabled;
  }

  this._setOption( "disabled", this.options.disabled );
  this._addClass( "ui-checkboxradio", "ui-helper-hidden-accessible" );
  this._addClass( this.label, "ui-checkboxradio-label", "ui-button ui-widget" );

  if ( this.type === "radio" ) {
   this._addClass( this.label, "ui-checkboxradio-radio-label" );
  }

  if ( this.options.label && this.options.label !== this.originalLabel ) {
   this._updateLabel();
  } else if ( this.originalLabel ) {
   this.options.label = this.originalLabel;
  }

  this._enhance();

  if ( checked ) {
   this._addClass( this.label, "ui-checkboxradio-checked", "ui-state-active" );
   if ( this.icon ) {
    this._addClass( this.icon, null, "ui-state-hover" );
   }
  }

  this._on( {
   change: "_toggleClasses",
   focus: function() {
    this._addClass( this.label, null, "ui-state-focus ui-visual-focus" );
   },
   blur: function() {
    this._removeClass( this.label, null, "ui-state-focus ui-visual-focus" );
   }
  } );
 },

 _readType: function() {
  var nodeName = this.element[ 0 ].nodeName.toLowerCase();
  this.type = this.element[ 0 ].type;
  if ( nodeName !== "input" || !/radio|checkbox/.test( this.type ) ) {
   $.error( "Can't create checkboxradio on element.nodeName=" + nodeName +
    " and element.type=" + this.type );
  }
 },

 // Support jQuery Mobile enhanced option
 _enhance: function() {
  this._updateIcon( this.element[ 0 ].checked );
 },

 widget: function() {
  return this.label;
 },

 _getRadioGroup: function() {
  var group;
  var name = this.element[ 0 ].name;
  var nameSelector = "input[name='" + $.ui.escapeSelector( name ) + "']";

  if ( !name ) {
   return $( [] );
  }

  if ( this.form.length ) {
   group = $( this.form[ 0 ].elements ).filter( nameSelector );
  } else {

   // Not inside a form, check all inputs that also are not inside a form
   group = $( nameSelector ).filter( function() {
    return $( this ).form().length === 0;
   } );
  }

  return group.not( this.element );
 },

 _toggleClasses: function() {
  var checked = this.element[ 0 ].checked;
  this._toggleClass( this.label, "ui-checkboxradio-checked", "ui-state-active", checked );

  if ( this.options.icon && this.type === "checkbox" ) {
   this._toggleClass( this.icon, null, "ui-icon-check ui-state-checked", checked )
    ._toggleClass( this.icon, null, "ui-icon-blank", !checked );
  }

  if ( this.type === "radio" ) {
   this._getRadioGroup()
    .each( function() {
     var instance = $( this ).checkboxradio( "instance" );

     if ( instance ) {
      instance._removeClass( instance.label,
       "ui-checkboxradio-checked", "ui-state-active" );
     }
    } );
  }
 },

 _destroy: function() {
  this._unbindFormResetHandler();

  if ( this.icon ) {
   this.icon.remove();
   this.iconSpace.remove();
  }
 },

 _setOption: function( key, value ) {

  // We don't allow the value to be set to nothing
  if ( key === "label" && !value ) {
   return;
  }

  this._super( key, value );

  if ( key === "disabled" ) {
   this._toggleClass( this.label, null, "ui-state-disabled", value );
   this.element[ 0 ].disabled = value;

   // Don't refresh when setting disabled
   return;
  }
  this.refresh();
 },

 _updateIcon: function( checked ) {
  var toAdd = "ui-icon ui-icon-background ";

  if ( this.options.icon ) {
   if ( !this.icon ) {
    this.icon = $( "<span>" );
    this.iconSpace = $( "<span> </span>" );
    this._addClass( this.iconSpace, "ui-checkboxradio-icon-space" );
   }

   if ( this.type === "checkbox" ) {
    toAdd += checked ? "ui-icon-check ui-state-checked" : "ui-icon-blank";
    this._removeClass( this.icon, null, checked ? "ui-icon-blank" : "ui-icon-check" );
   } else {
    toAdd += "ui-icon-blank";
   }
   this._addClass( this.icon, "ui-checkboxradio-icon", toAdd );
   if ( !checked ) {
    this._removeClass( this.icon, null, "ui-icon-check ui-state-checked" );
   }
   this.icon.prependTo( this.label ).after( this.iconSpace );
  } else if ( this.icon !== undefined ) {
   this.icon.remove();
   this.iconSpace.remove();
   delete this.icon;
  }
 },

 _updateLabel: function() {

  // Remove the contents of the label ( minus the icon, icon space, and input )
  var contents = this.label.contents().not( this.element[ 0 ] );
  if ( this.icon ) {
   contents = contents.not( this.icon[ 0 ] );
  }
  if ( this.iconSpace ) {
   contents = contents.not( this.iconSpace[ 0 ] );
  }
  contents.remove();

  this.label.append( this.options.label );
 },

 refresh: function() {
  var checked = this.element[ 0 ].checked,
   isDisabled = this.element[ 0 ].disabled;

  this._updateIcon( checked );
  this._toggleClass( this.label, "ui-checkboxradio-checked", "ui-state-active", checked );
  if ( this.options.label !== null ) {
   this._updateLabel();
  }

  if ( isDisabled !== this.options.disabled ) {
   this._setOptions( { "disabled": isDisabled } );
  }
 }

} ] );

var widgetsCheckboxradio = $.ui.checkboxradio;


/*!
 * jQuery UI Button 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Button
//>>group: Widgets
//>>description: Enhances a form with themeable buttons.
//>>docs: http://api.jqueryui.com/button/
//>>demos: http://jqueryui.com/button/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/button.css
//>>css.theme: ../../themes/base/theme.css



$.widget( "ui.button", {
 version: "1.12.1",
 defaultElement: "<button>",
 options: {
  classes: {
   "ui-button": "ui-corner-all"
  },
  disabled: null,
  icon: null,
  iconPosition: "beginning",
  label: null,
  showLabel: true
 },

 _getCreateOptions: function() {
  var disabled,

   // This is to support cases like in jQuery Mobile where the base widget does have
   // an implementation of _getCreateOptions
   options = this._super() || {};

  this.isInput = this.element.is( "input" );

  disabled = this.element[ 0 ].disabled;
  if ( disabled != null ) {
   options.disabled = disabled;
  }

  this.originalLabel = this.isInput ? this.element.val() : this.element.html();
  if ( this.originalLabel ) {
   options.label = this.originalLabel;
  }

  return options;
 },

 _create: function() {
  if ( !this.option.showLabel & !this.options.icon ) {
   this.options.showLabel = true;
  }

  // We have to check the option again here even though we did in _getCreateOptions,
  // because null may have been passed on init which would override what was set in
  // _getCreateOptions
  if ( this.options.disabled == null ) {
   this.options.disabled = this.element[ 0 ].disabled || false;
  }

  this.hasTitle = !!this.element.attr( "title" );

  // Check to see if the label needs to be set or if its already correct
  if ( this.options.label && this.options.label !== this.originalLabel ) {
   if ( this.isInput ) {
    this.element.val( this.options.label );
   } else {
    this.element.html( this.options.label );
   }
  }
  this._addClass( "ui-button", "ui-widget" );
  this._setOption( "disabled", this.options.disabled );
  this._enhance();

  if ( this.element.is( "a" ) ) {
   this._on( {
    "keyup": function( event ) {
     if ( event.keyCode === $.ui.keyCode.SPACE ) {
      event.preventDefault();

      // Support: PhantomJS <= 1.9, IE 8 Only
      // If a native click is available use it so we actually cause navigation
      // otherwise just trigger a click event
      if ( this.element[ 0 ].click ) {
       this.element[ 0 ].click();
      } else {
       this.element.trigger( "click" );
      }
     }
    }
   } );
  }
 },

 _enhance: function() {
  if ( !this.element.is( "button" ) ) {
   this.element.attr( "role", "button" );
  }

  if ( this.options.icon ) {
   this._updateIcon( "icon", this.options.icon );
   this._updateTooltip();
  }
 },

 _updateTooltip: function() {
  this.title = this.element.attr( "title" );

  if ( !this.options.showLabel && !this.title ) {
   this.element.attr( "title", this.options.label );
  }
 },

 _updateIcon: function( option, value ) {
  var icon = option !== "iconPosition",
   position = icon ? this.options.iconPosition : value,
   displayBlock = position === "top" || position === "bottom";

  // Create icon
  if ( !this.icon ) {
   this.icon = $( "<span>" );

   this._addClass( this.icon, "ui-button-icon", "ui-icon" );

   if ( !this.options.showLabel ) {
    this._addClass( "ui-button-icon-only" );
   }
  } else if ( icon ) {

   // If we are updating the icon remove the old icon class
   this._removeClass( this.icon, null, this.options.icon );
  }

  // If we are updating the icon add the new icon class
  if ( icon ) {
   this._addClass( this.icon, null, value );
  }

  this._attachIcon( position );

  // If the icon is on top or bottom we need to add the ui-widget-icon-block class and remove
  // the iconSpace if there is one.
  if ( displayBlock ) {
   this._addClass( this.icon, null, "ui-widget-icon-block" );
   if ( this.iconSpace ) {
    this.iconSpace.remove();
   }
  } else {

   // Position is beginning or end so remove the ui-widget-icon-block class and add the
   // space if it does not exist
   if ( !this.iconSpace ) {
    this.iconSpace = $( "<span> </span>" );
    this._addClass( this.iconSpace, "ui-button-icon-space" );
   }
   this._removeClass( this.icon, null, "ui-wiget-icon-block" );
   this._attachIconSpace( position );
  }
 },

 _destroy: function() {
  this.element.removeAttr( "role" );

  if ( this.icon ) {
   this.icon.remove();
  }
  if ( this.iconSpace ) {
   this.iconSpace.remove();
  }
  if ( !this.hasTitle ) {
   this.element.removeAttr( "title" );
  }
 },

 _attachIconSpace: function( iconPosition ) {
  this.icon[ /^(?:end|bottom)/.test( iconPosition ) ? "before" : "after" ]( this.iconSpace );
 },

 _attachIcon: function( iconPosition ) {
  this.element[ /^(?:end|bottom)/.test( iconPosition ) ? "append" : "prepend" ]( this.icon );
 },

 _setOptions: function( options ) {
  var newShowLabel = options.showLabel === undefined ?
    this.options.showLabel :
    options.showLabel,
   newIcon = options.icon === undefined ? this.options.icon : options.icon;

  if ( !newShowLabel && !newIcon ) {
   options.showLabel = true;
  }
  this._super( options );
 },

 _setOption: function( key, value ) {
  if ( key === "icon" ) {
   if ( value ) {
    this._updateIcon( key, value );
   } else if ( this.icon ) {
    this.icon.remove();
    if ( this.iconSpace ) {
     this.iconSpace.remove();
    }
   }
  }

  if ( key === "iconPosition" ) {
   this._updateIcon( key, value );
  }

  // Make sure we can't end up with a button that has neither text nor icon
  if ( key === "showLabel" ) {
    this._toggleClass( "ui-button-icon-only", null, !value );
    this._updateTooltip();
  }

  if ( key === "label" ) {
   if ( this.isInput ) {
    this.element.val( value );
   } else {

    // If there is an icon, append it, else nothing then append the value
    // this avoids removal of the icon when setting label text
    this.element.html( value );
    if ( this.icon ) {
     this._attachIcon( this.options.iconPosition );
     this._attachIconSpace( this.options.iconPosition );
    }
   }
  }

  this._super( key, value );

  if ( key === "disabled" ) {
   this._toggleClass( null, "ui-state-disabled", value );
   this.element[ 0 ].disabled = value;
   if ( value ) {
    this.element.blur();
   }
  }
 },

 refresh: function() {

  // Make sure to only check disabled if its an element that supports this otherwise
  // check for the disabled class to determine state
  var isDisabled = this.element.is( "input, button" ) ?
   this.element[ 0 ].disabled : this.element.hasClass( "ui-button-disabled" );

  if ( isDisabled !== this.options.disabled ) {
   this._setOptions( { disabled: isDisabled } );
  }

  this._updateTooltip();
 }
} );

// DEPRECATED
if ( $.uiBackCompat !== false ) {

 // Text and Icons options
 $.widget( "ui.button", $.ui.button, {
  options: {
   text: true,
   icons: {
    primary: null,
    secondary: null
   }
  },

  _create: function() {
   if ( this.options.showLabel && !this.options.text ) {
    this.options.showLabel = this.options.text;
   }
   if ( !this.options.showLabel && this.options.text ) {
    this.options.text = this.options.showLabel;
   }
   if ( !this.options.icon && ( this.options.icons.primary ||
     this.options.icons.secondary ) ) {
    if ( this.options.icons.primary ) {
     this.options.icon = this.options.icons.primary;
    } else {
     this.options.icon = this.options.icons.secondary;
     this.options.iconPosition = "end";
    }
   } else if ( this.options.icon ) {
    this.options.icons.primary = this.options.icon;
   }
   this._super();
  },

  _setOption: function( key, value ) {
   if ( key === "text" ) {
    this._super( "showLabel", value );
    return;
   }
   if ( key === "showLabel" ) {
    this.options.text = value;
   }
   if ( key === "icon" ) {
    this.options.icons.primary = value;
   }
   if ( key === "icons" ) {
    if ( value.primary ) {
     this._super( "icon", value.primary );
     this._super( "iconPosition", "beginning" );
    } else if ( value.secondary ) {
     this._super( "icon", value.secondary );
     this._super( "iconPosition", "end" );
    }
   }
   this._superApply( arguments );
  }
 } );

 $.fn.button = ( function( orig ) {
  return function() {
   if ( !this.length || ( this.length && this[ 0 ].tagName !== "INPUT" ) ||
     ( this.length && this[ 0 ].tagName === "INPUT" && (
      this.attr( "type" ) !== "checkbox" && this.attr( "type" ) !== "radio"
     ) ) ) {
    return orig.apply( this, arguments );
   }
   if ( !$.ui.checkboxradio ) {
    $.error( "Checkboxradio widget missing" );
   }
   if ( arguments.length === 0 ) {
    return this.checkboxradio( {
     "icon": false
    } );
   }
   return this.checkboxradio.apply( this, arguments );
  };
 } )( $.fn.button );

 $.fn.buttonset = function() {
  if ( !$.ui.controlgroup ) {
   $.error( "Controlgroup widget missing" );
  }
  if ( arguments[ 0 ] === "option" && arguments[ 1 ] === "items" && arguments[ 2 ] ) {
   return this.controlgroup.apply( this,
    [ arguments[ 0 ], "items.button", arguments[ 2 ] ] );
  }
  if ( arguments[ 0 ] === "option" && arguments[ 1 ] === "items" ) {
   return this.controlgroup.apply( this, [ arguments[ 0 ], "items.button" ] );
  }
  if ( typeof arguments[ 0 ] === "object" && arguments[ 0 ].items ) {
   arguments[ 0 ].items = {
    button: arguments[ 0 ].items
   };
  }
  return this.controlgroup.apply( this, arguments );
 };
}

var widgetsButton = $.ui.button;


// jscs:disable maximumLineLength
/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */
/*!
 * jQuery UI Datepicker 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Datepicker
//>>group: Widgets
//>>description: Displays a calendar from an input or inline for selecting dates.
//>>docs: http://api.jqueryui.com/datepicker/
//>>demos: http://jqueryui.com/datepicker/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/datepicker.css
//>>css.theme: ../../themes/base/theme.css



$.extend( $.ui, { datepicker: { version: "1.12.1" } } );

var datepicker_instActive;

function datepicker_getZindex( elem ) {
 var position, value;
 while ( elem.length && elem[ 0 ] !== document ) {

  // Ignore z-index if position is set to a value where z-index is ignored by the browser
  // This makes behavior of this function consistent across browsers
  // WebKit always returns auto if the element is positioned
  position = elem.css( "position" );
  if ( position === "absolute" || position === "relative" || position === "fixed" ) {

   // IE returns 0 when zIndex is not specified
   // other browsers return a string
   // we ignore the case of nested elements with an explicit value of 0
   // <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
   value = parseInt( elem.css( "zIndex" ), 10 );
   if ( !isNaN( value ) && value !== 0 ) {
    return value;
   }
  }
  elem = elem.parent();
 }

 return 0;
}
/* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */

function Datepicker() {
 this._curInst = null; // The current instance in use
 this._keyEvent = false; // If the last event was a key event
 this._disabledInputs = []; // List of date picker inputs that have been disabled
 this._datepickerShowing = false; // True if the popup picker is showing , false if not
 this._inDialog = false; // True if showing within a "dialog", false if not
 this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
 this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
 this._appendClass = "ui-datepicker-append"; // The name of the append marker class
 this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
 this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
 this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
 this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
 this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
 this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
 this.regional = []; // Available regional settings, indexed by language code
 this.regional[ "" ] = { // Default regional settings
  closeText: "Done", // Display text for close link
  prevText: "Prev", // Display text for previous month link
  nextText: "Next", // Display text for next month link
  currentText: "Today", // Display text for current month link
  monthNames: [ "January","February","March","April","May","June",
   "July","August","September","October","November","December" ], // Names of months for drop-down and formatting
  monthNamesShort: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ], // For formatting
  dayNames: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], // For formatting
  dayNamesShort: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], // For formatting
  dayNamesMin: [ "Su","Mo","Tu","We","Th","Fr","Sa" ], // Column headings for days starting at Sunday
  weekHeader: "Wk", // Column header for week of the year
  dateFormat: "mm/dd/yy", // See format options on parseDate
  firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
  isRTL: false, // True if right-to-left language, false if left-to-right
  showMonthAfterYear: false, // True if the year select precedes month, false for month then year
  yearSuffix: "" // Additional text to append to the year in the month headers
 };
 this._defaults = { // Global defaults for all the date picker instances
  showOn: "focus", // "focus" for popup on focus,
   // "button" for trigger button, or "both" for either
  showAnim: "fadeIn", // Name of jQuery animation for popup
  showOptions: {}, // Options for enhanced animations
  defaultDate: null, // Used when field is blank: actual date,
   // +/-number for offset from today, null for today
  appendText: "", // Display text following the input box, e.g. showing the format
  buttonText: "...", // Text for trigger button
  buttonImage: "", // URL for trigger button image
  buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
  hideIfNoPrevNext: false, // True to hide next/previous month links
   // if not applicable, false to just disable them
  navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
  gotoCurrent: false, // True if today link goes back to current selection instead
  changeMonth: false, // True if month can be selected directly, false if only prev/next
  changeYear: false, // True if year can be selected directly, false if only prev/next
  yearRange: "c-10:c+10", // Range of years to display in drop-down,
   // either relative to today's year (-nn:+nn), relative to currently displayed year
   // (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
  showOtherMonths: false, // True to show dates in other months, false to leave blank
  selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
  showWeek: false, // True to show week of the year, false to not show it
  calculateWeek: this.iso8601Week, // How to calculate the week of the year,
   // takes a Date and returns the number of the week for it
  shortYearCutoff: "+10", // Short year values < this are in the current century,
   // > this are in the previous century,
   // string value starting with "+" for current year + value
  minDate: null, // The earliest selectable date, or null for no limit
  maxDate: null, // The latest selectable date, or null for no limit
  duration: "fast", // Duration of display/closure
  beforeShowDay: null, // Function that takes a date and returns an array with
   // [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
   // [2] = cell title (optional), e.g. $.datepicker.noWeekends
  beforeShow: null, // Function that takes an input field and
   // returns a set of custom settings for the date picker
  onSelect: null, // Define a callback function when a date is selected
  onChangeMonthYear: null, // Define a callback function when the month or year is changed
  onClose: null, // Define a callback function when the datepicker is closed
  numberOfMonths: 1, // Number of months to show at a time
  showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
  stepMonths: 1, // Number of months to step back/forward
  stepBigMonths: 12, // Number of months to step back/forward for the big links
  altField: "", // Selector for an alternate field to store selected dates into
  altFormat: "", // The date format to use for the alternate field
  constrainInput: true, // The input is constrained by the current date format
  showButtonPanel: false, // True to show button panel, false to not show it
  autoSize: false, // True to size the input for the date format, false to leave as is
  disabled: false // The initial disabled state
 };
 $.extend( this._defaults, this.regional[ "" ] );
 this.regional.en = $.extend( true, {}, this.regional[ "" ] );
 this.regional[ "en-US" ] = $.extend( true, {}, this.regional.en );
 this.dpDiv = datepicker_bindHover( $( "<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>" ) );
}

$.extend( Datepicker.prototype, {
 /* Class name added to elements to indicate already configured with a date picker. */
 markerClassName: "hasDatepicker",

 //Keep track of the maximum number of rows displayed (see #7043)
 maxRows: 4,

 // TODO rename to "widget" when switching to widget factory
 _widgetDatepicker: function() {
  return this.dpDiv;
 },

 /* Override the default settings for all instances of the date picker.
  * @param  settings  object - the new settings to use as defaults (anonymous object)
  * @return the manager object
  */
 setDefaults: function( settings ) {
  datepicker_extendRemove( this._defaults, settings || {} );
  return this;
 },

 /* Attach the date picker to a jQuery selection.
  * @param  target element - the target input field or division or span
  * @param  settings  object - the new settings to use for this date picker instance (anonymous)
  */
 _attachDatepicker: function( target, settings ) {
  var nodeName, inline, inst;
  nodeName = target.nodeName.toLowerCase();
  inline = ( nodeName === "div" || nodeName === "span" );
  if ( !target.id ) {
   this.uuid += 1;
   target.id = "dp" + this.uuid;
  }
  inst = this._newInst( $( target ), inline );
  inst.settings = $.extend( {}, settings || {} );
  if ( nodeName === "input" ) {
   this._connectDatepicker( target, inst );
  } else if ( inline ) {
   this._inlineDatepicker( target, inst );
  }
 },

 /* Create a new instance object. */
 _newInst: function( target, inline ) {
  var id = target[ 0 ].id.replace( /([^A-Za-z0-9_\-])/g, "\\\\$1" ); // escape jQuery meta chars
  return { id: id, input: target, // associated target
   selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
   drawMonth: 0, drawYear: 0, // month being drawn
   inline: inline, // is datepicker inline or not
   dpDiv: ( !inline ? this.dpDiv : // presentation div
   datepicker_bindHover( $( "<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>" ) ) ) };
 },

 /* Attach the date picker to an input field. */
 _connectDatepicker: function( target, inst ) {
  var input = $( target );
  inst.append = $( [] );
  inst.trigger = $( [] );
  if ( input.hasClass( this.markerClassName ) ) {
   return;
  }
  this._attachments( input, inst );
  input.addClass( this.markerClassName ).on( "keydown", this._doKeyDown ).
   on( "keypress", this._doKeyPress ).on( "keyup", this._doKeyUp );
  this._autoSize( inst );
  $.data( target, "datepicker", inst );

  //If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
  if ( inst.settings.disabled ) {
   this._disableDatepicker( target );
  }
 },

 /* Make attachments based on settings. */
 _attachments: function( input, inst ) {
  var showOn, buttonText, buttonImage,
   appendText = this._get( inst, "appendText" ),
   isRTL = this._get( inst, "isRTL" );

  if ( inst.append ) {
   inst.append.remove();
  }
  if ( appendText ) {
   inst.append = $( "<span class='" + this._appendClass + "'>" + appendText + "</span>" );
   input[ isRTL ? "before" : "after" ]( inst.append );
  }

  input.off( "focus", this._showDatepicker );

  if ( inst.trigger ) {
   inst.trigger.remove();
  }

  showOn = this._get( inst, "showOn" );
  if ( showOn === "focus" || showOn === "both" ) { // pop-up date picker when in the marked field
   input.on( "focus", this._showDatepicker );
  }
  if ( showOn === "button" || showOn === "both" ) { // pop-up date picker when button clicked
   buttonText = this._get( inst, "buttonText" );
   buttonImage = this._get( inst, "buttonImage" );
   inst.trigger = $( this._get( inst, "buttonImageOnly" ) ?
    $( "<img/>" ).addClass( this._triggerClass ).
     attr( { src: buttonImage, alt: buttonText, title: buttonText } ) :
    $( "<button type='button'></button>" ).addClass( this._triggerClass ).
     html( !buttonImage ? buttonText : $( "<img/>" ).attr(
     { src:buttonImage, alt:buttonText, title:buttonText } ) ) );
   input[ isRTL ? "before" : "after" ]( inst.trigger );
   inst.trigger.on( "click", function() {
    if ( $.datepicker._datepickerShowing && $.datepicker._lastInput === input[ 0 ] ) {
     $.datepicker._hideDatepicker();
    } else if ( $.datepicker._datepickerShowing && $.datepicker._lastInput !== input[ 0 ] ) {
     $.datepicker._hideDatepicker();
     $.datepicker._showDatepicker( input[ 0 ] );
    } else {
     $.datepicker._showDatepicker( input[ 0 ] );
    }
    return false;
   } );
  }
 },

 /* Apply the maximum length for the date format. */
 _autoSize: function( inst ) {
  if ( this._get( inst, "autoSize" ) && !inst.inline ) {
   var findMax, max, maxI, i,
    date = new Date( 2009, 12 - 1, 20 ), // Ensure double digits
    dateFormat = this._get( inst, "dateFormat" );

   if ( dateFormat.match( /[DM]/ ) ) {
    findMax = function( names ) {
     max = 0;
     maxI = 0;
     for ( i = 0; i < names.length; i++ ) {
      if ( names[ i ].length > max ) {
       max = names[ i ].length;
       maxI = i;
      }
     }
     return maxI;
    };
    date.setMonth( findMax( this._get( inst, ( dateFormat.match( /MM/ ) ?
     "monthNames" : "monthNamesShort" ) ) ) );
    date.setDate( findMax( this._get( inst, ( dateFormat.match( /DD/ ) ?
     "dayNames" : "dayNamesShort" ) ) ) + 20 - date.getDay() );
   }
   inst.input.attr( "size", this._formatDate( inst, date ).length );
  }
 },

 /* Attach an inline date picker to a div. */
 _inlineDatepicker: function( target, inst ) {
  var divSpan = $( target );
  if ( divSpan.hasClass( this.markerClassName ) ) {
   return;
  }
  divSpan.addClass( this.markerClassName ).append( inst.dpDiv );
  $.data( target, "datepicker", inst );
  this._setDate( inst, this._getDefaultDate( inst ), true );
  this._updateDatepicker( inst );
  this._updateAlternate( inst );

  //If disabled option is true, disable the datepicker before showing it (see ticket #5665)
  if ( inst.settings.disabled ) {
   this._disableDatepicker( target );
  }

  // Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
  // http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
  inst.dpDiv.css( "display", "block" );
 },

 /* Pop-up the date picker in a "dialog" box.
  * @param  input element - ignored
  * @param  date string or Date - the initial date to display
  * @param  onSelect  function - the function to call when a date is selected
  * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
  * @param  pos int[2] - coordinates for the dialog's position within the screen or
  *     event - with x/y coordinates or
  *     leave empty for default (screen centre)
  * @return the manager object
  */
 _dialogDatepicker: function( input, date, onSelect, settings, pos ) {
  var id, browserWidth, browserHeight, scrollX, scrollY,
   inst = this._dialogInst; // internal instance

  if ( !inst ) {
   this.uuid += 1;
   id = "dp" + this.uuid;
   this._dialogInput = $( "<input type='text' id='" + id +
    "' style='position: absolute; top: -100px; width: 0px;'/>" );
   this._dialogInput.on( "keydown", this._doKeyDown );
   $( "body" ).append( this._dialogInput );
   inst = this._dialogInst = this._newInst( this._dialogInput, false );
   inst.settings = {};
   $.data( this._dialogInput[ 0 ], "datepicker", inst );
  }
  datepicker_extendRemove( inst.settings, settings || {} );
  date = ( date && date.constructor === Date ? this._formatDate( inst, date ) : date );
  this._dialogInput.val( date );

  this._pos = ( pos ? ( pos.length ? pos : [ pos.pageX, pos.pageY ] ) : null );
  if ( !this._pos ) {
   browserWidth = document.documentElement.clientWidth;
   browserHeight = document.documentElement.clientHeight;
   scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
   scrollY = document.documentElement.scrollTop || document.body.scrollTop;
   this._pos = // should use actual width/height below
    [ ( browserWidth / 2 ) - 100 + scrollX, ( browserHeight / 2 ) - 150 + scrollY ];
  }

  // Move input on screen for focus, but hidden behind dialog
  this._dialogInput.css( "left", ( this._pos[ 0 ] + 20 ) + "px" ).css( "top", this._pos[ 1 ] + "px" );
  inst.settings.onSelect = onSelect;
  this._inDialog = true;
  this.dpDiv.addClass( this._dialogClass );
  this._showDatepicker( this._dialogInput[ 0 ] );
  if ( $.blockUI ) {
   $.blockUI( this.dpDiv );
  }
  $.data( this._dialogInput[ 0 ], "datepicker", inst );
  return this;
 },

 /* Detach a datepicker from its control.
  * @param  target element - the target input field or division or span
  */
 _destroyDatepicker: function( target ) {
  var nodeName,
   $target = $( target ),
   inst = $.data( target, "datepicker" );

  if ( !$target.hasClass( this.markerClassName ) ) {
   return;
  }

  nodeName = target.nodeName.toLowerCase();
  $.removeData( target, "datepicker" );
  if ( nodeName === "input" ) {
   inst.append.remove();
   inst.trigger.remove();
   $target.removeClass( this.markerClassName ).
    off( "focus", this._showDatepicker ).
    off( "keydown", this._doKeyDown ).
    off( "keypress", this._doKeyPress ).
    off( "keyup", this._doKeyUp );
  } else if ( nodeName === "div" || nodeName === "span" ) {
   $target.removeClass( this.markerClassName ).empty();
  }

  if ( datepicker_instActive === inst ) {
   datepicker_instActive = null;
  }
 },

 /* Enable the date picker to a jQuery selection.
  * @param  target element - the target input field or division or span
  */
 _enableDatepicker: function( target ) {
  var nodeName, inline,
   $target = $( target ),
   inst = $.data( target, "datepicker" );

  if ( !$target.hasClass( this.markerClassName ) ) {
   return;
  }

  nodeName = target.nodeName.toLowerCase();
  if ( nodeName === "input" ) {
   target.disabled = false;
   inst.trigger.filter( "button" ).
    each( function() { this.disabled = false; } ).end().
    filter( "img" ).css( { opacity: "1.0", cursor: "" } );
  } else if ( nodeName === "div" || nodeName === "span" ) {
   inline = $target.children( "." + this._inlineClass );
   inline.children().removeClass( "ui-state-disabled" );
   inline.find( "select.ui-datepicker-month, select.ui-datepicker-year" ).
    prop( "disabled", false );
  }
  this._disabledInputs = $.map( this._disabledInputs,
   function( value ) { return ( value === target ? null : value ); } ); // delete entry
 },

 /* Disable the date picker to a jQuery selection.
  * @param  target element - the target input field or division or span
  */
 _disableDatepicker: function( target ) {
  var nodeName, inline,
   $target = $( target ),
   inst = $.data( target, "datepicker" );

  if ( !$target.hasClass( this.markerClassName ) ) {
   return;
  }

  nodeName = target.nodeName.toLowerCase();
  if ( nodeName === "input" ) {
   target.disabled = true;
   inst.trigger.filter( "button" ).
    each( function() { this.disabled = true; } ).end().
    filter( "img" ).css( { opacity: "0.5", cursor: "default" } );
  } else if ( nodeName === "div" || nodeName === "span" ) {
   inline = $target.children( "." + this._inlineClass );
   inline.children().addClass( "ui-state-disabled" );
   inline.find( "select.ui-datepicker-month, select.ui-datepicker-year" ).
    prop( "disabled", true );
  }
  this._disabledInputs = $.map( this._disabledInputs,
   function( value ) { return ( value === target ? null : value ); } ); // delete entry
  this._disabledInputs[ this._disabledInputs.length ] = target;
 },

 /* Is the first field in a jQuery collection disabled as a datepicker?
  * @param  target element - the target input field or division or span
  * @return boolean - true if disabled, false if enabled
  */
 _isDisabledDatepicker: function( target ) {
  if ( !target ) {
   return false;
  }
  for ( var i = 0; i < this._disabledInputs.length; i++ ) {
   if ( this._disabledInputs[ i ] === target ) {
    return true;
   }
  }
  return false;
 },

 /* Retrieve the instance data for the target control.
  * @param  target  element - the target input field or division or span
  * @return  object - the associated instance data
  * @throws  error if a jQuery problem getting data
  */
 _getInst: function( target ) {
  try {
   return $.data( target, "datepicker" );
  }
  catch ( err ) {
   throw "Missing instance data for this datepicker";
  }
 },

 /* Update or retrieve the settings for a date picker attached to an input field or division.
  * @param  target  element - the target input field or division or span
  * @param  name object - the new settings to update or
  *    string - the name of the setting to change or retrieve,
  *    when retrieving also "all" for all instance settings or
  *    "defaults" for all global defaults
  * @param  value   any - the new value for the setting
  *    (omit if above is an object or to retrieve a value)
  */
 _optionDatepicker: function( target, name, value ) {
  var settings, date, minDate, maxDate,
   inst = this._getInst( target );

  if ( arguments.length === 2 && typeof name === "string" ) {
   return ( name === "defaults" ? $.extend( {}, $.datepicker._defaults ) :
    ( inst ? ( name === "all" ? $.extend( {}, inst.settings ) :
    this._get( inst, name ) ) : null ) );
  }

  settings = name || {};
  if ( typeof name === "string" ) {
   settings = {};
   settings[ name ] = value;
  }

  if ( inst ) {
   if ( this._curInst === inst ) {
    this._hideDatepicker();
   }

   date = this._getDateDatepicker( target, true );
   minDate = this._getMinMaxDate( inst, "min" );
   maxDate = this._getMinMaxDate( inst, "max" );
   datepicker_extendRemove( inst.settings, settings );

   // reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
   if ( minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined ) {
    inst.settings.minDate = this._formatDate( inst, minDate );
   }
   if ( maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined ) {
    inst.settings.maxDate = this._formatDate( inst, maxDate );
   }
   if ( "disabled" in settings ) {
    if ( settings.disabled ) {
     this._disableDatepicker( target );
    } else {
     this._enableDatepicker( target );
    }
   }
   this._attachments( $( target ), inst );
   this._autoSize( inst );
   this._setDate( inst, date );
   this._updateAlternate( inst );
   this._updateDatepicker( inst );
  }
 },

 // Change method deprecated
 _changeDatepicker: function( target, name, value ) {
  this._optionDatepicker( target, name, value );
 },

 /* Redraw the date picker attached to an input field or division.
  * @param  target  element - the target input field or division or span
  */
 _refreshDatepicker: function( target ) {
  var inst = this._getInst( target );
  if ( inst ) {
   this._updateDatepicker( inst );
  }
 },

 /* Set the dates for a jQuery selection.
  * @param  target element - the target input field or division or span
  * @param  date Date - the new date
  */
 _setDateDatepicker: function( target, date ) {
  var inst = this._getInst( target );
  if ( inst ) {
   this._setDate( inst, date );
   this._updateDatepicker( inst );
   this._updateAlternate( inst );
  }
 },

 /* Get the date(s) for the first entry in a jQuery selection.
  * @param  target element - the target input field or division or span
  * @param  noDefault boolean - true if no default date is to be used
  * @return Date - the current date
  */
 _getDateDatepicker: function( target, noDefault ) {
  var inst = this._getInst( target );
  if ( inst && !inst.inline ) {
   this._setDateFromField( inst, noDefault );
  }
  return ( inst ? this._getDate( inst ) : null );
 },

 /* Handle keystrokes. */
 _doKeyDown: function( event ) {
  var onSelect, dateStr, sel,
   inst = $.datepicker._getInst( event.target ),
   handled = true,
   isRTL = inst.dpDiv.is( ".ui-datepicker-rtl" );

  inst._keyEvent = true;
  if ( $.datepicker._datepickerShowing ) {
   switch ( event.keyCode ) {
    case 9: $.datepicker._hideDatepicker();
      handled = false;
      break; // hide on tab out
    case 13: sel = $( "td." + $.datepicker._dayOverClass + ":not(." +
         $.datepicker._currentClass + ")", inst.dpDiv );
      if ( sel[ 0 ] ) {
       $.datepicker._selectDay( event.target, inst.selectedMonth, inst.selectedYear, sel[ 0 ] );
      }

      onSelect = $.datepicker._get( inst, "onSelect" );
      if ( onSelect ) {
       dateStr = $.datepicker._formatDate( inst );

       // Trigger custom callback
       onSelect.apply( ( inst.input ? inst.input[ 0 ] : null ), [ dateStr, inst ] );
      } else {
       $.datepicker._hideDatepicker();
      }

      return false; // don't submit the form
    case 27: $.datepicker._hideDatepicker();
      break; // hide on escape
    case 33: $.datepicker._adjustDate( event.target, ( event.ctrlKey ?
       -$.datepicker._get( inst, "stepBigMonths" ) :
       -$.datepicker._get( inst, "stepMonths" ) ), "M" );
      break; // previous month/year on page up/+ ctrl
    case 34: $.datepicker._adjustDate( event.target, ( event.ctrlKey ?
       +$.datepicker._get( inst, "stepBigMonths" ) :
       +$.datepicker._get( inst, "stepMonths" ) ), "M" );
      break; // next month/year on page down/+ ctrl
    case 35: if ( event.ctrlKey || event.metaKey ) {
       $.datepicker._clearDate( event.target );
      }
      handled = event.ctrlKey || event.metaKey;
      break; // clear on ctrl or command +end
    case 36: if ( event.ctrlKey || event.metaKey ) {
       $.datepicker._gotoToday( event.target );
      }
      handled = event.ctrlKey || event.metaKey;
      break; // current on ctrl or command +home
    case 37: if ( event.ctrlKey || event.metaKey ) {
       $.datepicker._adjustDate( event.target, ( isRTL ? +1 : -1 ), "D" );
      }
      handled = event.ctrlKey || event.metaKey;

      // -1 day on ctrl or command +left
      if ( event.originalEvent.altKey ) {
       $.datepicker._adjustDate( event.target, ( event.ctrlKey ?
        -$.datepicker._get( inst, "stepBigMonths" ) :
        -$.datepicker._get( inst, "stepMonths" ) ), "M" );
      }

      // next month/year on alt +left on Mac
      break;
    case 38: if ( event.ctrlKey || event.metaKey ) {
       $.datepicker._adjustDate( event.target, -7, "D" );
      }
      handled = event.ctrlKey || event.metaKey;
      break; // -1 week on ctrl or command +up
    case 39: if ( event.ctrlKey || event.metaKey ) {
       $.datepicker._adjustDate( event.target, ( isRTL ? -1 : +1 ), "D" );
      }
      handled = event.ctrlKey || event.metaKey;

      // +1 day on ctrl or command +right
      if ( event.originalEvent.altKey ) {
       $.datepicker._adjustDate( event.target, ( event.ctrlKey ?
        +$.datepicker._get( inst, "stepBigMonths" ) :
        +$.datepicker._get( inst, "stepMonths" ) ), "M" );
      }

      // next month/year on alt +right
      break;
    case 40: if ( event.ctrlKey || event.metaKey ) {
       $.datepicker._adjustDate( event.target, +7, "D" );
      }
      handled = event.ctrlKey || event.metaKey;
      break; // +1 week on ctrl or command +down
    default: handled = false;
   }
  } else if ( event.keyCode === 36 && event.ctrlKey ) { // display the date picker on ctrl+home
   $.datepicker._showDatepicker( this );
  } else {
   handled = false;
  }

  if ( handled ) {
   event.preventDefault();
   event.stopPropagation();
  }
 },

 /* Filter entered characters - based on date format. */
 _doKeyPress: function( event ) {
  var chars, chr,
   inst = $.datepicker._getInst( event.target );

  if ( $.datepicker._get( inst, "constrainInput" ) ) {
   chars = $.datepicker._possibleChars( $.datepicker._get( inst, "dateFormat" ) );
   chr = String.fromCharCode( event.charCode == null ? event.keyCode : event.charCode );
   return event.ctrlKey || event.metaKey || ( chr < " " || !chars || chars.indexOf( chr ) > -1 );
  }
 },

 /* Synchronise manual entry and field/alternate field. */
 _doKeyUp: function( event ) {
  var date,
   inst = $.datepicker._getInst( event.target );

  if ( inst.input.val() !== inst.lastVal ) {
   try {
    date = $.datepicker.parseDate( $.datepicker._get( inst, "dateFormat" ),
     ( inst.input ? inst.input.val() : null ),
     $.datepicker._getFormatConfig( inst ) );

    if ( date ) { // only if valid
     $.datepicker._setDateFromField( inst );
     $.datepicker._updateAlternate( inst );
     $.datepicker._updateDatepicker( inst );
    }
   }
   catch ( err ) {
   }
  }
  return true;
 },

 /* Pop-up the date picker for a given input field.
  * If false returned from beforeShow event handler do not show.
  * @param  input  element - the input field attached to the date picker or
  *     event - if triggered by focus
  */
 _showDatepicker: function( input ) {
  input = input.target || input;
  if ( input.nodeName.toLowerCase() !== "input" ) { // find from button/image trigger
   input = $( "input", input.parentNode )[ 0 ];
  }

  if ( $.datepicker._isDisabledDatepicker( input ) || $.datepicker._lastInput === input ) { // already here
   return;
  }

  var inst, beforeShow, beforeShowSettings, isFixed,
   offset, showAnim, duration;

  inst = $.datepicker._getInst( input );
  if ( $.datepicker._curInst && $.datepicker._curInst !== inst ) {
   $.datepicker._curInst.dpDiv.stop( true, true );
   if ( inst && $.datepicker._datepickerShowing ) {
    $.datepicker._hideDatepicker( $.datepicker._curInst.input[ 0 ] );
   }
  }

  beforeShow = $.datepicker._get( inst, "beforeShow" );
  beforeShowSettings = beforeShow ? beforeShow.apply( input, [ input, inst ] ) : {};
  if ( beforeShowSettings === false ) {
   return;
  }
  datepicker_extendRemove( inst.settings, beforeShowSettings );

  inst.lastVal = null;
  $.datepicker._lastInput = input;
  $.datepicker._setDateFromField( inst );

  if ( $.datepicker._inDialog ) { // hide cursor
   input.value = "";
  }
  if ( !$.datepicker._pos ) { // position below input
   $.datepicker._pos = $.datepicker._findPos( input );
   $.datepicker._pos[ 1 ] += input.offsetHeight; // add the height
  }

  isFixed = false;
  $( input ).parents().each( function() {
   isFixed |= $( this ).css( "position" ) === "fixed";
   return !isFixed;
  } );

  offset = { left: $.datepicker._pos[ 0 ], top: $.datepicker._pos[ 1 ] };
  $.datepicker._pos = null;

  //to avoid flashes on Firefox
  inst.dpDiv.empty();

  // determine sizing offscreen
  inst.dpDiv.css( { position: "absolute", display: "block", top: "-1000px" } );
  $.datepicker._updateDatepicker( inst );

  // fix width for dynamic number of date pickers
  // and adjust position before showing
  offset = $.datepicker._checkOffset( inst, offset, isFixed );
  inst.dpDiv.css( { position: ( $.datepicker._inDialog && $.blockUI ?
   "static" : ( isFixed ? "fixed" : "absolute" ) ), display: "none",
   left: offset.left + "px", top: offset.top + "px" } );

  if ( !inst.inline ) {
   showAnim = $.datepicker._get( inst, "showAnim" );
   duration = $.datepicker._get( inst, "duration" );
   inst.dpDiv.css( "z-index", datepicker_getZindex( $( input ) ) + 1 );
   $.datepicker._datepickerShowing = true;

   if ( $.effects && $.effects.effect[ showAnim ] ) {
    inst.dpDiv.show( showAnim, $.datepicker._get( inst, "showOptions" ), duration );
   } else {
    inst.dpDiv[ showAnim || "show" ]( showAnim ? duration : null );
   }

   if ( $.datepicker._shouldFocusInput( inst ) ) {
    inst.input.trigger( "focus" );
   }

   $.datepicker._curInst = inst;
  }
 },

 /* Generate the date picker content. */
 _updateDatepicker: function( inst ) {
  this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
  datepicker_instActive = inst; // for delegate hover events
  inst.dpDiv.empty().append( this._generateHTML( inst ) );
  this._attachHandlers( inst );

  var origyearshtml,
   numMonths = this._getNumberOfMonths( inst ),
   cols = numMonths[ 1 ],
   width = 17,
   activeCell = inst.dpDiv.find( "." + this._dayOverClass + " a" );

  if ( activeCell.length > 0 ) {
   datepicker_handleMouseover.apply( activeCell.get( 0 ) );
  }

  inst.dpDiv.removeClass( "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4" ).width( "" );
  if ( cols > 1 ) {
   inst.dpDiv.addClass( "ui-datepicker-multi-" + cols ).css( "width", ( width * cols ) + "em" );
  }
  inst.dpDiv[ ( numMonths[ 0 ] !== 1 || numMonths[ 1 ] !== 1 ? "add" : "remove" ) +
   "Class" ]( "ui-datepicker-multi" );
  inst.dpDiv[ ( this._get( inst, "isRTL" ) ? "add" : "remove" ) +
   "Class" ]( "ui-datepicker-rtl" );

  if ( inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {
   inst.input.trigger( "focus" );
  }

  // Deffered render of the years select (to avoid flashes on Firefox)
  if ( inst.yearshtml ) {
   origyearshtml = inst.yearshtml;
   setTimeout( function() {

    //assure that inst.yearshtml didn't change.
    if ( origyearshtml === inst.yearshtml && inst.yearshtml ) {
     inst.dpDiv.find( "select.ui-datepicker-year:first" ).replaceWith( inst.yearshtml );
    }
    origyearshtml = inst.yearshtml = null;
   }, 0 );
  }
 },

 // #6694 - don't focus the input if it's already focused
 // this breaks the change event in IE
 // Support: IE and jQuery <1.9
 _shouldFocusInput: function( inst ) {
  return inst.input && inst.input.is( ":visible" ) && !inst.input.is( ":disabled" ) && !inst.input.is( ":focus" );
 },

 /* Check positioning to remain on screen. */
 _checkOffset: function( inst, offset, isFixed ) {
  var dpWidth = inst.dpDiv.outerWidth(),
   dpHeight = inst.dpDiv.outerHeight(),
   inputWidth = inst.input ? inst.input.outerWidth() : 0,
   inputHeight = inst.input ? inst.input.outerHeight() : 0,
   viewWidth = document.documentElement.clientWidth + ( isFixed ? 0 : $( document ).scrollLeft() ),
   viewHeight = document.documentElement.clientHeight + ( isFixed ? 0 : $( document ).scrollTop() );

  offset.left -= ( this._get( inst, "isRTL" ) ? ( dpWidth - inputWidth ) : 0 );
  offset.left -= ( isFixed && offset.left === inst.input.offset().left ) ? $( document ).scrollLeft() : 0;
  offset.top -= ( isFixed && offset.top === ( inst.input.offset().top + inputHeight ) ) ? $( document ).scrollTop() : 0;

  // Now check if datepicker is showing outside window viewport - move to a better place if so.
  offset.left -= Math.min( offset.left, ( offset.left + dpWidth > viewWidth && viewWidth > dpWidth ) ?
   Math.abs( offset.left + dpWidth - viewWidth ) : 0 );
  offset.top -= Math.min( offset.top, ( offset.top + dpHeight > viewHeight && viewHeight > dpHeight ) ?
   Math.abs( dpHeight + inputHeight ) : 0 );

  return offset;
 },

 /* Find an object's position on the screen. */
 _findPos: function( obj ) {
  var position,
   inst = this._getInst( obj ),
   isRTL = this._get( inst, "isRTL" );

  while ( obj && ( obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden( obj ) ) ) {
   obj = obj[ isRTL ? "previousSibling" : "nextSibling" ];
  }

  position = $( obj ).offset();
  return [ position.left, position.top ];
 },

 /* Hide the date picker from view.
  * @param  input  element - the input field attached to the date picker
  */
 _hideDatepicker: function( input ) {
  var showAnim, duration, postProcess, onClose,
   inst = this._curInst;

  if ( !inst || ( input && inst !== $.data( input, "datepicker" ) ) ) {
   return;
  }

  if ( this._datepickerShowing ) {
   showAnim = this._get( inst, "showAnim" );
   duration = this._get( inst, "duration" );
   postProcess = function() {
    $.datepicker._tidyDialog( inst );
   };

   // DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
   if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {
    inst.dpDiv.hide( showAnim, $.datepicker._get( inst, "showOptions" ), duration, postProcess );
   } else {
    inst.dpDiv[ ( showAnim === "slideDown" ? "slideUp" :
     ( showAnim === "fadeIn" ? "fadeOut" : "hide" ) ) ]( ( showAnim ? duration : null ), postProcess );
   }

   if ( !showAnim ) {
    postProcess();
   }
   this._datepickerShowing = false;

   onClose = this._get( inst, "onClose" );
   if ( onClose ) {
    onClose.apply( ( inst.input ? inst.input[ 0 ] : null ), [ ( inst.input ? inst.input.val() : "" ), inst ] );
   }

   this._lastInput = null;
   if ( this._inDialog ) {
    this._dialogInput.css( { position: "absolute", left: "0", top: "-100px" } );
    if ( $.blockUI ) {
     $.unblockUI();
     $( "body" ).append( this.dpDiv );
    }
   }
   this._inDialog = false;
  }
 },

 /* Tidy up after a dialog display. */
 _tidyDialog: function( inst ) {
  inst.dpDiv.removeClass( this._dialogClass ).off( ".ui-datepicker-calendar" );
 },

 /* Close date picker if clicked elsewhere. */
 _checkExternalClick: function( event ) {
  if ( !$.datepicker._curInst ) {
   return;
  }

  var $target = $( event.target ),
   inst = $.datepicker._getInst( $target[ 0 ] );

  if ( ( ( $target[ 0 ].id !== $.datepicker._mainDivId &&
    $target.parents( "#" + $.datepicker._mainDivId ).length === 0 &&
    !$target.hasClass( $.datepicker.markerClassName ) &&
    !$target.closest( "." + $.datepicker._triggerClass ).length &&
    $.datepicker._datepickerShowing && !( $.datepicker._inDialog && $.blockUI ) ) ) ||
   ( $target.hasClass( $.datepicker.markerClassName ) && $.datepicker._curInst !== inst ) ) {
    $.datepicker._hideDatepicker();
  }
 },

 /* Adjust one of the date sub-fields. */
 _adjustDate: function( id, offset, period ) {
  var target = $( id ),
   inst = this._getInst( target[ 0 ] );

  if ( this._isDisabledDatepicker( target[ 0 ] ) ) {
   return;
  }
  this._adjustInstDate( inst, offset +
   ( period === "M" ? this._get( inst, "showCurrentAtPos" ) : 0 ), // undo positioning
   period );
  this._updateDatepicker( inst );
 },

 /* Action for current link. */
 _gotoToday: function( id ) {
  var date,
   target = $( id ),
   inst = this._getInst( target[ 0 ] );

  if ( this._get( inst, "gotoCurrent" ) && inst.currentDay ) {
   inst.selectedDay = inst.currentDay;
   inst.drawMonth = inst.selectedMonth = inst.currentMonth;
   inst.drawYear = inst.selectedYear = inst.currentYear;
  } else {
   date = new Date();
   inst.selectedDay = date.getDate();
   inst.drawMonth = inst.selectedMonth = date.getMonth();
   inst.drawYear = inst.selectedYear = date.getFullYear();
  }
  this._notifyChange( inst );
  this._adjustDate( target );
 },

 /* Action for selecting a new month/year. */
 _selectMonthYear: function( id, select, period ) {
  var target = $( id ),
   inst = this._getInst( target[ 0 ] );

  inst[ "selected" + ( period === "M" ? "Month" : "Year" ) ] =
  inst[ "draw" + ( period === "M" ? "Month" : "Year" ) ] =
   parseInt( select.options[ select.selectedIndex ].value, 10 );

  this._notifyChange( inst );
  this._adjustDate( target );
 },

 /* Action for selecting a day. */
 _selectDay: function( id, month, year, td ) {
  var inst,
   target = $( id );

  if ( $( td ).hasClass( this._unselectableClass ) || this._isDisabledDatepicker( target[ 0 ] ) ) {
   return;
  }

  inst = this._getInst( target[ 0 ] );
  inst.selectedDay = inst.currentDay = $( "a", td ).html();
  inst.selectedMonth = inst.currentMonth = month;
  inst.selectedYear = inst.currentYear = year;
  this._selectDate( id, this._formatDate( inst,
   inst.currentDay, inst.currentMonth, inst.currentYear ) );
 },

 /* Erase the input field and hide the date picker. */
 _clearDate: function( id ) {
  var target = $( id );
  this._selectDate( target, "" );
 },

 /* Update the input field with the selected date. */
 _selectDate: function( id, dateStr ) {
  var onSelect,
   target = $( id ),
   inst = this._getInst( target[ 0 ] );

  dateStr = ( dateStr != null ? dateStr : this._formatDate( inst ) );
  if ( inst.input ) {
   inst.input.val( dateStr );
  }
  this._updateAlternate( inst );

  onSelect = this._get( inst, "onSelect" );
  if ( onSelect ) {
   onSelect.apply( ( inst.input ? inst.input[ 0 ] : null ), [ dateStr, inst ] );  // trigger custom callback
  } else if ( inst.input ) {
   inst.input.trigger( "change" ); // fire the change event
  }

  if ( inst.inline ) {
   this._updateDatepicker( inst );
  } else {
   this._hideDatepicker();
   this._lastInput = inst.input[ 0 ];
   if ( typeof( inst.input[ 0 ] ) !== "object" ) {
    inst.input.trigger( "focus" ); // restore focus
   }
   this._lastInput = null;
  }
 },

 /* Update any alternate field to synchronise with the main field. */
 _updateAlternate: function( inst ) {
  var altFormat, date, dateStr,
   altField = this._get( inst, "altField" );

  if ( altField ) { // update alternate field too
   altFormat = this._get( inst, "altFormat" ) || this._get( inst, "dateFormat" );
   date = this._getDate( inst );
   dateStr = this.formatDate( altFormat, date, this._getFormatConfig( inst ) );
   $( altField ).val( dateStr );
  }
 },

 /* Set as beforeShowDay function to prevent selection of weekends.
  * @param  date  Date - the date to customise
  * @return [boolean, string] - is this date selectable?, what is its CSS class?
  */
 noWeekends: function( date ) {
  var day = date.getDay();
  return [ ( day > 0 && day < 6 ), "" ];
 },

 /* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
  * @param  date  Date - the date to get the week for
  * @return  number - the number of the week within the year that contains this date
  */
 iso8601Week: function( date ) {
  var time,
   checkDate = new Date( date.getTime() );

  // Find Thursday of this week starting on Monday
  checkDate.setDate( checkDate.getDate() + 4 - ( checkDate.getDay() || 7 ) );

  time = checkDate.getTime();
  checkDate.setMonth( 0 ); // Compare with Jan 1
  checkDate.setDate( 1 );
  return Math.floor( Math.round( ( time - checkDate ) / 86400000 ) / 7 ) + 1;
 },

 /* Parse a string value into a date object.
  * See formatDate below for the possible formats.
  *
  * @param  format string - the expected format of the date
  * @param  value string - the date in the above format
  * @param  settings Object - attributes include:
  *     shortYearCutoff  number - the cutoff year for determining the century (optional)
  *     dayNamesShort string[7] - abbreviated names of the days from Sunday (optional)
  *     dayNames  string[7] - names of the days from Sunday (optional)
  *     monthNamesShort string[12] - abbreviated names of the months (optional)
  *     monthNames  string[12] - names of the months (optional)
  * @return  Date - the extracted date value or null if value is blank
  */
 parseDate: function( format, value, settings ) {
  if ( format == null || value == null ) {
   throw "Invalid arguments";
  }

  value = ( typeof value === "object" ? value.toString() : value + "" );
  if ( value === "" ) {
   return null;
  }

  var iFormat, dim, extra,
   iValue = 0,
   shortYearCutoffTemp = ( settings ? settings.shortYearCutoff : null ) || this._defaults.shortYearCutoff,
   shortYearCutoff = ( typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :
    new Date().getFullYear() % 100 + parseInt( shortYearCutoffTemp, 10 ) ),
   dayNamesShort = ( settings ? settings.dayNamesShort : null ) || this._defaults.dayNamesShort,
   dayNames = ( settings ? settings.dayNames : null ) || this._defaults.dayNames,
   monthNamesShort = ( settings ? settings.monthNamesShort : null ) || this._defaults.monthNamesShort,
   monthNames = ( settings ? settings.monthNames : null ) || this._defaults.monthNames,
   year = -1,
   month = -1,
   day = -1,
   doy = -1,
   literal = false,
   date,

   // Check whether a format character is doubled
   lookAhead = function( match ) {
    var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
    if ( matches ) {
     iFormat++;
    }
    return matches;
   },

   // Extract a number from the string value
   getNumber = function( match ) {
    var isDoubled = lookAhead( match ),
     size = ( match === "@" ? 14 : ( match === "!" ? 20 :
     ( match === "y" && isDoubled ? 4 : ( match === "o" ? 3 : 2 ) ) ) ),
     minSize = ( match === "y" ? size : 1 ),
     digits = new RegExp( "^\\d{" + minSize + "," + size + "}" ),
     num = value.substring( iValue ).match( digits );
    if ( !num ) {
     throw "Missing number at position " + iValue;
    }
    iValue += num[ 0 ].length;
    return parseInt( num[ 0 ], 10 );
   },

   // Extract a name from the string value and convert to an index
   getName = function( match, shortNames, longNames ) {
    var index = -1,
     names = $.map( lookAhead( match ) ? longNames : shortNames, function( v, k ) {
      return [ [ k, v ] ];
     } ).sort( function( a, b ) {
      return -( a[ 1 ].length - b[ 1 ].length );
     } );

    $.each( names, function( i, pair ) {
     var name = pair[ 1 ];
     if ( value.substr( iValue, name.length ).toLowerCase() === name.toLowerCase() ) {
      index = pair[ 0 ];
      iValue += name.length;
      return false;
     }
    } );
    if ( index !== -1 ) {
     return index + 1;
    } else {
     throw "Unknown name at position " + iValue;
    }
   },

   // Confirm that a literal character matches the string value
   checkLiteral = function() {
    if ( value.charAt( iValue ) !== format.charAt( iFormat ) ) {
     throw "Unexpected literal at position " + iValue;
    }
    iValue++;
   };

  for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
   if ( literal ) {
    if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
     literal = false;
    } else {
     checkLiteral();
    }
   } else {
    switch ( format.charAt( iFormat ) ) {
     case "d":
      day = getNumber( "d" );
      break;
     case "D":
      getName( "D", dayNamesShort, dayNames );
      break;
     case "o":
      doy = getNumber( "o" );
      break;
     case "m":
      month = getNumber( "m" );
      break;
     case "M":
      month = getName( "M", monthNamesShort, monthNames );
      break;
     case "y":
      year = getNumber( "y" );
      break;
     case "@":
      date = new Date( getNumber( "@" ) );
      year = date.getFullYear();
      month = date.getMonth() + 1;
      day = date.getDate();
      break;
     case "!":
      date = new Date( ( getNumber( "!" ) - this._ticksTo1970 ) / 10000 );
      year = date.getFullYear();
      month = date.getMonth() + 1;
      day = date.getDate();
      break;
     case "'":
      if ( lookAhead( "'" ) ) {
       checkLiteral();
      } else {
       literal = true;
      }
      break;
     default:
      checkLiteral();
    }
   }
  }

  if ( iValue < value.length ) {
   extra = value.substr( iValue );
   if ( !/^\s+/.test( extra ) ) {
    throw "Extra/unparsed characters found in date: " + extra;
   }
  }

  if ( year === -1 ) {
   year = new Date().getFullYear();
  } else if ( year < 100 ) {
   year += new Date().getFullYear() - new Date().getFullYear() % 100 +
    ( year <= shortYearCutoff ? 0 : -100 );
  }

  if ( doy > -1 ) {
   month = 1;
   day = doy;
   do {
    dim = this._getDaysInMonth( year, month - 1 );
    if ( day <= dim ) {
     break;
    }
    month++;
    day -= dim;
   } while ( true );
  }

  date = this._daylightSavingAdjust( new Date( year, month - 1, day ) );
  if ( date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day ) {
   throw "Invalid date"; // E.g. 31/02/00
  }
  return date;
 },

 /* Standard date formats. */
 ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
 COOKIE: "D, dd M yy",
 ISO_8601: "yy-mm-dd",
 RFC_822: "D, d M y",
 RFC_850: "DD, dd-M-y",
 RFC_1036: "D, d M y",
 RFC_1123: "D, d M yy",
 RFC_2822: "D, d M yy",
 RSS: "D, d M y", // RFC 822
 TICKS: "!",
 TIMESTAMP: "@",
 W3C: "yy-mm-dd", // ISO 8601

 _ticksTo1970: ( ( ( 1970 - 1 ) * 365 + Math.floor( 1970 / 4 ) - Math.floor( 1970 / 100 ) +
  Math.floor( 1970 / 400 ) ) * 24 * 60 * 60 * 10000000 ),

 /* Format a date object into a string value.
  * The format can be combinations of the following:
  * d  - day of month (no leading zero)
  * dd - day of month (two digit)
  * o  - day of year (no leading zeros)
  * oo - day of year (three digit)
  * D  - day name short
  * DD - day name long
  * m  - month of year (no leading zero)
  * mm - month of year (two digit)
  * M  - month name short
  * MM - month name long
  * y  - year (two digit)
  * yy - year (four digit)
  * @ - Unix timestamp (ms since 01/01/1970)
  * ! - Windows ticks (100ns since 01/01/0001)
  * "..." - literal text
  * '' - single quote
  *
  * @param  format string - the desired format of the date
  * @param  date Date - the date value to format
  * @param  settings Object - attributes include:
  *     dayNamesShort string[7] - abbreviated names of the days from Sunday (optional)
  *     dayNames  string[7] - names of the days from Sunday (optional)
  *     monthNamesShort string[12] - abbreviated names of the months (optional)
  *     monthNames  string[12] - names of the months (optional)
  * @return  string - the date in the above format
  */
 formatDate: function( format, date, settings ) {
  if ( !date ) {
   return "";
  }

  var iFormat,
   dayNamesShort = ( settings ? settings.dayNamesShort : null ) || this._defaults.dayNamesShort,
   dayNames = ( settings ? settings.dayNames : null ) || this._defaults.dayNames,
   monthNamesShort = ( settings ? settings.monthNamesShort : null ) || this._defaults.monthNamesShort,
   monthNames = ( settings ? settings.monthNames : null ) || this._defaults.monthNames,

   // Check whether a format character is doubled
   lookAhead = function( match ) {
    var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
    if ( matches ) {
     iFormat++;
    }
    return matches;
   },

   // Format a number, with leading zero if necessary
   formatNumber = function( match, value, len ) {
    var num = "" + value;
    if ( lookAhead( match ) ) {
     while ( num.length < len ) {
      num = "0" + num;
     }
    }
    return num;
   },

   // Format a name, short or long as requested
   formatName = function( match, value, shortNames, longNames ) {
    return ( lookAhead( match ) ? longNames[ value ] : shortNames[ value ] );
   },
   output = "",
   literal = false;

  if ( date ) {
   for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
    if ( literal ) {
     if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
      literal = false;
     } else {
      output += format.charAt( iFormat );
     }
    } else {
     switch ( format.charAt( iFormat ) ) {
      case "d":
       output += formatNumber( "d", date.getDate(), 2 );
       break;
      case "D":
       output += formatName( "D", date.getDay(), dayNamesShort, dayNames );
       break;
      case "o":
       output += formatNumber( "o",
        Math.round( ( new Date( date.getFullYear(), date.getMonth(), date.getDate() ).getTime() - new Date( date.getFullYear(), 0, 0 ).getTime() ) / 86400000 ), 3 );
       break;
      case "m":
       output += formatNumber( "m", date.getMonth() + 1, 2 );
       break;
      case "M":
       output += formatName( "M", date.getMonth(), monthNamesShort, monthNames );
       break;
      case "y":
       output += ( lookAhead( "y" ) ? date.getFullYear() :
        ( date.getFullYear() % 100 < 10 ? "0" : "" ) + date.getFullYear() % 100 );
       break;
      case "@":
       output += date.getTime();
       break;
      case "!":
       output += date.getTime() * 10000 + this._ticksTo1970;
       break;
      case "'":
       if ( lookAhead( "'" ) ) {
        output += "'";
       } else {
        literal = true;
       }
       break;
      default:
       output += format.charAt( iFormat );
     }
    }
   }
  }
  return output;
 },

 /* Extract all possible characters from the date format. */
 _possibleChars: function( format ) {
  var iFormat,
   chars = "",
   literal = false,

   // Check whether a format character is doubled
   lookAhead = function( match ) {
    var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
    if ( matches ) {
     iFormat++;
    }
    return matches;
   };

  for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
   if ( literal ) {
    if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
     literal = false;
    } else {
     chars += format.charAt( iFormat );
    }
   } else {
    switch ( format.charAt( iFormat ) ) {
     case "d": case "m": case "y": case "@":
      chars += "0123456789";
      break;
     case "D": case "M":
      return null; // Accept anything
     case "'":
      if ( lookAhead( "'" ) ) {
       chars += "'";
      } else {
       literal = true;
      }
      break;
     default:
      chars += format.charAt( iFormat );
    }
   }
  }
  return chars;
 },

 /* Get a setting value, defaulting if necessary. */
 _get: function( inst, name ) {
  return inst.settings[ name ] !== undefined ?
   inst.settings[ name ] : this._defaults[ name ];
 },

 /* Parse existing date and initialise date picker. */
 _setDateFromField: function( inst, noDefault ) {
  if ( inst.input.val() === inst.lastVal ) {
   return;
  }

  var dateFormat = this._get( inst, "dateFormat" ),
   dates = inst.lastVal = inst.input ? inst.input.val() : null,
   defaultDate = this._getDefaultDate( inst ),
   date = defaultDate,
   settings = this._getFormatConfig( inst );

  try {
   date = this.parseDate( dateFormat, dates, settings ) || defaultDate;
  } catch ( event ) {
   dates = ( noDefault ? "" : dates );
  }
  inst.selectedDay = date.getDate();
  inst.drawMonth = inst.selectedMonth = date.getMonth();
  inst.drawYear = inst.selectedYear = date.getFullYear();
  inst.currentDay = ( dates ? date.getDate() : 0 );
  inst.currentMonth = ( dates ? date.getMonth() : 0 );
  inst.currentYear = ( dates ? date.getFullYear() : 0 );
  this._adjustInstDate( inst );
 },

 /* Retrieve the default date shown on opening. */
 _getDefaultDate: function( inst ) {
  return this._restrictMinMax( inst,
   this._determineDate( inst, this._get( inst, "defaultDate" ), new Date() ) );
 },

 /* A date may be specified as an exact value or a relative one. */
 _determineDate: function( inst, date, defaultDate ) {
  var offsetNumeric = function( offset ) {
    var date = new Date();
    date.setDate( date.getDate() + offset );
    return date;
   },
   offsetString = function( offset ) {
    try {
     return $.datepicker.parseDate( $.datepicker._get( inst, "dateFormat" ),
      offset, $.datepicker._getFormatConfig( inst ) );
    }
    catch ( e ) {

     // Ignore
    }

    var date = ( offset.toLowerCase().match( /^c/ ) ?
     $.datepicker._getDate( inst ) : null ) || new Date(),
     year = date.getFullYear(),
     month = date.getMonth(),
     day = date.getDate(),
     pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
     matches = pattern.exec( offset );

    while ( matches ) {
     switch ( matches[ 2 ] || "d" ) {
      case "d" : case "D" :
       day += parseInt( matches[ 1 ], 10 ); break;
      case "w" : case "W" :
       day += parseInt( matches[ 1 ], 10 ) * 7; break;
      case "m" : case "M" :
       month += parseInt( matches[ 1 ], 10 );
       day = Math.min( day, $.datepicker._getDaysInMonth( year, month ) );
       break;
      case "y": case "Y" :
       year += parseInt( matches[ 1 ], 10 );
       day = Math.min( day, $.datepicker._getDaysInMonth( year, month ) );
       break;
     }
     matches = pattern.exec( offset );
    }
    return new Date( year, month, day );
   },
   newDate = ( date == null || date === "" ? defaultDate : ( typeof date === "string" ? offsetString( date ) :
    ( typeof date === "number" ? ( isNaN( date ) ? defaultDate : offsetNumeric( date ) ) : new Date( date.getTime() ) ) ) );

  newDate = ( newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate );
  if ( newDate ) {
   newDate.setHours( 0 );
   newDate.setMinutes( 0 );
   newDate.setSeconds( 0 );
   newDate.setMilliseconds( 0 );
  }
  return this._daylightSavingAdjust( newDate );
 },

 /* Handle switch to/from daylight saving.
  * Hours may be non-zero on daylight saving cut-over:
  * > 12 when midnight changeover, but then cannot generate
  * midnight datetime, so jump to 1AM, otherwise reset.
  * @param  date  (Date) the date to check
  * @return  (Date) the corrected date
  */
 _daylightSavingAdjust: function( date ) {
  if ( !date ) {
   return null;
  }
  date.setHours( date.getHours() > 12 ? date.getHours() + 2 : 0 );
  return date;
 },

 /* Set the date(s) directly. */
 _setDate: function( inst, date, noChange ) {
  var clear = !date,
   origMonth = inst.selectedMonth,
   origYear = inst.selectedYear,
   newDate = this._restrictMinMax( inst, this._determineDate( inst, date, new Date() ) );

  inst.selectedDay = inst.currentDay = newDate.getDate();
  inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
  inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
  if ( ( origMonth !== inst.selectedMonth || origYear !== inst.selectedYear ) && !noChange ) {
   this._notifyChange( inst );
  }
  this._adjustInstDate( inst );
  if ( inst.input ) {
   inst.input.val( clear ? "" : this._formatDate( inst ) );
  }
 },

 /* Retrieve the date(s) directly. */
 _getDate: function( inst ) {
  var startDate = ( !inst.currentYear || ( inst.input && inst.input.val() === "" ) ? null :
   this._daylightSavingAdjust( new Date(
   inst.currentYear, inst.currentMonth, inst.currentDay ) ) );
   return startDate;
 },

 /* Attach the onxxx handlers.  These are declared statically so
  * they work with static code transformers like Caja.
  */
 _attachHandlers: function( inst ) {
  var stepMonths = this._get( inst, "stepMonths" ),
   id = "#" + inst.id.replace( /\\\\/g, "\\" );
  inst.dpDiv.find( "[data-handler]" ).map( function() {
   var handler = {
    prev: function() {
     $.datepicker._adjustDate( id, -stepMonths, "M" );
    },
    next: function() {
     $.datepicker._adjustDate( id, +stepMonths, "M" );
    },
    hide: function() {
     $.datepicker._hideDatepicker();
    },
    today: function() {
     $.datepicker._gotoToday( id );
    },
    selectDay: function() {
     $.datepicker._selectDay( id, +this.getAttribute( "data-month" ), +this.getAttribute( "data-year" ), this );
     return false;
    },
    selectMonth: function() {
     $.datepicker._selectMonthYear( id, this, "M" );
     return false;
    },
    selectYear: function() {
     $.datepicker._selectMonthYear( id, this, "Y" );
     return false;
    }
   };
   $( this ).on( this.getAttribute( "data-event" ), handler[ this.getAttribute( "data-handler" ) ] );
  } );
 },

 /* Generate the HTML for the current state of the date picker. */
 _generateHTML: function( inst ) {
  var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,
   controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,
   monthNames, monthNamesShort, beforeShowDay, showOtherMonths,
   selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,
   cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,
   printDate, dRow, tbody, daySettings, otherMonth, unselectable,
   tempDate = new Date(),
   today = this._daylightSavingAdjust(
    new Date( tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate() ) ), // clear time
   isRTL = this._get( inst, "isRTL" ),
   showButtonPanel = this._get( inst, "showButtonPanel" ),
   hideIfNoPrevNext = this._get( inst, "hideIfNoPrevNext" ),
   navigationAsDateFormat = this._get( inst, "navigationAsDateFormat" ),
   numMonths = this._getNumberOfMonths( inst ),
   showCurrentAtPos = this._get( inst, "showCurrentAtPos" ),
   stepMonths = this._get( inst, "stepMonths" ),
   isMultiMonth = ( numMonths[ 0 ] !== 1 || numMonths[ 1 ] !== 1 ),
   currentDate = this._daylightSavingAdjust( ( !inst.currentDay ? new Date( 9999, 9, 9 ) :
    new Date( inst.currentYear, inst.currentMonth, inst.currentDay ) ) ),
   minDate = this._getMinMaxDate( inst, "min" ),
   maxDate = this._getMinMaxDate( inst, "max" ),
   drawMonth = inst.drawMonth - showCurrentAtPos,
   drawYear = inst.drawYear;

  if ( drawMonth < 0 ) {
   drawMonth += 12;
   drawYear--;
  }
  if ( maxDate ) {
   maxDraw = this._daylightSavingAdjust( new Date( maxDate.getFullYear(),
    maxDate.getMonth() - ( numMonths[ 0 ] * numMonths[ 1 ] ) + 1, maxDate.getDate() ) );
   maxDraw = ( minDate && maxDraw < minDate ? minDate : maxDraw );
   while ( this._daylightSavingAdjust( new Date( drawYear, drawMonth, 1 ) ) > maxDraw ) {
    drawMonth--;
    if ( drawMonth < 0 ) {
     drawMonth = 11;
     drawYear--;
    }
   }
  }
  inst.drawMonth = drawMonth;
  inst.drawYear = drawYear;

  prevText = this._get( inst, "prevText" );
  prevText = ( !navigationAsDateFormat ? prevText : this.formatDate( prevText,
   this._daylightSavingAdjust( new Date( drawYear, drawMonth - stepMonths, 1 ) ),
   this._getFormatConfig( inst ) ) );

  prev = ( this._canAdjustMonth( inst, -1, drawYear, drawMonth ) ?
   "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'" +
   " title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w" ) + "'>" + prevText + "</span></a>" :
   ( hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w" ) + "'>" + prevText + "</span></a>" ) );

  nextText = this._get( inst, "nextText" );
  nextText = ( !navigationAsDateFormat ? nextText : this.formatDate( nextText,
   this._daylightSavingAdjust( new Date( drawYear, drawMonth + stepMonths, 1 ) ),
   this._getFormatConfig( inst ) ) );

  next = ( this._canAdjustMonth( inst, +1, drawYear, drawMonth ) ?
   "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'" +
   " title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e" ) + "'>" + nextText + "</span></a>" :
   ( hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e" ) + "'>" + nextText + "</span></a>" ) );

  currentText = this._get( inst, "currentText" );
  gotoDate = ( this._get( inst, "gotoCurrent" ) && inst.currentDay ? currentDate : today );
  currentText = ( !navigationAsDateFormat ? currentText :
   this.formatDate( currentText, gotoDate, this._getFormatConfig( inst ) ) );

  controls = ( !inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
   this._get( inst, "closeText" ) + "</button>" : "" );

  buttonPanel = ( showButtonPanel ) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + ( isRTL ? controls : "" ) +
   ( this._isInRange( inst, gotoDate ) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'" +
   ">" + currentText + "</button>" : "" ) + ( isRTL ? "" : controls ) + "</div>" : "";

  firstDay = parseInt( this._get( inst, "firstDay" ), 10 );
  firstDay = ( isNaN( firstDay ) ? 0 : firstDay );

  showWeek = this._get( inst, "showWeek" );
  dayNames = this._get( inst, "dayNames" );
  dayNamesMin = this._get( inst, "dayNamesMin" );
  monthNames = this._get( inst, "monthNames" );
  monthNamesShort = this._get( inst, "monthNamesShort" );
  beforeShowDay = this._get( inst, "beforeShowDay" );
  showOtherMonths = this._get( inst, "showOtherMonths" );
  selectOtherMonths = this._get( inst, "selectOtherMonths" );
  defaultDate = this._getDefaultDate( inst );
  html = "";

  for ( row = 0; row < numMonths[ 0 ]; row++ ) {
   group = "";
   this.maxRows = 4;
   for ( col = 0; col < numMonths[ 1 ]; col++ ) {
    selectedDate = this._daylightSavingAdjust( new Date( drawYear, drawMonth, inst.selectedDay ) );
    cornerClass = " ui-corner-all";
    calender = "";
    if ( isMultiMonth ) {
     calender += "<div class='ui-datepicker-group";
     if ( numMonths[ 1 ] > 1 ) {
      switch ( col ) {
       case 0: calender += " ui-datepicker-group-first";
        cornerClass = " ui-corner-" + ( isRTL ? "right" : "left" ); break;
       case numMonths[ 1 ] - 1: calender += " ui-datepicker-group-last";
        cornerClass = " ui-corner-" + ( isRTL ? "left" : "right" ); break;
       default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;
      }
     }
     calender += "'>";
    }
    calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" +
     ( /all|left/.test( cornerClass ) && row === 0 ? ( isRTL ? next : prev ) : "" ) +
     ( /all|right/.test( cornerClass ) && row === 0 ? ( isRTL ? prev : next ) : "" ) +
     this._generateMonthYearHeader( inst, drawMonth, drawYear, minDate, maxDate,
     row > 0 || col > 0, monthNames, monthNamesShort ) + // draw month headers
     "</div><table class='ui-datepicker-calendar'><thead>" +
     "<tr>";
    thead = ( showWeek ? "<th class='ui-datepicker-week-col'>" + this._get( inst, "weekHeader" ) + "</th>" : "" );
    for ( dow = 0; dow < 7; dow++ ) { // days of the week
     day = ( dow + firstDay ) % 7;
     thead += "<th scope='col'" + ( ( dow + firstDay + 6 ) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "" ) + ">" +
      "<span title='" + dayNames[ day ] + "'>" + dayNamesMin[ day ] + "</span></th>";
    }
    calender += thead + "</tr></thead><tbody>";
    daysInMonth = this._getDaysInMonth( drawYear, drawMonth );
    if ( drawYear === inst.selectedYear && drawMonth === inst.selectedMonth ) {
     inst.selectedDay = Math.min( inst.selectedDay, daysInMonth );
    }
    leadDays = ( this._getFirstDayOfMonth( drawYear, drawMonth ) - firstDay + 7 ) % 7;
    curRows = Math.ceil( ( leadDays + daysInMonth ) / 7 ); // calculate the number of rows to generate
    numRows = ( isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows ); //If multiple months, use the higher number of rows (see #7043)
    this.maxRows = numRows;
    printDate = this._daylightSavingAdjust( new Date( drawYear, drawMonth, 1 - leadDays ) );
    for ( dRow = 0; dRow < numRows; dRow++ ) { // create date picker rows
     calender += "<tr>";
     tbody = ( !showWeek ? "" : "<td class='ui-datepicker-week-col'>" +
      this._get( inst, "calculateWeek" )( printDate ) + "</td>" );
     for ( dow = 0; dow < 7; dow++ ) { // create date picker days
      daySettings = ( beforeShowDay ?
       beforeShowDay.apply( ( inst.input ? inst.input[ 0 ] : null ), [ printDate ] ) : [ true, "" ] );
      otherMonth = ( printDate.getMonth() !== drawMonth );
      unselectable = ( otherMonth && !selectOtherMonths ) || !daySettings[ 0 ] ||
       ( minDate && printDate < minDate ) || ( maxDate && printDate > maxDate );
      tbody += "<td class='" +
       ( ( dow + firstDay + 6 ) % 7 >= 5 ? " ui-datepicker-week-end" : "" ) + // highlight weekends
       ( otherMonth ? " ui-datepicker-other-month" : "" ) + // highlight days from other months
       ( ( printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent ) || // user pressed key
       ( defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime() ) ?

       // or defaultDate is current printedDate and defaultDate is selectedDate
       " " + this._dayOverClass : "" ) + // highlight selected day
       ( unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "" ) +  // highlight unselectable days
       ( otherMonth && !showOtherMonths ? "" : " " + daySettings[ 1 ] + // highlight custom dates
       ( printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "" ) + // highlight selected day
       ( printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "" ) ) + "'" + // highlight today (if different)
       ( ( !otherMonth || showOtherMonths ) && daySettings[ 2 ] ? " title='" + daySettings[ 2 ].replace( /'/g, "&#39;" ) + "'" : "" ) + // cell title
       ( unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'" ) + ">" + // actions
       ( otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
       ( unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" +
       ( printDate.getTime() === today.getTime() ? " ui-state-highlight" : "" ) +
       ( printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "" ) + // highlight selected day
       ( otherMonth ? " ui-priority-secondary" : "" ) + // distinguish dates from other months
       "' href='#'>" + printDate.getDate() + "</a>" ) ) + "</td>"; // display selectable date
      printDate.setDate( printDate.getDate() + 1 );
      printDate = this._daylightSavingAdjust( printDate );
     }
     calender += tbody + "</tr>";
    }
    drawMonth++;
    if ( drawMonth > 11 ) {
     drawMonth = 0;
     drawYear++;
    }
    calender += "</tbody></table>" + ( isMultiMonth ? "</div>" +
       ( ( numMonths[ 0 ] > 0 && col === numMonths[ 1 ] - 1 ) ? "<div class='ui-datepicker-row-break'></div>" : "" ) : "" );
    group += calender;
   }
   html += group;
  }
  html += buttonPanel;
  inst._keyEvent = false;
  return html;
 },

 /* Generate the month and year header. */
 _generateMonthYearHeader: function( inst, drawMonth, drawYear, minDate, maxDate,
   secondary, monthNames, monthNamesShort ) {

  var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,
   changeMonth = this._get( inst, "changeMonth" ),
   changeYear = this._get( inst, "changeYear" ),
   showMonthAfterYear = this._get( inst, "showMonthAfterYear" ),
   html = "<div class='ui-datepicker-title'>",
   monthHtml = "";

  // Month selection
  if ( secondary || !changeMonth ) {
   monthHtml += "<span class='ui-datepicker-month'>" + monthNames[ drawMonth ] + "</span>";
  } else {
   inMinYear = ( minDate && minDate.getFullYear() === drawYear );
   inMaxYear = ( maxDate && maxDate.getFullYear() === drawYear );
   monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
   for ( month = 0; month < 12; month++ ) {
    if ( ( !inMinYear || month >= minDate.getMonth() ) && ( !inMaxYear || month <= maxDate.getMonth() ) ) {
     monthHtml += "<option value='" + month + "'" +
      ( month === drawMonth ? " selected='selected'" : "" ) +
      ">" + monthNamesShort[ month ] + "</option>";
    }
   }
   monthHtml += "</select>";
  }

  if ( !showMonthAfterYear ) {
   html += monthHtml + ( secondary || !( changeMonth && changeYear ) ? "&#xa0;" : "" );
  }

  // Year selection
  if ( !inst.yearshtml ) {
   inst.yearshtml = "";
   if ( secondary || !changeYear ) {
    html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
   } else {

    // determine range of years to display
    years = this._get( inst, "yearRange" ).split( ":" );
    thisYear = new Date().getFullYear();
    determineYear = function( value ) {
     var year = ( value.match( /c[+\-].*/ ) ? drawYear + parseInt( value.substring( 1 ), 10 ) :
      ( value.match( /[+\-].*/ ) ? thisYear + parseInt( value, 10 ) :
      parseInt( value, 10 ) ) );
     return ( isNaN( year ) ? thisYear : year );
    };
    year = determineYear( years[ 0 ] );
    endYear = Math.max( year, determineYear( years[ 1 ] || "" ) );
    year = ( minDate ? Math.max( year, minDate.getFullYear() ) : year );
    endYear = ( maxDate ? Math.min( endYear, maxDate.getFullYear() ) : endYear );
    inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
    for ( ; year <= endYear; year++ ) {
     inst.yearshtml += "<option value='" + year + "'" +
      ( year === drawYear ? " selected='selected'" : "" ) +
      ">" + year + "</option>";
    }
    inst.yearshtml += "</select>";

    html += inst.yearshtml;
    inst.yearshtml = null;
   }
  }

  html += this._get( inst, "yearSuffix" );
  if ( showMonthAfterYear ) {
   html += ( secondary || !( changeMonth && changeYear ) ? "&#xa0;" : "" ) + monthHtml;
  }
  html += "</div>"; // Close datepicker_header
  return html;
 },

 /* Adjust one of the date sub-fields. */
 _adjustInstDate: function( inst, offset, period ) {
  var year = inst.selectedYear + ( period === "Y" ? offset : 0 ),
   month = inst.selectedMonth + ( period === "M" ? offset : 0 ),
   day = Math.min( inst.selectedDay, this._getDaysInMonth( year, month ) ) + ( period === "D" ? offset : 0 ),
   date = this._restrictMinMax( inst, this._daylightSavingAdjust( new Date( year, month, day ) ) );

  inst.selectedDay = date.getDate();
  inst.drawMonth = inst.selectedMonth = date.getMonth();
  inst.drawYear = inst.selectedYear = date.getFullYear();
  if ( period === "M" || period === "Y" ) {
   this._notifyChange( inst );
  }
 },

 /* Ensure a date is within any min/max bounds. */
 _restrictMinMax: function( inst, date ) {
  var minDate = this._getMinMaxDate( inst, "min" ),
   maxDate = this._getMinMaxDate( inst, "max" ),
   newDate = ( minDate && date < minDate ? minDate : date );
  return ( maxDate && newDate > maxDate ? maxDate : newDate );
 },

 /* Notify change of month/year. */
 _notifyChange: function( inst ) {
  var onChange = this._get( inst, "onChangeMonthYear" );
  if ( onChange ) {
   onChange.apply( ( inst.input ? inst.input[ 0 ] : null ),
    [ inst.selectedYear, inst.selectedMonth + 1, inst ] );
  }
 },

 /* Determine the number of months to show. */
 _getNumberOfMonths: function( inst ) {
  var numMonths = this._get( inst, "numberOfMonths" );
  return ( numMonths == null ? [ 1, 1 ] : ( typeof numMonths === "number" ? [ 1, numMonths ] : numMonths ) );
 },

 /* Determine the current maximum date - ensure no time components are set. */
 _getMinMaxDate: function( inst, minMax ) {
  return this._determineDate( inst, this._get( inst, minMax + "Date" ), null );
 },

 /* Find the number of days in a given month. */
 _getDaysInMonth: function( year, month ) {
  return 32 - this._daylightSavingAdjust( new Date( year, month, 32 ) ).getDate();
 },

 /* Find the day of the week of the first of a month. */
 _getFirstDayOfMonth: function( year, month ) {
  return new Date( year, month, 1 ).getDay();
 },

 /* Determines if we should allow a "next/prev" month display change. */
 _canAdjustMonth: function( inst, offset, curYear, curMonth ) {
  var numMonths = this._getNumberOfMonths( inst ),
   date = this._daylightSavingAdjust( new Date( curYear,
   curMonth + ( offset < 0 ? offset : numMonths[ 0 ] * numMonths[ 1 ] ), 1 ) );

  if ( offset < 0 ) {
   date.setDate( this._getDaysInMonth( date.getFullYear(), date.getMonth() ) );
  }
  return this._isInRange( inst, date );
 },

 /* Is the given date in the accepted range? */
 _isInRange: function( inst, date ) {
  var yearSplit, currentYear,
   minDate = this._getMinMaxDate( inst, "min" ),
   maxDate = this._getMinMaxDate( inst, "max" ),
   minYear = null,
   maxYear = null,
   years = this._get( inst, "yearRange" );
   if ( years ) {
    yearSplit = years.split( ":" );
    currentYear = new Date().getFullYear();
    minYear = parseInt( yearSplit[ 0 ], 10 );
    maxYear = parseInt( yearSplit[ 1 ], 10 );
    if ( yearSplit[ 0 ].match( /[+\-].*/ ) ) {
     minYear += currentYear;
    }
    if ( yearSplit[ 1 ].match( /[+\-].*/ ) ) {
     maxYear += currentYear;
    }
   }

  return ( ( !minDate || date.getTime() >= minDate.getTime() ) &&
   ( !maxDate || date.getTime() <= maxDate.getTime() ) &&
   ( !minYear || date.getFullYear() >= minYear ) &&
   ( !maxYear || date.getFullYear() <= maxYear ) );
 },

 /* Provide the configuration settings for formatting/parsing. */
 _getFormatConfig: function( inst ) {
  var shortYearCutoff = this._get( inst, "shortYearCutoff" );
  shortYearCutoff = ( typeof shortYearCutoff !== "string" ? shortYearCutoff :
   new Date().getFullYear() % 100 + parseInt( shortYearCutoff, 10 ) );
  return { shortYearCutoff: shortYearCutoff,
   dayNamesShort: this._get( inst, "dayNamesShort" ), dayNames: this._get( inst, "dayNames" ),
   monthNamesShort: this._get( inst, "monthNamesShort" ), monthNames: this._get( inst, "monthNames" ) };
 },

 /* Format the given date for display. */
 _formatDate: function( inst, day, month, year ) {
  if ( !day ) {
   inst.currentDay = inst.selectedDay;
   inst.currentMonth = inst.selectedMonth;
   inst.currentYear = inst.selectedYear;
  }
  var date = ( day ? ( typeof day === "object" ? day :
   this._daylightSavingAdjust( new Date( year, month, day ) ) ) :
   this._daylightSavingAdjust( new Date( inst.currentYear, inst.currentMonth, inst.currentDay ) ) );
  return this.formatDate( this._get( inst, "dateFormat" ), date, this._getFormatConfig( inst ) );
 }
} );

/*
 * Bind hover events for datepicker elements.
 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
 * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
 */
function datepicker_bindHover( dpDiv ) {
 var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
 return dpDiv.on( "mouseout", selector, function() {
   $( this ).removeClass( "ui-state-hover" );
   if ( this.className.indexOf( "ui-datepicker-prev" ) !== -1 ) {
    $( this ).removeClass( "ui-datepicker-prev-hover" );
   }
   if ( this.className.indexOf( "ui-datepicker-next" ) !== -1 ) {
    $( this ).removeClass( "ui-datepicker-next-hover" );
   }
  } )
  .on( "mouseover", selector, datepicker_handleMouseover );
}

function datepicker_handleMouseover() {
 if ( !$.datepicker._isDisabledDatepicker( datepicker_instActive.inline ? datepicker_instActive.dpDiv.parent()[ 0 ] : datepicker_instActive.input[ 0 ] ) ) {
  $( this ).parents( ".ui-datepicker-calendar" ).find( "a" ).removeClass( "ui-state-hover" );
  $( this ).addClass( "ui-state-hover" );
  if ( this.className.indexOf( "ui-datepicker-prev" ) !== -1 ) {
   $( this ).addClass( "ui-datepicker-prev-hover" );
  }
  if ( this.className.indexOf( "ui-datepicker-next" ) !== -1 ) {
   $( this ).addClass( "ui-datepicker-next-hover" );
  }
 }
}

/* jQuery extend now ignores nulls! */
function datepicker_extendRemove( target, props ) {
 $.extend( target, props );
 for ( var name in props ) {
  if ( props[ name ] == null ) {
   target[ name ] = props[ name ];
  }
 }
 return target;
}

/* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
     Object - settings for attaching new datepicker functionality
   @return  jQuery object */
$.fn.datepicker = function( options ) {

 /* Verify an empty collection wasn't passed - Fixes #6976 */
 if ( !this.length ) {
  return this;
 }

 /* Initialise the date picker. */
 if ( !$.datepicker.initialized ) {
  $( document ).on( "mousedown", $.datepicker._checkExternalClick );
  $.datepicker.initialized = true;
 }

 /* Append datepicker main container to body if not exist. */
 if ( $( "#" + $.datepicker._mainDivId ).length === 0 ) {
  $( "body" ).append( $.datepicker.dpDiv );
 }

 var otherArgs = Array.prototype.slice.call( arguments, 1 );
 if ( typeof options === "string" && ( options === "isDisabled" || options === "getDate" || options === "widget" ) ) {
  return $.datepicker[ "_" + options + "Datepicker" ].
   apply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );
 }
 if ( options === "option" && arguments.length === 2 && typeof arguments[ 1 ] === "string" ) {
  return $.datepicker[ "_" + options + "Datepicker" ].
   apply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );
 }
 return this.each( function() {
  typeof options === "string" ?
   $.datepicker[ "_" + options + "Datepicker" ].
    apply( $.datepicker, [ this ].concat( otherArgs ) ) :
   $.datepicker._attachDatepicker( this, options );
 } );
};

$.datepicker = new Datepicker(); // singleton instance
$.datepicker.initialized = false;
$.datepicker.uuid = new Date().getTime();
$.datepicker.version = "1.12.1";

var widgetsDatepicker = $.datepicker;




// This file is deprecated
var ie = $.ui.ie = !!/msie [\w.]+/.exec( navigator.userAgent.toLowerCase() );

/*!
 * jQuery UI Mouse 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Mouse
//>>group: Widgets
//>>description: Abstracts mouse-based interactions to assist in creating certain widgets.
//>>docs: http://api.jqueryui.com/mouse/



var mouseHandled = false;
$( document ).on( "mouseup", function() {
 mouseHandled = false;
} );

var widgetsMouse = $.widget( "ui.mouse", {
 version: "1.12.1",
 options: {
  cancel: "input, textarea, button, select, option",
  distance: 1,
  delay: 0
 },
 _mouseInit: function() {
  var that = this;

  this.element
   .on( "mousedown." + this.widgetName, function( event ) {
    return that._mouseDown( event );
   } )
   .on( "click." + this.widgetName, function( event ) {
    if ( true === $.data( event.target, that.widgetName + ".preventClickEvent" ) ) {
     $.removeData( event.target, that.widgetName + ".preventClickEvent" );
     event.stopImmediatePropagation();
     return false;
    }
   } );

  this.started = false;
 },

 // TODO: make sure destroying one instance of mouse doesn't mess with
 // other instances of mouse
 _mouseDestroy: function() {
  this.element.off( "." + this.widgetName );
  if ( this._mouseMoveDelegate ) {
   this.document
    .off( "mousemove." + this.widgetName, this._mouseMoveDelegate )
    .off( "mouseup." + this.widgetName, this._mouseUpDelegate );
  }
 },

 _mouseDown: function( event ) {

  // don't let more than one widget handle mouseStart
  if ( mouseHandled ) {
   return;
  }

  this._mouseMoved = false;

  // We may have missed mouseup (out of window)
  ( this._mouseStarted && this._mouseUp( event ) );

  this._mouseDownEvent = event;

  var that = this,
   btnIsLeft = ( event.which === 1 ),

   // event.target.nodeName works around a bug in IE 8 with
   // disabled inputs (#7620)
   elIsCancel = ( typeof this.options.cancel === "string" && event.target.nodeName ?
    $( event.target ).closest( this.options.cancel ).length : false );
  if ( !btnIsLeft || elIsCancel || !this._mouseCapture( event ) ) {
   return true;
  }

  this.mouseDelayMet = !this.options.delay;
  if ( !this.mouseDelayMet ) {
   this._mouseDelayTimer = setTimeout( function() {
    that.mouseDelayMet = true;
   }, this.options.delay );
  }

  if ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {
   this._mouseStarted = ( this._mouseStart( event ) !== false );
   if ( !this._mouseStarted ) {
    event.preventDefault();
    return true;
   }
  }

  // Click event may never have fired (Gecko & Opera)
  if ( true === $.data( event.target, this.widgetName + ".preventClickEvent" ) ) {
   $.removeData( event.target, this.widgetName + ".preventClickEvent" );
  }

  // These delegates are required to keep context
  this._mouseMoveDelegate = function( event ) {
   return that._mouseMove( event );
  };
  this._mouseUpDelegate = function( event ) {
   return that._mouseUp( event );
  };

  this.document
   .on( "mousemove." + this.widgetName, this._mouseMoveDelegate )
   .on( "mouseup." + this.widgetName, this._mouseUpDelegate );

  event.preventDefault();

  mouseHandled = true;
  return true;
 },

 _mouseMove: function( event ) {

  // Only check for mouseups outside the document if you've moved inside the document
  // at least once. This prevents the firing of mouseup in the case of IE<9, which will
  // fire a mousemove event if content is placed under the cursor. See #7778
  // Support: IE <9
  if ( this._mouseMoved ) {

   // IE mouseup check - mouseup happened when mouse was out of window
   if ( $.ui.ie && ( !document.documentMode || document.documentMode < 9 ) &&
     !event.button ) {
    return this._mouseUp( event );

   // Iframe mouseup check - mouseup occurred in another document
   } else if ( !event.which ) {

    // Support: Safari <=8 - 9
    // Safari sets which to 0 if you press any of the following keys
    // during a drag (#14461)
    if ( event.originalEvent.altKey || event.originalEvent.ctrlKey ||
      event.originalEvent.metaKey || event.originalEvent.shiftKey ) {
     this.ignoreMissingWhich = true;
    } else if ( !this.ignoreMissingWhich ) {
     return this._mouseUp( event );
    }
   }
  }

  if ( event.which || event.button ) {
   this._mouseMoved = true;
  }

  if ( this._mouseStarted ) {
   this._mouseDrag( event );
   return event.preventDefault();
  }

  if ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {
   this._mouseStarted =
    ( this._mouseStart( this._mouseDownEvent, event ) !== false );
   ( this._mouseStarted ? this._mouseDrag( event ) : this._mouseUp( event ) );
  }

  return !this._mouseStarted;
 },

 _mouseUp: function( event ) {
  this.document
   .off( "mousemove." + this.widgetName, this._mouseMoveDelegate )
   .off( "mouseup." + this.widgetName, this._mouseUpDelegate );

  if ( this._mouseStarted ) {
   this._mouseStarted = false;

   if ( event.target === this._mouseDownEvent.target ) {
    $.data( event.target, this.widgetName + ".preventClickEvent", true );
   }

   this._mouseStop( event );
  }

  if ( this._mouseDelayTimer ) {
   clearTimeout( this._mouseDelayTimer );
   delete this._mouseDelayTimer;
  }

  this.ignoreMissingWhich = false;
  mouseHandled = false;
  event.preventDefault();
 },

 _mouseDistanceMet: function( event ) {
  return ( Math.max(
    Math.abs( this._mouseDownEvent.pageX - event.pageX ),
    Math.abs( this._mouseDownEvent.pageY - event.pageY )
   ) >= this.options.distance
  );
 },

 _mouseDelayMet: function( /* event */ ) {
  return this.mouseDelayMet;
 },

 // These are placeholder methods, to be overriden by extending plugin
 _mouseStart: function( /* event */ ) {},
 _mouseDrag: function( /* event */ ) {},
 _mouseStop: function( /* event */ ) {},
 _mouseCapture: function( /* event */ ) { return true; }
} );




// $.ui.plugin is deprecated. Use $.widget() extensions instead.
var plugin = $.ui.plugin = {
 add: function( module, option, set ) {
  var i,
   proto = $.ui[ module ].prototype;
  for ( i in set ) {
   proto.plugins[ i ] = proto.plugins[ i ] || [];
   proto.plugins[ i ].push( [ option, set[ i ] ] );
  }
 },
 call: function( instance, name, args, allowDisconnected ) {
  var i,
   set = instance.plugins[ name ];

  if ( !set ) {
   return;
  }

  if ( !allowDisconnected && ( !instance.element[ 0 ].parentNode ||
    instance.element[ 0 ].parentNode.nodeType === 11 ) ) {
   return;
  }

  for ( i = 0; i < set.length; i++ ) {
   if ( instance.options[ set[ i ][ 0 ] ] ) {
    set[ i ][ 1 ].apply( instance.element, args );
   }
  }
 }
};



var safeBlur = $.ui.safeBlur = function( element ) {

 // Support: IE9 - 10 only
 // If the <body> is blurred, IE will switch windows, see #9420
 if ( element && element.nodeName.toLowerCase() !== "body" ) {
  $( element ).trigger( "blur" );
 }
};


/*!
 * jQuery UI Draggable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Draggable
//>>group: Interactions
//>>description: Enables dragging functionality for any element.
//>>docs: http://api.jqueryui.com/draggable/
//>>demos: http://jqueryui.com/draggable/
//>>css.structure: ../../themes/base/draggable.css



$.widget( "ui.draggable", $.ui.mouse, {
 version: "1.12.1",
 widgetEventPrefix: "drag",
 options: {
  addClasses: true,
  appendTo: "parent",
  axis: false,
  connectToSortable: false,
  containment: false,
  cursor: "auto",
  cursorAt: false,
  grid: false,
  handle: false,
  helper: "original",
  iframeFix: false,
  opacity: false,
  refreshPositions: false,
  revert: false,
  revertDuration: 500,
  scope: "default",
  scroll: true,
  scrollSensitivity: 20,
  scrollSpeed: 20,
  snap: false,
  snapMode: "both",
  snapTolerance: 20,
  stack: false,
  zIndex: false,

  // Callbacks
  drag: null,
  start: null,
  stop: null
 },
 _create: function() {

  if ( this.options.helper === "original" ) {
   this._setPositionRelative();
  }
  if ( this.options.addClasses ) {
   this._addClass( "ui-draggable" );
  }
  this._setHandleClassName();

  this._mouseInit();
 },

 _setOption: function( key, value ) {
  this._super( key, value );
  if ( key === "handle" ) {
   this._removeHandleClassName();
   this._setHandleClassName();
  }
 },

 _destroy: function() {
  if ( ( this.helper || this.element ).is( ".ui-draggable-dragging" ) ) {
   this.destroyOnClear = true;
   return;
  }
  this._removeHandleClassName();
  this._mouseDestroy();
 },

 _mouseCapture: function( event ) {
  var o = this.options;

  // Among others, prevent a drag on a resizable-handle
  if ( this.helper || o.disabled ||
    $( event.target ).closest( ".ui-resizable-handle" ).length > 0 ) {
   return false;
  }

  //Quit if we're not on a valid handle
  this.handle = this._getHandle( event );
  if ( !this.handle ) {
   return false;
  }

  this._blurActiveElement( event );

  this._blockFrames( o.iframeFix === true ? "iframe" : o.iframeFix );

  return true;

 },

 _blockFrames: function( selector ) {
  this.iframeBlocks = this.document.find( selector ).map( function() {
   var iframe = $( this );

   return $( "<div>" )
    .css( "position", "absolute" )
    .appendTo( iframe.parent() )
    .outerWidth( iframe.outerWidth() )
    .outerHeight( iframe.outerHeight() )
    .offset( iframe.offset() )[ 0 ];
  } );
 },

 _unblockFrames: function() {
  if ( this.iframeBlocks ) {
   this.iframeBlocks.remove();
   delete this.iframeBlocks;
  }
 },

 _blurActiveElement: function( event ) {
  var activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),
   target = $( event.target );

  // Don't blur if the event occurred on an element that is within
  // the currently focused element
  // See #10527, #12472
  if ( target.closest( activeElement ).length ) {
   return;
  }

  // Blur any element that currently has focus, see #4261
  $.ui.safeBlur( activeElement );
 },

 _mouseStart: function( event ) {

  var o = this.options;

  //Create and append the visible helper
  this.helper = this._createHelper( event );

  this._addClass( this.helper, "ui-draggable-dragging" );

  //Cache the helper size
  this._cacheHelperProportions();

  //If ddmanager is used for droppables, set the global draggable
  if ( $.ui.ddmanager ) {
   $.ui.ddmanager.current = this;
  }

  /*
   * - Position generation -
   * This block generates everything position related - it's the core of draggables.
   */

  //Cache the margins of the original element
  this._cacheMargins();

  //Store the helper's css position
  this.cssPosition = this.helper.css( "position" );
  this.scrollParent = this.helper.scrollParent( true );
  this.offsetParent = this.helper.offsetParent();
  this.hasFixedAncestor = this.helper.parents().filter( function() {
    return $( this ).css( "position" ) === "fixed";
   } ).length > 0;

  //The element's absolute position on the page minus margins
  this.positionAbs = this.element.offset();
  this._refreshOffsets( event );

  //Generate the original position
  this.originalPosition = this.position = this._generatePosition( event, false );
  this.originalPageX = event.pageX;
  this.originalPageY = event.pageY;

  //Adjust the mouse offset relative to the helper if "cursorAt" is supplied
  ( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );

  //Set a containment if given in the options
  this._setContainment();

  //Trigger event + callbacks
  if ( this._trigger( "start", event ) === false ) {
   this._clear();
   return false;
  }

  //Recache the helper size
  this._cacheHelperProportions();

  //Prepare the droppable offsets
  if ( $.ui.ddmanager && !o.dropBehaviour ) {
   $.ui.ddmanager.prepareOffsets( this, event );
  }

  // Execute the drag once - this causes the helper not to be visible before getting its
  // correct position
  this._mouseDrag( event, true );

  // If the ddmanager is used for droppables, inform the manager that dragging has started
  // (see #5003)
  if ( $.ui.ddmanager ) {
   $.ui.ddmanager.dragStart( this, event );
  }

  return true;
 },

 _refreshOffsets: function( event ) {
  this.offset = {
   top: this.positionAbs.top - this.margins.top,
   left: this.positionAbs.left - this.margins.left,
   scroll: false,
   parent: this._getParentOffset(),
   relative: this._getRelativeOffset()
  };

  this.offset.click = {
   left: event.pageX - this.offset.left,
   top: event.pageY - this.offset.top
  };
 },

 _mouseDrag: function( event, noPropagation ) {

  // reset any necessary cached properties (see #5009)
  if ( this.hasFixedAncestor ) {
   this.offset.parent = this._getParentOffset();
  }

  //Compute the helpers position
  this.position = this._generatePosition( event, true );
  this.positionAbs = this._convertPositionTo( "absolute" );

  //Call plugins and callbacks and use the resulting position if something is returned
  if ( !noPropagation ) {
   var ui = this._uiHash();
   if ( this._trigger( "drag", event, ui ) === false ) {
    this._mouseUp( new $.Event( "mouseup", event ) );
    return false;
   }
   this.position = ui.position;
  }

  this.helper[ 0 ].style.left = this.position.left + "px";
  this.helper[ 0 ].style.top = this.position.top + "px";

  if ( $.ui.ddmanager ) {
   $.ui.ddmanager.drag( this, event );
  }

  return false;
 },

 _mouseStop: function( event ) {

  //If we are using droppables, inform the manager about the drop
  var that = this,
   dropped = false;
  if ( $.ui.ddmanager && !this.options.dropBehaviour ) {
   dropped = $.ui.ddmanager.drop( this, event );
  }

  //if a drop comes from outside (a sortable)
  if ( this.dropped ) {
   dropped = this.dropped;
   this.dropped = false;
  }

  if ( ( this.options.revert === "invalid" && !dropped ) ||
    ( this.options.revert === "valid" && dropped ) ||
    this.options.revert === true || ( $.isFunction( this.options.revert ) &&
    this.options.revert.call( this.element, dropped ) )
  ) {
   $( this.helper ).animate(
    this.originalPosition,
    parseInt( this.options.revertDuration, 10 ),
    function() {
     if ( that._trigger( "stop", event ) !== false ) {
      that._clear();
     }
    }
   );
  } else {
   if ( this._trigger( "stop", event ) !== false ) {
    this._clear();
   }
  }

  return false;
 },

 _mouseUp: function( event ) {
  this._unblockFrames();

  // If the ddmanager is used for droppables, inform the manager that dragging has stopped
  // (see #5003)
  if ( $.ui.ddmanager ) {
   $.ui.ddmanager.dragStop( this, event );
  }

  // Only need to focus if the event occurred on the draggable itself, see #10527
  if ( this.handleElement.is( event.target ) ) {

   // The interaction is over; whether or not the click resulted in a drag,
   // focus the element
   this.element.trigger( "focus" );
  }

  return $.ui.mouse.prototype._mouseUp.call( this, event );
 },

 cancel: function() {

  if ( this.helper.is( ".ui-draggable-dragging" ) ) {
   this._mouseUp( new $.Event( "mouseup", { target: this.element[ 0 ] } ) );
  } else {
   this._clear();
  }

  return this;

 },

 _getHandle: function( event ) {
  return this.options.handle ?
   !!$( event.target ).closest( this.element.find( this.options.handle ) ).length :
   true;
 },

 _setHandleClassName: function() {
  this.handleElement = this.options.handle ?
   this.element.find( this.options.handle ) : this.element;
  this._addClass( this.handleElement, "ui-draggable-handle" );
 },

 _removeHandleClassName: function() {
  this._removeClass( this.handleElement, "ui-draggable-handle" );
 },

 _createHelper: function( event ) {

  var o = this.options,
   helperIsFunction = $.isFunction( o.helper ),
   helper = helperIsFunction ?
    $( o.helper.apply( this.element[ 0 ], [ event ] ) ) :
    ( o.helper === "clone" ?
     this.element.clone().removeAttr( "id" ) :
     this.element );

  if ( !helper.parents( "body" ).length ) {
   helper.appendTo( ( o.appendTo === "parent" ?
    this.element[ 0 ].parentNode :
    o.appendTo ) );
  }

  // Http://bugs.jqueryui.com/ticket/9446
  // a helper function can return the original element
  // which wouldn't have been set to relative in _create
  if ( helperIsFunction && helper[ 0 ] === this.element[ 0 ] ) {
   this._setPositionRelative();
  }

  if ( helper[ 0 ] !== this.element[ 0 ] &&
    !( /(fixed|absolute)/ ).test( helper.css( "position" ) ) ) {
   helper.css( "position", "absolute" );
  }

  return helper;

 },

 _setPositionRelative: function() {
  if ( !( /^(?:r|a|f)/ ).test( this.element.css( "position" ) ) ) {
   this.element[ 0 ].style.position = "relative";
  }
 },

 _adjustOffsetFromHelper: function( obj ) {
  if ( typeof obj === "string" ) {
   obj = obj.split( " " );
  }
  if ( $.isArray( obj ) ) {
   obj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };
  }
  if ( "left" in obj ) {
   this.offset.click.left = obj.left + this.margins.left;
  }
  if ( "right" in obj ) {
   this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
  }
  if ( "top" in obj ) {
   this.offset.click.top = obj.top + this.margins.top;
  }
  if ( "bottom" in obj ) {
   this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
  }
 },

 _isRootNode: function( element ) {
  return ( /(html|body)/i ).test( element.tagName ) || element === this.document[ 0 ];
 },

 _getParentOffset: function() {

  //Get the offsetParent and cache its position
  var po = this.offsetParent.offset(),
   document = this.document[ 0 ];

  // This is a special case where we need to modify a offset calculated on start, since the
  // following happened:
  // 1. The position of the helper is absolute, so it's position is calculated based on the
  // next positioned parent
  // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
  // the document, which means that the scroll is included in the initial calculation of the
  // offset of the parent, and never recalculated upon drag
  if ( this.cssPosition === "absolute" && this.scrollParent[ 0 ] !== document &&
    $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) {
   po.left += this.scrollParent.scrollLeft();
   po.top += this.scrollParent.scrollTop();
  }

  if ( this._isRootNode( this.offsetParent[ 0 ] ) ) {
   po = { top: 0, left: 0 };
  }

  return {
   top: po.top + ( parseInt( this.offsetParent.css( "borderTopWidth" ), 10 ) || 0 ),
   left: po.left + ( parseInt( this.offsetParent.css( "borderLeftWidth" ), 10 ) || 0 )
  };

 },

 _getRelativeOffset: function() {
  if ( this.cssPosition !== "relative" ) {
   return { top: 0, left: 0 };
  }

  var p = this.element.position(),
   scrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );

  return {
   top: p.top - ( parseInt( this.helper.css( "top" ), 10 ) || 0 ) +
    ( !scrollIsRootNode ? this.scrollParent.scrollTop() : 0 ),
   left: p.left - ( parseInt( this.helper.css( "left" ), 10 ) || 0 ) +
    ( !scrollIsRootNode ? this.scrollParent.scrollLeft() : 0 )
  };

 },

 _cacheMargins: function() {
  this.margins = {
   left: ( parseInt( this.element.css( "marginLeft" ), 10 ) || 0 ),
   top: ( parseInt( this.element.css( "marginTop" ), 10 ) || 0 ),
   right: ( parseInt( this.element.css( "marginRight" ), 10 ) || 0 ),
   bottom: ( parseInt( this.element.css( "marginBottom" ), 10 ) || 0 )
  };
 },

 _cacheHelperProportions: function() {
  this.helperProportions = {
   width: this.helper.outerWidth(),
   height: this.helper.outerHeight()
  };
 },

 _setContainment: function() {

  var isUserScrollable, c, ce,
   o = this.options,
   document = this.document[ 0 ];

  this.relativeContainer = null;

  if ( !o.containment ) {
   this.containment = null;
   return;
  }

  if ( o.containment === "window" ) {
   this.containment = [
    $( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
    $( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,
    $( window ).scrollLeft() + $( window ).width() -
     this.helperProportions.width - this.margins.left,
    $( window ).scrollTop() +
     ( $( window ).height() || document.body.parentNode.scrollHeight ) -
     this.helperProportions.height - this.margins.top
   ];
   return;
  }

  if ( o.containment === "document" ) {
   this.containment = [
    0,
    0,
    $( document ).width() - this.helperProportions.width - this.margins.left,
    ( $( document ).height() || document.body.parentNode.scrollHeight ) -
     this.helperProportions.height - this.margins.top
   ];
   return;
  }

  if ( o.containment.constructor === Array ) {
   this.containment = o.containment;
   return;
  }

  if ( o.containment === "parent" ) {
   o.containment = this.helper[ 0 ].parentNode;
  }

  c = $( o.containment );
  ce = c[ 0 ];

  if ( !ce ) {
   return;
  }

  isUserScrollable = /(scroll|auto)/.test( c.css( "overflow" ) );

  this.containment = [
   ( parseInt( c.css( "borderLeftWidth" ), 10 ) || 0 ) +
    ( parseInt( c.css( "paddingLeft" ), 10 ) || 0 ),
   ( parseInt( c.css( "borderTopWidth" ), 10 ) || 0 ) +
    ( parseInt( c.css( "paddingTop" ), 10 ) || 0 ),
   ( isUserScrollable ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -
    ( parseInt( c.css( "borderRightWidth" ), 10 ) || 0 ) -
    ( parseInt( c.css( "paddingRight" ), 10 ) || 0 ) -
    this.helperProportions.width -
    this.margins.left -
    this.margins.right,
   ( isUserScrollable ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -
    ( parseInt( c.css( "borderBottomWidth" ), 10 ) || 0 ) -
    ( parseInt( c.css( "paddingBottom" ), 10 ) || 0 ) -
    this.helperProportions.height -
    this.margins.top -
    this.margins.bottom
  ];
  this.relativeContainer = c;
 },

 _convertPositionTo: function( d, pos ) {

  if ( !pos ) {
   pos = this.position;
  }

  var mod = d === "absolute" ? 1 : -1,
   scrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );

  return {
   top: (

    // The absolute mouse position
    pos.top +

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.top * mod +

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.top * mod -
    ( ( this.cssPosition === "fixed" ?
     -this.offset.scroll.top :
     ( scrollIsRootNode ? 0 : this.offset.scroll.top ) ) * mod )
   ),
   left: (

    // The absolute mouse position
    pos.left +

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.left * mod +

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.left * mod -
    ( ( this.cssPosition === "fixed" ?
     -this.offset.scroll.left :
     ( scrollIsRootNode ? 0 : this.offset.scroll.left ) ) * mod )
   )
  };

 },

 _generatePosition: function( event, constrainPosition ) {

  var containment, co, top, left,
   o = this.options,
   scrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] ),
   pageX = event.pageX,
   pageY = event.pageY;

  // Cache the scroll
  if ( !scrollIsRootNode || !this.offset.scroll ) {
   this.offset.scroll = {
    top: this.scrollParent.scrollTop(),
    left: this.scrollParent.scrollLeft()
   };
  }

  /*
   * - Position constraining -
   * Constrain the position to a mix of grid, containment.
   */

  // If we are not dragging yet, we won't check for options
  if ( constrainPosition ) {
   if ( this.containment ) {
    if ( this.relativeContainer ) {
     co = this.relativeContainer.offset();
     containment = [
      this.containment[ 0 ] + co.left,
      this.containment[ 1 ] + co.top,
      this.containment[ 2 ] + co.left,
      this.containment[ 3 ] + co.top
     ];
    } else {
     containment = this.containment;
    }

    if ( event.pageX - this.offset.click.left < containment[ 0 ] ) {
     pageX = containment[ 0 ] + this.offset.click.left;
    }
    if ( event.pageY - this.offset.click.top < containment[ 1 ] ) {
     pageY = containment[ 1 ] + this.offset.click.top;
    }
    if ( event.pageX - this.offset.click.left > containment[ 2 ] ) {
     pageX = containment[ 2 ] + this.offset.click.left;
    }
    if ( event.pageY - this.offset.click.top > containment[ 3 ] ) {
     pageY = containment[ 3 ] + this.offset.click.top;
    }
   }

   if ( o.grid ) {

    //Check for grid elements set to 0 to prevent divide by 0 error causing invalid
    // argument errors in IE (see ticket #6950)
    top = o.grid[ 1 ] ? this.originalPageY + Math.round( ( pageY -
     this.originalPageY ) / o.grid[ 1 ] ) * o.grid[ 1 ] : this.originalPageY;
    pageY = containment ? ( ( top - this.offset.click.top >= containment[ 1 ] ||
     top - this.offset.click.top > containment[ 3 ] ) ?
      top :
      ( ( top - this.offset.click.top >= containment[ 1 ] ) ?
       top - o.grid[ 1 ] : top + o.grid[ 1 ] ) ) : top;

    left = o.grid[ 0 ] ? this.originalPageX +
     Math.round( ( pageX - this.originalPageX ) / o.grid[ 0 ] ) * o.grid[ 0 ] :
     this.originalPageX;
    pageX = containment ? ( ( left - this.offset.click.left >= containment[ 0 ] ||
     left - this.offset.click.left > containment[ 2 ] ) ?
      left :
      ( ( left - this.offset.click.left >= containment[ 0 ] ) ?
       left - o.grid[ 0 ] : left + o.grid[ 0 ] ) ) : left;
   }

   if ( o.axis === "y" ) {
    pageX = this.originalPageX;
   }

   if ( o.axis === "x" ) {
    pageY = this.originalPageY;
   }
  }

  return {
   top: (

    // The absolute mouse position
    pageY -

    // Click offset (relative to the element)
    this.offset.click.top -

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.top -

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.top +
    ( this.cssPosition === "fixed" ?
     -this.offset.scroll.top :
     ( scrollIsRootNode ? 0 : this.offset.scroll.top ) )
   ),
   left: (

    // The absolute mouse position
    pageX -

    // Click offset (relative to the element)
    this.offset.click.left -

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.left -

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.left +
    ( this.cssPosition === "fixed" ?
     -this.offset.scroll.left :
     ( scrollIsRootNode ? 0 : this.offset.scroll.left ) )
   )
  };

 },

 _clear: function() {
  this._removeClass( this.helper, "ui-draggable-dragging" );
  if ( this.helper[ 0 ] !== this.element[ 0 ] && !this.cancelHelperRemoval ) {
   this.helper.remove();
  }
  this.helper = null;
  this.cancelHelperRemoval = false;
  if ( this.destroyOnClear ) {
   this.destroy();
  }
 },

 // From now on bulk stuff - mainly helpers

 _trigger: function( type, event, ui ) {
  ui = ui || this._uiHash();
  $.ui.plugin.call( this, type, [ event, ui, this ], true );

  // Absolute position and offset (see #6884 ) have to be recalculated after plugins
  if ( /^(drag|start|stop)/.test( type ) ) {
   this.positionAbs = this._convertPositionTo( "absolute" );
   ui.offset = this.positionAbs;
  }
  return $.Widget.prototype._trigger.call( this, type, event, ui );
 },

 plugins: {},

 _uiHash: function() {
  return {
   helper: this.helper,
   position: this.position,
   originalPosition: this.originalPosition,
   offset: this.positionAbs
  };
 }

} );

$.ui.plugin.add( "draggable", "connectToSortable", {
 start: function( event, ui, draggable ) {
  var uiSortable = $.extend( {}, ui, {
   item: draggable.element
  } );

  draggable.sortables = [];
  $( draggable.options.connectToSortable ).each( function() {
   var sortable = $( this ).sortable( "instance" );

   if ( sortable && !sortable.options.disabled ) {
    draggable.sortables.push( sortable );

    // RefreshPositions is called at drag start to refresh the containerCache
    // which is used in drag. This ensures it's initialized and synchronized
    // with any changes that might have happened on the page since initialization.
    sortable.refreshPositions();
    sortable._trigger( "activate", event, uiSortable );
   }
  } );
 },
 stop: function( event, ui, draggable ) {
  var uiSortable = $.extend( {}, ui, {
   item: draggable.element
  } );

  draggable.cancelHelperRemoval = false;

  $.each( draggable.sortables, function() {
   var sortable = this;

   if ( sortable.isOver ) {
    sortable.isOver = 0;

    // Allow this sortable to handle removing the helper
    draggable.cancelHelperRemoval = true;
    sortable.cancelHelperRemoval = false;

    // Use _storedCSS To restore properties in the sortable,
    // as this also handles revert (#9675) since the draggable
    // may have modified them in unexpected ways (#8809)
    sortable._storedCSS = {
     position: sortable.placeholder.css( "position" ),
     top: sortable.placeholder.css( "top" ),
     left: sortable.placeholder.css( "left" )
    };

    sortable._mouseStop( event );

    // Once drag has ended, the sortable should return to using
    // its original helper, not the shared helper from draggable
    sortable.options.helper = sortable.options._helper;
   } else {

    // Prevent this Sortable from removing the helper.
    // However, don't set the draggable to remove the helper
    // either as another connected Sortable may yet handle the removal.
    sortable.cancelHelperRemoval = true;

    sortable._trigger( "deactivate", event, uiSortable );
   }
  } );
 },
 drag: function( event, ui, draggable ) {
  $.each( draggable.sortables, function() {
   var innermostIntersecting = false,
    sortable = this;

   // Copy over variables that sortable's _intersectsWith uses
   sortable.positionAbs = draggable.positionAbs;
   sortable.helperProportions = draggable.helperProportions;
   sortable.offset.click = draggable.offset.click;

   if ( sortable._intersectsWith( sortable.containerCache ) ) {
    innermostIntersecting = true;

    $.each( draggable.sortables, function() {

     // Copy over variables that sortable's _intersectsWith uses
     this.positionAbs = draggable.positionAbs;
     this.helperProportions = draggable.helperProportions;
     this.offset.click = draggable.offset.click;

     if ( this !== sortable &&
       this._intersectsWith( this.containerCache ) &&
       $.contains( sortable.element[ 0 ], this.element[ 0 ] ) ) {
      innermostIntersecting = false;
     }

     return innermostIntersecting;
    } );
   }

   if ( innermostIntersecting ) {

    // If it intersects, we use a little isOver variable and set it once,
    // so that the move-in stuff gets fired only once.
    if ( !sortable.isOver ) {
     sortable.isOver = 1;

     // Store draggable's parent in case we need to reappend to it later.
     draggable._parent = ui.helper.parent();

     sortable.currentItem = ui.helper
      .appendTo( sortable.element )
      .data( "ui-sortable-item", true );

     // Store helper option to later restore it
     sortable.options._helper = sortable.options.helper;

     sortable.options.helper = function() {
      return ui.helper[ 0 ];
     };

     // Fire the start events of the sortable with our passed browser event,
     // and our own helper (so it doesn't create a new one)
     event.target = sortable.currentItem[ 0 ];
     sortable._mouseCapture( event, true );
     sortable._mouseStart( event, true, true );

     // Because the browser event is way off the new appended portlet,
     // modify necessary variables to reflect the changes
     sortable.offset.click.top = draggable.offset.click.top;
     sortable.offset.click.left = draggable.offset.click.left;
     sortable.offset.parent.left -= draggable.offset.parent.left -
      sortable.offset.parent.left;
     sortable.offset.parent.top -= draggable.offset.parent.top -
      sortable.offset.parent.top;

     draggable._trigger( "toSortable", event );

     // Inform draggable that the helper is in a valid drop zone,
     // used solely in the revert option to handle "valid/invalid".
     draggable.dropped = sortable.element;

     // Need to refreshPositions of all sortables in the case that
     // adding to one sortable changes the location of the other sortables (#9675)
     $.each( draggable.sortables, function() {
      this.refreshPositions();
     } );

     // Hack so receive/update callbacks work (mostly)
     draggable.currentItem = draggable.element;
     sortable.fromOutside = draggable;
    }

    if ( sortable.currentItem ) {
     sortable._mouseDrag( event );

     // Copy the sortable's position because the draggable's can potentially reflect
     // a relative position, while sortable is always absolute, which the dragged
     // element has now become. (#8809)
     ui.position = sortable.position;
    }
   } else {

    // If it doesn't intersect with the sortable, and it intersected before,
    // we fake the drag stop of the sortable, but make sure it doesn't remove
    // the helper by using cancelHelperRemoval.
    if ( sortable.isOver ) {

     sortable.isOver = 0;
     sortable.cancelHelperRemoval = true;

     // Calling sortable's mouseStop would trigger a revert,
     // so revert must be temporarily false until after mouseStop is called.
     sortable.options._revert = sortable.options.revert;
     sortable.options.revert = false;

     sortable._trigger( "out", event, sortable._uiHash( sortable ) );
     sortable._mouseStop( event, true );

     // Restore sortable behaviors that were modfied
     // when the draggable entered the sortable area (#9481)
     sortable.options.revert = sortable.options._revert;
     sortable.options.helper = sortable.options._helper;

     if ( sortable.placeholder ) {
      sortable.placeholder.remove();
     }

     // Restore and recalculate the draggable's offset considering the sortable
     // may have modified them in unexpected ways. (#8809, #10669)
     ui.helper.appendTo( draggable._parent );
     draggable._refreshOffsets( event );
     ui.position = draggable._generatePosition( event, true );

     draggable._trigger( "fromSortable", event );

     // Inform draggable that the helper is no longer in a valid drop zone
     draggable.dropped = false;

     // Need to refreshPositions of all sortables just in case removing
     // from one sortable changes the location of other sortables (#9675)
     $.each( draggable.sortables, function() {
      this.refreshPositions();
     } );
    }
   }
  } );
 }
} );

$.ui.plugin.add( "draggable", "cursor", {
 start: function( event, ui, instance ) {
  var t = $( "body" ),
   o = instance.options;

  if ( t.css( "cursor" ) ) {
   o._cursor = t.css( "cursor" );
  }
  t.css( "cursor", o.cursor );
 },
 stop: function( event, ui, instance ) {
  var o = instance.options;
  if ( o._cursor ) {
   $( "body" ).css( "cursor", o._cursor );
  }
 }
} );

$.ui.plugin.add( "draggable", "opacity", {
 start: function( event, ui, instance ) {
  var t = $( ui.helper ),
   o = instance.options;
  if ( t.css( "opacity" ) ) {
   o._opacity = t.css( "opacity" );
  }
  t.css( "opacity", o.opacity );
 },
 stop: function( event, ui, instance ) {
  var o = instance.options;
  if ( o._opacity ) {
   $( ui.helper ).css( "opacity", o._opacity );
  }
 }
} );

$.ui.plugin.add( "draggable", "scroll", {
 start: function( event, ui, i ) {
  if ( !i.scrollParentNotHidden ) {
   i.scrollParentNotHidden = i.helper.scrollParent( false );
  }

  if ( i.scrollParentNotHidden[ 0 ] !== i.document[ 0 ] &&
    i.scrollParentNotHidden[ 0 ].tagName !== "HTML" ) {
   i.overflowOffset = i.scrollParentNotHidden.offset();
  }
 },
 drag: function( event, ui, i  ) {

  var o = i.options,
   scrolled = false,
   scrollParent = i.scrollParentNotHidden[ 0 ],
   document = i.document[ 0 ];

  if ( scrollParent !== document && scrollParent.tagName !== "HTML" ) {
   if ( !o.axis || o.axis !== "x" ) {
    if ( ( i.overflowOffset.top + scrollParent.offsetHeight ) - event.pageY <
      o.scrollSensitivity ) {
     scrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;
    } else if ( event.pageY - i.overflowOffset.top < o.scrollSensitivity ) {
     scrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;
    }
   }

   if ( !o.axis || o.axis !== "y" ) {
    if ( ( i.overflowOffset.left + scrollParent.offsetWidth ) - event.pageX <
      o.scrollSensitivity ) {
     scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;
    } else if ( event.pageX - i.overflowOffset.left < o.scrollSensitivity ) {
     scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;
    }
   }

  } else {

   if ( !o.axis || o.axis !== "x" ) {
    if ( event.pageY - $( document ).scrollTop() < o.scrollSensitivity ) {
     scrolled = $( document ).scrollTop( $( document ).scrollTop() - o.scrollSpeed );
    } else if ( $( window ).height() - ( event.pageY - $( document ).scrollTop() ) <
      o.scrollSensitivity ) {
     scrolled = $( document ).scrollTop( $( document ).scrollTop() + o.scrollSpeed );
    }
   }

   if ( !o.axis || o.axis !== "y" ) {
    if ( event.pageX - $( document ).scrollLeft() < o.scrollSensitivity ) {
     scrolled = $( document ).scrollLeft(
      $( document ).scrollLeft() - o.scrollSpeed
     );
    } else if ( $( window ).width() - ( event.pageX - $( document ).scrollLeft() ) <
      o.scrollSensitivity ) {
     scrolled = $( document ).scrollLeft(
      $( document ).scrollLeft() + o.scrollSpeed
     );
    }
   }

  }

  if ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {
   $.ui.ddmanager.prepareOffsets( i, event );
  }

 }
} );

$.ui.plugin.add( "draggable", "snap", {
 start: function( event, ui, i ) {

  var o = i.options;

  i.snapElements = [];

  $( o.snap.constructor !== String ? ( o.snap.items || ":data(ui-draggable)" ) : o.snap )
   .each( function() {
    var $t = $( this ),
     $o = $t.offset();
    if ( this !== i.element[ 0 ] ) {
     i.snapElements.push( {
      item: this,
      width: $t.outerWidth(), height: $t.outerHeight(),
      top: $o.top, left: $o.left
     } );
    }
   } );

 },
 drag: function( event, ui, inst ) {

  var ts, bs, ls, rs, l, r, t, b, i, first,
   o = inst.options,
   d = o.snapTolerance,
   x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
   y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

  for ( i = inst.snapElements.length - 1; i >= 0; i-- ) {

   l = inst.snapElements[ i ].left - inst.margins.left;
   r = l + inst.snapElements[ i ].width;
   t = inst.snapElements[ i ].top - inst.margins.top;
   b = t + inst.snapElements[ i ].height;

   if ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d ||
     !$.contains( inst.snapElements[ i ].item.ownerDocument,
     inst.snapElements[ i ].item ) ) {
    if ( inst.snapElements[ i ].snapping ) {
     ( inst.options.snap.release &&
      inst.options.snap.release.call(
       inst.element,
       event,
       $.extend( inst._uiHash(), { snapItem: inst.snapElements[ i ].item } )
      ) );
    }
    inst.snapElements[ i ].snapping = false;
    continue;
   }

   if ( o.snapMode !== "inner" ) {
    ts = Math.abs( t - y2 ) <= d;
    bs = Math.abs( b - y1 ) <= d;
    ls = Math.abs( l - x2 ) <= d;
    rs = Math.abs( r - x1 ) <= d;
    if ( ts ) {
     ui.position.top = inst._convertPositionTo( "relative", {
      top: t - inst.helperProportions.height,
      left: 0
     } ).top;
    }
    if ( bs ) {
     ui.position.top = inst._convertPositionTo( "relative", {
      top: b,
      left: 0
     } ).top;
    }
    if ( ls ) {
     ui.position.left = inst._convertPositionTo( "relative", {
      top: 0,
      left: l - inst.helperProportions.width
     } ).left;
    }
    if ( rs ) {
     ui.position.left = inst._convertPositionTo( "relative", {
      top: 0,
      left: r
     } ).left;
    }
   }

   first = ( ts || bs || ls || rs );

   if ( o.snapMode !== "outer" ) {
    ts = Math.abs( t - y1 ) <= d;
    bs = Math.abs( b - y2 ) <= d;
    ls = Math.abs( l - x1 ) <= d;
    rs = Math.abs( r - x2 ) <= d;
    if ( ts ) {
     ui.position.top = inst._convertPositionTo( "relative", {
      top: t,
      left: 0
     } ).top;
    }
    if ( bs ) {
     ui.position.top = inst._convertPositionTo( "relative", {
      top: b - inst.helperProportions.height,
      left: 0
     } ).top;
    }
    if ( ls ) {
     ui.position.left = inst._convertPositionTo( "relative", {
      top: 0,
      left: l
     } ).left;
    }
    if ( rs ) {
     ui.position.left = inst._convertPositionTo( "relative", {
      top: 0,
      left: r - inst.helperProportions.width
     } ).left;
    }
   }

   if ( !inst.snapElements[ i ].snapping && ( ts || bs || ls || rs || first ) ) {
    ( inst.options.snap.snap &&
     inst.options.snap.snap.call(
      inst.element,
      event,
      $.extend( inst._uiHash(), {
       snapItem: inst.snapElements[ i ].item
      } ) ) );
   }
   inst.snapElements[ i ].snapping = ( ts || bs || ls || rs || first );

  }

 }
} );

$.ui.plugin.add( "draggable", "stack", {
 start: function( event, ui, instance ) {
  var min,
   o = instance.options,
   group = $.makeArray( $( o.stack ) ).sort( function( a, b ) {
    return ( parseInt( $( a ).css( "zIndex" ), 10 ) || 0 ) -
     ( parseInt( $( b ).css( "zIndex" ), 10 ) || 0 );
   } );

  if ( !group.length ) { return; }

  min = parseInt( $( group[ 0 ] ).css( "zIndex" ), 10 ) || 0;
  $( group ).each( function( i ) {
   $( this ).css( "zIndex", min + i );
  } );
  this.css( "zIndex", ( min + group.length ) );
 }
} );

$.ui.plugin.add( "draggable", "zIndex", {
 start: function( event, ui, instance ) {
  var t = $( ui.helper ),
   o = instance.options;

  if ( t.css( "zIndex" ) ) {
   o._zIndex = t.css( "zIndex" );
  }
  t.css( "zIndex", o.zIndex );
 },
 stop: function( event, ui, instance ) {
  var o = instance.options;

  if ( o._zIndex ) {
   $( ui.helper ).css( "zIndex", o._zIndex );
  }
 }
} );

var widgetsDraggable = $.ui.draggable;


/*!
 * jQuery UI Resizable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Resizable
//>>group: Interactions
//>>description: Enables resize functionality for any element.
//>>docs: http://api.jqueryui.com/resizable/
//>>demos: http://jqueryui.com/resizable/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/resizable.css
//>>css.theme: ../../themes/base/theme.css



$.widget( "ui.resizable", $.ui.mouse, {
 version: "1.12.1",
 widgetEventPrefix: "resize",
 options: {
  alsoResize: false,
  animate: false,
  animateDuration: "slow",
  animateEasing: "swing",
  aspectRatio: false,
  autoHide: false,
  classes: {
   "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se"
  },
  containment: false,
  ghost: false,
  grid: false,
  handles: "e,s,se",
  helper: false,
  maxHeight: null,
  maxWidth: null,
  minHeight: 10,
  minWidth: 10,

  // See #7960
  zIndex: 90,

  // Callbacks
  resize: null,
  start: null,
  stop: null
 },

 _num: function( value ) {
  return parseFloat( value ) || 0;
 },

 _isNumber: function( value ) {
  return !isNaN( parseFloat( value ) );
 },

 _hasScroll: function( el, a ) {

  if ( $( el ).css( "overflow" ) === "hidden" ) {
   return false;
  }

  var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
   has = false;

  if ( el[ scroll ] > 0 ) {
   return true;
  }

  // TODO: determine which cases actually cause this to happen
  // if the element doesn't have the scroll set, see if it's possible to
  // set the scroll
  el[ scroll ] = 1;
  has = ( el[ scroll ] > 0 );
  el[ scroll ] = 0;
  return has;
 },

 _create: function() {

  var margins,
   o = this.options,
   that = this;
  this._addClass( "ui-resizable" );

  $.extend( this, {
   _aspectRatio: !!( o.aspectRatio ),
   aspectRatio: o.aspectRatio,
   originalElement: this.element,
   _proportionallyResizeElements: [],
   _helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null
  } );

  // Wrap the element if it cannot hold child nodes
  if ( this.element[ 0 ].nodeName.match( /^(canvas|textarea|input|select|button|img)$/i ) ) {

   this.element.wrap(
    $( "<div class='ui-wrapper' style='overflow: hidden;'></div>" ).css( {
     position: this.element.css( "position" ),
     width: this.element.outerWidth(),
     height: this.element.outerHeight(),
     top: this.element.css( "top" ),
     left: this.element.css( "left" )
    } )
   );

   this.element = this.element.parent().data(
    "ui-resizable", this.element.resizable( "instance" )
   );

   this.elementIsWrapper = true;

   margins = {
    marginTop: this.originalElement.css( "marginTop" ),
    marginRight: this.originalElement.css( "marginRight" ),
    marginBottom: this.originalElement.css( "marginBottom" ),
    marginLeft: this.originalElement.css( "marginLeft" )
   };

   this.element.css( margins );
   this.originalElement.css( "margin", 0 );

   // support: Safari
   // Prevent Safari textarea resize
   this.originalResizeStyle = this.originalElement.css( "resize" );
   this.originalElement.css( "resize", "none" );

   this._proportionallyResizeElements.push( this.originalElement.css( {
    position: "static",
    zoom: 1,
    display: "block"
   } ) );

   // Support: IE9
   // avoid IE jump (hard set the margin)
   this.originalElement.css( margins );

   this._proportionallyResize();
  }

  this._setupHandles();

  if ( o.autoHide ) {
   $( this.element )
    .on( "mouseenter", function() {
     if ( o.disabled ) {
      return;
     }
     that._removeClass( "ui-resizable-autohide" );
     that._handles.show();
    } )
    .on( "mouseleave", function() {
     if ( o.disabled ) {
      return;
     }
     if ( !that.resizing ) {
      that._addClass( "ui-resizable-autohide" );
      that._handles.hide();
     }
    } );
  }

  this._mouseInit();
 },

 _destroy: function() {

  this._mouseDestroy();

  var wrapper,
   _destroy = function( exp ) {
    $( exp )
     .removeData( "resizable" )
     .removeData( "ui-resizable" )
     .off( ".resizable" )
     .find( ".ui-resizable-handle" )
      .remove();
   };

  // TODO: Unwrap at same DOM position
  if ( this.elementIsWrapper ) {
   _destroy( this.element );
   wrapper = this.element;
   this.originalElement.css( {
    position: wrapper.css( "position" ),
    width: wrapper.outerWidth(),
    height: wrapper.outerHeight(),
    top: wrapper.css( "top" ),
    left: wrapper.css( "left" )
   } ).insertAfter( wrapper );
   wrapper.remove();
  }

  this.originalElement.css( "resize", this.originalResizeStyle );
  _destroy( this.originalElement );

  return this;
 },

 _setOption: function( key, value ) {
  this._super( key, value );

  switch ( key ) {
  case "handles":
   this._removeHandles();
   this._setupHandles();
   break;
  default:
   break;
  }
 },

 _setupHandles: function() {
  var o = this.options, handle, i, n, hname, axis, that = this;
  this.handles = o.handles ||
   ( !$( ".ui-resizable-handle", this.element ).length ?
    "e,s,se" : {
     n: ".ui-resizable-n",
     e: ".ui-resizable-e",
     s: ".ui-resizable-s",
     w: ".ui-resizable-w",
     se: ".ui-resizable-se",
     sw: ".ui-resizable-sw",
     ne: ".ui-resizable-ne",
     nw: ".ui-resizable-nw"
    } );

  this._handles = $();
  if ( this.handles.constructor === String ) {

   if ( this.handles === "all" ) {
    this.handles = "n,e,s,w,se,sw,ne,nw";
   }

   n = this.handles.split( "," );
   this.handles = {};

   for ( i = 0; i < n.length; i++ ) {

    handle = $.trim( n[ i ] );
    hname = "ui-resizable-" + handle;
    axis = $( "<div>" );
    this._addClass( axis, "ui-resizable-handle " + hname );

    axis.css( { zIndex: o.zIndex } );

    this.handles[ handle ] = ".ui-resizable-" + handle;
    this.element.append( axis );
   }

  }

  this._renderAxis = function( target ) {

   var i, axis, padPos, padWrapper;

   target = target || this.element;

   for ( i in this.handles ) {

    if ( this.handles[ i ].constructor === String ) {
     this.handles[ i ] = this.element.children( this.handles[ i ] ).first().show();
    } else if ( this.handles[ i ].jquery || this.handles[ i ].nodeType ) {
     this.handles[ i ] = $( this.handles[ i ] );
     this._on( this.handles[ i ], { "mousedown": that._mouseDown } );
    }

    if ( this.elementIsWrapper &&
      this.originalElement[ 0 ]
       .nodeName
       .match( /^(textarea|input|select|button)$/i ) ) {
     axis = $( this.handles[ i ], this.element );

     padWrapper = /sw|ne|nw|se|n|s/.test( i ) ?
      axis.outerHeight() :
      axis.outerWidth();

     padPos = [ "padding",
      /ne|nw|n/.test( i ) ? "Top" :
      /se|sw|s/.test( i ) ? "Bottom" :
      /^e$/.test( i ) ? "Right" : "Left" ].join( "" );

     target.css( padPos, padWrapper );

     this._proportionallyResize();
    }

    this._handles = this._handles.add( this.handles[ i ] );
   }
  };

  // TODO: make renderAxis a prototype function
  this._renderAxis( this.element );

  this._handles = this._handles.add( this.element.find( ".ui-resizable-handle" ) );
  this._handles.disableSelection();

  this._handles.on( "mouseover", function() {
   if ( !that.resizing ) {
    if ( this.className ) {
     axis = this.className.match( /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i );
    }
    that.axis = axis && axis[ 1 ] ? axis[ 1 ] : "se";
   }
  } );

  if ( o.autoHide ) {
   this._handles.hide();
   this._addClass( "ui-resizable-autohide" );
  }
 },

 _removeHandles: function() {
  this._handles.remove();
 },

 _mouseCapture: function( event ) {
  var i, handle,
   capture = false;

  for ( i in this.handles ) {
   handle = $( this.handles[ i ] )[ 0 ];
   if ( handle === event.target || $.contains( handle, event.target ) ) {
    capture = true;
   }
  }

  return !this.options.disabled && capture;
 },

 _mouseStart: function( event ) {

  var curleft, curtop, cursor,
   o = this.options,
   el = this.element;

  this.resizing = true;

  this._renderProxy();

  curleft = this._num( this.helper.css( "left" ) );
  curtop = this._num( this.helper.css( "top" ) );

  if ( o.containment ) {
   curleft += $( o.containment ).scrollLeft() || 0;
   curtop += $( o.containment ).scrollTop() || 0;
  }

  this.offset = this.helper.offset();
  this.position = { left: curleft, top: curtop };

  this.size = this._helper ? {
    width: this.helper.width(),
    height: this.helper.height()
   } : {
    width: el.width(),
    height: el.height()
   };

  this.originalSize = this._helper ? {
    width: el.outerWidth(),
    height: el.outerHeight()
   } : {
    width: el.width(),
    height: el.height()
   };

  this.sizeDiff = {
   width: el.outerWidth() - el.width(),
   height: el.outerHeight() - el.height()
  };

  this.originalPosition = { left: curleft, top: curtop };
  this.originalMousePosition = { left: event.pageX, top: event.pageY };

  this.aspectRatio = ( typeof o.aspectRatio === "number" ) ?
   o.aspectRatio :
   ( ( this.originalSize.width / this.originalSize.height ) || 1 );

  cursor = $( ".ui-resizable-" + this.axis ).css( "cursor" );
  $( "body" ).css( "cursor", cursor === "auto" ? this.axis + "-resize" : cursor );

  this._addClass( "ui-resizable-resizing" );
  this._propagate( "start", event );
  return true;
 },

 _mouseDrag: function( event ) {

  var data, props,
   smp = this.originalMousePosition,
   a = this.axis,
   dx = ( event.pageX - smp.left ) || 0,
   dy = ( event.pageY - smp.top ) || 0,
   trigger = this._change[ a ];

  this._updatePrevProperties();

  if ( !trigger ) {
   return false;
  }

  data = trigger.apply( this, [ event, dx, dy ] );

  this._updateVirtualBoundaries( event.shiftKey );
  if ( this._aspectRatio || event.shiftKey ) {
   data = this._updateRatio( data, event );
  }

  data = this._respectSize( data, event );

  this._updateCache( data );

  this._propagate( "resize", event );

  props = this._applyChanges();

  if ( !this._helper && this._proportionallyResizeElements.length ) {
   this._proportionallyResize();
  }

  if ( !$.isEmptyObject( props ) ) {
   this._updatePrevProperties();
   this._trigger( "resize", event, this.ui() );
   this._applyChanges();
  }

  return false;
 },

 _mouseStop: function( event ) {

  this.resizing = false;
  var pr, ista, soffseth, soffsetw, s, left, top,
   o = this.options, that = this;

  if ( this._helper ) {

   pr = this._proportionallyResizeElements;
   ista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName );
   soffseth = ista && this._hasScroll( pr[ 0 ], "left" ) ? 0 : that.sizeDiff.height;
   soffsetw = ista ? 0 : that.sizeDiff.width;

   s = {
    width: ( that.helper.width()  - soffsetw ),
    height: ( that.helper.height() - soffseth )
   };
   left = ( parseFloat( that.element.css( "left" ) ) +
    ( that.position.left - that.originalPosition.left ) ) || null;
   top = ( parseFloat( that.element.css( "top" ) ) +
    ( that.position.top - that.originalPosition.top ) ) || null;

   if ( !o.animate ) {
    this.element.css( $.extend( s, { top: top, left: left } ) );
   }

   that.helper.height( that.size.height );
   that.helper.width( that.size.width );

   if ( this._helper && !o.animate ) {
    this._proportionallyResize();
   }
  }

  $( "body" ).css( "cursor", "auto" );

  this._removeClass( "ui-resizable-resizing" );

  this._propagate( "stop", event );

  if ( this._helper ) {
   this.helper.remove();
  }

  return false;

 },

 _updatePrevProperties: function() {
  this.prevPosition = {
   top: this.position.top,
   left: this.position.left
  };
  this.prevSize = {
   width: this.size.width,
   height: this.size.height
  };
 },

 _applyChanges: function() {
  var props = {};

  if ( this.position.top !== this.prevPosition.top ) {
   props.top = this.position.top + "px";
  }
  if ( this.position.left !== this.prevPosition.left ) {
   props.left = this.position.left + "px";
  }
  if ( this.size.width !== this.prevSize.width ) {
   props.width = this.size.width + "px";
  }
  if ( this.size.height !== this.prevSize.height ) {
   props.height = this.size.height + "px";
  }

  this.helper.css( props );

  return props;
 },

 _updateVirtualBoundaries: function( forceAspectRatio ) {
  var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,
   o = this.options;

  b = {
   minWidth: this._isNumber( o.minWidth ) ? o.minWidth : 0,
   maxWidth: this._isNumber( o.maxWidth ) ? o.maxWidth : Infinity,
   minHeight: this._isNumber( o.minHeight ) ? o.minHeight : 0,
   maxHeight: this._isNumber( o.maxHeight ) ? o.maxHeight : Infinity
  };

  if ( this._aspectRatio || forceAspectRatio ) {
   pMinWidth = b.minHeight * this.aspectRatio;
   pMinHeight = b.minWidth / this.aspectRatio;
   pMaxWidth = b.maxHeight * this.aspectRatio;
   pMaxHeight = b.maxWidth / this.aspectRatio;

   if ( pMinWidth > b.minWidth ) {
    b.minWidth = pMinWidth;
   }
   if ( pMinHeight > b.minHeight ) {
    b.minHeight = pMinHeight;
   }
   if ( pMaxWidth < b.maxWidth ) {
    b.maxWidth = pMaxWidth;
   }
   if ( pMaxHeight < b.maxHeight ) {
    b.maxHeight = pMaxHeight;
   }
  }
  this._vBoundaries = b;
 },

 _updateCache: function( data ) {
  this.offset = this.helper.offset();
  if ( this._isNumber( data.left ) ) {
   this.position.left = data.left;
  }
  if ( this._isNumber( data.top ) ) {
   this.position.top = data.top;
  }
  if ( this._isNumber( data.height ) ) {
   this.size.height = data.height;
  }
  if ( this._isNumber( data.width ) ) {
   this.size.width = data.width;
  }
 },

 _updateRatio: function( data ) {

  var cpos = this.position,
   csize = this.size,
   a = this.axis;

  if ( this._isNumber( data.height ) ) {
   data.width = ( data.height * this.aspectRatio );
  } else if ( this._isNumber( data.width ) ) {
   data.height = ( data.width / this.aspectRatio );
  }

  if ( a === "sw" ) {
   data.left = cpos.left + ( csize.width - data.width );
   data.top = null;
  }
  if ( a === "nw" ) {
   data.top = cpos.top + ( csize.height - data.height );
   data.left = cpos.left + ( csize.width - data.width );
  }

  return data;
 },

 _respectSize: function( data ) {

  var o = this._vBoundaries,
   a = this.axis,
   ismaxw = this._isNumber( data.width ) && o.maxWidth && ( o.maxWidth < data.width ),
   ismaxh = this._isNumber( data.height ) && o.maxHeight && ( o.maxHeight < data.height ),
   isminw = this._isNumber( data.width ) && o.minWidth && ( o.minWidth > data.width ),
   isminh = this._isNumber( data.height ) && o.minHeight && ( o.minHeight > data.height ),
   dw = this.originalPosition.left + this.originalSize.width,
   dh = this.originalPosition.top + this.originalSize.height,
   cw = /sw|nw|w/.test( a ), ch = /nw|ne|n/.test( a );
  if ( isminw ) {
   data.width = o.minWidth;
  }
  if ( isminh ) {
   data.height = o.minHeight;
  }
  if ( ismaxw ) {
   data.width = o.maxWidth;
  }
  if ( ismaxh ) {
   data.height = o.maxHeight;
  }

  if ( isminw && cw ) {
   data.left = dw - o.minWidth;
  }
  if ( ismaxw && cw ) {
   data.left = dw - o.maxWidth;
  }
  if ( isminh && ch ) {
   data.top = dh - o.minHeight;
  }
  if ( ismaxh && ch ) {
   data.top = dh - o.maxHeight;
  }

  // Fixing jump error on top/left - bug #2330
  if ( !data.width && !data.height && !data.left && data.top ) {
   data.top = null;
  } else if ( !data.width && !data.height && !data.top && data.left ) {
   data.left = null;
  }

  return data;
 },

 _getPaddingPlusBorderDimensions: function( element ) {
  var i = 0,
   widths = [],
   borders = [
    element.css( "borderTopWidth" ),
    element.css( "borderRightWidth" ),
    element.css( "borderBottomWidth" ),
    element.css( "borderLeftWidth" )
   ],
   paddings = [
    element.css( "paddingTop" ),
    element.css( "paddingRight" ),
    element.css( "paddingBottom" ),
    element.css( "paddingLeft" )
   ];

  for ( ; i < 4; i++ ) {
   widths[ i ] = ( parseFloat( borders[ i ] ) || 0 );
   widths[ i ] += ( parseFloat( paddings[ i ] ) || 0 );
  }

  return {
   height: widths[ 0 ] + widths[ 2 ],
   width: widths[ 1 ] + widths[ 3 ]
  };
 },

 _proportionallyResize: function() {

  if ( !this._proportionallyResizeElements.length ) {
   return;
  }

  var prel,
   i = 0,
   element = this.helper || this.element;

  for ( ; i < this._proportionallyResizeElements.length; i++ ) {

   prel = this._proportionallyResizeElements[ i ];

   // TODO: Seems like a bug to cache this.outerDimensions
   // considering that we are in a loop.
   if ( !this.outerDimensions ) {
    this.outerDimensions = this._getPaddingPlusBorderDimensions( prel );
   }

   prel.css( {
    height: ( element.height() - this.outerDimensions.height ) || 0,
    width: ( element.width() - this.outerDimensions.width ) || 0
   } );

  }

 },

 _renderProxy: function() {

  var el = this.element, o = this.options;
  this.elementOffset = el.offset();

  if ( this._helper ) {

   this.helper = this.helper || $( "<div style='overflow:hidden;'></div>" );

   this._addClass( this.helper, this._helper );
   this.helper.css( {
    width: this.element.outerWidth(),
    height: this.element.outerHeight(),
    position: "absolute",
    left: this.elementOffset.left + "px",
    top: this.elementOffset.top + "px",
    zIndex: ++o.zIndex //TODO: Don't modify option
   } );

   this.helper
    .appendTo( "body" )
    .disableSelection();

  } else {
   this.helper = this.element;
  }

 },

 _change: {
  e: function( event, dx ) {
   return { width: this.originalSize.width + dx };
  },
  w: function( event, dx ) {
   var cs = this.originalSize, sp = this.originalPosition;
   return { left: sp.left + dx, width: cs.width - dx };
  },
  n: function( event, dx, dy ) {
   var cs = this.originalSize, sp = this.originalPosition;
   return { top: sp.top + dy, height: cs.height - dy };
  },
  s: function( event, dx, dy ) {
   return { height: this.originalSize.height + dy };
  },
  se: function( event, dx, dy ) {
   return $.extend( this._change.s.apply( this, arguments ),
    this._change.e.apply( this, [ event, dx, dy ] ) );
  },
  sw: function( event, dx, dy ) {
   return $.extend( this._change.s.apply( this, arguments ),
    this._change.w.apply( this, [ event, dx, dy ] ) );
  },
  ne: function( event, dx, dy ) {
   return $.extend( this._change.n.apply( this, arguments ),
    this._change.e.apply( this, [ event, dx, dy ] ) );
  },
  nw: function( event, dx, dy ) {
   return $.extend( this._change.n.apply( this, arguments ),
    this._change.w.apply( this, [ event, dx, dy ] ) );
  }
 },

 _propagate: function( n, event ) {
  $.ui.plugin.call( this, n, [ event, this.ui() ] );
  ( n !== "resize" && this._trigger( n, event, this.ui() ) );
 },

 plugins: {},

 ui: function() {
  return {
   originalElement: this.originalElement,
   element: this.element,
   helper: this.helper,
   position: this.position,
   size: this.size,
   originalSize: this.originalSize,
   originalPosition: this.originalPosition
  };
 }

} );

/*
 * Resizable Extensions
 */

$.ui.plugin.add( "resizable", "animate", {

 stop: function( event ) {
  var that = $( this ).resizable( "instance" ),
   o = that.options,
   pr = that._proportionallyResizeElements,
   ista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName ),
   soffseth = ista && that._hasScroll( pr[ 0 ], "left" ) ? 0 : that.sizeDiff.height,
   soffsetw = ista ? 0 : that.sizeDiff.width,
   style = {
    width: ( that.size.width - soffsetw ),
    height: ( that.size.height - soffseth )
   },
   left = ( parseFloat( that.element.css( "left" ) ) +
    ( that.position.left - that.originalPosition.left ) ) || null,
   top = ( parseFloat( that.element.css( "top" ) ) +
    ( that.position.top - that.originalPosition.top ) ) || null;

  that.element.animate(
   $.extend( style, top && left ? { top: top, left: left } : {} ), {
    duration: o.animateDuration,
    easing: o.animateEasing,
    step: function() {

     var data = {
      width: parseFloat( that.element.css( "width" ) ),
      height: parseFloat( that.element.css( "height" ) ),
      top: parseFloat( that.element.css( "top" ) ),
      left: parseFloat( that.element.css( "left" ) )
     };

     if ( pr && pr.length ) {
      $( pr[ 0 ] ).css( { width: data.width, height: data.height } );
     }

     // Propagating resize, and updating values for each animation step
     that._updateCache( data );
     that._propagate( "resize", event );

    }
   }
  );
 }

} );

$.ui.plugin.add( "resizable", "containment", {

 start: function() {
  var element, p, co, ch, cw, width, height,
   that = $( this ).resizable( "instance" ),
   o = that.options,
   el = that.element,
   oc = o.containment,
   ce = ( oc instanceof $ ) ?
    oc.get( 0 ) :
    ( /parent/.test( oc ) ) ? el.parent().get( 0 ) : oc;

  if ( !ce ) {
   return;
  }

  that.containerElement = $( ce );

  if ( /document/.test( oc ) || oc === document ) {
   that.containerOffset = {
    left: 0,
    top: 0
   };
   that.containerPosition = {
    left: 0,
    top: 0
   };

   that.parentData = {
    element: $( document ),
    left: 0,
    top: 0,
    width: $( document ).width(),
    height: $( document ).height() || document.body.parentNode.scrollHeight
   };
  } else {
   element = $( ce );
   p = [];
   $( [ "Top", "Right", "Left", "Bottom" ] ).each( function( i, name ) {
    p[ i ] = that._num( element.css( "padding" + name ) );
   } );

   that.containerOffset = element.offset();
   that.containerPosition = element.position();
   that.containerSize = {
    height: ( element.innerHeight() - p[ 3 ] ),
    width: ( element.innerWidth() - p[ 1 ] )
   };

   co = that.containerOffset;
   ch = that.containerSize.height;
   cw = that.containerSize.width;
   width = ( that._hasScroll ( ce, "left" ) ? ce.scrollWidth : cw );
   height = ( that._hasScroll ( ce ) ? ce.scrollHeight : ch ) ;

   that.parentData = {
    element: ce,
    left: co.left,
    top: co.top,
    width: width,
    height: height
   };
  }
 },

 resize: function( event ) {
  var woset, hoset, isParent, isOffsetRelative,
   that = $( this ).resizable( "instance" ),
   o = that.options,
   co = that.containerOffset,
   cp = that.position,
   pRatio = that._aspectRatio || event.shiftKey,
   cop = {
    top: 0,
    left: 0
   },
   ce = that.containerElement,
   continueResize = true;

  if ( ce[ 0 ] !== document && ( /static/ ).test( ce.css( "position" ) ) ) {
   cop = co;
  }

  if ( cp.left < ( that._helper ? co.left : 0 ) ) {
   that.size.width = that.size.width +
    ( that._helper ?
     ( that.position.left - co.left ) :
     ( that.position.left - cop.left ) );

   if ( pRatio ) {
    that.size.height = that.size.width / that.aspectRatio;
    continueResize = false;
   }
   that.position.left = o.helper ? co.left : 0;
  }

  if ( cp.top < ( that._helper ? co.top : 0 ) ) {
   that.size.height = that.size.height +
    ( that._helper ?
     ( that.position.top - co.top ) :
     that.position.top );

   if ( pRatio ) {
    that.size.width = that.size.height * that.aspectRatio;
    continueResize = false;
   }
   that.position.top = that._helper ? co.top : 0;
  }

  isParent = that.containerElement.get( 0 ) === that.element.parent().get( 0 );
  isOffsetRelative = /relative|absolute/.test( that.containerElement.css( "position" ) );

  if ( isParent && isOffsetRelative ) {
   that.offset.left = that.parentData.left + that.position.left;
   that.offset.top = that.parentData.top + that.position.top;
  } else {
   that.offset.left = that.element.offset().left;
   that.offset.top = that.element.offset().top;
  }

  woset = Math.abs( that.sizeDiff.width +
   ( that._helper ?
    that.offset.left - cop.left :
    ( that.offset.left - co.left ) ) );

  hoset = Math.abs( that.sizeDiff.height +
   ( that._helper ?
    that.offset.top - cop.top :
    ( that.offset.top - co.top ) ) );

  if ( woset + that.size.width >= that.parentData.width ) {
   that.size.width = that.parentData.width - woset;
   if ( pRatio ) {
    that.size.height = that.size.width / that.aspectRatio;
    continueResize = false;
   }
  }

  if ( hoset + that.size.height >= that.parentData.height ) {
   that.size.height = that.parentData.height - hoset;
   if ( pRatio ) {
    that.size.width = that.size.height * that.aspectRatio;
    continueResize = false;
   }
  }

  if ( !continueResize ) {
   that.position.left = that.prevPosition.left;
   that.position.top = that.prevPosition.top;
   that.size.width = that.prevSize.width;
   that.size.height = that.prevSize.height;
  }
 },

 stop: function() {
  var that = $( this ).resizable( "instance" ),
   o = that.options,
   co = that.containerOffset,
   cop = that.containerPosition,
   ce = that.containerElement,
   helper = $( that.helper ),
   ho = helper.offset(),
   w = helper.outerWidth() - that.sizeDiff.width,
   h = helper.outerHeight() - that.sizeDiff.height;

  if ( that._helper && !o.animate && ( /relative/ ).test( ce.css( "position" ) ) ) {
   $( this ).css( {
    left: ho.left - cop.left - co.left,
    width: w,
    height: h
   } );
  }

  if ( that._helper && !o.animate && ( /static/ ).test( ce.css( "position" ) ) ) {
   $( this ).css( {
    left: ho.left - cop.left - co.left,
    width: w,
    height: h
   } );
  }
 }
} );

$.ui.plugin.add( "resizable", "alsoResize", {

 start: function() {
  var that = $( this ).resizable( "instance" ),
   o = that.options;

  $( o.alsoResize ).each( function() {
   var el = $( this );
   el.data( "ui-resizable-alsoresize", {
    width: parseFloat( el.width() ), height: parseFloat( el.height() ),
    left: parseFloat( el.css( "left" ) ), top: parseFloat( el.css( "top" ) )
   } );
  } );
 },

 resize: function( event, ui ) {
  var that = $( this ).resizable( "instance" ),
   o = that.options,
   os = that.originalSize,
   op = that.originalPosition,
   delta = {
    height: ( that.size.height - os.height ) || 0,
    width: ( that.size.width - os.width ) || 0,
    top: ( that.position.top - op.top ) || 0,
    left: ( that.position.left - op.left ) || 0
   };

   $( o.alsoResize ).each( function() {
    var el = $( this ), start = $( this ).data( "ui-resizable-alsoresize" ), style = {},
     css = el.parents( ui.originalElement[ 0 ] ).length ?
       [ "width", "height" ] :
       [ "width", "height", "top", "left" ];

    $.each( css, function( i, prop ) {
     var sum = ( start[ prop ] || 0 ) + ( delta[ prop ] || 0 );
     if ( sum && sum >= 0 ) {
      style[ prop ] = sum || null;
     }
    } );

    el.css( style );
   } );
 },

 stop: function() {
  $( this ).removeData( "ui-resizable-alsoresize" );
 }
} );

$.ui.plugin.add( "resizable", "ghost", {

 start: function() {

  var that = $( this ).resizable( "instance" ), cs = that.size;

  that.ghost = that.originalElement.clone();
  that.ghost.css( {
   opacity: 0.25,
   display: "block",
   position: "relative",
   height: cs.height,
   width: cs.width,
   margin: 0,
   left: 0,
   top: 0
  } );

  that._addClass( that.ghost, "ui-resizable-ghost" );

  // DEPRECATED
  // TODO: remove after 1.12
  if ( $.uiBackCompat !== false && typeof that.options.ghost === "string" ) {

   // Ghost option
   that.ghost.addClass( this.options.ghost );
  }

  that.ghost.appendTo( that.helper );

 },

 resize: function() {
  var that = $( this ).resizable( "instance" );
  if ( that.ghost ) {
   that.ghost.css( {
    position: "relative",
    height: that.size.height,
    width: that.size.width
   } );
  }
 },

 stop: function() {
  var that = $( this ).resizable( "instance" );
  if ( that.ghost && that.helper ) {
   that.helper.get( 0 ).removeChild( that.ghost.get( 0 ) );
  }
 }

} );

$.ui.plugin.add( "resizable", "grid", {

 resize: function() {
  var outerDimensions,
   that = $( this ).resizable( "instance" ),
   o = that.options,
   cs = that.size,
   os = that.originalSize,
   op = that.originalPosition,
   a = that.axis,
   grid = typeof o.grid === "number" ? [ o.grid, o.grid ] : o.grid,
   gridX = ( grid[ 0 ] || 1 ),
   gridY = ( grid[ 1 ] || 1 ),
   ox = Math.round( ( cs.width - os.width ) / gridX ) * gridX,
   oy = Math.round( ( cs.height - os.height ) / gridY ) * gridY,
   newWidth = os.width + ox,
   newHeight = os.height + oy,
   isMaxWidth = o.maxWidth && ( o.maxWidth < newWidth ),
   isMaxHeight = o.maxHeight && ( o.maxHeight < newHeight ),
   isMinWidth = o.minWidth && ( o.minWidth > newWidth ),
   isMinHeight = o.minHeight && ( o.minHeight > newHeight );

  o.grid = grid;

  if ( isMinWidth ) {
   newWidth += gridX;
  }
  if ( isMinHeight ) {
   newHeight += gridY;
  }
  if ( isMaxWidth ) {
   newWidth -= gridX;
  }
  if ( isMaxHeight ) {
   newHeight -= gridY;
  }

  if ( /^(se|s|e)$/.test( a ) ) {
   that.size.width = newWidth;
   that.size.height = newHeight;
  } else if ( /^(ne)$/.test( a ) ) {
   that.size.width = newWidth;
   that.size.height = newHeight;
   that.position.top = op.top - oy;
  } else if ( /^(sw)$/.test( a ) ) {
   that.size.width = newWidth;
   that.size.height = newHeight;
   that.position.left = op.left - ox;
  } else {
   if ( newHeight - gridY <= 0 || newWidth - gridX <= 0 ) {
    outerDimensions = that._getPaddingPlusBorderDimensions( this );
   }

   if ( newHeight - gridY > 0 ) {
    that.size.height = newHeight;
    that.position.top = op.top - oy;
   } else {
    newHeight = gridY - outerDimensions.height;
    that.size.height = newHeight;
    that.position.top = op.top + os.height - newHeight;
   }
   if ( newWidth - gridX > 0 ) {
    that.size.width = newWidth;
    that.position.left = op.left - ox;
   } else {
    newWidth = gridX - outerDimensions.width;
    that.size.width = newWidth;
    that.position.left = op.left + os.width - newWidth;
   }
  }
 }

} );

var widgetsResizable = $.ui.resizable;


/*!
 * jQuery UI Dialog 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Dialog
//>>group: Widgets
//>>description: Displays customizable dialog windows.
//>>docs: http://api.jqueryui.com/dialog/
//>>demos: http://jqueryui.com/dialog/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/dialog.css
//>>css.theme: ../../themes/base/theme.css



$.widget( "ui.dialog", {
 version: "1.12.1",
 options: {
  appendTo: "body",
  autoOpen: true,
  buttons: [],
  classes: {
   "ui-dialog": "ui-corner-all",
   "ui-dialog-titlebar": "ui-corner-all"
  },
  closeOnEscape: true,
  closeText: "Close",
  draggable: true,
  hide: null,
  height: "auto",
  maxHeight: null,
  maxWidth: null,
  minHeight: 150,
  minWidth: 150,
  modal: false,
  position: {
   my: "center",
   at: "center",
   of: window,
   collision: "fit",

   // Ensure the titlebar is always visible
   using: function( pos ) {
    var topOffset = $( this ).css( pos ).offset().top;
    if ( topOffset < 0 ) {
     $( this ).css( "top", pos.top - topOffset );
    }
   }
  },
  resizable: true,
  show: null,
  title: null,
  width: 300,

  // Callbacks
  beforeClose: null,
  close: null,
  drag: null,
  dragStart: null,
  dragStop: null,
  focus: null,
  open: null,
  resize: null,
  resizeStart: null,
  resizeStop: null
 },

 sizeRelatedOptions: {
  buttons: true,
  height: true,
  maxHeight: true,
  maxWidth: true,
  minHeight: true,
  minWidth: true,
  width: true
 },

 resizableRelatedOptions: {
  maxHeight: true,
  maxWidth: true,
  minHeight: true,
  minWidth: true
 },

 _create: function() {
  this.originalCss = {
   display: this.element[ 0 ].style.display,
   width: this.element[ 0 ].style.width,
   minHeight: this.element[ 0 ].style.minHeight,
   maxHeight: this.element[ 0 ].style.maxHeight,
   height: this.element[ 0 ].style.height
  };
  this.originalPosition = {
   parent: this.element.parent(),
   index: this.element.parent().children().index( this.element )
  };
  this.originalTitle = this.element.attr( "title" );
  if ( this.options.title == null && this.originalTitle != null ) {
   this.options.title = this.originalTitle;
  }

  // Dialogs can't be disabled
  if ( this.options.disabled ) {
   this.options.disabled = false;
  }

  this._createWrapper();

  this.element
   .show()
   .removeAttr( "title" )
   .appendTo( this.uiDialog );

  this._addClass( "ui-dialog-content", "ui-widget-content" );

  this._createTitlebar();
  this._createButtonPane();

  if ( this.options.draggable && $.fn.draggable ) {
   this._makeDraggable();
  }
  if ( this.options.resizable && $.fn.resizable ) {
   this._makeResizable();
  }

  this._isOpen = false;

  this._trackFocus();
 },

 _init: function() {
  if ( this.options.autoOpen ) {
   this.open();
  }
 },

 _appendTo: function() {
  var element = this.options.appendTo;
  if ( element && ( element.jquery || element.nodeType ) ) {
   return $( element );
  }
  return this.document.find( element || "body" ).eq( 0 );
 },

 _destroy: function() {
  var next,
   originalPosition = this.originalPosition;

  this._untrackInstance();
  this._destroyOverlay();

  this.element
   .removeUniqueId()
   .css( this.originalCss )

   // Without detaching first, the following becomes really slow
   .detach();

  this.uiDialog.remove();

  if ( this.originalTitle ) {
   this.element.attr( "title", this.originalTitle );
  }

  next = originalPosition.parent.children().eq( originalPosition.index );

  // Don't try to place the dialog next to itself (#8613)
  if ( next.length && next[ 0 ] !== this.element[ 0 ] ) {
   next.before( this.element );
  } else {
   originalPosition.parent.append( this.element );
  }
 },

 widget: function() {
  return this.uiDialog;
 },

 disable: $.noop,
 enable: $.noop,

 close: function( event ) {
  var that = this;

  if ( !this._isOpen || this._trigger( "beforeClose", event ) === false ) {
   return;
  }

  this._isOpen = false;
  this._focusedElement = null;
  this._destroyOverlay();
  this._untrackInstance();

  if ( !this.opener.filter( ":focusable" ).trigger( "focus" ).length ) {

   // Hiding a focused element doesn't trigger blur in WebKit
   // so in case we have nothing to focus on, explicitly blur the active element
   // https://bugs.webkit.org/show_bug.cgi?id=47182
   $.ui.safeBlur( $.ui.safeActiveElement( this.document[ 0 ] ) );
  }

  this._hide( this.uiDialog, this.options.hide, function() {
   that._trigger( "close", event );
  } );
 },

 isOpen: function() {
  return this._isOpen;
 },

 moveToTop: function() {
  this._moveToTop();
 },

 _moveToTop: function( event, silent ) {
  var moved = false,
   zIndices = this.uiDialog.siblings( ".ui-front:visible" ).map( function() {
    return +$( this ).css( "z-index" );
   } ).get(),
   zIndexMax = Math.max.apply( null, zIndices );

  if ( zIndexMax >= +this.uiDialog.css( "z-index" ) ) {
   this.uiDialog.css( "z-index", zIndexMax + 1 );
   moved = true;
  }

  if ( moved && !silent ) {
   this._trigger( "focus", event );
  }
  return moved;
 },

 open: function() {
  var that = this;
  if ( this._isOpen ) {
   if ( this._moveToTop() ) {
    this._focusTabbable();
   }
   return;
  }

  this._isOpen = true;
  this.opener = $( $.ui.safeActiveElement( this.document[ 0 ] ) );

  this._size();
  this._position();
  this._createOverlay();
  this._moveToTop( null, true );

  // Ensure the overlay is moved to the top with the dialog, but only when
  // opening. The overlay shouldn't move after the dialog is open so that
  // modeless dialogs opened after the modal dialog stack properly.
  if ( this.overlay ) {
   this.overlay.css( "z-index", this.uiDialog.css( "z-index" ) - 1 );
  }

  this._show( this.uiDialog, this.options.show, function() {
   that._focusTabbable();
   that._trigger( "focus" );
  } );

  // Track the dialog immediately upon openening in case a focus event
  // somehow occurs outside of the dialog before an element inside the
  // dialog is focused (#10152)
  this._makeFocusTarget();

  this._trigger( "open" );
 },

 _focusTabbable: function() {

  // Set focus to the first match:
  // 1. An element that was focused previously
  // 2. First element inside the dialog matching [autofocus]
  // 3. Tabbable element inside the content element
  // 4. Tabbable element inside the buttonpane
  // 5. The close button
  // 6. The dialog itself
  var hasFocus = this._focusedElement;
  if ( !hasFocus ) {
   hasFocus = this.element.find( "[autofocus]" );
  }
  if ( !hasFocus.length ) {
   hasFocus = this.element.find( ":tabbable" );
  }
  if ( !hasFocus.length ) {
   hasFocus = this.uiDialogButtonPane.find( ":tabbable" );
  }
  if ( !hasFocus.length ) {
   hasFocus = this.uiDialogTitlebarClose.filter( ":tabbable" );
  }
  if ( !hasFocus.length ) {
   hasFocus = this.uiDialog;
  }
  hasFocus.eq( 0 ).trigger( "focus" );
 },

 _keepFocus: function( event ) {
  function checkFocus() {
   var activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),
    isActive = this.uiDialog[ 0 ] === activeElement ||
     $.contains( this.uiDialog[ 0 ], activeElement );
   if ( !isActive ) {
    this._focusTabbable();
   }
  }
  event.preventDefault();
  checkFocus.call( this );

  // support: IE
  // IE <= 8 doesn't prevent moving focus even with event.preventDefault()
  // so we check again later
  this._delay( checkFocus );
 },

 _createWrapper: function() {
  this.uiDialog = $( "<div>" )
   .hide()
   .attr( {

    // Setting tabIndex makes the div focusable
    tabIndex: -1,
    role: "dialog"
   } )
   .appendTo( this._appendTo() );

  this._addClass( this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front" );
  this._on( this.uiDialog, {
   keydown: function( event ) {
    if ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&
      event.keyCode === $.ui.keyCode.ESCAPE ) {
     event.preventDefault();
     this.close( event );
     return;
    }

    // Prevent tabbing out of dialogs
    if ( event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented() ) {
     return;
    }
    var tabbables = this.uiDialog.find( ":tabbable" ),
     first = tabbables.filter( ":first" ),
     last = tabbables.filter( ":last" );

    if ( ( event.target === last[ 0 ] || event.target === this.uiDialog[ 0 ] ) &&
      !event.shiftKey ) {
     this._delay( function() {
      first.trigger( "focus" );
     } );
     event.preventDefault();
    } else if ( ( event.target === first[ 0 ] ||
      event.target === this.uiDialog[ 0 ] ) && event.shiftKey ) {
     this._delay( function() {
      last.trigger( "focus" );
     } );
     event.preventDefault();
    }
   },
   mousedown: function( event ) {
    if ( this._moveToTop( event ) ) {
     this._focusTabbable();
    }
   }
  } );

  // We assume that any existing aria-describedby attribute means
  // that the dialog content is marked up properly
  // otherwise we brute force the content as the description
  if ( !this.element.find( "[aria-describedby]" ).length ) {
   this.uiDialog.attr( {
    "aria-describedby": this.element.uniqueId().attr( "id" )
   } );
  }
 },

 _createTitlebar: function() {
  var uiDialogTitle;

  this.uiDialogTitlebar = $( "<div>" );
  this._addClass( this.uiDialogTitlebar,
   "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix" );
  this._on( this.uiDialogTitlebar, {
   mousedown: function( event ) {

    // Don't prevent click on close button (#8838)
    // Focusing a dialog that is partially scrolled out of view
    // causes the browser to scroll it into view, preventing the click event
    if ( !$( event.target ).closest( ".ui-dialog-titlebar-close" ) ) {

     // Dialog isn't getting focus when dragging (#8063)
     this.uiDialog.trigger( "focus" );
    }
   }
  } );

  // Support: IE
  // Use type="button" to prevent enter keypresses in textboxes from closing the
  // dialog in IE (#9312)
  this.uiDialogTitlebarClose = $( "<button type='button'></button>" )
   .button( {
    label: $( "<a>" ).text( this.options.closeText ).html(),
    icon: "ui-icon-closethick",
    showLabel: false
   } )
   .appendTo( this.uiDialogTitlebar );

  this._addClass( this.uiDialogTitlebarClose, "ui-dialog-titlebar-close" );
  this._on( this.uiDialogTitlebarClose, {
   click: function( event ) {
    event.preventDefault();
    this.close( event );
   }
  } );

  uiDialogTitle = $( "<span>" ).uniqueId().prependTo( this.uiDialogTitlebar );
  this._addClass( uiDialogTitle, "ui-dialog-title" );
  this._title( uiDialogTitle );

  this.uiDialogTitlebar.prependTo( this.uiDialog );

  this.uiDialog.attr( {
   "aria-labelledby": uiDialogTitle.attr( "id" )
  } );
 },

 _title: function( title ) {
  if ( this.options.title ) {
   title.text( this.options.title );
  } else {
   title.html( "&#160;" );
  }
 },

 _createButtonPane: function() {
  this.uiDialogButtonPane = $( "<div>" );
  this._addClass( this.uiDialogButtonPane, "ui-dialog-buttonpane",
   "ui-widget-content ui-helper-clearfix" );

  this.uiButtonSet = $( "<div>" )
   .appendTo( this.uiDialogButtonPane );
  this._addClass( this.uiButtonSet, "ui-dialog-buttonset" );

  this._createButtons();
 },

 _createButtons: function() {
  var that = this,
   buttons = this.options.buttons;

  // If we already have a button pane, remove it
  this.uiDialogButtonPane.remove();
  this.uiButtonSet.empty();

  if ( $.isEmptyObject( buttons ) || ( $.isArray( buttons ) && !buttons.length ) ) {
   this._removeClass( this.uiDialog, "ui-dialog-buttons" );
   return;
  }

  $.each( buttons, function( name, props ) {
   var click, buttonOptions;
   props = $.isFunction( props ) ?
    { click: props, text: name } :
    props;

   // Default to a non-submitting button
   props = $.extend( { type: "button" }, props );

   // Change the context for the click callback to be the main element
   click = props.click;
   buttonOptions = {
    icon: props.icon,
    iconPosition: props.iconPosition,
    showLabel: props.showLabel,

    // Deprecated options
    icons: props.icons,
    text: props.text
   };

   delete props.click;
   delete props.icon;
   delete props.iconPosition;
   delete props.showLabel;

   // Deprecated options
   delete props.icons;
   if ( typeof props.text === "boolean" ) {
    delete props.text;
   }

   $( "<button></button>", props )
    .button( buttonOptions )
    .appendTo( that.uiButtonSet )
    .on( "click", function() {
     click.apply( that.element[ 0 ], arguments );
    } );
  } );
  this._addClass( this.uiDialog, "ui-dialog-buttons" );
  this.uiDialogButtonPane.appendTo( this.uiDialog );
 },

 _makeDraggable: function() {
  var that = this,
   options = this.options;

  function filteredUi( ui ) {
   return {
    position: ui.position,
    offset: ui.offset
   };
  }

  this.uiDialog.draggable( {
   cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
   handle: ".ui-dialog-titlebar",
   containment: "document",
   start: function( event, ui ) {
    that._addClass( $( this ), "ui-dialog-dragging" );
    that._blockFrames();
    that._trigger( "dragStart", event, filteredUi( ui ) );
   },
   drag: function( event, ui ) {
    that._trigger( "drag", event, filteredUi( ui ) );
   },
   stop: function( event, ui ) {
    var left = ui.offset.left - that.document.scrollLeft(),
     top = ui.offset.top - that.document.scrollTop();

    options.position = {
     my: "left top",
     at: "left" + ( left >= 0 ? "+" : "" ) + left + " " +
      "top" + ( top >= 0 ? "+" : "" ) + top,
     of: that.window
    };
    that._removeClass( $( this ), "ui-dialog-dragging" );
    that._unblockFrames();
    that._trigger( "dragStop", event, filteredUi( ui ) );
   }
  } );
 },

 _makeResizable: function() {
  var that = this,
   options = this.options,
   handles = options.resizable,

   // .ui-resizable has position: relative defined in the stylesheet
   // but dialogs have to use absolute or fixed positioning
   position = this.uiDialog.css( "position" ),
   resizeHandles = typeof handles === "string" ?
    handles :
    "n,e,s,w,se,sw,ne,nw";

  function filteredUi( ui ) {
   return {
    originalPosition: ui.originalPosition,
    originalSize: ui.originalSize,
    position: ui.position,
    size: ui.size
   };
  }

  this.uiDialog.resizable( {
   cancel: ".ui-dialog-content",
   containment: "document",
   alsoResize: this.element,
   maxWidth: options.maxWidth,
   maxHeight: options.maxHeight,
   minWidth: options.minWidth,
   minHeight: this._minHeight(),
   handles: resizeHandles,
   start: function( event, ui ) {
    that._addClass( $( this ), "ui-dialog-resizing" );
    that._blockFrames();
    that._trigger( "resizeStart", event, filteredUi( ui ) );
   },
   resize: function( event, ui ) {
    that._trigger( "resize", event, filteredUi( ui ) );
   },
   stop: function( event, ui ) {
    var offset = that.uiDialog.offset(),
     left = offset.left - that.document.scrollLeft(),
     top = offset.top - that.document.scrollTop();

    options.height = that.uiDialog.height();
    options.width = that.uiDialog.width();
    options.position = {
     my: "left top",
     at: "left" + ( left >= 0 ? "+" : "" ) + left + " " +
      "top" + ( top >= 0 ? "+" : "" ) + top,
     of: that.window
    };
    that._removeClass( $( this ), "ui-dialog-resizing" );
    that._unblockFrames();
    that._trigger( "resizeStop", event, filteredUi( ui ) );
   }
  } )
   .css( "position", position );
 },

 _trackFocus: function() {
  this._on( this.widget(), {
   focusin: function( event ) {
    this._makeFocusTarget();
    this._focusedElement = $( event.target );
   }
  } );
 },

 _makeFocusTarget: function() {
  this._untrackInstance();
  this._trackingInstances().unshift( this );
 },

 _untrackInstance: function() {
  var instances = this._trackingInstances(),
   exists = $.inArray( this, instances );
  if ( exists !== -1 ) {
   instances.splice( exists, 1 );
  }
 },

 _trackingInstances: function() {
  var instances = this.document.data( "ui-dialog-instances" );
  if ( !instances ) {
   instances = [];
   this.document.data( "ui-dialog-instances", instances );
  }
  return instances;
 },

 _minHeight: function() {
  var options = this.options;

  return options.height === "auto" ?
   options.minHeight :
   Math.min( options.minHeight, options.height );
 },

 _position: function() {

  // Need to show the dialog to get the actual offset in the position plugin
  var isVisible = this.uiDialog.is( ":visible" );
  if ( !isVisible ) {
   this.uiDialog.show();
  }
  this.uiDialog.position( this.options.position );
  if ( !isVisible ) {
   this.uiDialog.hide();
  }
 },

 _setOptions: function( options ) {
  var that = this,
   resize = false,
   resizableOptions = {};

  $.each( options, function( key, value ) {
   that._setOption( key, value );

   if ( key in that.sizeRelatedOptions ) {
    resize = true;
   }
   if ( key in that.resizableRelatedOptions ) {
    resizableOptions[ key ] = value;
   }
  } );

  if ( resize ) {
   this._size();
   this._position();
  }
  if ( this.uiDialog.is( ":data(ui-resizable)" ) ) {
   this.uiDialog.resizable( "option", resizableOptions );
  }
 },

 _setOption: function( key, value ) {
  var isDraggable, isResizable,
   uiDialog = this.uiDialog;

  if ( key === "disabled" ) {
   return;
  }

  this._super( key, value );

  if ( key === "appendTo" ) {
   this.uiDialog.appendTo( this._appendTo() );
  }

  if ( key === "buttons" ) {
   this._createButtons();
  }

  if ( key === "closeText" ) {
   this.uiDialogTitlebarClose.button( {

    // Ensure that we always pass a string
    label: $( "<a>" ).text( "" + this.options.closeText ).html()
   } );
  }

  if ( key === "draggable" ) {
   isDraggable = uiDialog.is( ":data(ui-draggable)" );
   if ( isDraggable && !value ) {
    uiDialog.draggable( "destroy" );
   }

   if ( !isDraggable && value ) {
    this._makeDraggable();
   }
  }

  if ( key === "position" ) {
   this._position();
  }

  if ( key === "resizable" ) {

   // currently resizable, becoming non-resizable
   isResizable = uiDialog.is( ":data(ui-resizable)" );
   if ( isResizable && !value ) {
    uiDialog.resizable( "destroy" );
   }

   // Currently resizable, changing handles
   if ( isResizable && typeof value === "string" ) {
    uiDialog.resizable( "option", "handles", value );
   }

   // Currently non-resizable, becoming resizable
   if ( !isResizable && value !== false ) {
    this._makeResizable();
   }
  }

  if ( key === "title" ) {
   this._title( this.uiDialogTitlebar.find( ".ui-dialog-title" ) );
  }
 },

 _size: function() {

  // If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
  // divs will both have width and height set, so we need to reset them
  var nonContentHeight, minContentHeight, maxContentHeight,
   options = this.options;

  // Reset content sizing
  this.element.show().css( {
   width: "auto",
   minHeight: 0,
   maxHeight: "none",
   height: 0
  } );

  if ( options.minWidth > options.width ) {
   options.width = options.minWidth;
  }

  // Reset wrapper sizing
  // determine the height of all the non-content elements
  nonContentHeight = this.uiDialog.css( {
   height: "auto",
   width: options.width
  } )
   .outerHeight();
  minContentHeight = Math.max( 0, options.minHeight - nonContentHeight );
  maxContentHeight = typeof options.maxHeight === "number" ?
   Math.max( 0, options.maxHeight - nonContentHeight ) :
   "none";

  if ( options.height === "auto" ) {
   this.element.css( {
    minHeight: minContentHeight,
    maxHeight: maxContentHeight,
    height: "auto"
   } );
  } else {
   this.element.height( Math.max( 0, options.height - nonContentHeight ) );
  }

  if ( this.uiDialog.is( ":data(ui-resizable)" ) ) {
   this.uiDialog.resizable( "option", "minHeight", this._minHeight() );
  }
 },

 _blockFrames: function() {
  this.iframeBlocks = this.document.find( "iframe" ).map( function() {
   var iframe = $( this );

   return $( "<div>" )
    .css( {
     position: "absolute",
     width: iframe.outerWidth(),
     height: iframe.outerHeight()
    } )
    .appendTo( iframe.parent() )
    .offset( iframe.offset() )[ 0 ];
  } );
 },

 _unblockFrames: function() {
  if ( this.iframeBlocks ) {
   this.iframeBlocks.remove();
   delete this.iframeBlocks;
  }
 },

 _allowInteraction: function( event ) {
  if ( $( event.target ).closest( ".ui-dialog" ).length ) {
   return true;
  }

  // TODO: Remove hack when datepicker implements
  // the .ui-front logic (#8989)
  return !!$( event.target ).closest( ".ui-datepicker" ).length;
 },

 _createOverlay: function() {
  if ( !this.options.modal ) {
   return;
  }

  // We use a delay in case the overlay is created from an
  // event that we're going to be cancelling (#2804)
  var isOpening = true;
  this._delay( function() {
   isOpening = false;
  } );

  if ( !this.document.data( "ui-dialog-overlays" ) ) {

   // Prevent use of anchors and inputs
   // Using _on() for an event handler shared across many instances is
   // safe because the dialogs stack and must be closed in reverse order
   this._on( this.document, {
    focusin: function( event ) {
     if ( isOpening ) {
      return;
     }

     if ( !this._allowInteraction( event ) ) {
      event.preventDefault();
      this._trackingInstances()[ 0 ]._focusTabbable();
     }
    }
   } );
  }

  this.overlay = $( "<div>" )
   .appendTo( this._appendTo() );

  this._addClass( this.overlay, null, "ui-widget-overlay ui-front" );
  this._on( this.overlay, {
   mousedown: "_keepFocus"
  } );
  this.document.data( "ui-dialog-overlays",
   ( this.document.data( "ui-dialog-overlays" ) || 0 ) + 1 );
 },

 _destroyOverlay: function() {
  if ( !this.options.modal ) {
   return;
  }

  if ( this.overlay ) {
   var overlays = this.document.data( "ui-dialog-overlays" ) - 1;

   if ( !overlays ) {
    this._off( this.document, "focusin" );
    this.document.removeData( "ui-dialog-overlays" );
   } else {
    this.document.data( "ui-dialog-overlays", overlays );
   }

   this.overlay.remove();
   this.overlay = null;
  }
 }
} );

// DEPRECATED
// TODO: switch return back to widget declaration at top of file when this is removed
if ( $.uiBackCompat !== false ) {

 // Backcompat for dialogClass option
 $.widget( "ui.dialog", $.ui.dialog, {
  options: {
   dialogClass: ""
  },
  _createWrapper: function() {
   this._super();
   this.uiDialog.addClass( this.options.dialogClass );
  },
  _setOption: function( key, value ) {
   if ( key === "dialogClass" ) {
    this.uiDialog
     .removeClass( this.options.dialogClass )
     .addClass( value );
   }
   this._superApply( arguments );
  }
 } );
}

var widgetsDialog = $.ui.dialog;


/*!
 * jQuery UI Droppable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Droppable
//>>group: Interactions
//>>description: Enables drop targets for draggable elements.
//>>docs: http://api.jqueryui.com/droppable/
//>>demos: http://jqueryui.com/droppable/



$.widget( "ui.droppable", {
 version: "1.12.1",
 widgetEventPrefix: "drop",
 options: {
  accept: "*",
  addClasses: true,
  greedy: false,
  scope: "default",
  tolerance: "intersect",

  // Callbacks
  activate: null,
  deactivate: null,
  drop: null,
  out: null,
  over: null
 },
 _create: function() {

  var proportions,
   o = this.options,
   accept = o.accept;

  this.isover = false;
  this.isout = true;

  this.accept = $.isFunction( accept ) ? accept : function( d ) {
   return d.is( accept );
  };

  this.proportions = function( /* valueToWrite */ ) {
   if ( arguments.length ) {

    // Store the droppable's proportions
    proportions = arguments[ 0 ];
   } else {

    // Retrieve or derive the droppable's proportions
    return proportions ?
     proportions :
     proportions = {
      width: this.element[ 0 ].offsetWidth,
      height: this.element[ 0 ].offsetHeight
     };
   }
  };

  this._addToManager( o.scope );

  o.addClasses && this._addClass( "ui-droppable" );

 },

 _addToManager: function( scope ) {

  // Add the reference and positions to the manager
  $.ui.ddmanager.droppables[ scope ] = $.ui.ddmanager.droppables[ scope ] || [];
  $.ui.ddmanager.droppables[ scope ].push( this );
 },

 _splice: function( drop ) {
  var i = 0;
  for ( ; i < drop.length; i++ ) {
   if ( drop[ i ] === this ) {
    drop.splice( i, 1 );
   }
  }
 },

 _destroy: function() {
  var drop = $.ui.ddmanager.droppables[ this.options.scope ];

  this._splice( drop );
 },

 _setOption: function( key, value ) {

  if ( key === "accept" ) {
   this.accept = $.isFunction( value ) ? value : function( d ) {
    return d.is( value );
   };
  } else if ( key === "scope" ) {
   var drop = $.ui.ddmanager.droppables[ this.options.scope ];

   this._splice( drop );
   this._addToManager( value );
  }

  this._super( key, value );
 },

 _activate: function( event ) {
  var draggable = $.ui.ddmanager.current;

  this._addActiveClass();
  if ( draggable ) {
   this._trigger( "activate", event, this.ui( draggable ) );
  }
 },

 _deactivate: function( event ) {
  var draggable = $.ui.ddmanager.current;

  this._removeActiveClass();
  if ( draggable ) {
   this._trigger( "deactivate", event, this.ui( draggable ) );
  }
 },

 _over: function( event ) {

  var draggable = $.ui.ddmanager.current;

  // Bail if draggable and droppable are same element
  if ( !draggable || ( draggable.currentItem ||
    draggable.element )[ 0 ] === this.element[ 0 ] ) {
   return;
  }

  if ( this.accept.call( this.element[ 0 ], ( draggable.currentItem ||
    draggable.element ) ) ) {
   this._addHoverClass();
   this._trigger( "over", event, this.ui( draggable ) );
  }

 },

 _out: function( event ) {

  var draggable = $.ui.ddmanager.current;

  // Bail if draggable and droppable are same element
  if ( !draggable || ( draggable.currentItem ||
    draggable.element )[ 0 ] === this.element[ 0 ] ) {
   return;
  }

  if ( this.accept.call( this.element[ 0 ], ( draggable.currentItem ||
    draggable.element ) ) ) {
   this._removeHoverClass();
   this._trigger( "out", event, this.ui( draggable ) );
  }

 },

 _drop: function( event, custom ) {

  var draggable = custom || $.ui.ddmanager.current,
   childrenIntersection = false;

  // Bail if draggable and droppable are same element
  if ( !draggable || ( draggable.currentItem ||
    draggable.element )[ 0 ] === this.element[ 0 ] ) {
   return false;
  }

  this.element
   .find( ":data(ui-droppable)" )
   .not( ".ui-draggable-dragging" )
   .each( function() {
    var inst = $( this ).droppable( "instance" );
    if (
     inst.options.greedy &&
     !inst.options.disabled &&
     inst.options.scope === draggable.options.scope &&
     inst.accept.call(
      inst.element[ 0 ], ( draggable.currentItem || draggable.element )
     ) &&
     intersect(
      draggable,
      $.extend( inst, { offset: inst.element.offset() } ),
      inst.options.tolerance, event
     )
    ) {
     childrenIntersection = true;
     return false; }
   } );
  if ( childrenIntersection ) {
   return false;
  }

  if ( this.accept.call( this.element[ 0 ],
    ( draggable.currentItem || draggable.element ) ) ) {
   this._removeActiveClass();
   this._removeHoverClass();

   this._trigger( "drop", event, this.ui( draggable ) );
   return this.element;
  }

  return false;

 },

 ui: function( c ) {
  return {
   draggable: ( c.currentItem || c.element ),
   helper: c.helper,
   position: c.position,
   offset: c.positionAbs
  };
 },

 // Extension points just to make backcompat sane and avoid duplicating logic
 // TODO: Remove in 1.13 along with call to it below
 _addHoverClass: function() {
  this._addClass( "ui-droppable-hover" );
 },

 _removeHoverClass: function() {
  this._removeClass( "ui-droppable-hover" );
 },

 _addActiveClass: function() {
  this._addClass( "ui-droppable-active" );
 },

 _removeActiveClass: function() {
  this._removeClass( "ui-droppable-active" );
 }
} );

var intersect = $.ui.intersect = ( function() {
 function isOverAxis( x, reference, size ) {
  return ( x >= reference ) && ( x < ( reference + size ) );
 }

 return function( draggable, droppable, toleranceMode, event ) {

  if ( !droppable.offset ) {
   return false;
  }

  var x1 = ( draggable.positionAbs ||
    draggable.position.absolute ).left + draggable.margins.left,
   y1 = ( draggable.positionAbs ||
    draggable.position.absolute ).top + draggable.margins.top,
   x2 = x1 + draggable.helperProportions.width,
   y2 = y1 + draggable.helperProportions.height,
   l = droppable.offset.left,
   t = droppable.offset.top,
   r = l + droppable.proportions().width,
   b = t + droppable.proportions().height;

  switch ( toleranceMode ) {
  case "fit":
   return ( l <= x1 && x2 <= r && t <= y1 && y2 <= b );
  case "intersect":
   return ( l < x1 + ( draggable.helperProportions.width / 2 ) && // Right Half
    x2 - ( draggable.helperProportions.width / 2 ) < r && // Left Half
    t < y1 + ( draggable.helperProportions.height / 2 ) && // Bottom Half
    y2 - ( draggable.helperProportions.height / 2 ) < b ); // Top Half
  case "pointer":
   return isOverAxis( event.pageY, t, droppable.proportions().height ) &&
    isOverAxis( event.pageX, l, droppable.proportions().width );
  case "touch":
   return (
    ( y1 >= t && y1 <= b ) || // Top edge touching
    ( y2 >= t && y2 <= b ) || // Bottom edge touching
    ( y1 < t && y2 > b ) // Surrounded vertically
   ) && (
    ( x1 >= l && x1 <= r ) || // Left edge touching
    ( x2 >= l && x2 <= r ) || // Right edge touching
    ( x1 < l && x2 > r ) // Surrounded horizontally
   );
  default:
   return false;
  }
 };
} )();

/*
 This manager tracks offsets of draggables and droppables
*/
$.ui.ddmanager = {
 current: null,
 droppables: { "default": [] },
 prepareOffsets: function( t, event ) {

  var i, j,
   m = $.ui.ddmanager.droppables[ t.options.scope ] || [],
   type = event ? event.type : null, // workaround for #2317
   list = ( t.currentItem || t.element ).find( ":data(ui-droppable)" ).addBack();

  droppablesLoop: for ( i = 0; i < m.length; i++ ) {

   // No disabled and non-accepted
   if ( m[ i ].options.disabled || ( t && !m[ i ].accept.call( m[ i ].element[ 0 ],
     ( t.currentItem || t.element ) ) ) ) {
    continue;
   }

   // Filter out elements in the current dragged item
   for ( j = 0; j < list.length; j++ ) {
    if ( list[ j ] === m[ i ].element[ 0 ] ) {
     m[ i ].proportions().height = 0;
     continue droppablesLoop;
    }
   }

   m[ i ].visible = m[ i ].element.css( "display" ) !== "none";
   if ( !m[ i ].visible ) {
    continue;
   }

   // Activate the droppable if used directly from draggables
   if ( type === "mousedown" ) {
    m[ i ]._activate.call( m[ i ], event );
   }

   m[ i ].offset = m[ i ].element.offset();
   m[ i ].proportions( {
    width: m[ i ].element[ 0 ].offsetWidth,
    height: m[ i ].element[ 0 ].offsetHeight
   } );

  }

 },
 drop: function( draggable, event ) {

  var dropped = false;

  // Create a copy of the droppables in case the list changes during the drop (#9116)
  $.each( ( $.ui.ddmanager.droppables[ draggable.options.scope ] || [] ).slice(), function() {

   if ( !this.options ) {
    return;
   }
   if ( !this.options.disabled && this.visible &&
     intersect( draggable, this, this.options.tolerance, event ) ) {
    dropped = this._drop.call( this, event ) || dropped;
   }

   if ( !this.options.disabled && this.visible && this.accept.call( this.element[ 0 ],
     ( draggable.currentItem || draggable.element ) ) ) {
    this.isout = true;
    this.isover = false;
    this._deactivate.call( this, event );
   }

  } );
  return dropped;

 },
 dragStart: function( draggable, event ) {

  // Listen for scrolling so that if the dragging causes scrolling the position of the
  // droppables can be recalculated (see #5003)
  draggable.element.parentsUntil( "body" ).on( "scroll.droppable", function() {
   if ( !draggable.options.refreshPositions ) {
    $.ui.ddmanager.prepareOffsets( draggable, event );
   }
  } );
 },
 drag: function( draggable, event ) {

  // If you have a highly dynamic page, you might try this option. It renders positions
  // every time you move the mouse.
  if ( draggable.options.refreshPositions ) {
   $.ui.ddmanager.prepareOffsets( draggable, event );
  }

  // Run through all droppables and check their positions based on specific tolerance options
  $.each( $.ui.ddmanager.droppables[ draggable.options.scope ] || [], function() {

   if ( this.options.disabled || this.greedyChild || !this.visible ) {
    return;
   }

   var parentInstance, scope, parent,
    intersects = intersect( draggable, this, this.options.tolerance, event ),
    c = !intersects && this.isover ?
     "isout" :
     ( intersects && !this.isover ? "isover" : null );
   if ( !c ) {
    return;
   }

   if ( this.options.greedy ) {

    // find droppable parents with same scope
    scope = this.options.scope;
    parent = this.element.parents( ":data(ui-droppable)" ).filter( function() {
     return $( this ).droppable( "instance" ).options.scope === scope;
    } );

    if ( parent.length ) {
     parentInstance = $( parent[ 0 ] ).droppable( "instance" );
     parentInstance.greedyChild = ( c === "isover" );
    }
   }

   // We just moved into a greedy child
   if ( parentInstance && c === "isover" ) {
    parentInstance.isover = false;
    parentInstance.isout = true;
    parentInstance._out.call( parentInstance, event );
   }

   this[ c ] = true;
   this[ c === "isout" ? "isover" : "isout" ] = false;
   this[ c === "isover" ? "_over" : "_out" ].call( this, event );

   // We just moved out of a greedy child
   if ( parentInstance && c === "isout" ) {
    parentInstance.isout = false;
    parentInstance.isover = true;
    parentInstance._over.call( parentInstance, event );
   }
  } );

 },
 dragStop: function( draggable, event ) {
  draggable.element.parentsUntil( "body" ).off( "scroll.droppable" );

  // Call prepareOffsets one final time since IE does not fire return scroll events when
  // overflow was caused by drag (see #5003)
  if ( !draggable.options.refreshPositions ) {
   $.ui.ddmanager.prepareOffsets( draggable, event );
  }
 }
};

// DEPRECATED
// TODO: switch return back to widget declaration at top of file when this is removed
if ( $.uiBackCompat !== false ) {

 // Backcompat for activeClass and hoverClass options
 $.widget( "ui.droppable", $.ui.droppable, {
  options: {
   hoverClass: false,
   activeClass: false
  },
  _addActiveClass: function() {
   this._super();
   if ( this.options.activeClass ) {
    this.element.addClass( this.options.activeClass );
   }
  },
  _removeActiveClass: function() {
   this._super();
   if ( this.options.activeClass ) {
    this.element.removeClass( this.options.activeClass );
   }
  },
  _addHoverClass: function() {
   this._super();
   if ( this.options.hoverClass ) {
    this.element.addClass( this.options.hoverClass );
   }
  },
  _removeHoverClass: function() {
   this._super();
   if ( this.options.hoverClass ) {
    this.element.removeClass( this.options.hoverClass );
   }
  }
 } );
}

var widgetsDroppable = $.ui.droppable;


/*!
 * jQuery UI Progressbar 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Progressbar
//>>group: Widgets
// jscs:disable maximumLineLength
//>>description: Displays a status indicator for loading state, standard percentage, and other progress indicators.
// jscs:enable maximumLineLength
//>>docs: http://api.jqueryui.com/progressbar/
//>>demos: http://jqueryui.com/progressbar/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/progressbar.css
//>>css.theme: ../../themes/base/theme.css



var widgetsProgressbar = $.widget( "ui.progressbar", {
 version: "1.12.1",
 options: {
  classes: {
   "ui-progressbar": "ui-corner-all",
   "ui-progressbar-value": "ui-corner-left",
   "ui-progressbar-complete": "ui-corner-right"
  },
  max: 100,
  value: 0,

  change: null,
  complete: null
 },

 min: 0,

 _create: function() {

  // Constrain initial value
  this.oldValue = this.options.value = this._constrainedValue();

  this.element.attr( {

   // Only set static values; aria-valuenow and aria-valuemax are
   // set inside _refreshValue()
   role: "progressbar",
   "aria-valuemin": this.min
  } );
  this._addClass( "ui-progressbar", "ui-widget ui-widget-content" );

  this.valueDiv = $( "<div>" ).appendTo( this.element );
  this._addClass( this.valueDiv, "ui-progressbar-value", "ui-widget-header" );
  this._refreshValue();
 },

 _destroy: function() {
  this.element.removeAttr( "role aria-valuemin aria-valuemax aria-valuenow" );

  this.valueDiv.remove();
 },

 value: function( newValue ) {
  if ( newValue === undefined ) {
   return this.options.value;
  }

  this.options.value = this._constrainedValue( newValue );
  this._refreshValue();
 },

 _constrainedValue: function( newValue ) {
  if ( newValue === undefined ) {
   newValue = this.options.value;
  }

  this.indeterminate = newValue === false;

  // Sanitize value
  if ( typeof newValue !== "number" ) {
   newValue = 0;
  }

  return this.indeterminate ? false :
   Math.min( this.options.max, Math.max( this.min, newValue ) );
 },

 _setOptions: function( options ) {

  // Ensure "value" option is set after other values (like max)
  var value = options.value;
  delete options.value;

  this._super( options );

  this.options.value = this._constrainedValue( value );
  this._refreshValue();
 },

 _setOption: function( key, value ) {
  if ( key === "max" ) {

   // Don't allow a max less than min
   value = Math.max( this.min, value );
  }
  this._super( key, value );
 },

 _setOptionDisabled: function( value ) {
  this._super( value );

  this.element.attr( "aria-disabled", value );
  this._toggleClass( null, "ui-state-disabled", !!value );
 },

 _percentage: function() {
  return this.indeterminate ?
   100 :
   100 * ( this.options.value - this.min ) / ( this.options.max - this.min );
 },

 _refreshValue: function() {
  var value = this.options.value,
   percentage = this._percentage();

  this.valueDiv
   .toggle( this.indeterminate || value > this.min )
   .width( percentage.toFixed( 0 ) + "%" );

  this
   ._toggleClass( this.valueDiv, "ui-progressbar-complete", null,
    value === this.options.max )
   ._toggleClass( "ui-progressbar-indeterminate", null, this.indeterminate );

  if ( this.indeterminate ) {
   this.element.removeAttr( "aria-valuenow" );
   if ( !this.overlayDiv ) {
    this.overlayDiv = $( "<div>" ).appendTo( this.valueDiv );
    this._addClass( this.overlayDiv, "ui-progressbar-overlay" );
   }
  } else {
   this.element.attr( {
    "aria-valuemax": this.options.max,
    "aria-valuenow": value
   } );
   if ( this.overlayDiv ) {
    this.overlayDiv.remove();
    this.overlayDiv = null;
   }
  }

  if ( this.oldValue !== value ) {
   this.oldValue = value;
   this._trigger( "change" );
  }
  if ( value === this.options.max ) {
   this._trigger( "complete" );
  }
 }
} );


/*!
 * jQuery UI Selectable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Selectable
//>>group: Interactions
//>>description: Allows groups of elements to be selected with the mouse.
//>>docs: http://api.jqueryui.com/selectable/
//>>demos: http://jqueryui.com/selectable/
//>>css.structure: ../../themes/base/selectable.css



var widgetsSelectable = $.widget( "ui.selectable", $.ui.mouse, {
 version: "1.12.1",
 options: {
  appendTo: "body",
  autoRefresh: true,
  distance: 0,
  filter: "*",
  tolerance: "touch",

  // Callbacks
  selected: null,
  selecting: null,
  start: null,
  stop: null,
  unselected: null,
  unselecting: null
 },
 _create: function() {
  var that = this;

  this._addClass( "ui-selectable" );

  this.dragged = false;

  // Cache selectee children based on filter
  this.refresh = function() {
   that.elementPos = $( that.element[ 0 ] ).offset();
   that.selectees = $( that.options.filter, that.element[ 0 ] );
   that._addClass( that.selectees, "ui-selectee" );
   that.selectees.each( function() {
    var $this = $( this ),
     selecteeOffset = $this.offset(),
     pos = {
      left: selecteeOffset.left - that.elementPos.left,
      top: selecteeOffset.top - that.elementPos.top
     };
    $.data( this, "selectable-item", {
     element: this,
     $element: $this,
     left: pos.left,
     top: pos.top,
     right: pos.left + $this.outerWidth(),
     bottom: pos.top + $this.outerHeight(),
     startselected: false,
     selected: $this.hasClass( "ui-selected" ),
     selecting: $this.hasClass( "ui-selecting" ),
     unselecting: $this.hasClass( "ui-unselecting" )
    } );
   } );
  };
  this.refresh();

  this._mouseInit();

  this.helper = $( "<div>" );
  this._addClass( this.helper, "ui-selectable-helper" );
 },

 _destroy: function() {
  this.selectees.removeData( "selectable-item" );
  this._mouseDestroy();
 },

 _mouseStart: function( event ) {
  var that = this,
   options = this.options;

  this.opos = [ event.pageX, event.pageY ];
  this.elementPos = $( this.element[ 0 ] ).offset();

  if ( this.options.disabled ) {
   return;
  }

  this.selectees = $( options.filter, this.element[ 0 ] );

  this._trigger( "start", event );

  $( options.appendTo ).append( this.helper );

  // position helper (lasso)
  this.helper.css( {
   "left": event.pageX,
   "top": event.pageY,
   "width": 0,
   "height": 0
  } );

  if ( options.autoRefresh ) {
   this.refresh();
  }

  this.selectees.filter( ".ui-selected" ).each( function() {
   var selectee = $.data( this, "selectable-item" );
   selectee.startselected = true;
   if ( !event.metaKey && !event.ctrlKey ) {
    that._removeClass( selectee.$element, "ui-selected" );
    selectee.selected = false;
    that._addClass( selectee.$element, "ui-unselecting" );
    selectee.unselecting = true;

    // selectable UNSELECTING callback
    that._trigger( "unselecting", event, {
     unselecting: selectee.element
    } );
   }
  } );

  $( event.target ).parents().addBack().each( function() {
   var doSelect,
    selectee = $.data( this, "selectable-item" );
   if ( selectee ) {
    doSelect = ( !event.metaKey && !event.ctrlKey ) ||
     !selectee.$element.hasClass( "ui-selected" );
    that._removeClass( selectee.$element, doSelect ? "ui-unselecting" : "ui-selected" )
     ._addClass( selectee.$element, doSelect ? "ui-selecting" : "ui-unselecting" );
    selectee.unselecting = !doSelect;
    selectee.selecting = doSelect;
    selectee.selected = doSelect;

    // selectable (UN)SELECTING callback
    if ( doSelect ) {
     that._trigger( "selecting", event, {
      selecting: selectee.element
     } );
    } else {
     that._trigger( "unselecting", event, {
      unselecting: selectee.element
     } );
    }
    return false;
   }
  } );

 },

 _mouseDrag: function( event ) {

  this.dragged = true;

  if ( this.options.disabled ) {
   return;
  }

  var tmp,
   that = this,
   options = this.options,
   x1 = this.opos[ 0 ],
   y1 = this.opos[ 1 ],
   x2 = event.pageX,
   y2 = event.pageY;

  if ( x1 > x2 ) { tmp = x2; x2 = x1; x1 = tmp; }
  if ( y1 > y2 ) { tmp = y2; y2 = y1; y1 = tmp; }
  this.helper.css( { left: x1, top: y1, width: x2 - x1, height: y2 - y1 } );

  this.selectees.each( function() {
   var selectee = $.data( this, "selectable-item" ),
    hit = false,
    offset = {};

   //prevent helper from being selected if appendTo: selectable
   if ( !selectee || selectee.element === that.element[ 0 ] ) {
    return;
   }

   offset.left   = selectee.left   + that.elementPos.left;
   offset.right  = selectee.right  + that.elementPos.left;
   offset.top    = selectee.top    + that.elementPos.top;
   offset.bottom = selectee.bottom + that.elementPos.top;

   if ( options.tolerance === "touch" ) {
    hit = ( !( offset.left > x2 || offset.right < x1 || offset.top > y2 ||
                    offset.bottom < y1 ) );
   } else if ( options.tolerance === "fit" ) {
    hit = ( offset.left > x1 && offset.right < x2 && offset.top > y1 &&
                    offset.bottom < y2 );
   }

   if ( hit ) {

    // SELECT
    if ( selectee.selected ) {
     that._removeClass( selectee.$element, "ui-selected" );
     selectee.selected = false;
    }
    if ( selectee.unselecting ) {
     that._removeClass( selectee.$element, "ui-unselecting" );
     selectee.unselecting = false;
    }
    if ( !selectee.selecting ) {
     that._addClass( selectee.$element, "ui-selecting" );
     selectee.selecting = true;

     // selectable SELECTING callback
     that._trigger( "selecting", event, {
      selecting: selectee.element
     } );
    }
   } else {

    // UNSELECT
    if ( selectee.selecting ) {
     if ( ( event.metaKey || event.ctrlKey ) && selectee.startselected ) {
      that._removeClass( selectee.$element, "ui-selecting" );
      selectee.selecting = false;
      that._addClass( selectee.$element, "ui-selected" );
      selectee.selected = true;
     } else {
      that._removeClass( selectee.$element, "ui-selecting" );
      selectee.selecting = false;
      if ( selectee.startselected ) {
       that._addClass( selectee.$element, "ui-unselecting" );
       selectee.unselecting = true;
      }

      // selectable UNSELECTING callback
      that._trigger( "unselecting", event, {
       unselecting: selectee.element
      } );
     }
    }
    if ( selectee.selected ) {
     if ( !event.metaKey && !event.ctrlKey && !selectee.startselected ) {
      that._removeClass( selectee.$element, "ui-selected" );
      selectee.selected = false;

      that._addClass( selectee.$element, "ui-unselecting" );
      selectee.unselecting = true;

      // selectable UNSELECTING callback
      that._trigger( "unselecting", event, {
       unselecting: selectee.element
      } );
     }
    }
   }
  } );

  return false;
 },

 _mouseStop: function( event ) {
  var that = this;

  this.dragged = false;

  $( ".ui-unselecting", this.element[ 0 ] ).each( function() {
   var selectee = $.data( this, "selectable-item" );
   that._removeClass( selectee.$element, "ui-unselecting" );
   selectee.unselecting = false;
   selectee.startselected = false;
   that._trigger( "unselected", event, {
    unselected: selectee.element
   } );
  } );
  $( ".ui-selecting", this.element[ 0 ] ).each( function() {
   var selectee = $.data( this, "selectable-item" );
   that._removeClass( selectee.$element, "ui-selecting" )
    ._addClass( selectee.$element, "ui-selected" );
   selectee.selecting = false;
   selectee.selected = true;
   selectee.startselected = true;
   that._trigger( "selected", event, {
    selected: selectee.element
   } );
  } );
  this._trigger( "stop", event );

  this.helper.remove();

  return false;
 }

} );


/*!
 * jQuery UI Selectmenu 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Selectmenu
//>>group: Widgets
// jscs:disable maximumLineLength
//>>description: Duplicates and extends the functionality of a native HTML select element, allowing it to be customizable in behavior and appearance far beyond the limitations of a native select.
// jscs:enable maximumLineLength
//>>docs: http://api.jqueryui.com/selectmenu/
//>>demos: http://jqueryui.com/selectmenu/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/selectmenu.css, ../../themes/base/button.css
//>>css.theme: ../../themes/base/theme.css



var widgetsSelectmenu = $.widget( "ui.selectmenu", [ $.ui.formResetMixin, {
 version: "1.12.1",
 defaultElement: "<select>",
 options: {
  appendTo: null,
  classes: {
   "ui-selectmenu-button-open": "ui-corner-top",
   "ui-selectmenu-button-closed": "ui-corner-all"
  },
  disabled: null,
  icons: {
   button: "ui-icon-triangle-1-s"
  },
  position: {
   my: "left top",
   at: "left bottom",
   collision: "none"
  },
  width: false,

  // Callbacks
  change: null,
  close: null,
  focus: null,
  open: null,
  select: null
 },

 _create: function() {
  var selectmenuId = this.element.uniqueId().attr( "id" );
  this.ids = {
   element: selectmenuId,
   button: selectmenuId + "-button",
   menu: selectmenuId + "-menu"
  };

  this._drawButton();
  this._drawMenu();
  this._bindFormResetHandler();

  this._rendered = false;
  this.menuItems = $();
 },

 _drawButton: function() {
  var icon,
   that = this,
   item = this._parseOption(
    this.element.find( "option:selected" ),
    this.element[ 0 ].selectedIndex
   );

  // Associate existing label with the new button
  this.labels = this.element.labels().attr( "for", this.ids.button );
  this._on( this.labels, {
   click: function( event ) {
    this.button.focus();
    event.preventDefault();
   }
  } );

  // Hide original select element
  this.element.hide();

  // Create button
  this.button = $( "<span>", {
   tabindex: this.options.disabled ? -1 : 0,
   id: this.ids.button,
   role: "combobox",
   "aria-expanded": "false",
   "aria-autocomplete": "list",
   "aria-owns": this.ids.menu,
   "aria-haspopup": "true",
   title: this.element.attr( "title" )
  } )
   .insertAfter( this.element );

  this._addClass( this.button, "ui-selectmenu-button ui-selectmenu-button-closed",
   "ui-button ui-widget" );

  icon = $( "<span>" ).appendTo( this.button );
  this._addClass( icon, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button );
  this.buttonItem = this._renderButtonItem( item )
   .appendTo( this.button );

  if ( this.options.width !== false ) {
   this._resizeButton();
  }

  this._on( this.button, this._buttonEvents );
  this.button.one( "focusin", function() {

   // Delay rendering the menu items until the button receives focus.
   // The menu may have already been rendered via a programmatic open.
   if ( !that._rendered ) {
    that._refreshMenu();
   }
  } );
 },

 _drawMenu: function() {
  var that = this;

  // Create menu
  this.menu = $( "<ul>", {
   "aria-hidden": "true",
   "aria-labelledby": this.ids.button,
   id: this.ids.menu
  } );

  // Wrap menu
  this.menuWrap = $( "<div>" ).append( this.menu );
  this._addClass( this.menuWrap, "ui-selectmenu-menu", "ui-front" );
  this.menuWrap.appendTo( this._appendTo() );

  // Initialize menu widget
  this.menuInstance = this.menu
   .menu( {
    classes: {
     "ui-menu": "ui-corner-bottom"
    },
    role: "listbox",
    select: function( event, ui ) {
     event.preventDefault();

     // Support: IE8
     // If the item was selected via a click, the text selection
     // will be destroyed in IE
     that._setSelection();

     that._select( ui.item.data( "ui-selectmenu-item" ), event );
    },
    focus: function( event, ui ) {
     var item = ui.item.data( "ui-selectmenu-item" );

     // Prevent inital focus from firing and check if its a newly focused item
     if ( that.focusIndex != null && item.index !== that.focusIndex ) {
      that._trigger( "focus", event, { item: item } );
      if ( !that.isOpen ) {
       that._select( item, event );
      }
     }
     that.focusIndex = item.index;

     that.button.attr( "aria-activedescendant",
      that.menuItems.eq( item.index ).attr( "id" ) );
    }
   } )
   .menu( "instance" );

  // Don't close the menu on mouseleave
  this.menuInstance._off( this.menu, "mouseleave" );

  // Cancel the menu's collapseAll on document click
  this.menuInstance._closeOnDocumentClick = function() {
   return false;
  };

  // Selects often contain empty items, but never contain dividers
  this.menuInstance._isDivider = function() {
   return false;
  };
 },

 refresh: function() {
  this._refreshMenu();
  this.buttonItem.replaceWith(
   this.buttonItem = this._renderButtonItem(

    // Fall back to an empty object in case there are no options
    this._getSelectedItem().data( "ui-selectmenu-item" ) || {}
   )
  );
  if ( this.options.width === null ) {
   this._resizeButton();
  }
 },

 _refreshMenu: function() {
  var item,
   options = this.element.find( "option" );

  this.menu.empty();

  this._parseOptions( options );
  this._renderMenu( this.menu, this.items );

  this.menuInstance.refresh();
  this.menuItems = this.menu.find( "li" )
   .not( ".ui-selectmenu-optgroup" )
    .find( ".ui-menu-item-wrapper" );

  this._rendered = true;

  if ( !options.length ) {
   return;
  }

  item = this._getSelectedItem();

  // Update the menu to have the correct item focused
  this.menuInstance.focus( null, item );
  this._setAria( item.data( "ui-selectmenu-item" ) );

  // Set disabled state
  this._setOption( "disabled", this.element.prop( "disabled" ) );
 },

 open: function( event ) {
  if ( this.options.disabled ) {
   return;
  }

  // If this is the first time the menu is being opened, render the items
  if ( !this._rendered ) {
   this._refreshMenu();
  } else {

   // Menu clears focus on close, reset focus to selected item
   this._removeClass( this.menu.find( ".ui-state-active" ), null, "ui-state-active" );
   this.menuInstance.focus( null, this._getSelectedItem() );
  }

  // If there are no options, don't open the menu
  if ( !this.menuItems.length ) {
   return;
  }

  this.isOpen = true;
  this._toggleAttr();
  this._resizeMenu();
  this._position();

  this._on( this.document, this._documentClick );

  this._trigger( "open", event );
 },

 _position: function() {
  this.menuWrap.position( $.extend( { of: this.button }, this.options.position ) );
 },

 close: function( event ) {
  if ( !this.isOpen ) {
   return;
  }

  this.isOpen = false;
  this._toggleAttr();

  this.range = null;
  this._off( this.document );

  this._trigger( "close", event );
 },

 widget: function() {
  return this.button;
 },

 menuWidget: function() {
  return this.menu;
 },

 _renderButtonItem: function( item ) {
  var buttonItem = $( "<span>" );

  this._setText( buttonItem, item.label );
  this._addClass( buttonItem, "ui-selectmenu-text" );

  return buttonItem;
 },

 _renderMenu: function( ul, items ) {
  var that = this,
   currentOptgroup = "";

  $.each( items, function( index, item ) {
   var li;

   if ( item.optgroup !== currentOptgroup ) {
    li = $( "<li>", {
     text: item.optgroup
    } );
    that._addClass( li, "ui-selectmenu-optgroup", "ui-menu-divider" +
     ( item.element.parent( "optgroup" ).prop( "disabled" ) ?
      " ui-state-disabled" :
      "" ) );

    li.appendTo( ul );

    currentOptgroup = item.optgroup;
   }

   that._renderItemData( ul, item );
  } );
 },

 _renderItemData: function( ul, item ) {
  return this._renderItem( ul, item ).data( "ui-selectmenu-item", item );
 },

 _renderItem: function( ul, item ) {
  var li = $( "<li>" ),
   wrapper = $( "<div>", {
    title: item.element.attr( "title" )
   } );

  if ( item.disabled ) {
   this._addClass( li, null, "ui-state-disabled" );
  }
  this._setText( wrapper, item.label );

  return li.append( wrapper ).appendTo( ul );
 },

 _setText: function( element, value ) {
  if ( value ) {
   element.text( value );
  } else {
   element.html( "&#160;" );
  }
 },

 _move: function( direction, event ) {
  var item, next,
   filter = ".ui-menu-item";

  if ( this.isOpen ) {
   item = this.menuItems.eq( this.focusIndex ).parent( "li" );
  } else {
   item = this.menuItems.eq( this.element[ 0 ].selectedIndex ).parent( "li" );
   filter += ":not(.ui-state-disabled)";
  }

  if ( direction === "first" || direction === "last" ) {
   next = item[ direction === "first" ? "prevAll" : "nextAll" ]( filter ).eq( -1 );
  } else {
   next = item[ direction + "All" ]( filter ).eq( 0 );
  }

  if ( next.length ) {
   this.menuInstance.focus( event, next );
  }
 },

 _getSelectedItem: function() {
  return this.menuItems.eq( this.element[ 0 ].selectedIndex ).parent( "li" );
 },

 _toggle: function( event ) {
  this[ this.isOpen ? "close" : "open" ]( event );
 },

 _setSelection: function() {
  var selection;

  if ( !this.range ) {
   return;
  }

  if ( window.getSelection ) {
   selection = window.getSelection();
   selection.removeAllRanges();
   selection.addRange( this.range );

  // Support: IE8
  } else {
   this.range.select();
  }

  // Support: IE
  // Setting the text selection kills the button focus in IE, but
  // restoring the focus doesn't kill the selection.
  this.button.focus();
 },

 _documentClick: {
  mousedown: function( event ) {
   if ( !this.isOpen ) {
    return;
   }

   if ( !$( event.target ).closest( ".ui-selectmenu-menu, #" +
     $.ui.escapeSelector( this.ids.button ) ).length ) {
    this.close( event );
   }
  }
 },

 _buttonEvents: {

  // Prevent text selection from being reset when interacting with the selectmenu (#10144)
  mousedown: function() {
   var selection;

   if ( window.getSelection ) {
    selection = window.getSelection();
    if ( selection.rangeCount ) {
     this.range = selection.getRangeAt( 0 );
    }

   // Support: IE8
   } else {
    this.range = document.selection.createRange();
   }
  },

  click: function( event ) {
   this._setSelection();
   this._toggle( event );
  },

  keydown: function( event ) {
   var preventDefault = true;
   switch ( event.keyCode ) {
   case $.ui.keyCode.TAB:
   case $.ui.keyCode.ESCAPE:
    this.close( event );
    preventDefault = false;
    break;
   case $.ui.keyCode.ENTER:
    if ( this.isOpen ) {
     this._selectFocusedItem( event );
    }
    break;
   case $.ui.keyCode.UP:
    if ( event.altKey ) {
     this._toggle( event );
    } else {
     this._move( "prev", event );
    }
    break;
   case $.ui.keyCode.DOWN:
    if ( event.altKey ) {
     this._toggle( event );
    } else {
     this._move( "next", event );
    }
    break;
   case $.ui.keyCode.SPACE:
    if ( this.isOpen ) {
     this._selectFocusedItem( event );
    } else {
     this._toggle( event );
    }
    break;
   case $.ui.keyCode.LEFT:
    this._move( "prev", event );
    break;
   case $.ui.keyCode.RIGHT:
    this._move( "next", event );
    break;
   case $.ui.keyCode.HOME:
   case $.ui.keyCode.PAGE_UP:
    this._move( "first", event );
    break;
   case $.ui.keyCode.END:
   case $.ui.keyCode.PAGE_DOWN:
    this._move( "last", event );
    break;
   default:
    this.menu.trigger( event );
    preventDefault = false;
   }

   if ( preventDefault ) {
    event.preventDefault();
   }
  }
 },

 _selectFocusedItem: function( event ) {
  var item = this.menuItems.eq( this.focusIndex ).parent( "li" );
  if ( !item.hasClass( "ui-state-disabled" ) ) {
   this._select( item.data( "ui-selectmenu-item" ), event );
  }
 },

 _select: function( item, event ) {
  var oldIndex = this.element[ 0 ].selectedIndex;

  // Change native select element
  this.element[ 0 ].selectedIndex = item.index;
  this.buttonItem.replaceWith( this.buttonItem = this._renderButtonItem( item ) );
  this._setAria( item );
  this._trigger( "select", event, { item: item } );

  if ( item.index !== oldIndex ) {
   this._trigger( "change", event, { item: item } );
  }

  this.close( event );
 },

 _setAria: function( item ) {
  var id = this.menuItems.eq( item.index ).attr( "id" );

  this.button.attr( {
   "aria-labelledby": id,
   "aria-activedescendant": id
  } );
  this.menu.attr( "aria-activedescendant", id );
 },

 _setOption: function( key, value ) {
  if ( key === "icons" ) {
   var icon = this.button.find( "span.ui-icon" );
   this._removeClass( icon, null, this.options.icons.button )
    ._addClass( icon, null, value.button );
  }

  this._super( key, value );

  if ( key === "appendTo" ) {
   this.menuWrap.appendTo( this._appendTo() );
  }

  if ( key === "width" ) {
   this._resizeButton();
  }
 },

 _setOptionDisabled: function( value ) {
  this._super( value );

  this.menuInstance.option( "disabled", value );
  this.button.attr( "aria-disabled", value );
  this._toggleClass( this.button, null, "ui-state-disabled", value );

  this.element.prop( "disabled", value );
  if ( value ) {
   this.button.attr( "tabindex", -1 );
   this.close();
  } else {
   this.button.attr( "tabindex", 0 );
  }
 },

 _appendTo: function() {
  var element = this.options.appendTo;

  if ( element ) {
   element = element.jquery || element.nodeType ?
    $( element ) :
    this.document.find( element ).eq( 0 );
  }

  if ( !element || !element[ 0 ] ) {
   element = this.element.closest( ".ui-front, dialog" );
  }

  if ( !element.length ) {
   element = this.document[ 0 ].body;
  }

  return element;
 },

 _toggleAttr: function() {
  this.button.attr( "aria-expanded", this.isOpen );

  // We can't use two _toggleClass() calls here, because we need to make sure
  // we always remove classes first and add them second, otherwise if both classes have the
  // same theme class, it will be removed after we add it.
  this._removeClass( this.button, "ui-selectmenu-button-" +
   ( this.isOpen ? "closed" : "open" ) )
   ._addClass( this.button, "ui-selectmenu-button-" +
    ( this.isOpen ? "open" : "closed" ) )
   ._toggleClass( this.menuWrap, "ui-selectmenu-open", null, this.isOpen );

  this.menu.attr( "aria-hidden", !this.isOpen );
 },

 _resizeButton: function() {
  var width = this.options.width;

  // For `width:false`, just remove inline style and stop
  if ( width === false ) {
   this.button.css( "width", "" );
   return;
  }

  // For `width:null`, match the width of the original element
  if ( width === null ) {
   width = this.element.show().outerWidth();
   this.element.hide();
  }

  this.button.outerWidth( width );
 },

 _resizeMenu: function() {
  this.menu.outerWidth( Math.max(
   this.button.outerWidth(),

   // Support: IE10
   // IE10 wraps long text (possibly a rounding bug)
   // so we add 1px to avoid the wrapping
   this.menu.width( "" ).outerWidth() + 1
  ) );
 },

 _getCreateOptions: function() {
  var options = this._super();

  options.disabled = this.element.prop( "disabled" );

  return options;
 },

 _parseOptions: function( options ) {
  var that = this,
   data = [];
  options.each( function( index, item ) {
   data.push( that._parseOption( $( item ), index ) );
  } );
  this.items = data;
 },

 _parseOption: function( option, index ) {
  var optgroup = option.parent( "optgroup" );

  return {
   element: option,
   index: index,
   value: option.val(),
   label: option.text(),
   optgroup: optgroup.attr( "label" ) || "",
   disabled: optgroup.prop( "disabled" ) || option.prop( "disabled" )
  };
 },

 _destroy: function() {
  this._unbindFormResetHandler();
  this.menuWrap.remove();
  this.button.remove();
  this.element.show();
  this.element.removeUniqueId();
  this.labels.attr( "for", this.ids.element );
 }
} ] );


/*!
 * jQuery UI Slider 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Slider
//>>group: Widgets
//>>description: Displays a flexible slider with ranges and accessibility via keyboard.
//>>docs: http://api.jqueryui.com/slider/
//>>demos: http://jqueryui.com/slider/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/slider.css
//>>css.theme: ../../themes/base/theme.css



var widgetsSlider = $.widget( "ui.slider", $.ui.mouse, {
 version: "1.12.1",
 widgetEventPrefix: "slide",

 options: {
  animate: false,
  classes: {
   "ui-slider": "ui-corner-all",
   "ui-slider-handle": "ui-corner-all",

   // Note: ui-widget-header isn't the most fittingly semantic framework class for this
   // element, but worked best visually with a variety of themes
   "ui-slider-range": "ui-corner-all ui-widget-header"
  },
  distance: 0,
  max: 100,
  min: 0,
  orientation: "horizontal",
  range: false,
  step: 1,
  value: 0,
  values: null,

  // Callbacks
  change: null,
  slide: null,
  start: null,
  stop: null
 },

 // Number of pages in a slider
 // (how many times can you page up/down to go through the whole range)
 numPages: 5,

 _create: function() {
  this._keySliding = false;
  this._mouseSliding = false;
  this._animateOff = true;
  this._handleIndex = null;
  this._detectOrientation();
  this._mouseInit();
  this._calculateNewMax();

  this._addClass( "ui-slider ui-slider-" + this.orientation,
   "ui-widget ui-widget-content" );

  this._refresh();

  this._animateOff = false;
 },

 _refresh: function() {
  this._createRange();
  this._createHandles();
  this._setupEvents();
  this._refreshValue();
 },

 _createHandles: function() {
  var i, handleCount,
   options = this.options,
   existingHandles = this.element.find( ".ui-slider-handle" ),
   handle = "<span tabindex='0'></span>",
   handles = [];

  handleCount = ( options.values && options.values.length ) || 1;

  if ( existingHandles.length > handleCount ) {
   existingHandles.slice( handleCount ).remove();
   existingHandles = existingHandles.slice( 0, handleCount );
  }

  for ( i = existingHandles.length; i < handleCount; i++ ) {
   handles.push( handle );
  }

  this.handles = existingHandles.add( $( handles.join( "" ) ).appendTo( this.element ) );

  this._addClass( this.handles, "ui-slider-handle", "ui-state-default" );

  this.handle = this.handles.eq( 0 );

  this.handles.each( function( i ) {
   $( this )
    .data( "ui-slider-handle-index", i )
    .attr( "tabIndex", 0 );
  } );
 },

 _createRange: function() {
  var options = this.options;

  if ( options.range ) {
   if ( options.range === true ) {
    if ( !options.values ) {
     options.values = [ this._valueMin(), this._valueMin() ];
    } else if ( options.values.length && options.values.length !== 2 ) {
     options.values = [ options.values[ 0 ], options.values[ 0 ] ];
    } else if ( $.isArray( options.values ) ) {
     options.values = options.values.slice( 0 );
    }
   }

   if ( !this.range || !this.range.length ) {
    this.range = $( "<div>" )
     .appendTo( this.element );

    this._addClass( this.range, "ui-slider-range" );
   } else {
    this._removeClass( this.range, "ui-slider-range-min ui-slider-range-max" );

    // Handle range switching from true to min/max
    this.range.css( {
     "left": "",
     "bottom": ""
    } );
   }
   if ( options.range === "min" || options.range === "max" ) {
    this._addClass( this.range, "ui-slider-range-" + options.range );
   }
  } else {
   if ( this.range ) {
    this.range.remove();
   }
   this.range = null;
  }
 },

 _setupEvents: function() {
  this._off( this.handles );
  this._on( this.handles, this._handleEvents );
  this._hoverable( this.handles );
  this._focusable( this.handles );
 },

 _destroy: function() {
  this.handles.remove();
  if ( this.range ) {
   this.range.remove();
  }

  this._mouseDestroy();
 },

 _mouseCapture: function( event ) {
  var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
   that = this,
   o = this.options;

  if ( o.disabled ) {
   return false;
  }

  this.elementSize = {
   width: this.element.outerWidth(),
   height: this.element.outerHeight()
  };
  this.elementOffset = this.element.offset();

  position = { x: event.pageX, y: event.pageY };
  normValue = this._normValueFromMouse( position );
  distance = this._valueMax() - this._valueMin() + 1;
  this.handles.each( function( i ) {
   var thisDistance = Math.abs( normValue - that.values( i ) );
   if ( ( distance > thisDistance ) ||
    ( distance === thisDistance &&
     ( i === that._lastChangedValue || that.values( i ) === o.min ) ) ) {
    distance = thisDistance;
    closestHandle = $( this );
    index = i;
   }
  } );

  allowed = this._start( event, index );
  if ( allowed === false ) {
   return false;
  }
  this._mouseSliding = true;

  this._handleIndex = index;

  this._addClass( closestHandle, null, "ui-state-active" );
  closestHandle.trigger( "focus" );

  offset = closestHandle.offset();
  mouseOverHandle = !$( event.target ).parents().addBack().is( ".ui-slider-handle" );
  this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {
   left: event.pageX - offset.left - ( closestHandle.width() / 2 ),
   top: event.pageY - offset.top -
    ( closestHandle.height() / 2 ) -
    ( parseInt( closestHandle.css( "borderTopWidth" ), 10 ) || 0 ) -
    ( parseInt( closestHandle.css( "borderBottomWidth" ), 10 ) || 0 ) +
    ( parseInt( closestHandle.css( "marginTop" ), 10 ) || 0 )
  };

  if ( !this.handles.hasClass( "ui-state-hover" ) ) {
   this._slide( event, index, normValue );
  }
  this._animateOff = true;
  return true;
 },

 _mouseStart: function() {
  return true;
 },

 _mouseDrag: function( event ) {
  var position = { x: event.pageX, y: event.pageY },
   normValue = this._normValueFromMouse( position );

  this._slide( event, this._handleIndex, normValue );

  return false;
 },

 _mouseStop: function( event ) {
  this._removeClass( this.handles, null, "ui-state-active" );
  this._mouseSliding = false;

  this._stop( event, this._handleIndex );
  this._change( event, this._handleIndex );

  this._handleIndex = null;
  this._clickOffset = null;
  this._animateOff = false;

  return false;
 },

 _detectOrientation: function() {
  this.orientation = ( this.options.orientation === "vertical" ) ? "vertical" : "horizontal";
 },

 _normValueFromMouse: function( position ) {
  var pixelTotal,
   pixelMouse,
   percentMouse,
   valueTotal,
   valueMouse;

  if ( this.orientation === "horizontal" ) {
   pixelTotal = this.elementSize.width;
   pixelMouse = position.x - this.elementOffset.left -
    ( this._clickOffset ? this._clickOffset.left : 0 );
  } else {
   pixelTotal = this.elementSize.height;
   pixelMouse = position.y - this.elementOffset.top -
    ( this._clickOffset ? this._clickOffset.top : 0 );
  }

  percentMouse = ( pixelMouse / pixelTotal );
  if ( percentMouse > 1 ) {
   percentMouse = 1;
  }
  if ( percentMouse < 0 ) {
   percentMouse = 0;
  }
  if ( this.orientation === "vertical" ) {
   percentMouse = 1 - percentMouse;
  }

  valueTotal = this._valueMax() - this._valueMin();
  valueMouse = this._valueMin() + percentMouse * valueTotal;

  return this._trimAlignValue( valueMouse );
 },

 _uiHash: function( index, value, values ) {
  var uiHash = {
   handle: this.handles[ index ],
   handleIndex: index,
   value: value !== undefined ? value : this.value()
  };

  if ( this._hasMultipleValues() ) {
   uiHash.value = value !== undefined ? value : this.values( index );
   uiHash.values = values || this.values();
  }

  return uiHash;
 },

 _hasMultipleValues: function() {
  return this.options.values && this.options.values.length;
 },

 _start: function( event, index ) {
  return this._trigger( "start", event, this._uiHash( index ) );
 },

 _slide: function( event, index, newVal ) {
  var allowed, otherVal,
   currentValue = this.value(),
   newValues = this.values();

  if ( this._hasMultipleValues() ) {
   otherVal = this.values( index ? 0 : 1 );
   currentValue = this.values( index );

   if ( this.options.values.length === 2 && this.options.range === true ) {
    newVal =  index === 0 ? Math.min( otherVal, newVal ) : Math.max( otherVal, newVal );
   }

   newValues[ index ] = newVal;
  }

  if ( newVal === currentValue ) {
   return;
  }

  allowed = this._trigger( "slide", event, this._uiHash( index, newVal, newValues ) );

  // A slide can be canceled by returning false from the slide callback
  if ( allowed === false ) {
   return;
  }

  if ( this._hasMultipleValues() ) {
   this.values( index, newVal );
  } else {
   this.value( newVal );
  }
 },

 _stop: function( event, index ) {
  this._trigger( "stop", event, this._uiHash( index ) );
 },

 _change: function( event, index ) {
  if ( !this._keySliding && !this._mouseSliding ) {

   //store the last changed value index for reference when handles overlap
   this._lastChangedValue = index;
   this._trigger( "change", event, this._uiHash( index ) );
  }
 },

 value: function( newValue ) {
  if ( arguments.length ) {
   this.options.value = this._trimAlignValue( newValue );
   this._refreshValue();
   this._change( null, 0 );
   return;
  }

  return this._value();
 },

 values: function( index, newValue ) {
  var vals,
   newValues,
   i;

  if ( arguments.length > 1 ) {
   this.options.values[ index ] = this._trimAlignValue( newValue );
   this._refreshValue();
   this._change( null, index );
   return;
  }

  if ( arguments.length ) {
   if ( $.isArray( arguments[ 0 ] ) ) {
    vals = this.options.values;
    newValues = arguments[ 0 ];
    for ( i = 0; i < vals.length; i += 1 ) {
     vals[ i ] = this._trimAlignValue( newValues[ i ] );
     this._change( null, i );
    }
    this._refreshValue();
   } else {
    if ( this._hasMultipleValues() ) {
     return this._values( index );
    } else {
     return this.value();
    }
   }
  } else {
   return this._values();
  }
 },

 _setOption: function( key, value ) {
  var i,
   valsLength = 0;

  if ( key === "range" && this.options.range === true ) {
   if ( value === "min" ) {
    this.options.value = this._values( 0 );
    this.options.values = null;
   } else if ( value === "max" ) {
    this.options.value = this._values( this.options.values.length - 1 );
    this.options.values = null;
   }
  }

  if ( $.isArray( this.options.values ) ) {
   valsLength = this.options.values.length;
  }

  this._super( key, value );

  switch ( key ) {
   case "orientation":
    this._detectOrientation();
    this._removeClass( "ui-slider-horizontal ui-slider-vertical" )
     ._addClass( "ui-slider-" + this.orientation );
    this._refreshValue();
    if ( this.options.range ) {
     this._refreshRange( value );
    }

    // Reset positioning from previous orientation
    this.handles.css( value === "horizontal" ? "bottom" : "left", "" );
    break;
   case "value":
    this._animateOff = true;
    this._refreshValue();
    this._change( null, 0 );
    this._animateOff = false;
    break;
   case "values":
    this._animateOff = true;
    this._refreshValue();

    // Start from the last handle to prevent unreachable handles (#9046)
    for ( i = valsLength - 1; i >= 0; i-- ) {
     this._change( null, i );
    }
    this._animateOff = false;
    break;
   case "step":
   case "min":
   case "max":
    this._animateOff = true;
    this._calculateNewMax();
    this._refreshValue();
    this._animateOff = false;
    break;
   case "range":
    this._animateOff = true;
    this._refresh();
    this._animateOff = false;
    break;
  }
 },

 _setOptionDisabled: function( value ) {
  this._super( value );

  this._toggleClass( null, "ui-state-disabled", !!value );
 },

 //internal value getter
 // _value() returns value trimmed by min and max, aligned by step
 _value: function() {
  var val = this.options.value;
  val = this._trimAlignValue( val );

  return val;
 },

 //internal values getter
 // _values() returns array of values trimmed by min and max, aligned by step
 // _values( index ) returns single value trimmed by min and max, aligned by step
 _values: function( index ) {
  var val,
   vals,
   i;

  if ( arguments.length ) {
   val = this.options.values[ index ];
   val = this._trimAlignValue( val );

   return val;
  } else if ( this._hasMultipleValues() ) {

   // .slice() creates a copy of the array
   // this copy gets trimmed by min and max and then returned
   vals = this.options.values.slice();
   for ( i = 0; i < vals.length; i += 1 ) {
    vals[ i ] = this._trimAlignValue( vals[ i ] );
   }

   return vals;
  } else {
   return [];
  }
 },

 // Returns the step-aligned value that val is closest to, between (inclusive) min and max
 _trimAlignValue: function( val ) {
  if ( val <= this._valueMin() ) {
   return this._valueMin();
  }
  if ( val >= this._valueMax() ) {
   return this._valueMax();
  }
  var step = ( this.options.step > 0 ) ? this.options.step : 1,
   valModStep = ( val - this._valueMin() ) % step,
   alignValue = val - valModStep;

  if ( Math.abs( valModStep ) * 2 >= step ) {
   alignValue += ( valModStep > 0 ) ? step : ( -step );
  }

  // Since JavaScript has problems with large floats, round
  // the final value to 5 digits after the decimal point (see #4124)
  return parseFloat( alignValue.toFixed( 5 ) );
 },

 _calculateNewMax: function() {
  var max = this.options.max,
   min = this._valueMin(),
   step = this.options.step,
   aboveMin = Math.round( ( max - min ) / step ) * step;
  max = aboveMin + min;
  if ( max > this.options.max ) {

   //If max is not divisible by step, rounding off may increase its value
   max -= step;
  }
  this.max = parseFloat( max.toFixed( this._precision() ) );
 },

 _precision: function() {
  var precision = this._precisionOf( this.options.step );
  if ( this.options.min !== null ) {
   precision = Math.max( precision, this._precisionOf( this.options.min ) );
  }
  return precision;
 },

 _precisionOf: function( num ) {
  var str = num.toString(),
   decimal = str.indexOf( "." );
  return decimal === -1 ? 0 : str.length - decimal - 1;
 },

 _valueMin: function() {
  return this.options.min;
 },

 _valueMax: function() {
  return this.max;
 },

 _refreshRange: function( orientation ) {
  if ( orientation === "vertical" ) {
   this.range.css( { "width": "", "left": "" } );
  }
  if ( orientation === "horizontal" ) {
   this.range.css( { "height": "", "bottom": "" } );
  }
 },

 _refreshValue: function() {
  var lastValPercent, valPercent, value, valueMin, valueMax,
   oRange = this.options.range,
   o = this.options,
   that = this,
   animate = ( !this._animateOff ) ? o.animate : false,
   _set = {};

  if ( this._hasMultipleValues() ) {
   this.handles.each( function( i ) {
    valPercent = ( that.values( i ) - that._valueMin() ) / ( that._valueMax() -
     that._valueMin() ) * 100;
    _set[ that.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
    $( this ).stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );
    if ( that.options.range === true ) {
     if ( that.orientation === "horizontal" ) {
      if ( i === 0 ) {
       that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( {
        left: valPercent + "%"
       }, o.animate );
      }
      if ( i === 1 ) {
       that.range[ animate ? "animate" : "css" ]( {
        width: ( valPercent - lastValPercent ) + "%"
       }, {
        queue: false,
        duration: o.animate
       } );
      }
     } else {
      if ( i === 0 ) {
       that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( {
        bottom: ( valPercent ) + "%"
       }, o.animate );
      }
      if ( i === 1 ) {
       that.range[ animate ? "animate" : "css" ]( {
        height: ( valPercent - lastValPercent ) + "%"
       }, {
        queue: false,
        duration: o.animate
       } );
      }
     }
    }
    lastValPercent = valPercent;
   } );
  } else {
   value = this.value();
   valueMin = this._valueMin();
   valueMax = this._valueMax();
   valPercent = ( valueMax !== valueMin ) ?
     ( value - valueMin ) / ( valueMax - valueMin ) * 100 :
     0;
   _set[ this.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
   this.handle.stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );

   if ( oRange === "min" && this.orientation === "horizontal" ) {
    this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( {
     width: valPercent + "%"
    }, o.animate );
   }
   if ( oRange === "max" && this.orientation === "horizontal" ) {
    this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( {
     width: ( 100 - valPercent ) + "%"
    }, o.animate );
   }
   if ( oRange === "min" && this.orientation === "vertical" ) {
    this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( {
     height: valPercent + "%"
    }, o.animate );
   }
   if ( oRange === "max" && this.orientation === "vertical" ) {
    this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( {
     height: ( 100 - valPercent ) + "%"
    }, o.animate );
   }
  }
 },

 _handleEvents: {
  keydown: function( event ) {
   var allowed, curVal, newVal, step,
    index = $( event.target ).data( "ui-slider-handle-index" );

   switch ( event.keyCode ) {
    case $.ui.keyCode.HOME:
    case $.ui.keyCode.END:
    case $.ui.keyCode.PAGE_UP:
    case $.ui.keyCode.PAGE_DOWN:
    case $.ui.keyCode.UP:
    case $.ui.keyCode.RIGHT:
    case $.ui.keyCode.DOWN:
    case $.ui.keyCode.LEFT:
     event.preventDefault();
     if ( !this._keySliding ) {
      this._keySliding = true;
      this._addClass( $( event.target ), null, "ui-state-active" );
      allowed = this._start( event, index );
      if ( allowed === false ) {
       return;
      }
     }
     break;
   }

   step = this.options.step;
   if ( this._hasMultipleValues() ) {
    curVal = newVal = this.values( index );
   } else {
    curVal = newVal = this.value();
   }

   switch ( event.keyCode ) {
    case $.ui.keyCode.HOME:
     newVal = this._valueMin();
     break;
    case $.ui.keyCode.END:
     newVal = this._valueMax();
     break;
    case $.ui.keyCode.PAGE_UP:
     newVal = this._trimAlignValue(
      curVal + ( ( this._valueMax() - this._valueMin() ) / this.numPages )
     );
     break;
    case $.ui.keyCode.PAGE_DOWN:
     newVal = this._trimAlignValue(
      curVal - ( ( this._valueMax() - this._valueMin() ) / this.numPages ) );
     break;
    case $.ui.keyCode.UP:
    case $.ui.keyCode.RIGHT:
     if ( curVal === this._valueMax() ) {
      return;
     }
     newVal = this._trimAlignValue( curVal + step );
     break;
    case $.ui.keyCode.DOWN:
    case $.ui.keyCode.LEFT:
     if ( curVal === this._valueMin() ) {
      return;
     }
     newVal = this._trimAlignValue( curVal - step );
     break;
   }

   this._slide( event, index, newVal );
  },
  keyup: function( event ) {
   var index = $( event.target ).data( "ui-slider-handle-index" );

   if ( this._keySliding ) {
    this._keySliding = false;
    this._stop( event, index );
    this._change( event, index );
    this._removeClass( $( event.target ), null, "ui-state-active" );
   }
  }
 }
} );


/*!
 * jQuery UI Sortable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Sortable
//>>group: Interactions
//>>description: Enables items in a list to be sorted using the mouse.
//>>docs: http://api.jqueryui.com/sortable/
//>>demos: http://jqueryui.com/sortable/
//>>css.structure: ../../themes/base/sortable.css



var widgetsSortable = $.widget( "ui.sortable", $.ui.mouse, {
 version: "1.12.1",
 widgetEventPrefix: "sort",
 ready: false,
 options: {
  appendTo: "parent",
  axis: false,
  connectWith: false,
  containment: false,
  cursor: "auto",
  cursorAt: false,
  dropOnEmpty: true,
  forcePlaceholderSize: false,
  forceHelperSize: false,
  grid: false,
  handle: false,
  helper: "original",
  items: "> *",
  opacity: false,
  placeholder: false,
  revert: false,
  scroll: true,
  scrollSensitivity: 20,
  scrollSpeed: 20,
  scope: "default",
  tolerance: "intersect",
  zIndex: 1000,

  // Callbacks
  activate: null,
  beforeStop: null,
  change: null,
  deactivate: null,
  out: null,
  over: null,
  receive: null,
  remove: null,
  sort: null,
  start: null,
  stop: null,
  update: null
 },

 _isOverAxis: function( x, reference, size ) {
  return ( x >= reference ) && ( x < ( reference + size ) );
 },

 _isFloating: function( item ) {
  return ( /left|right/ ).test( item.css( "float" ) ) ||
   ( /inline|table-cell/ ).test( item.css( "display" ) );
 },

 _create: function() {
  this.containerCache = {};
  this._addClass( "ui-sortable" );

  //Get the items
  this.refresh();

  //Let's determine the parent's offset
  this.offset = this.element.offset();

  //Initialize mouse events for interaction
  this._mouseInit();

  this._setHandleClassName();

  //We're ready to go
  this.ready = true;

 },

 _setOption: function( key, value ) {
  this._super( key, value );

  if ( key === "handle" ) {
   this._setHandleClassName();
  }
 },

 _setHandleClassName: function() {
  var that = this;
  this._removeClass( this.element.find( ".ui-sortable-handle" ), "ui-sortable-handle" );
  $.each( this.items, function() {
   that._addClass(
    this.instance.options.handle ?
     this.item.find( this.instance.options.handle ) :
     this.item,
    "ui-sortable-handle"
   );
  } );
 },

 _destroy: function() {
  this._mouseDestroy();

  for ( var i = this.items.length - 1; i >= 0; i-- ) {
   this.items[ i ].item.removeData( this.widgetName + "-item" );
  }

  return this;
 },

 _mouseCapture: function( event, overrideHandle ) {
  var currentItem = null,
   validHandle = false,
   that = this;

  if ( this.reverting ) {
   return false;
  }

  if ( this.options.disabled || this.options.type === "static" ) {
   return false;
  }

  //We have to refresh the items data once first
  this._refreshItems( event );

  //Find out if the clicked node (or one of its parents) is a actual item in this.items
  $( event.target ).parents().each( function() {
   if ( $.data( this, that.widgetName + "-item" ) === that ) {
    currentItem = $( this );
    return false;
   }
  } );
  if ( $.data( event.target, that.widgetName + "-item" ) === that ) {
   currentItem = $( event.target );
  }

  if ( !currentItem ) {
   return false;
  }
  if ( this.options.handle && !overrideHandle ) {
   $( this.options.handle, currentItem ).find( "*" ).addBack().each( function() {
    if ( this === event.target ) {
     validHandle = true;
    }
   } );
   if ( !validHandle ) {
    return false;
   }
  }

  this.currentItem = currentItem;
  this._removeCurrentsFromItems();
  return true;

 },

 _mouseStart: function( event, overrideHandle, noActivation ) {

  var i, body,
   o = this.options;

  this.currentContainer = this;

  //We only need to call refreshPositions, because the refreshItems call has been moved to
  // mouseCapture
  this.refreshPositions();

  //Create and append the visible helper
  this.helper = this._createHelper( event );

  //Cache the helper size
  this._cacheHelperProportions();

  /*
   * - Position generation -
   * This block generates everything position related - it's the core of draggables.
   */

  //Cache the margins of the original element
  this._cacheMargins();

  //Get the next scrolling parent
  this.scrollParent = this.helper.scrollParent();

  //The element's absolute position on the page minus margins
  this.offset = this.currentItem.offset();
  this.offset = {
   top: this.offset.top - this.margins.top,
   left: this.offset.left - this.margins.left
  };

  $.extend( this.offset, {
   click: { //Where the click happened, relative to the element
    left: event.pageX - this.offset.left,
    top: event.pageY - this.offset.top
   },
   parent: this._getParentOffset(),

   // This is a relative to absolute position minus the actual position calculation -
   // only used for relative positioned helper
   relative: this._getRelativeOffset()
  } );

  // Only after we got the offset, we can change the helper's position to absolute
  // TODO: Still need to figure out a way to make relative sorting possible
  this.helper.css( "position", "absolute" );
  this.cssPosition = this.helper.css( "position" );

  //Generate the original position
  this.originalPosition = this._generatePosition( event );
  this.originalPageX = event.pageX;
  this.originalPageY = event.pageY;

  //Adjust the mouse offset relative to the helper if "cursorAt" is supplied
  ( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );

  //Cache the former DOM position
  this.domPosition = {
   prev: this.currentItem.prev()[ 0 ],
   parent: this.currentItem.parent()[ 0 ]
  };

  // If the helper is not the original, hide the original so it's not playing any role during
  // the drag, won't cause anything bad this way
  if ( this.helper[ 0 ] !== this.currentItem[ 0 ] ) {
   this.currentItem.hide();
  }

  //Create the placeholder
  this._createPlaceholder();

  //Set a containment if given in the options
  if ( o.containment ) {
   this._setContainment();
  }

  if ( o.cursor && o.cursor !== "auto" ) { // cursor option
   body = this.document.find( "body" );

   // Support: IE
   this.storedCursor = body.css( "cursor" );
   body.css( "cursor", o.cursor );

   this.storedStylesheet =
    $( "<style>*{ cursor: " + o.cursor + " !important; }</style>" ).appendTo( body );
  }

  if ( o.opacity ) { // opacity option
   if ( this.helper.css( "opacity" ) ) {
    this._storedOpacity = this.helper.css( "opacity" );
   }
   this.helper.css( "opacity", o.opacity );
  }

  if ( o.zIndex ) { // zIndex option
   if ( this.helper.css( "zIndex" ) ) {
    this._storedZIndex = this.helper.css( "zIndex" );
   }
   this.helper.css( "zIndex", o.zIndex );
  }

  //Prepare scrolling
  if ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&
    this.scrollParent[ 0 ].tagName !== "HTML" ) {
   this.overflowOffset = this.scrollParent.offset();
  }

  //Call callbacks
  this._trigger( "start", event, this._uiHash() );

  //Recache the helper size
  if ( !this._preserveHelperProportions ) {
   this._cacheHelperProportions();
  }

  //Post "activate" events to possible containers
  if ( !noActivation ) {
   for ( i = this.containers.length - 1; i >= 0; i-- ) {
    this.containers[ i ]._trigger( "activate", event, this._uiHash( this ) );
   }
  }

  //Prepare possible droppables
  if ( $.ui.ddmanager ) {
   $.ui.ddmanager.current = this;
  }

  if ( $.ui.ddmanager && !o.dropBehaviour ) {
   $.ui.ddmanager.prepareOffsets( this, event );
  }

  this.dragging = true;

  this._addClass( this.helper, "ui-sortable-helper" );

  // Execute the drag once - this causes the helper not to be visiblebefore getting its
  // correct position
  this._mouseDrag( event );
  return true;

 },

 _mouseDrag: function( event ) {
  var i, item, itemElement, intersection,
   o = this.options,
   scrolled = false;

  //Compute the helpers position
  this.position = this._generatePosition( event );
  this.positionAbs = this._convertPositionTo( "absolute" );

  if ( !this.lastPositionAbs ) {
   this.lastPositionAbs = this.positionAbs;
  }

  //Do scrolling
  if ( this.options.scroll ) {
   if ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&
     this.scrollParent[ 0 ].tagName !== "HTML" ) {

    if ( ( this.overflowOffset.top + this.scrollParent[ 0 ].offsetHeight ) -
      event.pageY < o.scrollSensitivity ) {
     this.scrollParent[ 0 ].scrollTop =
      scrolled = this.scrollParent[ 0 ].scrollTop + o.scrollSpeed;
    } else if ( event.pageY - this.overflowOffset.top < o.scrollSensitivity ) {
     this.scrollParent[ 0 ].scrollTop =
      scrolled = this.scrollParent[ 0 ].scrollTop - o.scrollSpeed;
    }

    if ( ( this.overflowOffset.left + this.scrollParent[ 0 ].offsetWidth ) -
      event.pageX < o.scrollSensitivity ) {
     this.scrollParent[ 0 ].scrollLeft = scrolled =
      this.scrollParent[ 0 ].scrollLeft + o.scrollSpeed;
    } else if ( event.pageX - this.overflowOffset.left < o.scrollSensitivity ) {
     this.scrollParent[ 0 ].scrollLeft = scrolled =
      this.scrollParent[ 0 ].scrollLeft - o.scrollSpeed;
    }

   } else {

    if ( event.pageY - this.document.scrollTop() < o.scrollSensitivity ) {
     scrolled = this.document.scrollTop( this.document.scrollTop() - o.scrollSpeed );
    } else if ( this.window.height() - ( event.pageY - this.document.scrollTop() ) <
      o.scrollSensitivity ) {
     scrolled = this.document.scrollTop( this.document.scrollTop() + o.scrollSpeed );
    }

    if ( event.pageX - this.document.scrollLeft() < o.scrollSensitivity ) {
     scrolled = this.document.scrollLeft(
      this.document.scrollLeft() - o.scrollSpeed
     );
    } else if ( this.window.width() - ( event.pageX - this.document.scrollLeft() ) <
      o.scrollSensitivity ) {
     scrolled = this.document.scrollLeft(
      this.document.scrollLeft() + o.scrollSpeed
     );
    }

   }

   if ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {
    $.ui.ddmanager.prepareOffsets( this, event );
   }
  }

  //Regenerate the absolute position used for position checks
  this.positionAbs = this._convertPositionTo( "absolute" );

  //Set the helper position
  if ( !this.options.axis || this.options.axis !== "y" ) {
   this.helper[ 0 ].style.left = this.position.left + "px";
  }
  if ( !this.options.axis || this.options.axis !== "x" ) {
   this.helper[ 0 ].style.top = this.position.top + "px";
  }

  //Rearrange
  for ( i = this.items.length - 1; i >= 0; i-- ) {

   //Cache variables and intersection, continue if no intersection
   item = this.items[ i ];
   itemElement = item.item[ 0 ];
   intersection = this._intersectsWithPointer( item );
   if ( !intersection ) {
    continue;
   }

   // Only put the placeholder inside the current Container, skip all
   // items from other containers. This works because when moving
   // an item from one container to another the
   // currentContainer is switched before the placeholder is moved.
   //
   // Without this, moving items in "sub-sortables" can cause
   // the placeholder to jitter between the outer and inner container.
   if ( item.instance !== this.currentContainer ) {
    continue;
   }

   // Cannot intersect with itself
   // no useless actions that have been done before
   // no action if the item moved is the parent of the item checked
   if ( itemElement !== this.currentItem[ 0 ] &&
    this.placeholder[ intersection === 1 ? "next" : "prev" ]()[ 0 ] !== itemElement &&
    !$.contains( this.placeholder[ 0 ], itemElement ) &&
    ( this.options.type === "semi-dynamic" ?
     !$.contains( this.element[ 0 ], itemElement ) :
     true
    )
   ) {

    this.direction = intersection === 1 ? "down" : "up";

    if ( this.options.tolerance === "pointer" || this._intersectsWithSides( item ) ) {
     this._rearrange( event, item );
    } else {
     break;
    }

    this._trigger( "change", event, this._uiHash() );
    break;
   }
  }

  //Post events to containers
  this._contactContainers( event );

  //Interconnect with droppables
  if ( $.ui.ddmanager ) {
   $.ui.ddmanager.drag( this, event );
  }

  //Call callbacks
  this._trigger( "sort", event, this._uiHash() );

  this.lastPositionAbs = this.positionAbs;
  return false;

 },

 _mouseStop: function( event, noPropagation ) {

  if ( !event ) {
   return;
  }

  //If we are using droppables, inform the manager about the drop
  if ( $.ui.ddmanager && !this.options.dropBehaviour ) {
   $.ui.ddmanager.drop( this, event );
  }

  if ( this.options.revert ) {
   var that = this,
    cur = this.placeholder.offset(),
    axis = this.options.axis,
    animation = {};

   if ( !axis || axis === "x" ) {
    animation.left = cur.left - this.offset.parent.left - this.margins.left +
     ( this.offsetParent[ 0 ] === this.document[ 0 ].body ?
      0 :
      this.offsetParent[ 0 ].scrollLeft
     );
   }
   if ( !axis || axis === "y" ) {
    animation.top = cur.top - this.offset.parent.top - this.margins.top +
     ( this.offsetParent[ 0 ] === this.document[ 0 ].body ?
      0 :
      this.offsetParent[ 0 ].scrollTop
     );
   }
   this.reverting = true;
   $( this.helper ).animate(
    animation,
    parseInt( this.options.revert, 10 ) || 500,
    function() {
     that._clear( event );
    }
   );
  } else {
   this._clear( event, noPropagation );
  }

  return false;

 },

 cancel: function() {

  if ( this.dragging ) {

   this._mouseUp( new $.Event( "mouseup", { target: null } ) );

   if ( this.options.helper === "original" ) {
    this.currentItem.css( this._storedCSS );
    this._removeClass( this.currentItem, "ui-sortable-helper" );
   } else {
    this.currentItem.show();
   }

   //Post deactivating events to containers
   for ( var i = this.containers.length - 1; i >= 0; i-- ) {
    this.containers[ i ]._trigger( "deactivate", null, this._uiHash( this ) );
    if ( this.containers[ i ].containerCache.over ) {
     this.containers[ i ]._trigger( "out", null, this._uiHash( this ) );
     this.containers[ i ].containerCache.over = 0;
    }
   }

  }

  if ( this.placeholder ) {

   //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
   // it unbinds ALL events from the original node!
   if ( this.placeholder[ 0 ].parentNode ) {
    this.placeholder[ 0 ].parentNode.removeChild( this.placeholder[ 0 ] );
   }
   if ( this.options.helper !== "original" && this.helper &&
     this.helper[ 0 ].parentNode ) {
    this.helper.remove();
   }

   $.extend( this, {
    helper: null,
    dragging: false,
    reverting: false,
    _noFinalSort: null
   } );

   if ( this.domPosition.prev ) {
    $( this.domPosition.prev ).after( this.currentItem );
   } else {
    $( this.domPosition.parent ).prepend( this.currentItem );
   }
  }

  return this;

 },

 serialize: function( o ) {

  var items = this._getItemsAsjQuery( o && o.connected ),
   str = [];
  o = o || {};

  $( items ).each( function() {
   var res = ( $( o.item || this ).attr( o.attribute || "id" ) || "" )
    .match( o.expression || ( /(.+)[\-=_](.+)/ ) );
   if ( res ) {
    str.push(
     ( o.key || res[ 1 ] + "[]" ) +
     "=" + ( o.key && o.expression ? res[ 1 ] : res[ 2 ] ) );
   }
  } );

  if ( !str.length && o.key ) {
   str.push( o.key + "=" );
  }

  return str.join( "&" );

 },

 toArray: function( o ) {

  var items = this._getItemsAsjQuery( o && o.connected ),
   ret = [];

  o = o || {};

  items.each( function() {
   ret.push( $( o.item || this ).attr( o.attribute || "id" ) || "" );
  } );
  return ret;

 },

 /* Be careful with the following core functions */
 _intersectsWith: function( item ) {

  var x1 = this.positionAbs.left,
   x2 = x1 + this.helperProportions.width,
   y1 = this.positionAbs.top,
   y2 = y1 + this.helperProportions.height,
   l = item.left,
   r = l + item.width,
   t = item.top,
   b = t + item.height,
   dyClick = this.offset.click.top,
   dxClick = this.offset.click.left,
   isOverElementHeight = ( this.options.axis === "x" ) || ( ( y1 + dyClick ) > t &&
    ( y1 + dyClick ) < b ),
   isOverElementWidth = ( this.options.axis === "y" ) || ( ( x1 + dxClick ) > l &&
    ( x1 + dxClick ) < r ),
   isOverElement = isOverElementHeight && isOverElementWidth;

  if ( this.options.tolerance === "pointer" ||
   this.options.forcePointerForContainers ||
   ( this.options.tolerance !== "pointer" &&
    this.helperProportions[ this.floating ? "width" : "height" ] >
    item[ this.floating ? "width" : "height" ] )
  ) {
   return isOverElement;
  } else {

   return ( l < x1 + ( this.helperProportions.width / 2 ) && // Right Half
    x2 - ( this.helperProportions.width / 2 ) < r && // Left Half
    t < y1 + ( this.helperProportions.height / 2 ) && // Bottom Half
    y2 - ( this.helperProportions.height / 2 ) < b ); // Top Half

  }
 },

 _intersectsWithPointer: function( item ) {
  var verticalDirection, horizontalDirection,
   isOverElementHeight = ( this.options.axis === "x" ) ||
    this._isOverAxis(
     this.positionAbs.top + this.offset.click.top, item.top, item.height ),
   isOverElementWidth = ( this.options.axis === "y" ) ||
    this._isOverAxis(
     this.positionAbs.left + this.offset.click.left, item.left, item.width ),
   isOverElement = isOverElementHeight && isOverElementWidth;

  if ( !isOverElement ) {
   return false;
  }

  verticalDirection = this._getDragVerticalDirection();
  horizontalDirection = this._getDragHorizontalDirection();

  return this.floating ?
   ( ( horizontalDirection === "right" || verticalDirection === "down" ) ? 2 : 1 )
   : ( verticalDirection && ( verticalDirection === "down" ? 2 : 1 ) );

 },

 _intersectsWithSides: function( item ) {

  var isOverBottomHalf = this._isOverAxis( this.positionAbs.top +
    this.offset.click.top, item.top + ( item.height / 2 ), item.height ),
   isOverRightHalf = this._isOverAxis( this.positionAbs.left +
    this.offset.click.left, item.left + ( item.width / 2 ), item.width ),
   verticalDirection = this._getDragVerticalDirection(),
   horizontalDirection = this._getDragHorizontalDirection();

  if ( this.floating && horizontalDirection ) {
   return ( ( horizontalDirection === "right" && isOverRightHalf ) ||
    ( horizontalDirection === "left" && !isOverRightHalf ) );
  } else {
   return verticalDirection && ( ( verticalDirection === "down" && isOverBottomHalf ) ||
    ( verticalDirection === "up" && !isOverBottomHalf ) );
  }

 },

 _getDragVerticalDirection: function() {
  var delta = this.positionAbs.top - this.lastPositionAbs.top;
  return delta !== 0 && ( delta > 0 ? "down" : "up" );
 },

 _getDragHorizontalDirection: function() {
  var delta = this.positionAbs.left - this.lastPositionAbs.left;
  return delta !== 0 && ( delta > 0 ? "right" : "left" );
 },

 refresh: function( event ) {
  this._refreshItems( event );
  this._setHandleClassName();
  this.refreshPositions();
  return this;
 },

 _connectWith: function() {
  var options = this.options;
  return options.connectWith.constructor === String ?
   [ options.connectWith ] :
   options.connectWith;
 },

 _getItemsAsjQuery: function( connected ) {

  var i, j, cur, inst,
   items = [],
   queries = [],
   connectWith = this._connectWith();

  if ( connectWith && connected ) {
   for ( i = connectWith.length - 1; i >= 0; i-- ) {
    cur = $( connectWith[ i ], this.document[ 0 ] );
    for ( j = cur.length - 1; j >= 0; j-- ) {
     inst = $.data( cur[ j ], this.widgetFullName );
     if ( inst && inst !== this && !inst.options.disabled ) {
      queries.push( [ $.isFunction( inst.options.items ) ?
       inst.options.items.call( inst.element ) :
       $( inst.options.items, inst.element )
        .not( ".ui-sortable-helper" )
        .not( ".ui-sortable-placeholder" ), inst ] );
     }
    }
   }
  }

  queries.push( [ $.isFunction( this.options.items ) ?
   this.options.items
    .call( this.element, null, { options: this.options, item: this.currentItem } ) :
   $( this.options.items, this.element )
    .not( ".ui-sortable-helper" )
    .not( ".ui-sortable-placeholder" ), this ] );

  function addItems() {
   items.push( this );
  }
  for ( i = queries.length - 1; i >= 0; i-- ) {
   queries[ i ][ 0 ].each( addItems );
  }

  return $( items );

 },

 _removeCurrentsFromItems: function() {

  var list = this.currentItem.find( ":data(" + this.widgetName + "-item)" );

  this.items = $.grep( this.items, function( item ) {
   for ( var j = 0; j < list.length; j++ ) {
    if ( list[ j ] === item.item[ 0 ] ) {
     return false;
    }
   }
   return true;
  } );

 },

 _refreshItems: function( event ) {

  this.items = [];
  this.containers = [ this ];

  var i, j, cur, inst, targetData, _queries, item, queriesLength,
   items = this.items,
   queries = [ [ $.isFunction( this.options.items ) ?
    this.options.items.call( this.element[ 0 ], event, { item: this.currentItem } ) :
    $( this.options.items, this.element ), this ] ],
   connectWith = this._connectWith();

  //Shouldn't be run the first time through due to massive slow-down
  if ( connectWith && this.ready ) {
   for ( i = connectWith.length - 1; i >= 0; i-- ) {
    cur = $( connectWith[ i ], this.document[ 0 ] );
    for ( j = cur.length - 1; j >= 0; j-- ) {
     inst = $.data( cur[ j ], this.widgetFullName );
     if ( inst && inst !== this && !inst.options.disabled ) {
      queries.push( [ $.isFunction( inst.options.items ) ?
       inst.options.items
        .call( inst.element[ 0 ], event, { item: this.currentItem } ) :
       $( inst.options.items, inst.element ), inst ] );
      this.containers.push( inst );
     }
    }
   }
  }

  for ( i = queries.length - 1; i >= 0; i-- ) {
   targetData = queries[ i ][ 1 ];
   _queries = queries[ i ][ 0 ];

   for ( j = 0, queriesLength = _queries.length; j < queriesLength; j++ ) {
    item = $( _queries[ j ] );

    // Data for target checking (mouse manager)
    item.data( this.widgetName + "-item", targetData );

    items.push( {
     item: item,
     instance: targetData,
     width: 0, height: 0,
     left: 0, top: 0
    } );
   }
  }

 },

 refreshPositions: function( fast ) {

  // Determine whether items are being displayed horizontally
  this.floating = this.items.length ?
   this.options.axis === "x" || this._isFloating( this.items[ 0 ].item ) :
   false;

  //This has to be redone because due to the item being moved out/into the offsetParent,
  // the offsetParent's position will change
  if ( this.offsetParent && this.helper ) {
   this.offset.parent = this._getParentOffset();
  }

  var i, item, t, p;

  for ( i = this.items.length - 1; i >= 0; i-- ) {
   item = this.items[ i ];

   //We ignore calculating positions of all connected containers when we're not over them
   if ( item.instance !== this.currentContainer && this.currentContainer &&
     item.item[ 0 ] !== this.currentItem[ 0 ] ) {
    continue;
   }

   t = this.options.toleranceElement ?
    $( this.options.toleranceElement, item.item ) :
    item.item;

   if ( !fast ) {
    item.width = t.outerWidth();
    item.height = t.outerHeight();
   }

   p = t.offset();
   item.left = p.left;
   item.top = p.top;
  }

  if ( this.options.custom && this.options.custom.refreshContainers ) {
   this.options.custom.refreshContainers.call( this );
  } else {
   for ( i = this.containers.length - 1; i >= 0; i-- ) {
    p = this.containers[ i ].element.offset();
    this.containers[ i ].containerCache.left = p.left;
    this.containers[ i ].containerCache.top = p.top;
    this.containers[ i ].containerCache.width =
     this.containers[ i ].element.outerWidth();
    this.containers[ i ].containerCache.height =
     this.containers[ i ].element.outerHeight();
   }
  }

  return this;
 },

 _createPlaceholder: function( that ) {
  that = that || this;
  var className,
   o = that.options;

  if ( !o.placeholder || o.placeholder.constructor === String ) {
   className = o.placeholder;
   o.placeholder = {
    element: function() {

     var nodeName = that.currentItem[ 0 ].nodeName.toLowerCase(),
      element = $( "<" + nodeName + ">", that.document[ 0 ] );

      that._addClass( element, "ui-sortable-placeholder",
        className || that.currentItem[ 0 ].className )
       ._removeClass( element, "ui-sortable-helper" );

     if ( nodeName === "tbody" ) {
      that._createTrPlaceholder(
       that.currentItem.find( "tr" ).eq( 0 ),
       $( "<tr>", that.document[ 0 ] ).appendTo( element )
      );
     } else if ( nodeName === "tr" ) {
      that._createTrPlaceholder( that.currentItem, element );
     } else if ( nodeName === "img" ) {
      element.attr( "src", that.currentItem.attr( "src" ) );
     }

     if ( !className ) {
      element.css( "visibility", "hidden" );
     }

     return element;
    },
    update: function( container, p ) {

     // 1. If a className is set as 'placeholder option, we don't force sizes -
     // the class is responsible for that
     // 2. The option 'forcePlaceholderSize can be enabled to force it even if a
     // class name is specified
     if ( className && !o.forcePlaceholderSize ) {
      return;
     }

     //If the element doesn't have a actual height by itself (without styles coming
     // from a stylesheet), it receives the inline height from the dragged item
     if ( !p.height() ) {
      p.height(
       that.currentItem.innerHeight() -
       parseInt( that.currentItem.css( "paddingTop" ) || 0, 10 ) -
       parseInt( that.currentItem.css( "paddingBottom" ) || 0, 10 ) );
     }
     if ( !p.width() ) {
      p.width(
       that.currentItem.innerWidth() -
       parseInt( that.currentItem.css( "paddingLeft" ) || 0, 10 ) -
       parseInt( that.currentItem.css( "paddingRight" ) || 0, 10 ) );
     }
    }
   };
  }

  //Create the placeholder
  that.placeholder = $( o.placeholder.element.call( that.element, that.currentItem ) );

  //Append it after the actual current item
  that.currentItem.after( that.placeholder );

  //Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
  o.placeholder.update( that, that.placeholder );

 },

 _createTrPlaceholder: function( sourceTr, targetTr ) {
  var that = this;

  sourceTr.children().each( function() {
   $( "<td>&#160;</td>", that.document[ 0 ] )
    .attr( "colspan", $( this ).attr( "colspan" ) || 1 )
    .appendTo( targetTr );
  } );
 },

 _contactContainers: function( event ) {
  var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, cur, nearBottom,
   floating, axis,
   innermostContainer = null,
   innermostIndex = null;

  // Get innermost container that intersects with item
  for ( i = this.containers.length - 1; i >= 0; i-- ) {

   // Never consider a container that's located within the item itself
   if ( $.contains( this.currentItem[ 0 ], this.containers[ i ].element[ 0 ] ) ) {
    continue;
   }

   if ( this._intersectsWith( this.containers[ i ].containerCache ) ) {

    // If we've already found a container and it's more "inner" than this, then continue
    if ( innermostContainer &&
      $.contains(
       this.containers[ i ].element[ 0 ],
       innermostContainer.element[ 0 ] ) ) {
     continue;
    }

    innermostContainer = this.containers[ i ];
    innermostIndex = i;

   } else {

    // container doesn't intersect. trigger "out" event if necessary
    if ( this.containers[ i ].containerCache.over ) {
     this.containers[ i ]._trigger( "out", event, this._uiHash( this ) );
     this.containers[ i ].containerCache.over = 0;
    }
   }

  }

  // If no intersecting containers found, return
  if ( !innermostContainer ) {
   return;
  }

  // Move the item into the container if it's not there already
  if ( this.containers.length === 1 ) {
   if ( !this.containers[ innermostIndex ].containerCache.over ) {
    this.containers[ innermostIndex ]._trigger( "over", event, this._uiHash( this ) );
    this.containers[ innermostIndex ].containerCache.over = 1;
   }
  } else {

   // When entering a new container, we will find the item with the least distance and
   // append our item near it
   dist = 10000;
   itemWithLeastDistance = null;
   floating = innermostContainer.floating || this._isFloating( this.currentItem );
   posProperty = floating ? "left" : "top";
   sizeProperty = floating ? "width" : "height";
   axis = floating ? "pageX" : "pageY";

   for ( j = this.items.length - 1; j >= 0; j-- ) {
    if ( !$.contains(
      this.containers[ innermostIndex ].element[ 0 ], this.items[ j ].item[ 0 ] )
    ) {
     continue;
    }
    if ( this.items[ j ].item[ 0 ] === this.currentItem[ 0 ] ) {
     continue;
    }

    cur = this.items[ j ].item.offset()[ posProperty ];
    nearBottom = false;
    if ( event[ axis ] - cur > this.items[ j ][ sizeProperty ] / 2 ) {
     nearBottom = true;
    }

    if ( Math.abs( event[ axis ] - cur ) < dist ) {
     dist = Math.abs( event[ axis ] - cur );
     itemWithLeastDistance = this.items[ j ];
     this.direction = nearBottom ? "up" : "down";
    }
   }

   //Check if dropOnEmpty is enabled
   if ( !itemWithLeastDistance && !this.options.dropOnEmpty ) {
    return;
   }

   if ( this.currentContainer === this.containers[ innermostIndex ] ) {
    if ( !this.currentContainer.containerCache.over ) {
     this.containers[ innermostIndex ]._trigger( "over", event, this._uiHash() );
     this.currentContainer.containerCache.over = 1;
    }
    return;
   }

   itemWithLeastDistance ?
    this._rearrange( event, itemWithLeastDistance, null, true ) :
    this._rearrange( event, null, this.containers[ innermostIndex ].element, true );
   this._trigger( "change", event, this._uiHash() );
   this.containers[ innermostIndex ]._trigger( "change", event, this._uiHash( this ) );
   this.currentContainer = this.containers[ innermostIndex ];

   //Update the placeholder
   this.options.placeholder.update( this.currentContainer, this.placeholder );

   this.containers[ innermostIndex ]._trigger( "over", event, this._uiHash( this ) );
   this.containers[ innermostIndex ].containerCache.over = 1;
  }

 },

 _createHelper: function( event ) {

  var o = this.options,
   helper = $.isFunction( o.helper ) ?
    $( o.helper.apply( this.element[ 0 ], [ event, this.currentItem ] ) ) :
    ( o.helper === "clone" ? this.currentItem.clone() : this.currentItem );

  //Add the helper to the DOM if that didn't happen already
  if ( !helper.parents( "body" ).length ) {
   $( o.appendTo !== "parent" ?
    o.appendTo :
    this.currentItem[ 0 ].parentNode )[ 0 ].appendChild( helper[ 0 ] );
  }

  if ( helper[ 0 ] === this.currentItem[ 0 ] ) {
   this._storedCSS = {
    width: this.currentItem[ 0 ].style.width,
    height: this.currentItem[ 0 ].style.height,
    position: this.currentItem.css( "position" ),
    top: this.currentItem.css( "top" ),
    left: this.currentItem.css( "left" )
   };
  }

  if ( !helper[ 0 ].style.width || o.forceHelperSize ) {
   helper.width( this.currentItem.width() );
  }
  if ( !helper[ 0 ].style.height || o.forceHelperSize ) {
   helper.height( this.currentItem.height() );
  }

  return helper;

 },

 _adjustOffsetFromHelper: function( obj ) {
  if ( typeof obj === "string" ) {
   obj = obj.split( " " );
  }
  if ( $.isArray( obj ) ) {
   obj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };
  }
  if ( "left" in obj ) {
   this.offset.click.left = obj.left + this.margins.left;
  }
  if ( "right" in obj ) {
   this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
  }
  if ( "top" in obj ) {
   this.offset.click.top = obj.top + this.margins.top;
  }
  if ( "bottom" in obj ) {
   this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
  }
 },

 _getParentOffset: function() {

  //Get the offsetParent and cache its position
  this.offsetParent = this.helper.offsetParent();
  var po = this.offsetParent.offset();

  // This is a special case where we need to modify a offset calculated on start, since the
  // following happened:
  // 1. The position of the helper is absolute, so it's position is calculated based on the
  // next positioned parent
  // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
  // the document, which means that the scroll is included in the initial calculation of the
  // offset of the parent, and never recalculated upon drag
  if ( this.cssPosition === "absolute" && this.scrollParent[ 0 ] !== this.document[ 0 ] &&
    $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) {
   po.left += this.scrollParent.scrollLeft();
   po.top += this.scrollParent.scrollTop();
  }

  // This needs to be actually done for all browsers, since pageX/pageY includes this
  // information with an ugly IE fix
  if ( this.offsetParent[ 0 ] === this.document[ 0 ].body ||
    ( this.offsetParent[ 0 ].tagName &&
    this.offsetParent[ 0 ].tagName.toLowerCase() === "html" && $.ui.ie ) ) {
   po = { top: 0, left: 0 };
  }

  return {
   top: po.top + ( parseInt( this.offsetParent.css( "borderTopWidth" ), 10 ) || 0 ),
   left: po.left + ( parseInt( this.offsetParent.css( "borderLeftWidth" ), 10 ) || 0 )
  };

 },

 _getRelativeOffset: function() {

  if ( this.cssPosition === "relative" ) {
   var p = this.currentItem.position();
   return {
    top: p.top - ( parseInt( this.helper.css( "top" ), 10 ) || 0 ) +
     this.scrollParent.scrollTop(),
    left: p.left - ( parseInt( this.helper.css( "left" ), 10 ) || 0 ) +
     this.scrollParent.scrollLeft()
   };
  } else {
   return { top: 0, left: 0 };
  }

 },

 _cacheMargins: function() {
  this.margins = {
   left: ( parseInt( this.currentItem.css( "marginLeft" ), 10 ) || 0 ),
   top: ( parseInt( this.currentItem.css( "marginTop" ), 10 ) || 0 )
  };
 },

 _cacheHelperProportions: function() {
  this.helperProportions = {
   width: this.helper.outerWidth(),
   height: this.helper.outerHeight()
  };
 },

 _setContainment: function() {

  var ce, co, over,
   o = this.options;
  if ( o.containment === "parent" ) {
   o.containment = this.helper[ 0 ].parentNode;
  }
  if ( o.containment === "document" || o.containment === "window" ) {
   this.containment = [
    0 - this.offset.relative.left - this.offset.parent.left,
    0 - this.offset.relative.top - this.offset.parent.top,
    o.containment === "document" ?
     this.document.width() :
     this.window.width() - this.helperProportions.width - this.margins.left,
    ( o.containment === "document" ?
     ( this.document.height() || document.body.parentNode.scrollHeight ) :
     this.window.height() || this.document[ 0 ].body.parentNode.scrollHeight
    ) - this.helperProportions.height - this.margins.top
   ];
  }

  if ( !( /^(document|window|parent)$/ ).test( o.containment ) ) {
   ce = $( o.containment )[ 0 ];
   co = $( o.containment ).offset();
   over = ( $( ce ).css( "overflow" ) !== "hidden" );

   this.containment = [
    co.left + ( parseInt( $( ce ).css( "borderLeftWidth" ), 10 ) || 0 ) +
     ( parseInt( $( ce ).css( "paddingLeft" ), 10 ) || 0 ) - this.margins.left,
    co.top + ( parseInt( $( ce ).css( "borderTopWidth" ), 10 ) || 0 ) +
     ( parseInt( $( ce ).css( "paddingTop" ), 10 ) || 0 ) - this.margins.top,
    co.left + ( over ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -
     ( parseInt( $( ce ).css( "borderLeftWidth" ), 10 ) || 0 ) -
     ( parseInt( $( ce ).css( "paddingRight" ), 10 ) || 0 ) -
     this.helperProportions.width - this.margins.left,
    co.top + ( over ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -
     ( parseInt( $( ce ).css( "borderTopWidth" ), 10 ) || 0 ) -
     ( parseInt( $( ce ).css( "paddingBottom" ), 10 ) || 0 ) -
     this.helperProportions.height - this.margins.top
   ];
  }

 },

 _convertPositionTo: function( d, pos ) {

  if ( !pos ) {
   pos = this.position;
  }
  var mod = d === "absolute" ? 1 : -1,
   scroll = this.cssPosition === "absolute" &&
    !( this.scrollParent[ 0 ] !== this.document[ 0 ] &&
    $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ?
     this.offsetParent :
     this.scrollParent,
   scrollIsRootNode = ( /(html|body)/i ).test( scroll[ 0 ].tagName );

  return {
   top: (

    // The absolute mouse position
    pos.top +

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.top * mod +

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.top * mod -
    ( ( this.cssPosition === "fixed" ?
     -this.scrollParent.scrollTop() :
     ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod )
   ),
   left: (

    // The absolute mouse position
    pos.left +

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.left * mod +

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.left * mod -
    ( ( this.cssPosition === "fixed" ?
     -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 :
     scroll.scrollLeft() ) * mod )
   )
  };

 },

 _generatePosition: function( event ) {

  var top, left,
   o = this.options,
   pageX = event.pageX,
   pageY = event.pageY,
   scroll = this.cssPosition === "absolute" &&
    !( this.scrollParent[ 0 ] !== this.document[ 0 ] &&
    $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ?
     this.offsetParent :
     this.scrollParent,
    scrollIsRootNode = ( /(html|body)/i ).test( scroll[ 0 ].tagName );

  // This is another very weird special case that only happens for relative elements:
  // 1. If the css position is relative
  // 2. and the scroll parent is the document or similar to the offset parent
  // we have to refresh the relative offset during the scroll so there are no jumps
  if ( this.cssPosition === "relative" && !( this.scrollParent[ 0 ] !== this.document[ 0 ] &&
    this.scrollParent[ 0 ] !== this.offsetParent[ 0 ] ) ) {
   this.offset.relative = this._getRelativeOffset();
  }

  /*
   * - Position constraining -
   * Constrain the position to a mix of grid, containment.
   */

  if ( this.originalPosition ) { //If we are not dragging yet, we won't check for options

   if ( this.containment ) {
    if ( event.pageX - this.offset.click.left < this.containment[ 0 ] ) {
     pageX = this.containment[ 0 ] + this.offset.click.left;
    }
    if ( event.pageY - this.offset.click.top < this.containment[ 1 ] ) {
     pageY = this.containment[ 1 ] + this.offset.click.top;
    }
    if ( event.pageX - this.offset.click.left > this.containment[ 2 ] ) {
     pageX = this.containment[ 2 ] + this.offset.click.left;
    }
    if ( event.pageY - this.offset.click.top > this.containment[ 3 ] ) {
     pageY = this.containment[ 3 ] + this.offset.click.top;
    }
   }

   if ( o.grid ) {
    top = this.originalPageY + Math.round( ( pageY - this.originalPageY ) /
     o.grid[ 1 ] ) * o.grid[ 1 ];
    pageY = this.containment ?
     ( ( top - this.offset.click.top >= this.containment[ 1 ] &&
      top - this.offset.click.top <= this.containment[ 3 ] ) ?
       top :
       ( ( top - this.offset.click.top >= this.containment[ 1 ] ) ?
        top - o.grid[ 1 ] : top + o.grid[ 1 ] ) ) :
        top;

    left = this.originalPageX + Math.round( ( pageX - this.originalPageX ) /
     o.grid[ 0 ] ) * o.grid[ 0 ];
    pageX = this.containment ?
     ( ( left - this.offset.click.left >= this.containment[ 0 ] &&
      left - this.offset.click.left <= this.containment[ 2 ] ) ?
       left :
       ( ( left - this.offset.click.left >= this.containment[ 0 ] ) ?
        left - o.grid[ 0 ] : left + o.grid[ 0 ] ) ) :
        left;
   }

  }

  return {
   top: (

    // The absolute mouse position
    pageY -

    // Click offset (relative to the element)
    this.offset.click.top -

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.top -

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.top +
    ( ( this.cssPosition === "fixed" ?
     -this.scrollParent.scrollTop() :
     ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) )
   ),
   left: (

    // The absolute mouse position
    pageX -

    // Click offset (relative to the element)
    this.offset.click.left -

    // Only for relative positioned nodes: Relative offset from element to offset parent
    this.offset.relative.left -

    // The offsetParent's offset without borders (offset + border)
    this.offset.parent.left +
    ( ( this.cssPosition === "fixed" ?
     -this.scrollParent.scrollLeft() :
     scrollIsRootNode ? 0 : scroll.scrollLeft() ) )
   )
  };

 },

 _rearrange: function( event, i, a, hardRefresh ) {

  a ? a[ 0 ].appendChild( this.placeholder[ 0 ] ) :
   i.item[ 0 ].parentNode.insertBefore( this.placeholder[ 0 ],
    ( this.direction === "down" ? i.item[ 0 ] : i.item[ 0 ].nextSibling ) );

  //Various things done here to improve the performance:
  // 1. we create a setTimeout, that calls refreshPositions
  // 2. on the instance, we have a counter variable, that get's higher after every append
  // 3. on the local scope, we copy the counter variable, and check in the timeout,
  // if it's still the same
  // 4. this lets only the last addition to the timeout stack through
  this.counter = this.counter ? ++this.counter : 1;
  var counter = this.counter;

  this._delay( function() {
   if ( counter === this.counter ) {

    //Precompute after each DOM insertion, NOT on mousemove
    this.refreshPositions( !hardRefresh );
   }
  } );

 },

 _clear: function( event, noPropagation ) {

  this.reverting = false;

  // We delay all events that have to be triggered to after the point where the placeholder
  // has been removed and everything else normalized again
  var i,
   delayedTriggers = [];

  // We first have to update the dom position of the actual currentItem
  // Note: don't do it if the current item is already removed (by a user), or it gets
  // reappended (see #4088)
  if ( !this._noFinalSort && this.currentItem.parent().length ) {
   this.placeholder.before( this.currentItem );
  }
  this._noFinalSort = null;

  if ( this.helper[ 0 ] === this.currentItem[ 0 ] ) {
   for ( i in this._storedCSS ) {
    if ( this._storedCSS[ i ] === "auto" || this._storedCSS[ i ] === "static" ) {
     this._storedCSS[ i ] = "";
    }
   }
   this.currentItem.css( this._storedCSS );
   this._removeClass( this.currentItem, "ui-sortable-helper" );
  } else {
   this.currentItem.show();
  }

  if ( this.fromOutside && !noPropagation ) {
   delayedTriggers.push( function( event ) {
    this._trigger( "receive", event, this._uiHash( this.fromOutside ) );
   } );
  }
  if ( ( this.fromOutside ||
    this.domPosition.prev !==
    this.currentItem.prev().not( ".ui-sortable-helper" )[ 0 ] ||
    this.domPosition.parent !== this.currentItem.parent()[ 0 ] ) && !noPropagation ) {

   // Trigger update callback if the DOM position has changed
   delayedTriggers.push( function( event ) {
    this._trigger( "update", event, this._uiHash() );
   } );
  }

  // Check if the items Container has Changed and trigger appropriate
  // events.
  if ( this !== this.currentContainer ) {
   if ( !noPropagation ) {
    delayedTriggers.push( function( event ) {
     this._trigger( "remove", event, this._uiHash() );
    } );
    delayedTriggers.push( ( function( c ) {
     return function( event ) {
      c._trigger( "receive", event, this._uiHash( this ) );
     };
    } ).call( this, this.currentContainer ) );
    delayedTriggers.push( ( function( c ) {
     return function( event ) {
      c._trigger( "update", event, this._uiHash( this ) );
     };
    } ).call( this, this.currentContainer ) );
   }
  }

  //Post events to containers
  function delayEvent( type, instance, container ) {
   return function( event ) {
    container._trigger( type, event, instance._uiHash( instance ) );
   };
  }
  for ( i = this.containers.length - 1; i >= 0; i-- ) {
   if ( !noPropagation ) {
    delayedTriggers.push( delayEvent( "deactivate", this, this.containers[ i ] ) );
   }
   if ( this.containers[ i ].containerCache.over ) {
    delayedTriggers.push( delayEvent( "out", this, this.containers[ i ] ) );
    this.containers[ i ].containerCache.over = 0;
   }
  }

  //Do what was originally in plugins
  if ( this.storedCursor ) {
   this.document.find( "body" ).css( "cursor", this.storedCursor );
   this.storedStylesheet.remove();
  }
  if ( this._storedOpacity ) {
   this.helper.css( "opacity", this._storedOpacity );
  }
  if ( this._storedZIndex ) {
   this.helper.css( "zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex );
  }

  this.dragging = false;

  if ( !noPropagation ) {
   this._trigger( "beforeStop", event, this._uiHash() );
  }

  //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
  // it unbinds ALL events from the original node!
  this.placeholder[ 0 ].parentNode.removeChild( this.placeholder[ 0 ] );

  if ( !this.cancelHelperRemoval ) {
   if ( this.helper[ 0 ] !== this.currentItem[ 0 ] ) {
    this.helper.remove();
   }
   this.helper = null;
  }

  if ( !noPropagation ) {
   for ( i = 0; i < delayedTriggers.length; i++ ) {

    // Trigger all delayed events
    delayedTriggers[ i ].call( this, event );
   }
   this._trigger( "stop", event, this._uiHash() );
  }

  this.fromOutside = false;
  return !this.cancelHelperRemoval;

 },

 _trigger: function() {
  if ( $.Widget.prototype._trigger.apply( this, arguments ) === false ) {
   this.cancel();
  }
 },

 _uiHash: function( _inst ) {
  var inst = _inst || this;
  return {
   helper: inst.helper,
   placeholder: inst.placeholder || $( [] ),
   position: inst.position,
   originalPosition: inst.originalPosition,
   offset: inst.positionAbs,
   item: inst.currentItem,
   sender: _inst ? _inst.element : null
  };
 }

} );


/*!
 * jQuery UI Spinner 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Spinner
//>>group: Widgets
//>>description: Displays buttons to easily input numbers via the keyboard or mouse.
//>>docs: http://api.jqueryui.com/spinner/
//>>demos: http://jqueryui.com/spinner/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/spinner.css
//>>css.theme: ../../themes/base/theme.css



function spinnerModifer( fn ) {
 return function() {
  var previous = this.element.val();
  fn.apply( this, arguments );
  this._refresh();
  if ( previous !== this.element.val() ) {
   this._trigger( "change" );
  }
 };
}

$.widget( "ui.spinner", {
 version: "1.12.1",
 defaultElement: "<input>",
 widgetEventPrefix: "spin",
 options: {
  classes: {
   "ui-spinner": "ui-corner-all",
   "ui-spinner-down": "ui-corner-br",
   "ui-spinner-up": "ui-corner-tr"
  },
  culture: null,
  icons: {
   down: "ui-icon-triangle-1-s",
   up: "ui-icon-triangle-1-n"
  },
  incremental: true,
  max: null,
  min: null,
  numberFormat: null,
  page: 10,
  step: 1,

  change: null,
  spin: null,
  start: null,
  stop: null
 },

 _create: function() {

  // handle string values that need to be parsed
  this._setOption( "max", this.options.max );
  this._setOption( "min", this.options.min );
  this._setOption( "step", this.options.step );

  // Only format if there is a value, prevents the field from being marked
  // as invalid in Firefox, see #9573.
  if ( this.value() !== "" ) {

   // Format the value, but don't constrain.
   this._value( this.element.val(), true );
  }

  this._draw();
  this._on( this._events );
  this._refresh();

  // Turning off autocomplete prevents the browser from remembering the
  // value when navigating through history, so we re-enable autocomplete
  // if the page is unloaded before the widget is destroyed. #7790
  this._on( this.window, {
   beforeunload: function() {
    this.element.removeAttr( "autocomplete" );
   }
  } );
 },

 _getCreateOptions: function() {
  var options = this._super();
  var element = this.element;

  $.each( [ "min", "max", "step" ], function( i, option ) {
   var value = element.attr( option );
   if ( value != null && value.length ) {
    options[ option ] = value;
   }
  } );

  return options;
 },

 _events: {
  keydown: function( event ) {
   if ( this._start( event ) && this._keydown( event ) ) {
    event.preventDefault();
   }
  },
  keyup: "_stop",
  focus: function() {
   this.previous = this.element.val();
  },
  blur: function( event ) {
   if ( this.cancelBlur ) {
    delete this.cancelBlur;
    return;
   }

   this._stop();
   this._refresh();
   if ( this.previous !== this.element.val() ) {
    this._trigger( "change", event );
   }
  },
  mousewheel: function( event, delta ) {
   if ( !delta ) {
    return;
   }
   if ( !this.spinning && !this._start( event ) ) {
    return false;
   }

   this._spin( ( delta > 0 ? 1 : -1 ) * this.options.step, event );
   clearTimeout( this.mousewheelTimer );
   this.mousewheelTimer = this._delay( function() {
    if ( this.spinning ) {
     this._stop( event );
    }
   }, 100 );
   event.preventDefault();
  },
  "mousedown .ui-spinner-button": function( event ) {
   var previous;

   // We never want the buttons to have focus; whenever the user is
   // interacting with the spinner, the focus should be on the input.
   // If the input is focused then this.previous is properly set from
   // when the input first received focus. If the input is not focused
   // then we need to set this.previous based on the value before spinning.
   previous = this.element[ 0 ] === $.ui.safeActiveElement( this.document[ 0 ] ) ?
    this.previous : this.element.val();
   function checkFocus() {
    var isActive = this.element[ 0 ] === $.ui.safeActiveElement( this.document[ 0 ] );
    if ( !isActive ) {
     this.element.trigger( "focus" );
     this.previous = previous;

     // support: IE
     // IE sets focus asynchronously, so we need to check if focus
     // moved off of the input because the user clicked on the button.
     this._delay( function() {
      this.previous = previous;
     } );
    }
   }

   // Ensure focus is on (or stays on) the text field
   event.preventDefault();
   checkFocus.call( this );

   // Support: IE
   // IE doesn't prevent moving focus even with event.preventDefault()
   // so we set a flag to know when we should ignore the blur event
   // and check (again) if focus moved off of the input.
   this.cancelBlur = true;
   this._delay( function() {
    delete this.cancelBlur;
    checkFocus.call( this );
   } );

   if ( this._start( event ) === false ) {
    return;
   }

   this._repeat( null, $( event.currentTarget )
    .hasClass( "ui-spinner-up" ) ? 1 : -1, event );
  },
  "mouseup .ui-spinner-button": "_stop",
  "mouseenter .ui-spinner-button": function( event ) {

   // button will add ui-state-active if mouse was down while mouseleave and kept down
   if ( !$( event.currentTarget ).hasClass( "ui-state-active" ) ) {
    return;
   }

   if ( this._start( event ) === false ) {
    return false;
   }
   this._repeat( null, $( event.currentTarget )
    .hasClass( "ui-spinner-up" ) ? 1 : -1, event );
  },

  // TODO: do we really want to consider this a stop?
  // shouldn't we just stop the repeater and wait until mouseup before
  // we trigger the stop event?
  "mouseleave .ui-spinner-button": "_stop"
 },

 // Support mobile enhanced option and make backcompat more sane
 _enhance: function() {
  this.uiSpinner = this.element
   .attr( "autocomplete", "off" )
   .wrap( "<span>" )
   .parent()

    // Add buttons
    .append(
     "<a></a><a></a>"
    );
 },

 _draw: function() {
  this._enhance();

  this._addClass( this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content" );
  this._addClass( "ui-spinner-input" );

  this.element.attr( "role", "spinbutton" );

  // Button bindings
  this.buttons = this.uiSpinner.children( "a" )
   .attr( "tabIndex", -1 )
   .attr( "aria-hidden", true )
   .button( {
    classes: {
     "ui-button": ""
    }
   } );

  // TODO: Right now button does not support classes this is already updated in button PR
  this._removeClass( this.buttons, "ui-corner-all" );

  this._addClass( this.buttons.first(), "ui-spinner-button ui-spinner-up" );
  this._addClass( this.buttons.last(), "ui-spinner-button ui-spinner-down" );
  this.buttons.first().button( {
   "icon": this.options.icons.up,
   "showLabel": false
  } );
  this.buttons.last().button( {
   "icon": this.options.icons.down,
   "showLabel": false
  } );

  // IE 6 doesn't understand height: 50% for the buttons
  // unless the wrapper has an explicit height
  if ( this.buttons.height() > Math.ceil( this.uiSpinner.height() * 0.5 ) &&
    this.uiSpinner.height() > 0 ) {
   this.uiSpinner.height( this.uiSpinner.height() );
  }
 },

 _keydown: function( event ) {
  var options = this.options,
   keyCode = $.ui.keyCode;

  switch ( event.keyCode ) {
  case keyCode.UP:
   this._repeat( null, 1, event );
   return true;
  case keyCode.DOWN:
   this._repeat( null, -1, event );
   return true;
  case keyCode.PAGE_UP:
   this._repeat( null, options.page, event );
   return true;
  case keyCode.PAGE_DOWN:
   this._repeat( null, -options.page, event );
   return true;
  }

  return false;
 },

 _start: function( event ) {
  if ( !this.spinning && this._trigger( "start", event ) === false ) {
   return false;
  }

  if ( !this.counter ) {
   this.counter = 1;
  }
  this.spinning = true;
  return true;
 },

 _repeat: function( i, steps, event ) {
  i = i || 500;

  clearTimeout( this.timer );
  this.timer = this._delay( function() {
   this._repeat( 40, steps, event );
  }, i );

  this._spin( steps * this.options.step, event );
 },

 _spin: function( step, event ) {
  var value = this.value() || 0;

  if ( !this.counter ) {
   this.counter = 1;
  }

  value = this._adjustValue( value + step * this._increment( this.counter ) );

  if ( !this.spinning || this._trigger( "spin", event, { value: value } ) !== false ) {
   this._value( value );
   this.counter++;
  }
 },

 _increment: function( i ) {
  var incremental = this.options.incremental;

  if ( incremental ) {
   return $.isFunction( incremental ) ?
    incremental( i ) :
    Math.floor( i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1 );
  }

  return 1;
 },

 _precision: function() {
  var precision = this._precisionOf( this.options.step );
  if ( this.options.min !== null ) {
   precision = Math.max( precision, this._precisionOf( this.options.min ) );
  }
  return precision;
 },

 _precisionOf: function( num ) {
  var str = num.toString(),
   decimal = str.indexOf( "." );
  return decimal === -1 ? 0 : str.length - decimal - 1;
 },

 _adjustValue: function( value ) {
  var base, aboveMin,
   options = this.options;

  // Make sure we're at a valid step
  // - find out where we are relative to the base (min or 0)
  base = options.min !== null ? options.min : 0;
  aboveMin = value - base;

  // - round to the nearest step
  aboveMin = Math.round( aboveMin / options.step ) * options.step;

  // - rounding is based on 0, so adjust back to our base
  value = base + aboveMin;

  // Fix precision from bad JS floating point math
  value = parseFloat( value.toFixed( this._precision() ) );

  // Clamp the value
  if ( options.max !== null && value > options.max ) {
   return options.max;
  }
  if ( options.min !== null && value < options.min ) {
   return options.min;
  }

  return value;
 },

 _stop: function( event ) {
  if ( !this.spinning ) {
   return;
  }

  clearTimeout( this.timer );
  clearTimeout( this.mousewheelTimer );
  this.counter = 0;
  this.spinning = false;
  this._trigger( "stop", event );
 },

 _setOption: function( key, value ) {
  var prevValue, first, last;

  if ( key === "culture" || key === "numberFormat" ) {
   prevValue = this._parse( this.element.val() );
   this.options[ key ] = value;
   this.element.val( this._format( prevValue ) );
   return;
  }

  if ( key === "max" || key === "min" || key === "step" ) {
   if ( typeof value === "string" ) {
    value = this._parse( value );
   }
  }
  if ( key === "icons" ) {
   first = this.buttons.first().find( ".ui-icon" );
   this._removeClass( first, null, this.options.icons.up );
   this._addClass( first, null, value.up );
   last = this.buttons.last().find( ".ui-icon" );
   this._removeClass( last, null, this.options.icons.down );
   this._addClass( last, null, value.down );
  }

  this._super( key, value );
 },

 _setOptionDisabled: function( value ) {
  this._super( value );

  this._toggleClass( this.uiSpinner, null, "ui-state-disabled", !!value );
  this.element.prop( "disabled", !!value );
  this.buttons.button( value ? "disable" : "enable" );
 },

 _setOptions: spinnerModifer( function( options ) {
  this._super( options );
 } ),

 _parse: function( val ) {
  if ( typeof val === "string" && val !== "" ) {
   val = window.Globalize && this.options.numberFormat ?
    Globalize.parseFloat( val, 10, this.options.culture ) : +val;
  }
  return val === "" || isNaN( val ) ? null : val;
 },

 _format: function( value ) {
  if ( value === "" ) {
   return "";
  }
  return window.Globalize && this.options.numberFormat ?
   Globalize.format( value, this.options.numberFormat, this.options.culture ) :
   value;
 },

 _refresh: function() {
  this.element.attr( {
   "aria-valuemin": this.options.min,
   "aria-valuemax": this.options.max,

   // TODO: what should we do with values that can't be parsed?
   "aria-valuenow": this._parse( this.element.val() )
  } );
 },

 isValid: function() {
  var value = this.value();

  // Null is invalid
  if ( value === null ) {
   return false;
  }

  // If value gets adjusted, it's invalid
  return value === this._adjustValue( value );
 },

 // Update the value without triggering change
 _value: function( value, allowAny ) {
  var parsed;
  if ( value !== "" ) {
   parsed = this._parse( value );
   if ( parsed !== null ) {
    if ( !allowAny ) {
     parsed = this._adjustValue( parsed );
    }
    value = this._format( parsed );
   }
  }
  this.element.val( value );
  this._refresh();
 },

 _destroy: function() {
  this.element
   .prop( "disabled", false )
   .removeAttr( "autocomplete role aria-valuemin aria-valuemax aria-valuenow" );

  this.uiSpinner.replaceWith( this.element );
 },

 stepUp: spinnerModifer( function( steps ) {
  this._stepUp( steps );
 } ),
 _stepUp: function( steps ) {
  if ( this._start() ) {
   this._spin( ( steps || 1 ) * this.options.step );
   this._stop();
  }
 },

 stepDown: spinnerModifer( function( steps ) {
  this._stepDown( steps );
 } ),
 _stepDown: function( steps ) {
  if ( this._start() ) {
   this._spin( ( steps || 1 ) * -this.options.step );
   this._stop();
  }
 },

 pageUp: spinnerModifer( function( pages ) {
  this._stepUp( ( pages || 1 ) * this.options.page );
 } ),

 pageDown: spinnerModifer( function( pages ) {
  this._stepDown( ( pages || 1 ) * this.options.page );
 } ),

 value: function( newVal ) {
  if ( !arguments.length ) {
   return this._parse( this.element.val() );
  }
  spinnerModifer( this._value ).call( this, newVal );
 },

 widget: function() {
  return this.uiSpinner;
 }
} );

// DEPRECATED
// TODO: switch return back to widget declaration at top of file when this is removed
if ( $.uiBackCompat !== false ) {

 // Backcompat for spinner html extension points
 $.widget( "ui.spinner", $.ui.spinner, {
  _enhance: function() {
   this.uiSpinner = this.element
    .attr( "autocomplete", "off" )
    .wrap( this._uiSpinnerHtml() )
    .parent()

     // Add buttons
     .append( this._buttonHtml() );
  },
  _uiSpinnerHtml: function() {
   return "<span>";
  },

  _buttonHtml: function() {
   return "<a></a><a></a>";
  }
 } );
}

var widgetsSpinner = $.ui.spinner;


/*!
 * jQuery UI Tabs 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Tabs
//>>group: Widgets
//>>description: Transforms a set of container elements into a tab structure.
//>>docs: http://api.jqueryui.com/tabs/
//>>demos: http://jqueryui.com/tabs/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/tabs.css
//>>css.theme: ../../themes/base/theme.css



$.widget( "ui.tabs", {
 version: "1.12.1",
 delay: 300,
 options: {
  active: null,
  classes: {
   "ui-tabs": "ui-corner-all",
   "ui-tabs-nav": "ui-corner-all",
   "ui-tabs-panel": "ui-corner-bottom",
   "ui-tabs-tab": "ui-corner-top"
  },
  collapsible: false,
  event: "click",
  heightStyle: "content",
  hide: null,
  show: null,

  // Callbacks
  activate: null,
  beforeActivate: null,
  beforeLoad: null,
  load: null
 },

 _isLocal: ( function() {
  var rhash = /#.*$/;

  return function( anchor ) {
   var anchorUrl, locationUrl;

   anchorUrl = anchor.href.replace( rhash, "" );
   locationUrl = location.href.replace( rhash, "" );

   // Decoding may throw an error if the URL isn't UTF-8 (#9518)
   try {
    anchorUrl = decodeURIComponent( anchorUrl );
   } catch ( error ) {}
   try {
    locationUrl = decodeURIComponent( locationUrl );
   } catch ( error ) {}

   return anchor.hash.length > 1 && anchorUrl === locationUrl;
  };
 } )(),

 _create: function() {
  var that = this,
   options = this.options;

  this.running = false;

  this._addClass( "ui-tabs", "ui-widget ui-widget-content" );
  this._toggleClass( "ui-tabs-collapsible", null, options.collapsible );

  this._processTabs();
  options.active = this._initialActive();

  // Take disabling tabs via class attribute from HTML
  // into account and update option properly.
  if ( $.isArray( options.disabled ) ) {
   options.disabled = $.unique( options.disabled.concat(
    $.map( this.tabs.filter( ".ui-state-disabled" ), function( li ) {
     return that.tabs.index( li );
    } )
   ) ).sort();
  }

  // Check for length avoids error when initializing empty list
  if ( this.options.active !== false && this.anchors.length ) {
   this.active = this._findActive( options.active );
  } else {
   this.active = $();
  }

  this._refresh();

  if ( this.active.length ) {
   this.load( options.active );
  }
 },

 _initialActive: function() {
  var active = this.options.active,
   collapsible = this.options.collapsible,
   locationHash = location.hash.substring( 1 );

  if ( active === null ) {

   // check the fragment identifier in the URL
   if ( locationHash ) {
    this.tabs.each( function( i, tab ) {
     if ( $( tab ).attr( "aria-controls" ) === locationHash ) {
      active = i;
      return false;
     }
    } );
   }

   // Check for a tab marked active via a class
   if ( active === null ) {
    active = this.tabs.index( this.tabs.filter( ".ui-tabs-active" ) );
   }

   // No active tab, set to false
   if ( active === null || active === -1 ) {
    active = this.tabs.length ? 0 : false;
   }
  }

  // Handle numbers: negative, out of range
  if ( active !== false ) {
   active = this.tabs.index( this.tabs.eq( active ) );
   if ( active === -1 ) {
    active = collapsible ? false : 0;
   }
  }

  // Don't allow collapsible: false and active: false
  if ( !collapsible && active === false && this.anchors.length ) {
   active = 0;
  }

  return active;
 },

 _getCreateEventData: function() {
  return {
   tab: this.active,
   panel: !this.active.length ? $() : this._getPanelForTab( this.active )
  };
 },

 _tabKeydown: function( event ) {
  var focusedTab = $( $.ui.safeActiveElement( this.document[ 0 ] ) ).closest( "li" ),
   selectedIndex = this.tabs.index( focusedTab ),
   goingForward = true;

  if ( this._handlePageNav( event ) ) {
   return;
  }

  switch ( event.keyCode ) {
  case $.ui.keyCode.RIGHT:
  case $.ui.keyCode.DOWN:
   selectedIndex++;
   break;
  case $.ui.keyCode.UP:
  case $.ui.keyCode.LEFT:
   goingForward = false;
   selectedIndex--;
   break;
  case $.ui.keyCode.END:
   selectedIndex = this.anchors.length - 1;
   break;
  case $.ui.keyCode.HOME:
   selectedIndex = 0;
   break;
  case $.ui.keyCode.SPACE:

   // Activate only, no collapsing
   event.preventDefault();
   clearTimeout( this.activating );
   this._activate( selectedIndex );
   return;
  case $.ui.keyCode.ENTER:

   // Toggle (cancel delayed activation, allow collapsing)
   event.preventDefault();
   clearTimeout( this.activating );

   // Determine if we should collapse or activate
   this._activate( selectedIndex === this.options.active ? false : selectedIndex );
   return;
  default:
   return;
  }

  // Focus the appropriate tab, based on which key was pressed
  event.preventDefault();
  clearTimeout( this.activating );
  selectedIndex = this._focusNextTab( selectedIndex, goingForward );

  // Navigating with control/command key will prevent automatic activation
  if ( !event.ctrlKey && !event.metaKey ) {

   // Update aria-selected immediately so that AT think the tab is already selected.
   // Otherwise AT may confuse the user by stating that they need to activate the tab,
   // but the tab will already be activated by the time the announcement finishes.
   focusedTab.attr( "aria-selected", "false" );
   this.tabs.eq( selectedIndex ).attr( "aria-selected", "true" );

   this.activating = this._delay( function() {
    this.option( "active", selectedIndex );
   }, this.delay );
  }
 },

 _panelKeydown: function( event ) {
  if ( this._handlePageNav( event ) ) {
   return;
  }

  // Ctrl+up moves focus to the current tab
  if ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {
   event.preventDefault();
   this.active.trigger( "focus" );
  }
 },

 // Alt+page up/down moves focus to the previous/next tab (and activates)
 _handlePageNav: function( event ) {
  if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {
   this._activate( this._focusNextTab( this.options.active - 1, false ) );
   return true;
  }
  if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {
   this._activate( this._focusNextTab( this.options.active + 1, true ) );
   return true;
  }
 },

 _findNextTab: function( index, goingForward ) {
  var lastTabIndex = this.tabs.length - 1;

  function constrain() {
   if ( index > lastTabIndex ) {
    index = 0;
   }
   if ( index < 0 ) {
    index = lastTabIndex;
   }
   return index;
  }

  while ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {
   index = goingForward ? index + 1 : index - 1;
  }

  return index;
 },

 _focusNextTab: function( index, goingForward ) {
  index = this._findNextTab( index, goingForward );
  this.tabs.eq( index ).trigger( "focus" );
  return index;
 },

 _setOption: function( key, value ) {
  if ( key === "active" ) {

   // _activate() will handle invalid values and update this.options
   this._activate( value );
   return;
  }

  this._super( key, value );

  if ( key === "collapsible" ) {
   this._toggleClass( "ui-tabs-collapsible", null, value );

   // Setting collapsible: false while collapsed; open first panel
   if ( !value && this.options.active === false ) {
    this._activate( 0 );
   }
  }

  if ( key === "event" ) {
   this._setupEvents( value );
  }

  if ( key === "heightStyle" ) {
   this._setupHeightStyle( value );
  }
 },

 _sanitizeSelector: function( hash ) {
  return hash ? hash.replace( /[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):"";},refresh:function(){var options=this.options,lis=this.tablist.children(":has(a[href])");options.disabled=$.map(lis.filter(".ui-state-disabled"),function(tab){return lis.index(tab);});this._processTabs();if(options.active===false||!this.anchors.length){options.active=false;this.active=$();}else if(this.active.length&&!$.contains(this.tablist[0],this.active[0])){if(this.tabs.length===options.disabled.length){options.active=false;this.active=$();}else{this._activate(this._findNextTab(Math.max(0,options.active-1),false));}}else{options.active=this.tabs.index(this.active);}
this._refresh();},_refresh:function(){this._setOptionDisabled(this.options.disabled);this._setupEvents(this.options.event);this._setupHeightStyle(this.options.heightStyle);this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1});this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"});if(!this.active.length){this.tabs.eq(0).attr("tabIndex",0);}else{this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0});this._addClass(this.active,"ui-tabs-active","ui-state-active");this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"});}},_processTabs:function(){var that=this,prevTabs=this.tabs,prevAnchors=this.anchors,prevPanels=this.panels;this.tablist=this._getList().attr("role","tablist");this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header");this.tablist.on("mousedown"+this.eventNamespace,"> li",function(event){if($(this).is(".ui-state-disabled")){event.preventDefault();}}).on("focus"+this.eventNamespace,".ui-tabs-anchor",function(){if($(this).closest("li").is(".ui-state-disabled")){this.blur();}});this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1});this._addClass(this.tabs,"ui-tabs-tab","ui-state-default");this.anchors=this.tabs.map(function(){return $("a",this)[0];}).attr({role:"presentation",tabIndex:-1});this._addClass(this.anchors,"ui-tabs-anchor");this.panels=$();this.anchors.each(function(i,anchor){var selector,panel,panelId,anchorId=$(anchor).uniqueId().attr("id"),tab=$(anchor).closest("li"),originalAriaControls=tab.attr("aria-controls");if(that._isLocal(anchor)){selector=anchor.hash;panelId=selector.substring(1);panel=that.element.find(that._sanitizeSelector(selector));}else{panelId=tab.attr("aria-controls")||$({}).uniqueId()[0].id;selector="#"+panelId;panel=that.element.find(selector);if(!panel.length){panel=that._createPanel(panelId);panel.insertAfter(that.panels[i-1]||that.tablist);}
panel.attr("aria-live","polite");}
if(panel.length){that.panels=that.panels.add(panel);}
if(originalAriaControls){tab.data("ui-tabs-aria-controls",originalAriaControls);}
tab.attr({"aria-controls":panelId,"aria-labelledby":anchorId});panel.attr("aria-labelledby",anchorId);});this.panels.attr("role","tabpanel");this._addClass(this.panels,"ui-tabs-panel","ui-widget-content");if(prevTabs){this._off(prevTabs.not(this.tabs));this._off(prevAnchors.not(this.anchors));this._off(prevPanels.not(this.panels));}},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0);},_createPanel:function(id){return $("<div>").attr("id",id).data("ui-tabs-destroy",true);},_setOptionDisabled:function(disabled){var currentItem,li,i;if($.isArray(disabled)){if(!disabled.length){disabled=false;}else if(disabled.length===this.anchors.length){disabled=true;}}
for(i=0;(li=this.tabs[i]);i++){currentItem=$(li);if(disabled===true||$.inArray(i,disabled)!==-1){currentItem.attr("aria-disabled","true");this._addClass(currentItem,null,"ui-state-disabled");}else{currentItem.removeAttr("aria-disabled");this._removeClass(currentItem,null,"ui-state-disabled");}}
this.options.disabled=disabled;this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,disabled===true);},_setupEvents:function(event){var events={};if(event){$.each(event.split(" "),function(index,eventName){events[eventName]="_eventHandler";});}
this._off(this.anchors.add(this.tabs).add(this.panels));this._on(true,this.anchors,{click:function(event){event.preventDefault();}});this._on(this.anchors,events);this._on(this.tabs,{keydown:"_tabKeydown"});this._on(this.panels,{keydown:"_panelKeydown"});this._focusable(this.tabs);this._hoverable(this.tabs);},_setupHeightStyle:function(heightStyle){var maxHeight,parent=this.element.parent();if(heightStyle==="fill"){maxHeight=parent.height();maxHeight-=this.element.outerHeight()-this.element.height();this.element.siblings(":visible").each(function(){var elem=$(this),position=elem.css("position");if(position==="absolute"||position==="fixed"){return;}
maxHeight-=elem.outerHeight(true);});this.element.children().not(this.panels).each(function(){maxHeight-=$(this).outerHeight(true);});this.panels.each(function(){$(this).height(Math.max(0,maxHeight-
$(this).innerHeight()+$(this).height()));}).css("overflow","auto");}else if(heightStyle==="auto"){maxHeight=0;this.panels.each(function(){maxHeight=Math.max(maxHeight,$(this).height("").height());}).height(maxHeight);}},_eventHandler:function(event){var options=this.options,active=this.active,anchor=$(event.currentTarget),tab=anchor.closest("li"),clickedIsActive=tab[0]===active[0],collapsing=clickedIsActive&&options.collapsible,toShow=collapsing?$():this._getPanelForTab(tab),toHide=!active.length?$():this._getPanelForTab(active),eventData={oldTab:active,oldPanel:toHide,newTab:collapsing?$():tab,newPanel:toShow};event.preventDefault();if(tab.hasClass("ui-state-disabled")||tab.hasClass("ui-tabs-loading")||this.running||(clickedIsActive&&!options.collapsible)||(this._trigger("beforeActivate",event,eventData)===false)){return;}
options.active=collapsing?false:this.tabs.index(tab);this.active=clickedIsActive?$():tab;if(this.xhr){this.xhr.abort();}
if(!toHide.length&&!toShow.length){$.error("jQuery UI Tabs: Mismatching fragment identifier.");}
if(toShow.length){this.load(this.tabs.index(tab),event);}
this._toggle(event,eventData);},_toggle:function(event,eventData){var that=this,toShow=eventData.newPanel,toHide=eventData.oldPanel;this.running=true;function complete(){that.running=false;that._trigger("activate",event,eventData);}
function show(){that._addClass(eventData.newTab.closest("li"),"ui-tabs-active","ui-state-active");if(toShow.length&&that.options.show){that._show(toShow,that.options.show,complete);}else{toShow.show();complete();}}
if(toHide.length&&this.options.hide){this._hide(toHide,this.options.hide,function(){that._removeClass(eventData.oldTab.closest("li"),"ui-tabs-active","ui-state-active");show();});}else{this._removeClass(eventData.oldTab.closest("li"),"ui-tabs-active","ui-state-active");toHide.hide();show();}
toHide.attr("aria-hidden","true");eventData.oldTab.attr({"aria-selected":"false","aria-expanded":"false"});if(toShow.length&&toHide.length){eventData.oldTab.attr("tabIndex",-1);}else if(toShow.length){this.tabs.filter(function(){return $(this).attr("tabIndex")===0;}).attr("tabIndex",-1);}
toShow.attr("aria-hidden","false");eventData.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0});},_activate:function(index){var anchor,active=this._findActive(index);if(active[0]===this.active[0]){return;}
if(!active.length){active=this.active;}
anchor=active.find(".ui-tabs-anchor")[0];this._eventHandler({target:anchor,currentTarget:anchor,preventDefault:$.noop});},_findActive:function(index){return index===false?$():this.tabs.eq(index);},_getIndex:function(index){if(typeof index==="string"){index=this.anchors.index(this.anchors.filter("[href$='"+
$.ui.escapeSelector(index)+"']"));}
return index;},_destroy:function(){if(this.xhr){this.xhr.abort();}
this.tablist.removeAttr("role").off(this.eventNamespace);this.anchors.removeAttr("role tabIndex").removeUniqueId();this.tabs.add(this.panels).each(function(){if($.data(this,"ui-tabs-destroy")){$(this).remove();}else{$(this).removeAttr("role tabIndex "+"aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded");}});this.tabs.each(function(){var li=$(this),prev=li.data("ui-tabs-aria-controls");if(prev){li.attr("aria-controls",prev).removeData("ui-tabs-aria-controls");}else{li.removeAttr("aria-controls");}});this.panels.show();if(this.options.heightStyle!=="content"){this.panels.css("height","");}},enable:function(index){var disabled=this.options.disabled;if(disabled===false){return;}
if(index===undefined){disabled=false;}else{index=this._getIndex(index);if($.isArray(disabled)){disabled=$.map(disabled,function(num){return num!==index?num:null;});}else{disabled=$.map(this.tabs,function(li,num){return num!==index?num:null;});}}
this._setOptionDisabled(disabled);},disable:function(index){var disabled=this.options.disabled;if(disabled===true){return;}
if(index===undefined){disabled=true;}else{index=this._getIndex(index);if($.inArray(index,disabled)!==-1){return;}
if($.isArray(disabled)){disabled=$.merge([index],disabled).sort();}else{disabled=[index];}}
this._setOptionDisabled(disabled);},load:function(index,event){index=this._getIndex(index);var that=this,tab=this.tabs.eq(index),anchor=tab.find(".ui-tabs-anchor"),panel=this._getPanelForTab(tab),eventData={tab:tab,panel:panel},complete=function(jqXHR,status){if(status==="abort"){that.panels.stop(false,true);}
that._removeClass(tab,"ui-tabs-loading");panel.removeAttr("aria-busy");if(jqXHR===that.xhr){delete that.xhr;}};if(this._isLocal(anchor[0])){return;}
this.xhr=$.ajax(this._ajaxSettings(anchor,event,eventData));if(this.xhr&&this.xhr.statusText!=="canceled"){this._addClass(tab,"ui-tabs-loading");panel.attr("aria-busy","true");this.xhr.done(function(response,status,jqXHR){setTimeout(function(){panel.html(response);that._trigger("load",event,eventData);complete(jqXHR,status);},1);}).fail(function(jqXHR,status){setTimeout(function(){complete(jqXHR,status);},1);});}},_ajaxSettings:function(anchor,event,eventData){var that=this;return{url:anchor.attr("href").replace(/#.*$/,""),beforeSend:function(jqXHR,settings){return that._trigger("beforeLoad",event,$.extend({jqXHR:jqXHR,ajaxSettings:settings},eventData));}};},_getPanelForTab:function(tab){var id=$(tab).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+id));}});if($.uiBackCompat!==false){$.widget("ui.tabs",$.ui.tabs,{_processTabs:function(){this._superApply(arguments);this._addClass(this.tabs,"ui-tab");}});}
var widgetsTabs=$.ui.tabs;$.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var title=$(this).attr("title")||"";return $("<a>").text(title).html();},hide:true,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:true,track:false,close:null,open:null},_addDescribedBy:function(elem,id){var describedby=(elem.attr("aria-describedby")||"").split(/\s+/);describedby.push(id);elem.data("ui-tooltip-id",id).attr("aria-describedby",$.trim(describedby.join(" ")));},_removeDescribedBy:function(elem){var id=elem.data("ui-tooltip-id"),describedby=(elem.attr("aria-describedby")||"").split(/\s+/),index=$.inArray(id,describedby);if(index!==-1){describedby.splice(index,1);}
elem.removeData("ui-tooltip-id");describedby=$.trim(describedby.join(" "));if(describedby){elem.attr("aria-describedby",describedby);}else{elem.removeAttr("aria-describedby");}},_create:function(){this._on({mouseover:"open",focusin:"open"});this.tooltips={};this.parents={};this.liveRegion=$("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body);this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible");this.disabledTitles=$([]);},_setOption:function(key,value){var that=this;this._super(key,value);if(key==="content"){$.each(this.tooltips,function(id,tooltipData){that._updateContent(tooltipData.element);});}},_setOptionDisabled:function(value){this[value?"_disable":"_enable"]();},_disable:function(){var that=this;$.each(this.tooltips,function(id,tooltipData){var event=$.Event("blur");event.target=event.currentTarget=tooltipData.element[0];that.close(event,true);});this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function(){var element=$(this);if(element.is("[title]")){return element.data("ui-tooltip-title",element.attr("title")).removeAttr("title");}}));},_enable:function(){this.disabledTitles.each(function(){var element=$(this);if(element.data("ui-tooltip-title")){element.attr("title",element.data("ui-tooltip-title"));}});this.disabledTitles=$([]);},open:function(event){var that=this,target=$(event?event.target:this.element).closest(this.options.items);if(!target.length||target.data("ui-tooltip-id")){return;}
if(target.attr("title")){target.data("ui-tooltip-title",target.attr("title"));}
target.data("ui-tooltip-open",true);if(event&&event.type==="mouseover"){target.parents().each(function(){var parent=$(this),blurEvent;if(parent.data("ui-tooltip-open")){blurEvent=$.Event("blur");blurEvent.target=blurEvent.currentTarget=this;that.close(blurEvent,true);}
if(parent.attr("title")){parent.uniqueId();that.parents[this.id]={element:this,title:parent.attr("title")};parent.attr("title","");}});}
this._registerCloseHandlers(event,target);this._updateContent(target,event);},_updateContent:function(target,event){var content,contentOption=this.options.content,that=this,eventType=event?event.type:null;if(typeof contentOption==="string"||contentOption.nodeType||contentOption.jquery){return this._open(event,target,contentOption);}
content=contentOption.call(target[0],function(response){that._delay(function(){if(!target.data("ui-tooltip-open")){return;}
if(event){event.type=eventType;}
this._open(event,target,response);});});if(content){this._open(event,target,content);}},_open:function(event,target,content){var tooltipData,tooltip,delayedShow,a11yContent,positionOption=$.extend({},this.options.position);if(!content){return;}
tooltipData=this._find(target);if(tooltipData){tooltipData.tooltip.find(".ui-tooltip-content").html(content);return;}
if(target.is("[title]")){if(event&&event.type==="mouseover"){target.attr("title","");}else{target.removeAttr("title");}}
tooltipData=this._tooltip(target);tooltip=tooltipData.tooltip;this._addDescribedBy(target,tooltip.attr("id"));tooltip.find(".ui-tooltip-content").html(content);this.liveRegion.children().hide();a11yContent=$("<div>").html(tooltip.find(".ui-tooltip-content").html());a11yContent.removeAttr("name").find("[name]").removeAttr("name");a11yContent.removeAttr("id").find("[id]").removeAttr("id");a11yContent.appendTo(this.liveRegion);function position(event){positionOption.of=event;if(tooltip.is(":hidden")){return;}
tooltip.position(positionOption);}
if(this.options.track&&event&&/^mouse/.test(event.type)){this._on(this.document,{mousemove:position});position(event);}else{tooltip.position($.extend({of:target},this.options.position));}
tooltip.hide();this._show(tooltip,this.options.show);if(this.options.track&&this.options.show&&this.options.show.delay){delayedShow=this.delayedShow=setInterval(function(){if(tooltip.is(":visible")){position(positionOption.of);clearInterval(delayedShow);}},$.fx.interval);}
this._trigger("open",event,{tooltip:tooltip});},_registerCloseHandlers:function(event,target){var events={keyup:function(event){if(event.keyCode===$.ui.keyCode.ESCAPE){var fakeEvent=$.Event(event);fakeEvent.currentTarget=target[0];this.close(fakeEvent,true);}}};if(target[0]!==this.element[0]){events.remove=function(){this._removeTooltip(this._find(target).tooltip);};}
if(!event||event.type==="mouseover"){events.mouseleave="close";}
if(!event||event.type==="focusin"){events.focusout="close";}
this._on(true,target,events);},close:function(event){var tooltip,that=this,target=$(event?event.currentTarget:this.element),tooltipData=this._find(target);if(!tooltipData){target.removeData("ui-tooltip-open");return;}
tooltip=tooltipData.tooltip;if(tooltipData.closing){return;}
clearInterval(this.delayedShow);if(target.data("ui-tooltip-title")&&!target.attr("title")){target.attr("title",target.data("ui-tooltip-title"));}
this._removeDescribedBy(target);tooltipData.hiding=true;tooltip.stop(true);this._hide(tooltip,this.options.hide,function(){that._removeTooltip($(this));});target.removeData("ui-tooltip-open");this._off(target,"mouseleave focusout keyup");if(target[0]!==this.element[0]){this._off(target,"remove");}
this._off(this.document,"mousemove");if(event&&event.type==="mouseleave"){$.each(this.parents,function(id,parent){$(parent.element).attr("title",parent.title);delete that.parents[id];});}
tooltipData.closing=true;this._trigger("close",event,{tooltip:tooltip});if(!tooltipData.hiding){tooltipData.closing=false;}},_tooltip:function(element){var tooltip=$("<div>").attr("role","tooltip"),content=$("<div>").appendTo(tooltip),id=tooltip.uniqueId().attr("id");this._addClass(content,"ui-tooltip-content");this._addClass(tooltip,"ui-tooltip","ui-widget ui-widget-content");tooltip.appendTo(this._appendTo(element));return this.tooltips[id]={element:element,tooltip:tooltip};},_find:function(target){var id=target.data("ui-tooltip-id");return id?this.tooltips[id]:null;},_removeTooltip:function(tooltip){tooltip.remove();delete this.tooltips[tooltip.attr("id")];},_appendTo:function(target){var element=target.closest(".ui-front, dialog");if(!element.length){element=this.document[0].body;}
return element;},_destroy:function(){var that=this;$.each(this.tooltips,function(id,tooltipData){var event=$.Event("blur"),element=tooltipData.element;event.target=event.currentTarget=element[0];that.close(event,true);$("#"+id).remove();if(element.data("ui-tooltip-title")){if(!element.attr("title")){element.attr("title",element.data("ui-tooltip-title"));}
element.removeData("ui-tooltip-title");}});this.liveRegion.remove();}});if($.uiBackCompat!==false){$.widget("ui.tooltip",$.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var tooltipData=this._superApply(arguments);if(this.options.tooltipClass){tooltipData.tooltip.addClass(this.options.tooltipClass);}
return tooltipData;}});}
var widgetsTooltip=$.ui.tooltip;}));;;(function($){"use strict";var defaultOptions={tagClass:function(item){return'label label-info';},itemValue:function(item){return item?item.toString():item;},itemText:function(item){return this.itemValue(item);},itemTitle:function(item){return null;},freeInput:true,addOnBlur:true,maxTags:undefined,maxChars:undefined,confirmKeys:[13,44],delimiter:',',delimiterRegex:null,cancelConfirmKeysOnEmpty:true,onTagExists:function(item,$tag){$tag.hide().fadeIn();},trimValue:false,allowDuplicates:false};function TagsInput(element,options){this.itemsArray=[];this.$element=$(element);this.$element.hide();this.isSelect=(element.tagName==='SELECT');this.multiple=(this.isSelect&&element.hasAttribute('multiple'));this.objectItems=options&&options.itemValue;this.placeholderText=element.hasAttribute('placeholder')?this.$element.attr('placeholder'):'';this.inputSize=Math.max(1,this.placeholderText.length);this.$container=$('<div class="bootstrap-tagsinput"></div>');this.$input=$('<input type="text" placeholder="'+this.placeholderText+'"/>').appendTo(this.$container);this.$element.before(this.$container);this.build(options);}
TagsInput.prototype={constructor:TagsInput,add:function(item,dontPushVal,options){var self=this;if(self.options.maxTags&&self.itemsArray.length>=self.options.maxTags)
return;if(item!==false&&!item)
return;if(typeof item==="string"&&self.options.trimValue){item=$.trim(item);}
if(typeof item==="object"&&!self.objectItems){item=$.trim(item.name);}
if(item.toString().match(/^\s*$/))
return;if(self.isSelect&&!self.multiple&&self.itemsArray.length>0)
self.remove(self.itemsArray[0]);if(typeof item==="string"&&this.$element[0].tagName==='INPUT'){var delimiter=(self.options.delimiterRegex)?self.options.delimiterRegex:self.options.delimiter;var items=item.split(delimiter);if(items.length>1){for(var i=0;i<items.length;i++){this.add(items[i],true);}
if(!dontPushVal)
self.pushVal();return;}}
var itemValue=self.options.itemValue(item),itemText=self.options.itemText(item),tagClass=self.options.tagClass(item),itemTitle=self.options.itemTitle(item);var existing=$.grep(self.itemsArray,function(item){return self.options.itemValue(item)===itemValue;})[0];if(existing&&!self.options.allowDuplicates){if(self.options.onTagExists){var $existingTag=$(".tag",self.$container).filter(function(){return $(this).data("item")===existing;});self.options.onTagExists(item,$existingTag);}
return;}
if(self.items().toString().length+item.length+1>self.options.maxInputLength)
return;var beforeItemAddEvent=$.Event('beforeItemAdd',{item:item,cancel:false,options:options});self.$element.trigger(beforeItemAddEvent);if(beforeItemAddEvent.cancel)
return;self.itemsArray.push(item);var $tag=$('<span class="tag '+htmlEncode(tagClass)+(itemTitle!==null?('" title="'+itemTitle):'')+'">'+htmlEncode(itemText)+'<span data-role="remove"></span></span>');$tag.data('item',item);self.findInputWrapper().before($tag);$tag.after(' ');if(self.isSelect&&!$('option[value="'+encodeURIComponent(itemValue)+'"]',self.$element)[0]){var $option=$('<option selected>'+htmlEncode(itemText)+'</option>');$option.data('item',item);$option.attr('value',itemValue);self.$element.append($option);}
if(!dontPushVal)
self.pushVal();if(self.options.maxTags===self.itemsArray.length||self.items().toString().length===self.options.maxInputLength)
self.$container.addClass('bootstrap-tagsinput-max');self.$element.trigger($.Event('itemAdded',{item:item,options:options}));},remove:function(item,dontPushVal,options){var self=this;if(self.objectItems){if(typeof item==="object")
item=$.grep(self.itemsArray,function(other){return self.options.itemValue(other)==self.options.itemValue(item);});else
item=$.grep(self.itemsArray,function(other){return self.options.itemValue(other)==item;});item=item[item.length-1];}
if(item){var beforeItemRemoveEvent=$.Event('beforeItemRemove',{item:item,cancel:false,options:options});self.$element.trigger(beforeItemRemoveEvent);if(beforeItemRemoveEvent.cancel)
return;$('.tag',self.$container).filter(function(){return $(this).data('item')===item;}).remove();$('option',self.$element).filter(function(){return $(this).data('item')===item;}).remove();if($.inArray(item,self.itemsArray)!==-1)
self.itemsArray.splice($.inArray(item,self.itemsArray),1);}
if(!dontPushVal)
self.pushVal();if(self.options.maxTags>self.itemsArray.length)
self.$container.removeClass('bootstrap-tagsinput-max');self.$element.trigger($.Event('itemRemoved',{item:item,options:options}));},removeAll:function(){var self=this;$('.tag',self.$container).remove();$('option',self.$element).remove();while(self.itemsArray.length>0)
self.itemsArray.pop();self.pushVal();},refresh:function(){var self=this;$('.tag',self.$container).each(function(){var $tag=$(this),item=$tag.data('item'),itemValue=self.options.itemValue(item),itemText=self.options.itemText(item),tagClass=self.options.tagClass(item);$tag.attr('class',null);$tag.addClass('tag '+htmlEncode(tagClass));$tag.contents().filter(function(){return this.nodeType==3;})[0].nodeValue=htmlEncode(itemText);if(self.isSelect){var option=$('option',self.$element).filter(function(){return $(this).data('item')===item;});option.attr('value',itemValue);}});},items:function(){return this.itemsArray;},pushVal:function(){var self=this,val=$.map(self.items(),function(item){return self.options.itemValue(item).toString();});self.$element.val(val,true).trigger('change');},build:function(options){var self=this;self.options=$.extend({},defaultOptions,options);if(self.objectItems)
self.options.freeInput=false;makeOptionItemFunction(self.options,'itemValue');makeOptionItemFunction(self.options,'itemText');makeOptionFunction(self.options,'tagClass');if(self.options.typeahead){var typeahead=self.options.typeahead||{};makeOptionFunction(typeahead,'source');self.$input.typeahead($.extend({},typeahead,{source:function(query,process){function processItems(items){var texts=[];for(var i=0;i<items.length;i++){var text=self.options.itemText(items[i]);map[text]=items[i];texts.push(text);}
process(texts);}
this.map={};var map=this.map,data=typeahead.source(query);if($.isFunction(data.success)){data.success(processItems);}else if($.isFunction(data.then)){data.then(processItems);}else{$.when(data).then(processItems);}},updater:function(text){self.add(this.map[text]);return this.map[text];},matcher:function(text){return(text.toLowerCase().indexOf(this.query.trim().toLowerCase())!==-1);},sorter:function(texts){return texts.sort();},highlighter:function(text){var regex=new RegExp('('+this.query+')','gi');return text.replace(regex,"<strong>$1</strong>");}}));}
if(self.options.typeaheadjs){var typeaheadConfig=null;var typeaheadDatasets={};var typeaheadjs=self.options.typeaheadjs;if($.isArray(typeaheadjs)){typeaheadConfig=typeaheadjs[0];typeaheadDatasets=typeaheadjs[1];}else{typeaheadDatasets=typeaheadjs;}
self.$input.typeahead(typeaheadConfig,typeaheadDatasets).on('typeahead:selected',$.proxy(function(obj,datum){if(typeaheadDatasets.valueKey)
self.add(datum[typeaheadDatasets.valueKey]);else
self.add(datum);self.$input.typeahead('val','');},self));}
self.$container.on('click',$.proxy(function(event){if(!self.$element.attr('disabled')){self.$input.removeAttr('disabled');}
self.$input.focus();},self));if(self.options.addOnBlur&&self.options.freeInput){self.$input.on('focusout',$.proxy(function(event){if($('.typeahead, .twitter-typeahead',self.$container).length===0){self.add(self.$input.val());self.$input.val('');}},self));}
self.$container.on('keydown','input',$.proxy(function(event){var $input=$(event.target),$inputWrapper=self.findInputWrapper();if(self.$element.attr('disabled')){self.$input.attr('disabled','disabled');return;}
switch(event.which){case 8:if(doGetCaretPosition($input[0])===0){var prev=$inputWrapper.prev();if(prev.length){self.remove(prev.data('item'));}}
break;case 46:if(doGetCaretPosition($input[0])===0){var next=$inputWrapper.next();if(next.length){self.remove(next.data('item'));}}
break;case 37:var $prevTag=$inputWrapper.prev();if($input.val().length===0&&$prevTag[0]){$prevTag.before($inputWrapper);$input.focus();}
break;case 39:var $nextTag=$inputWrapper.next();if($input.val().length===0&&$nextTag[0]){$nextTag.after($inputWrapper);$input.focus();}
break;default:}
var textLength=$input.val().length,wordSpace=Math.ceil(textLength / 5),size=textLength+wordSpace+1;$input.attr('size',Math.max(this.inputSize,$input.val().length));},self));self.$container.on('keypress','input',$.proxy(function(event){var $input=$(event.target);if(self.$element.attr('disabled')){self.$input.attr('disabled','disabled');return;}
var text=$input.val(),maxLengthReached=self.options.maxChars&&text.length>=self.options.maxChars;if(self.options.freeInput&&(keyCombinationInList(event,self.options.confirmKeys)||maxLengthReached)){if(text.length!==0){self.add(maxLengthReached?text.substr(0,self.options.maxChars):text);$input.val('');}
if(self.options.cancelConfirmKeysOnEmpty===false){event.preventDefault();}}
var textLength=$input.val().length,wordSpace=Math.ceil(textLength / 5),size=textLength+wordSpace+1;$input.attr('size',Math.max(this.inputSize,$input.val().length));},self));self.$container.on('click','[data-role=remove]',$.proxy(function(event){if(self.$element.attr('disabled')){return;}
self.remove($(event.target).closest('.tag').data('item'));},self));if(self.options.itemValue===defaultOptions.itemValue){if(self.$element[0].tagName==='INPUT'){self.add(self.$element.val());}else{$('option',self.$element).each(function(){self.add($(this).attr('value'),true);});}}},destroy:function(){var self=this;self.$container.off('keypress','input');self.$container.off('click','[role=remove]');self.$container.remove();self.$element.removeData('tagsinput');self.$element.show();},focus:function(){this.$input.focus();},input:function(){return this.$input;},findInputWrapper:function(){var elt=this.$input[0],container=this.$container[0];while(elt&&elt.parentNode!==container)
elt=elt.parentNode;return $(elt);}};$.fn.tagsinput=function(arg1,arg2,arg3){var results=[];this.each(function(){var tagsinput=$(this).data('tagsinput');if(!tagsinput){tagsinput=new TagsInput(this,arg1);$(this).data('tagsinput',tagsinput);results.push(tagsinput);if(this.tagName==='SELECT'){$('option',$(this)).attr('selected','selected');}
$(this).val($(this).val());}else if(!arg1&&!arg2){results.push(tagsinput);}else if(tagsinput[arg1]!==undefined){if(tagsinput[arg1].length===3&&arg3!==undefined){var retVal=tagsinput[arg1](arg2,null,arg3);}else{var retVal=tagsinput[arg1](arg2);}
if(retVal!==undefined)
results.push(retVal);}});if(typeof arg1=='string'){return results.length>1?results:results[0];}else{return results;}};$.fn.tagsinput.Constructor=TagsInput;function makeOptionItemFunction(options,key){if(typeof options[key]!=='function'){var propertyName=options[key];options[key]=function(item){return item[propertyName];};}}
function makeOptionFunction(options,key){if(typeof options[key]!=='function'){var value=options[key];options[key]=function(){return value;};}}
var htmlEncodeContainer=$('<div />');function htmlEncode(value){if(value){return htmlEncodeContainer.text(value).html();}else{return'';}}
function doGetCaretPosition(oField){var iCaretPos=0;if(document.selection){oField.focus();var oSel=document.selection.createRange();oSel.moveStart('character',-oField.value.length);iCaretPos=oSel.text.length;}else if(oField.selectionStart||oField.selectionStart=='0'){iCaretPos=oField.selectionStart;}
return(iCaretPos);}
function keyCombinationInList(keyPressEvent,lookupList){var found=false;$.each(lookupList,function(index,keyCombination){if(typeof(keyCombination)==='number'&&keyPressEvent.which===keyCombination){found=true;return false;}
if(keyPressEvent.which===keyCombination.which){var alt=!keyCombination.hasOwnProperty('altKey')||keyPressEvent.altKey===keyCombination.altKey,shift=!keyCombination.hasOwnProperty('shiftKey')||keyPressEvent.shiftKey===keyCombination.shiftKey,ctrl=!keyCombination.hasOwnProperty('ctrlKey')||keyPressEvent.ctrlKey===keyCombination.ctrlKey;if(alt&&shift&&ctrl){found=true;return false;}}});return found;}
$(function(){$("input[data-role=tagsinput], select[multiple][data-role=tagsinput]").tagsinput();});})(window.jQuery);;;function checkChose(){var checked=0;$('.bgradio').each(function(){if($(this).prop('checked')==true){checked++;}});if(checked){return true;}
alert('ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÑÐµÐ³Ð¸Ð¾Ð½ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ñ Ð±Ð°Ð½ÐºÐ¾Ð²ÑÐºÐ¾Ð¹ Ð³Ð°ÑÐ°Ð½ÑÐ¸Ð¸!');return false;};;(function($){var CLASS_JQUERY_TREE='jquery-tree';var CLASS_JQUERY_TREE_CONTROLS='jquery-tree-controls';var CLASS_JQUERY_TREE_COLLAPSE_ALL='jquery-tree-collapseall';var CLASS_JQUERY_TREE_EXPAND_ALL='jquery-tree-expandall';var CLASS_JQUERY_TREE_COLLAPSED='jquery-tree-collapsed';var CLASS_JQUERY_TREE_HANDLE='jquery-tree-handle';var CLASS_JQUERY_TREE_TITLE='jquery-tree-title';var CLASS_JQUERY_TREE_NODE='jquery-tree-node';var CLASS_JQUERY_TREE_LEAF='jquery-tree-leaf';var CLASS_JQUERY_TREE_CHECKED='jquery-tree-checked';var CLASS_JQUERY_TREE_UNCHECKED='jquery-tree-unchecked';var CLASS_JQUERY_TREE_CHECKED_PARTIAL='jquery-tree-checked-partial';var COLLAPSE_ALL_CODE='<span class="'+CLASS_JQUERY_TREE_COLLAPSE_ALL+'">Ñâåðíóòü âñå</span>';var EXPAND_ALL_CODE='<span class="'+CLASS_JQUERY_TREE_EXPAND_ALL+'">Ðàçâåðíóòü âñå</span>';var TREE_CONTROLS_CODE='<div class="'+CLASS_JQUERY_TREE_CONTROLS+'">'+
COLLAPSE_ALL_CODE+
EXPAND_ALL_CODE+'</div>';var TREE_NODE_HANDLE_CODE='<span class="'+CLASS_JQUERY_TREE_HANDLE+'">+</span>';var TREE_NODE_HANDLE_COLLAPSED="+";var TREE_NODE_HANDLE_EXPANDED="&minus;";$.fn.extend({Tree:function(){$(this).addClass(CLASS_JQUERY_TREE).before(TREE_CONTROLS_CODE).prev('.'+CLASS_JQUERY_TREE_CONTROLS).find('.'+CLASS_JQUERY_TREE_COLLAPSE_ALL).click(function(){$(this).parent().next('.'+CLASS_JQUERY_TREE).find('li:has(ul)').addClass(CLASS_JQUERY_TREE_COLLAPSED).find('.'+CLASS_JQUERY_TREE_HANDLE).html(TREE_NODE_HANDLE_COLLAPSED);}).parent('.'+CLASS_JQUERY_TREE_CONTROLS).find('.'+CLASS_JQUERY_TREE_EXPAND_ALL).click(function(){$(this).parent().next('.'+CLASS_JQUERY_TREE).find('li:has(ul)').removeClass(CLASS_JQUERY_TREE_COLLAPSED).find('.'+CLASS_JQUERY_TREE_HANDLE).html(TREE_NODE_HANDLE_EXPANDED);});$('li',this).find(':first').addClass(CLASS_JQUERY_TREE_TITLE).closest('li').addClass(CLASS_JQUERY_TREE_LEAF);$('li:has(ul:has(li))',this).find(':first').before(TREE_NODE_HANDLE_CODE).closest('li').addClass(CLASS_JQUERY_TREE_NODE).addClass(CLASS_JQUERY_TREE_COLLAPSED).removeClass(CLASS_JQUERY_TREE_LEAF);$('.'+CLASS_JQUERY_TREE_HANDLE,this).bind('click',function(){var leafContainer=$(this).parent('li');var leafHandle=leafContainer.find('>.'+CLASS_JQUERY_TREE_HANDLE);if($('.'+CLASS_JQUERY_TREE).attr('floating')=='true'){var allLiContainersInParentUl=$('>li',$(this).parent('li').parent('ul'));$(allLiContainersInParentUl).each(function(){if($(this).html()==$(leafContainer).html())return;if(!$(this).hasClass(CLASS_JQUERY_TREE_COLLAPSED))
$(this).addClass(CLASS_JQUERY_TREE_COLLAPSED);var leafHandleC=$(this).find('>.'+CLASS_JQUERY_TREE_HANDLE);if($(this).hasClass(CLASS_JQUERY_TREE_COLLAPSED))
leafHandleC.html(TREE_NODE_HANDLE_COLLAPSED);else
leafHandleC.html(TREE_NODE_HANDLE_EXPANDED);});}
leafContainer.toggleClass(CLASS_JQUERY_TREE_COLLAPSED);if(leafContainer.hasClass(CLASS_JQUERY_TREE_COLLAPSED))
leafHandle.html(TREE_NODE_HANDLE_COLLAPSED);else
leafHandle.html(TREE_NODE_HANDLE_EXPANDED);});$('input:checkbox',this).click(function(){setLabelClass(this);checkCheckbox(this);}).each(function(){setLabelClass(this);if(this.checked)
checkParentCheckboxes(this);}).closest('label').click(function(){labelClick(this);checkCheckbox($('input:checkbox',this));});}});function checkParentCheckboxes(checkboxElement){if(typeof checkboxElement=='undefined'||!checkboxElement)
return;var closestNode=$(checkboxElement).closest('ul');var allCheckboxes=closestNode.find('input:checkbox');var checkedCheckboxes=closestNode.find('input:checkbox:checked');var allChecked=allCheckboxes.length==checkedCheckboxes.length;var parentCheckbox=closestNode.closest('li').find('>.'+CLASS_JQUERY_TREE_TITLE+' input:checkbox');if(parentCheckbox.length>0){parentCheckbox.get(0).checked=allChecked;if(!allChecked&&checkedCheckboxes.length>0)
parentCheckbox.closest('label').addClass(CLASS_JQUERY_TREE_CHECKED_PARTIAL).removeClass(CLASS_JQUERY_TREE_CHECKED).removeClass(CLASS_JQUERY_TREE_UNCHECKED);else
if(allChecked)
parentCheckbox.closest('label').removeClass(CLASS_JQUERY_TREE_CHECKED_PARTIAL).removeClass(CLASS_JQUERY_TREE_UNCHECKED).addClass(CLASS_JQUERY_TREE_CHECKED);else
parentCheckbox.closest('label').removeClass(CLASS_JQUERY_TREE_CHECKED_PARTIAL).removeClass(CLASS_JQUERY_TREE_CHECKED).addClass(CLASS_JQUERY_TREE_UNCHECKED);checkParentCheckboxes(parentCheckbox.get(0));}}
function checkCheckbox(checkboxElement){$(checkboxElement).closest('li').find('input:checkbox').each(function(){this.checked=$(checkboxElement).prop('checked');setLabelClass(this);});checkParentCheckboxes(checkboxElement);};function setLabelClass(checkboxElement){isChecked=$(checkboxElement).prop('checked');if(isChecked){$(checkboxElement).closest('label').addClass(CLASS_JQUERY_TREE_CHECKED).removeClass(CLASS_JQUERY_TREE_UNCHECKED).removeClass(CLASS_JQUERY_TREE_CHECKED_PARTIAL);}
else{$(checkboxElement).closest('label').addClass(CLASS_JQUERY_TREE_UNCHECKED).removeClass(CLASS_JQUERY_TREE_CHECKED).removeClass(CLASS_JQUERY_TREE_CHECKED_PARTIAL);}};function labelClick(labelElement){var checkbox=$('input:checkbox',labelElement);var checked=checkbox.prop('checked');checkbox.prop('checked',!checked);setLabelClass(checkbox);}})(jQuery);;;ie6=false;var NoSroll,Modal;$(document).ready(function(e){detectDeltaScroll();domIsReady=true;new Switcher();Modal=new ModalsWidget();if(isMobile()){NoScroll=new noScrollWidgetTest();}
setStateInputSearch();$('input[type="search"]').closest('.input-group--search').find('.btn-delete').addClass('hidden');$(".tender-row .tender-icon, .tender-info .tender-info-header").on("click",".fav-star",function(){if($(this).closest('.tender-icon--preview').length){var id=$(this).closest('.tender-row').attr('id');$('#table-constructor').find('.tender-row[id="'+id+'"]').find('.fav-star').trigger('click')
return false;}
var starElem=$(this),tenderRow=starElem.closest(".tender-row"),action=(starElem.hasClass("fav-on"))?"delete":"add",result;if(typeof starElem.data("params")!="undefined"&&starElem.data("params").action){var tenderID=starElem.data("params").tender,actionURL=(action=="delete")?"delete-from-fav":"add-to-fav";if(starElem.data("settings")&&starElem.hasClass('modal-open')){$("body").on("click","#fav-tender-cancel",function(e){$("body").off("click","#fav-tender-action");});$("body").on("click","#fav-tender-action",function(e){e.preventDefault();result=beforeTenderActions(actionURL,{tid:tenderID},function(){afterFavActions(starElem,action,tenderRow);$("body").off("click","#fav-tender-action");starElem.removeClass('modal-open').data('reserve-setting',starElem.data('settings')).removeAttr('data-settings')
return allerts("Ð¢ÐµÐ½Ð´ÐµÑ ÑÑÐ¿ÐµÑÐ½Ð¾ ÑÐ´Ð°Ð»ÑÐ½ Ð¸Ð· Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ð³Ð¾","success",true);});});}else{result=beforeTenderActions(actionURL,{tid:tenderID},function(){afterFavActions(starElem,action,tenderRow);});if(starElem.data("settings")){setTimeout(function(){starElem.data('setting',starElem.data('reserve-settings')).removeAttr('data-settings').addClass('modal-open')},1000)}}}else{var tenderID=starElem.data("target"),actionURL=(action=="delete")?"delete-from-fav":"add-to-fav";result=beforeTenderActions(actionURL,{tid:tenderID},function(){afterFavActions(starElem,action,tenderRow);});}
var instance=starElem.data('instance');if(instance){instance.setContent(action=="delete"?starElem.data('add-title'):starElem.data('delete-title'))}
return result;});$("#show_hide").on("change",function(){if($(this).is(':checked')==true)
$("div.eye-switch + .eye-switch-label label[for=show_hide]").text("Ð£Ð±ÑÐ°ÑÑ ÑÐºÑÑÑÑÐµ");else
$("div.eye-switch + .eye-switch-label label[for=show_hide]").text("ÐÐ¾ÐºÐ°Ð·Ð°ÑÑ ÑÐºÑÑÑÑÐµ");$("body").addClass("processed");return $(this).parents("form").data("valid",true).submit();});$("body").on("keydown change","input[type=\"search\"]",function(){var $del=$(this).closest('.input-group--search').find('.btn-delete');if($(this).val().length>0){$del.removeClass('hidden')}else{$del.addClass('hidden')}}).on("click",".eye-hide:not(.hidden)",function(){if($(this).closest('.tender-icon--preview').length){var id=$(this).closest('.tender-row').attr('id');$('#table-constructor').find('.tender-row[id="'+id+'"]').find('.eye-hide').trigger('click')
return false;}
var eyeHideElem=$(this),tenderRow=eyeHideElem.closest(".tender-row"),action=(eyeHideElem.hasClass("user-hide-on"))?"delete":"add";if(typeof eyeHideElem.data("params")!="undefined"&&eyeHideElem.data("params").action){var tenderID=eyeHideElem.data("params").tender,actionURL=eyeHideElem.data("params").action;if(eyeHideElem.data("settings")){$("body").on("click","#user-hide-tender-cancel",function(e){$("body").off("click","#user-hide-tender-action");});$("body").on("click","#user-hide-tender-action",function(e){e.preventDefault();return beforeTenderActions(actionURL,{tid:tenderID,action:action},function(){afterHideActions(eyeHideElem,action,tenderRow);$("body").off("click","#user-hide-tender-action");return true;});});}else{return beforeTenderActions(actionURL,{tid:tenderID,action:action},function(){afterHideActions(eyeHideElem,action,tenderRow);return true;});}}else{var tenderID=eyeHideElem.data("target"),actionURL="toggle-user-tenders";return beforeTenderActions(actionURL,{tid:tenderID,action:action},function(){afterHideActions(eyeHideElem,action,tenderRow);return true;});}});if($(".user-hide-alert").length){$(".user-hide-alert-close").on("click",function(){$(".user-hide-alert").animate({'height':'toggle'},200,function(){$(".user-hide-alert").remove();})});$(window).scroll(function(){if($('.user-hide-alert')[0].getBoundingClientRect().y<150){$(".user-hide-alert").fadeOut();}});$("body").on("click",function(e){if($(e.target).closest('jdiv').length)return;$(".user-hide-alert").fadeOut();});}
if(!($('.client-query-list').length)){$('body > div.container.main-screen-adaptive').removeClass('main-screen-adaptive');}
if($.cookie('tooltipsOn')=='false'){$('#hintsSwitcher').text('ÐÐºÐ»ÑÑÐ¸ÑÑ Ð¿Ð¾Ð´ÑÐºÐ°Ð·ÐºÐ¸');$('#hintsSwitcher').css('padding-left','27px');$('.search-module .hoveredPopupTooltip').hide();}
checkAllHidden();checkRecomendetAllHidden();$('.cabinetDetails-hide').each(function(){$(this).click(function(event){event.stopPropagation();var parent=$(this).parent();$(parent).css('display','none');document.cookie=$(this).parent().attr('id')+'=hide; expires=Fri, 3 Aug 2051 20:47:11 UTC; path=/'
checkAllHidden();return false;});});$('.cabinetRecomendet-hide').each(function(){$(this).click(function(event){event.stopPropagation();var parent=$(this).parent();$(parent).css('display','none');document.cookie=$(this).parent().attr('id')+'=hide; expires=Fri, 3 Aug 2051 20:47:11 UTC; path=/'
checkRecomendetAllHidden();return false;});});function collapsF(_this,_maxw){var maxw=_maxw;$('.b-detail-expand',_this).click(function(){$(this).css('display','none');var hstop=$('ul',$(this).parent()).attr('name');var ul=$('ul',$(this).parent());var curTR=$(this).parent().parent().parent();$(ul).animate({height:hstop+'px'},{duration:400,complete:function(){$('.b-detail-gradient',$(curTR)).css('display','none');$('.b-detail-collaps',$(curTR)).css('display','block');}});return false;});$('.b-detail-collaps',_this).click(function(){$(this).css('display','none');var ul=$('ul',$(this).parent());var curTR=$(this).parent().parent().parent();$(ul).animate({height:maxw+'px'},{duration:400,complete:function(){$('.b-detail-gradient',$(curTR)).css('display','block');$('.b-detail-expand',$(curTR)).css('display','block');}});return false;});$('ul',_this).attr('name',$('ul',_this).height());if($('ul',_this).height()>maxw){$('ul',_this).height(maxw);$('.b-detail-expand',_this).css('display','block');$('.b-detail-gradient',_this).css('display','block');}}
if($('body').has('.b-detail-regbr'))$('.b-detail-regbr tr').each(function(){collapsF(this,70)});if($('body').has('.b-detail-div'))$('.b-detail-div').each(function(){collapsF(this,50)});if($(window).width()<992){$('#b-popup-help2').css('display','none');$('#b-popup-help3').css('display','none');}else{if($('#b-popup-help2').length>0){if($('#b-popup-help2').parents('div').offset().left<120){$('#b-popup-help2').parent().addClass('invert-top');}else{$('#b-popup-help2').parent().removeClass('invert-top');}}}
window.onresize=function(){setCookie('windowwidth',window.innerWidth);if($(window).width()<992){$('#b-popup-help2').css('display','none');$('#b-popup-help3').css('display','none');}else{$('#b-popup-help3').css('display','block');if($('#b-popup-help2').length>0){$('#b-popup-help2').css('display','block');if($('#b-popup-help2').parents('div').offset().left<120){$('#b-popup-help2').parent().addClass('invert-top');}else{$('#b-popup-help2').parent().removeClass('invert-top');}}}};$('#b-header-search-input').attr('autocomplete','off');$('.id-autocomplete-kwd').attr('autocomplete','off');if($('.b-nav-intro-box-slim').attr('topScrollPreset')==undefined){var __topScrollPreset=350;}else{var __topScrollPreset=$('.b-nav-intro-box-slim').attr('topScrollPreset');}
if(__topScrollPreset==0){var pos=$('#b-nav-intro-box-top').position();if(pos){__topScrollPreset=pos.top;}}
if($('#b-nav-intro-box-top').attr('rel')=='noslide'){__topScrollPreset-=45;}
function scrollBind(){if($(window).scrollTop()>__topScrollPreset){if($('#b-nav-intro-box-top').attr('rel')!='noslide'){if($('#b-nav-intro-box-top').css('opacity')==1){$('#b-nav-intro-box-top').css('opacity','0.99');$('#quick-menu').animate({opacity:0},200);$('#b-nav-intro-box-top').animate({opacity:0},200);$('.myregion').animate({opacity:0},200);$('.b-nav-intro-box-slim-outer').fadeIn(200);}}else{$('#b-nav-intro-box-top').addClass('tree-slider');$('#b-nav-intro-box-top ul[id]').attr('floating','true');}}else{if($('#b-nav-intro-box-top').attr('rel')!='noslide'){if($('#b-nav-intro-box-top').css('opacity')==0){$('#b-nav-intro-box-top').css('opacity','0.01');$('#quick-menu').animate({opacity:1},200);$('#b-nav-intro-box-top').animate({opacity:1},200);$('.myregion').animate({opacity:1},200);$('.b-nav-intro-box-slim-outer').fadeOut(200);}}else{$('#b-nav-intro-box-top').removeClass('tree-slider');$('#b-nav-intro-box-top ul[id]').removeAttr('floating','true');}}};$(window).bind('scroll',function(){scrollBind();});$('#selectOnMyRegion').click(function(){var rid=$(this).attr('rel');$('#tree-region input').removeAttr('checked');if($(this).attr('name')=='ext'){$('input[name=geo'+rid+']').attr('checked','checked');$('input[name=geo'+rid+']').prop('checked',true);$('#extsearchsubmit').click();}else{if($(this).attr('name')=='simple'){$('input[name=geo'+rid+']').attr('checked','checked');$('input[name=geo'+rid+']').prop('checked',true);$('#id-search-keywords-submit').click();}else{$('input[name=kladr'+rid+']').attr('checked','checked');$('input[name=kladr'+rid+']').prop('checked',true);$('#filtersubmit').click();}}
return false;});$('#unselectOnMyRegion').click(function(){$('#tree-region input').removeAttr('checked');if($(this).attr('name')=='ext'){$('#extsearchsubmit').click();}else{if($(this).attr('name')=='simple'){$('#id-search-keywords-submit').click();}else{$('#filtersubmit').click();}}
return false;});$('#b-secondmenu-what-this').click(function(){$('#dialog-modal-fav').dialog({width:500,height:310,resizable:false,modal:true,buttons:{'ÐÐ°ÐºÑÑÑÑ':function(){$(this).dialog('close');}}});return false;});$('.b-detail-fav').click(function(){var status=0;var id=$(this).attr('id');if($(this).attr('rel')=='off'){$(this).addClass('active');$(this).attr('rel','on');$(this).attr('title','Ð Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ð¼');status=1;}else{$(this).removeClass('active');$(this).attr('rel','off');$(this).attr('title','ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð² Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ðµ');status=0;if($('#tr'+id)){$('#tr'+id).fadeOut('slow');}}
$.ajax({type:'POST',url:'/tender/'+id,data:{status:status,id:id,tofav:true}}).fail(function(msg){alert('ÐÑÐ¸Ð±ÐºÐ° Ð¾Ð±ÑÐ°Ð±Ð¾ÑÐºÐ¸ '+msg);});});($('#tree-region').length)?$('#tree-region').Tree():null;($('#tree-region2').length)?$('#tree-region2').Tree():null;($('#tree-region-second').length)?$('#tree-region-second').Tree():null;($('#tree-branch').length)?$('#tree-branch').Tree():null;($('#tree-regionbycity').length)?$('#tree-regionbycity').Tree():null;($('#tree-regionbycity4bg').length)?$('#tree-regionbycity4bg').Tree():null;$('#id-region-collapseall').click(function(){$('#tree-region-outside .jquery-tree-collapseall').click();return false;});$('#id-region-expandall').click(function(){$('#tree-region-outside .jquery-tree-expandall').click();return false;});$('#id-region-collapseall2').click(function(){$('#tree-region-outside2 .jquery-tree-collapseall').click();return false;});$('#id-region-expandall2').click(function(){$('#tree-region-outside2 .jquery-tree-expandall').click();return false;});$('#id-branch-collapseall').click(function(){$('#tree-branch-outside .jquery-tree-collapseall').click();return false;});$('#id-branch-expandall').click(function(){$('#tree-branch-outside .jquery-tree-expandall').click();return false;});$('.tree-data').each(function(){$(this).css('display','block');});$('.b-new-tenders-table tr').each(function(index){$('.b-new-tenders-table-expand',this).click(function(){$(this).css('display','none');var hstop=$('ul',$(this).parent()).attr('name');var ul=$('ul',$(this).parent());var curTR=$(this).parent().parent().parent();$(ul).animate({height:hstop+'px'},{duration:400,complete:function(){$('.b-new-tenders-table-gradient',$(curTR)).css('display','none');$('.b-new-tenders-table-collaps',$(curTR)).css('display','block');},step:function(now,fx){$('.b-new-tenders-table-lastcell-overal',$(curTR)).css('height',now+20);$('.b-new-tenders-table-firstcell-overal',$(curTR)).css('height',now+20);}});return false;});$('.b-new-tenders-table-collaps',this).click(function(){$(this).css('display','none');var ul=$('ul',$(this).parent());var curTR=$(this).parent().parent().parent();$(ul).animate({height:'120px'},{duration:400,complete:function(){$('.b-new-tenders-table-gradient',$(curTR)).css('display','block');$('.b-new-tenders-table-expand',$(curTR)).css('display','block');},step:function(now,fx){$('.b-new-tenders-table-lastcell-overal',$(curTR)).css('height',now+20);$('.b-new-tenders-table-firstcell-overal',$(curTR)).css('height',now+20);}});return false;});$('ul',this).attr('name',$('ul',this).height());if($('ul',this).height()>(120)){$('ul',this).height(120);}else{if($('ul',this).height()<(80))$('ul',this).height(80);}
var subCoefficient=20;if($(this).attr('rel')=='favfixheight'){subCoefficient=0;subCoefficient-=$('.b-new-tenders-table-firstcell-reg',this).height();}
$('.b-new-tenders-table-lastcell-overal',this).css('height',$(this).height()-subCoefficient);$('.b-new-tenders-table-firstcell-overal',this).css('height',$(this).height()-subCoefficient);var divCnt=0;$('.b-new-tenders-table-firstcell-overal div a',this).each(function(){divCnt++;});var addHeight=20;if(divCnt<=1)addHeight=20;if(divCnt==2)addHeight=40;if(divCnt==3)addHeight=40;if(divCnt==4)addHeight=60;if(divCnt==5)addHeight=60;if(divCnt>=6)addHeight=80;var h=($('.b-new-tenders-table-firstcell-overal h3',this).length!=0?$('.b-new-tenders-table-firstcell-overal h3',this).height()*1+addHeight+$('.b-new-tenders-table-firstcell-overal div',this).height()*1:$('.b-new-tenders-table-firstcell-overal strong',this).height()*1+addHeight+$('.b-new-tenders-table-firstcell-overal div',this).height()*1);if(h>$('.b-new-tenders-table-firstcell-overal',this).height()){$('.b-new-tenders-table-lastcell-overal',this).css('height',h);$('.b-new-tenders-table-firstcell-overal',this).css('height',h);}
var trheight=$(this).height()-25;if(trheight<120)trheight=120;if($('ul',this).attr('name')>=(trheight)){$('ul',this).height(trheight-20);$('.b-new-tenders-table-expand',this).css('display','block');$('.b-new-tenders-table-gradient',this).css('display','block');}
if((index>1)&&(index%2==0)){$('td',this).addClass('b-new-tenders-table-tr-silver');$('.b-new-tenders-table-gradient',this).css('backgroundImage','url("/static/img/bg-shadow-list-silver.png")');}});$('#b-search-popup').click(function(){return false;});$('#b-search-popup').mouseover(function(){$('.b-popup-help').css('display','block');clearInterval(helperOpeningInterval);});$('#b-search-popup').mouseout(function(){clearInterval(helperOpeningInterval);helperOpeningInterval=setTimeout(collapsHelpMenu,100);});$('.b-popup-help').mouseover(function(){clearInterval(helperOpeningInterval);});$('.b-popup-help').mouseout(function(){clearInterval(helperOpeningInterval);helperOpeningInterval=setTimeout(collapsHelpMenu,100);});$('#b-popup-help-number').click(function(){return false;});$('#b-popup-help-number').mouseover(function(){$('.b-popup-help-number').css('display','block');clearInterval(helperOpeningInterval);});$('#b-popup-help-number').mouseout(function(){clearInterval(helperOpeningInterval);helperOpeningInterval=setTimeout(collapsHelpMenu,100);});$('.b-popup-help-number').mouseover(function(){clearInterval(helperOpeningInterval);});$('.b-popup-help-number').mouseout(function(){clearInterval(helperOpeningInterval);helperOpeningInterval=setTimeout(collapsHelpMenu,100);});$('#b-popup-help-goods').click(function(){return false;});$('#b-popup-help-goods').mouseover(function(){$('.b-popup-help-goods').css('display','block');clearInterval(helperOpeningInterval);});$('#b-popup-help-goods').mouseout(function(){clearInterval(helperOpeningInterval);helperOpeningInterval=setTimeout(collapsHelpMenu,100);});$('.b-popup-help-goods').mouseover(function(){clearInterval(helperOpeningInterval);});$('.b-popup-help-goods').mouseout(function(){clearInterval(helperOpeningInterval);helperOpeningInterval=setTimeout(collapsHelpMenu,100);});$('#b-abvanced-search').mousemove(function(e){if($('.b-header-search-advanced-popup').css('display')!='block')$('.b-header-search-advanced-popup').css('display','block');$('.b-header-search-advanced-popup').css('left',(e.pageX*1+10)+'px');$('.b-header-search-advanced-popup').css('top',(e.pageY*1-60+(ie6==true?25:0))+'px');});$('#b-abvanced-search').mouseout(function(){$('.b-header-search-advanced-popup').css('display','none');});$('.b-header-search-a').click(function(){$('.b-header-search-submit').click();return false;});$('.b-index-colomnize-first').each(function(){$(this).css('width',Math.ceil($(this).parent().width()/ 2)-4);});$('.b-index-colomnize-last').each(function(){$(this).css('width',Math.ceil($(this).parent().width()/ 2)-4);});$('.b-asearch-form-val label').each(function(){$(this).click(function(){$('.b-asearch-form-val label').removeClass('m-radio-active');$(this).addClass('m-radio-active');});});if(typeof $.datepicker!="undefined"){if($.datepicker.regional!=undefined){$.datepicker.regional['ru']={clearText:'ÐÑÐ¸ÑÑÐ¸ÑÑ',clearStatus:'',closeText:'ÐÐ°ÐºÑÑÑÑ',closeStatus:'',prevText:'&#x3c;ÐÑÐµÐ´',prevStatus:'',prevBigText:'&#x3c;&#x3c;',prevBigStatus:'',nextText:'Ð¡Ð»ÐµÐ´&#x3e;',nextStatus:'',nextBigText:'&#x3e;&#x3e;',nextBigStatus:'',currentText:'Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ',currentStatus:'',monthNames:['Ð¯Ð½Ð²Ð°ÑÑ','Ð¤ÐµÐ²ÑÐ°Ð»Ñ','ÐÐ°ÑÑ','ÐÐ¿ÑÐµÐ»Ñ','ÐÐ°Ð¹','ÐÑÐ½Ñ','ÐÑÐ»Ñ','ÐÐ²Ð³ÑÑÑ','Ð¡ÐµÐ½ÑÑÐ±ÑÑ','ÐÐºÑÑÐ±ÑÑ','ÐÐ¾ÑÐ±ÑÑ','ÐÐµÐºÐ°Ð±ÑÑ'],monthNamesShort:['Ð¯Ð½Ð²','Ð¤ÐµÐ²','ÐÐ°Ñ','ÐÐ¿Ñ','ÐÐ°Ð¹','ÐÑÐ½','ÐÑÐ»','ÐÐ²Ð³','Ð¡ÐµÐ½','ÐÐºÑ','ÐÐ¾Ñ','ÐÐµÐº'],monthStatus:'',yearStatus:'',weekHeader:'ÐÐµ',weekStatus:'',dayNames:['Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ','Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº','Ð²ÑÐ¾ÑÐ½Ð¸Ðº','ÑÑÐµÐ´Ð°','ÑÐµÑÐ²ÐµÑÐ³','Ð¿ÑÑÐ½Ð¸ÑÐ°','ÑÑÐ±Ð±Ð¾ÑÐ°'],dayNamesShort:['Ð²ÑÐº','Ð¿Ð½Ð´','Ð²ÑÑ','ÑÑÐ´','ÑÑÐ²','Ð¿ÑÐ½','ÑÐ±Ñ'],dayNamesMin:['ÐÑ','ÐÐ½','ÐÑ','Ð¡Ñ','Ð§Ñ','ÐÑ','Ð¡Ð±'],dayStatus:'DD',dateStatus:'D, M d',dateFormat:'dd.mm.yy',firstDay:1,initStatus:'',isRTL:false};$.datepicker.setDefaults($.datepicker.regional['ru']);}
$('.b-asearch-form input[name=from]').datepicker();$('.b-asearch-form input[name=to]').datepicker();}
$('.b-nav-intro-box-text .b-new-tenders-table-expand').click(function(){$(this).css('display','none');$('.b-nav-intro-box-text').animate({height:'400px'},{duration:400,complete:function(){$('.b-nav-intro-box-text .b-new-tenders-table-gradient').css('display','none');$('.b-nav-intro-box-text .b-new-tenders-table-collaps').css('display','block');}});});$('.b-nav-intro-box-text .b-new-tenders-table-collaps').click(function(){$(this).css('display','none');$('.b-nav-intro-box-text .b-new-tenders-table-gradient').css('display','block');$('.b-nav-intro-box-text').animate({height:'240px'},{duration:400,complete:function(){$('.b-nav-intro-box-text .b-new-tenders-table-expand').css('display','block');}});});$('.b-header-loginform-a').click(function(){$('.b-header-loginform-submit').click();return false;});$('.jquery-tree-title i').each(function(){$(this).click(function(){$(this).parent().parent().children().click();return false;});});$('.b-helper-regioncity-a').each(function(){$(this).mouseover(function(){$('#'+$(this).attr('rel')).css('display','block');$('#'+$(this).attr('rel')+'-nipple').css('display','block');clearInterval(helperOpeningInterval2);});$(this).mouseout(function(){clearInterval(helperOpeningInterval2);helperOpeningInterval2=setTimeout(collapsHelpMenu2,100);});});$('.b-helper-regioncity-a').each(function(){$(this).click(function(){return false;});$('#'+$(this).attr('rel')).mouseover(function(){clearInterval(helperOpeningInterval2);});$('#'+$(this).attr('rel')).mouseout(function(){clearInterval(helperOpeningInterval2);helperOpeningInterval2=setTimeout(collapsHelpMenu2,100);});$('#'+$(this).attr('rel')+'-nipple').mouseover(function(){clearInterval(helperOpeningInterval2);});$('#'+$(this).attr('rel')+'-nipple').mouseout(function(){clearInterval(helperOpeningInterval2);helperOpeningInterval2=setTimeout(collapsHelpMenu2,100);});});$('.iframeLink').each(function(){$(this).click(function(event){event.stopPropagation();var tid=$(this).attr('tid');var link=$(this).attr('href');$.ajax({url:'/externalpartner.php?tid='+tid+'&link='+encodeURIComponent(link),}).done(function(){});return false;});});var ifTable=$('body').find('#table-constructor').length>0;toggleTextCollapse();scrollToGetEl();});$(window).on('load',function(){setTimeout(function(){setCookie('windowwidth',window.innerWidth);},2000)})
var isFramed=false;try{isFramed=window!=window.top||document!=top.document||self.location!=top.location;}catch(e){isFramed=true;}
if(isFramed){var reif=/(vorslov\.ru|kocac\.ru)/i;var reifTest=new String(document.referrer).match(reif);if(reifTest){var iframeRef=JSON.stringify(document.referrer);rosCreateCookie("iframeRef",iframeRef);}}
function checkAllHidden(){var cntHidden=0;var cntAll=0;$('.cabinetDetails').each(function(){cntAll++;if($(this).css('display')=='none')cntHidden++;});if(cntHidden==cntAll){$('#cabinetDetails-header').html('ÐÐµÑ Ð°ÐºÑÑÐ°Ð»ÑÐ½ÑÑ ÑÐµÐºÐ¾Ð¼ÐµÐ½Ð´Ð°ÑÐ¸Ð¹.');return true;}else{$('#cabinetDetails-header').html('Ð ÐµÐºÐ¾Ð¼ÐµÐ½Ð´Ð°ÑÐ¸Ð¸:');return false;}}
function checkRecomendetAllHidden(){var cntHidden=0;var cntAll=0;$('.cabinetRecomendet').each(function(){cntAll++;if($(this).css('display')=='none')cntHidden++;var stoptime=$(this).attr('rel')*1;var nowtime=Math.round(new Date()/ 1000)*1;if(stoptime<nowtime){$(this).css('display','none');cntHidden++;}});if(cntHidden==cntAll){$('#cabinetRecomendet-header').html('');$('#cabinetRecomendet ul').css('display','none');return true;}else{$('#cabinetRecomendet-header').html('ÐÑÐµÐ´ÑÑÐ¾ÑÑÐ¸Ðµ Ð¼ÐµÑÐ¾Ð¿ÑÐ¸ÑÑÐ¸Ñ');return false;}}
function rosCreateCookie(name,value,days){var expires;if(days){var date=new Date();date.setTime(date.getTime()+(days*24*60*60*1000));expires="; expires="+date.toGMTString();}else{expires="";}
document.cookie=name+"="+value+expires+"; path=/";};function rosGetCookie(c_name){if(document.cookie.length>0){c_start=document.cookie.indexOf(c_name+"=");if(c_start!=-1){c_start=c_start+c_name.length+1;c_end=document.cookie.indexOf(";",c_start);if(c_end==-1){c_end=document.cookie.length;}
return unescape(document.cookie.substring(c_start,c_end));}}
return"";};function check_email(email){var reg=/^([A-Za-z0-9_\-\.])+\@[A-Za-z0-9]([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,10})$/;if(reg.test(email.trim())==false)return false;else return true;};var helperOpeningInterval=null;function collapsHelpMenu(){$('.b-popup-help').css('display','none');$('.b-popup-help-number').css('display','none');$('.b-popup-help-goods').css('display','none');clearInterval(helperOpeningInterval);}
var helperOpeningInterval2=null;function collapsHelpMenu2(){$('.b-helper-regioncity-a').each(function(){$('#'+$(this).attr('rel')).css('display','none');$('#'+$(this).attr('rel')+'-nipple').css('display','none');});clearInterval(helperOpeningInterval2);}
$('.bglabels').each(function(){$(this).click(function(){$('.butok').each(function(){$(this).css('display','none');});var id=$(this).attr('rel');$('#bok'+id).click();});});$('.bgbuttonok').each(function(){$(this).click(function(){$('#bgselectedreg').css('display','block');$('span',$('#bgselectedreg')).html($(this).attr('rel'));$('.jquery-tree-collapseall').click();return false;})});$(function(){$('.button-exit').tooltip({content:function(){return $(this).prop('title');},show:null,close:function(event,ui){ui.tooltip.hover(function(){$(this).stop(true).fadeTo(400,1);},function(){$(this).fadeOut("400",function(){$(this).remove();})});}});});function checkAmountOfRecommendations(){var amountOfVisibleRecommendation=$('.recommendation-list li:visible').length;if(amountOfVisibleRecommendation===0){$('#recommendation-header').text('ÐÐµÑ Ð°ÐºÑÑÐ°Ð»ÑÐ½ÑÑ ÑÐµÐºÐ¾Ð¼ÐµÐ½Ð´Ð°ÑÐ¸Ð¹');}}
checkAmountOfRecommendations();$('.cabinetDetails span').on('click',function(e){e.preventDefault();var blockId=$(this).closest('.cabinetDetails').attr('id');$('#'+blockId).hide();$.cookie(blockId,'hide',{expires:10});checkAmountOfRecommendations();});function beforeTenderActions(actionURL,queryData,callback){var queryData=(typeof queryData=="undefined")?{}:queryData,actionURL=(typeof actionURL=="undefined")?null:actionURL,callback=(typeof callback=="undefined")?null:callback;if(actionURL&&queryData){$.ajax({type:"POST",url:"/yiiajax/"+actionURL,data:queryData,success:function(response){if(typeof response.result!=="undefined"){if(response.result.hasOwnProperty("error")){if(response.result.error.hasOwnProperty("tenderHideError")){allerts(response.result.error.tenderHideError,"danger");return false;}
if(response.result.error.hasOwnProperty("classificator")){$("#fav-error-classificator").modal('toggle');}}}
return(callback)?callback():true;},error:function(error){alert("ÐÑÐ¸Ð±ÐºÐ°, Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ Ð¿Ð¾Ð·Ð¶Ðµ");}});}}
function afterFavActions(elem,action,tenderRow){if(action=="add"){elem.removeClass("fav").addClass("fav-on").attr("title","Ð Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ð¼").end().attr("data-title","Ð Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ð¼");var favMenu=tenderRow.find('.tender-menu__item--addFav');favMenu.text(favMenu.attr('data-deactive'))
elem.parent().parent().find(".eye-hide, .tender-menu__item--addHide").addClass("hidden").removeClass("user-hide-on").addClass("user-hide");if(location.pathname!="/favorites"&&location.pathname!="/fav.php"){elem.parent().parent().find(".eye-hide, .tender-menu__item--addHide").addClass("hidden").removeClass("user-hide-on").addClass("user-hide");}
if(location.pathname=="/cabinet/hidden"&&!isOpenPreview()){allerts("Ð¢ÐµÐ½Ð´ÐµÑ Ð¿ÐµÑÐµÐ½ÐµÑÐµÐ½ Ð² ÐÐ·Ð±ÑÐ°Ð½Ð½Ð¾Ðµ","success",true);tenderRow.animate({'height':'toggle'},500,function(){})}else{tenderRow.removeAttr('style')
var $tagList=$('.tag-actions-list');var elems=tenderRow.find(".account-tag")
elems.each(function(){var data=$(this).data("params"),$span=$tagList.find('.account-tag-row[data-id="'+data.tag+'"]').find('.list-group-item__icon').find('span');$span.text($span.text()-0+1);})}}else{elem.addClass("fav").removeClass("fav-on").attr("title","ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð² Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ðµ").end().attr("data-title","ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð² Ð¸Ð·Ð±ÑÐ°Ð½Ð½Ð¾Ðµ");var favMenu=tenderRow.find('.tender-menu__item--addFav');favMenu.text(favMenu.attr('data-active'))
elem.parent().parent().find(".eye-hide, .tender-menu__item--addHide").removeClass("hidden");if((location.pathname.indexOf("/favorites")!==-1||location.pathname=="/fav.php")){if(!isOpenPreview()){tenderRow.animate({'height':'toggle'},500,function(){})}
var $tagList=$('.tag-actions-list');var elems=tenderRow.find(".account-tag")
elems.each(function(){var data=$(this).data("params"),$span=$tagList.find('.account-tag-row[data-id="'+data.tag+'"]').find('.list-group-item__icon').find('span');$span.text($span.text()-1);})}else{elem.parent().parent().find(".eye-hide, .tender-menu__item--addHide").removeClass("hidden");}}
$('body').trigger('favoriteAction.update')}
function afterHideActions(elem,action,tenderRow){if(action=="add"){elem.removeClass("user-hide").addClass("user-hide-on").attr("title","Ð£Ð±ÑÐ°ÑÑ Ð¸Ð· ÑÐºÑÑÑÑÑ");var hideMenu=tenderRow.find('.tender-menu__item--addHide');hideMenu.text(hideMenu.attr('data-active'))
allerts("Ð¢ÐµÐ½Ð´ÐµÑ ÑÑÐ¿ÐµÑÐ½Ð¾ ÑÐºÑÑÑ","success",true);}else{elem.addClass("user-hide").removeClass("user-hide-on").attr("title","Ð¡ÐºÑÑÑÑ ÑÐµÐ½Ð´ÐµÑ");var hideMenu=tenderRow.find('.tender-menu__item--addHide');hideMenu.text(hideMenu.attr('data-deactive'))
allerts("Ð¢ÐµÐ½Ð´ÐµÑ ÑÐ±ÑÐ°Ð½ Ð¸Ð· ÑÐºÑÑÑÑÑ","success",true);}
var instance=elem.data('instance');if(instance){instance.setContent(action=="delete"?elem.data('add-title'):elem.data('delete-title'))}
if($("#show_hide").attr("checked")!='checked'&&(action=="add"||location.pathname=="/cabinet/hidden")&&!isOpenPreview()){tenderRow.animate({'height':'toggle'},500,function(){})}
$('body').trigger('hideAction.update')}
function logoutClick(e){var event=(typeof e=="undefined")?null:e;if(typeof(window.localStorage)=="object"){if(event){event.preventDefault();event.stopPropagation();}}
return location.href="/logout";}
function getNoun(number,one,two,five,seven,nine,fifty,hundred){var hundred=hundred?hundred:five;var fifty=fifty?fifty:five;var nine=nine?nine:five;var seven=seven?seven:five;var n=Math.abs(number);if(n==40){return hundred}
if(n==90){return hundred}
n%=100;if(n==0){return hundred}
if(n>=9&&n<=20){return nine}
if(n>=7&&n<=8){return seven}
if(n>=5&&n<=6){return five}
n%=10;if(n==0){return fifty}
if(n==1){return one}
if(n>=2&&n<=4){return two}
if(n>=5&&n<=6){return five}
if(n>=7&&n<=8){return seven}
if(n>=9&&n<=10){return nine}
return"";}
function isMobile(){return $('html').hasClass('device-mobile');}
function isTablet(){return $('html').hasClass('device-table');}
function isDesktop(){return $('html').hasClass('device-desktop');}
function detectDeltaScroll(){function setClass(){var scroll=$(window).scrollTop();if(scroll>=100){$('body').addClass('scrolled')}else{$('body').removeClass('scrolled')}}
setClass();var scrollPos=0;var scrollH=window.innerHeight;$(window).on('scroll',function(event){if($('body').hasClass('no-scroll'))return;setClass();var st=$(this).scrollTop();var sh=window.innerHeight;if($(this).scrollTop()<50){$('body').addClass('scrolled-bottom').removeClass('scrolled-top').trigger('scrolled-bottom')}else if(st-scrollPos>0&&sh==scrollH){$('body').addClass('scrolled-top').removeClass('scrolled-bottom').trigger('scrolled-top')}else if(st-scrollPos<0&&sh==scrollH){$('body').addClass('scrolled-bottom').removeClass('scrolled-top').trigger('scrolled-bottom')}
scrollPos=st;scrollH=sh;});}
function toggleTextCollapse(){function getLink(e){var link=$(e).siblings('.card-header').find('a');return link;}
$('.collapse-content').on('show.bs.collapse',function(){var link=getLink(this),textDeactive=link.data('deactive-text');link.text(textDeactive).addClass('processing')}).on('hide.bs.collapse',function(){var link=getLink(this),textActive=link.data('active-text');link.text(textActive).addClass('processing')}).on('shown.bs.collapse',function(){var link=getLink(this);link.removeClass('processing')}).on('hidden.bs.collapse',function(){var link=getLink(this);link.removeClass('processing')})}
function $_GET(key){var p=window.location.search;p=p.match(new RegExp(key+'=([^&=]+)'));return p?p[1]:false;}
function scrollToElem(el,$class,time){$class=$class?$class:false;time=time?time:0;var selector=$class?'.':'#';setTimeout(function(){$('html, body').animate({scrollTop:document.querySelector(selector+el).offsetTop},400)},time)}
function scrollToGetEl(){if($_GET('scrollto')){scrollToElem($_GET('scrollto'),false,600);}}
function isOpenSidebar(){return $('body').hasClass('open-sidebar')}
function isOpenPreview(){return $('body').hasClass('open-preview')}
function setCookie(item,state,minutes){var minutes=minutes?minutes:false,host=window.location.host.split('.'),option={path:'/',domain:host[2]?'.'+host[1]+'.'+host[2].split(':')[0]:'.'+host[0]+'.'+host[1].split(':')[0],}
if(minutes){var date=new Date();date.setTime(date.getTime()+(minutes*60*1000));option.expires=date;}
$.cookie(item,state,option);return;}
var noScrollWidget=function(){var widget={};widget.hideScroll=function(){document.body.classList.add('no-scroll');document.scrollTop=window.pageYOffset;document.body.style.position='fixed';if(hasScrollbar()){document.body.style.width='calc(100% - '+getScrollbarSize()+'px)';}else{document.body.style.width='100%';}
document.body.style.top=-document.scrollTop+'px';}
widget.showScroll=function(){document.body.classList.remove('no-scroll');document.body.style.position='';document.body.style.width='';document.body.style.top='';window.scroll(0,document.scrollTop);}
function getScrollbarSize(){let outer=document.createElement('div');outer.style.visibility='hidden';outer.style.width='100px';outer.style.msOverflowStyle='scrollbar';document.body.appendChild(outer);let widthNoScroll=outer.offsetWidth;outer.style.overflow='scroll';let inner=document.createElement('div');inner.style.width='100%';outer.appendChild(inner);let widthWithScroll=inner.offsetWidth;outer.parentNode.removeChild(outer);return widthNoScroll-widthWithScroll;}
function hasScrollbar(){return document.body.scrollHeight>document.body.clientHeight;}
return widget;}
var noScrollWidgetTest=function(){var $docEl=$('html, body'),$wrap=$('.wrapper').eq(0),scrollTop,widget={};widget.hideScroll=function(){document.body.classList.add('no-scroll');if(window.pageYOffset){scrollTop=window.pageYOffset;$wrap.css({top:-(scrollTop)});}
$docEl.css({height:"100%",overflow:"hidden"});}
widget.showScroll=function(){document.body.classList.remove('no-scroll');$docEl.css({height:"",overflow:""});$wrap.css({top:''});window.scrollTo(0,scrollTop);window.setTimeout(function(){scrollTop=null;},0);}
return widget;}
function addSpace(n,isPrice){var price=isPrice?'&zwj;&nbsp;â½&nbsp;':'';return n.toString().replace(/(\d)(?=(\d{3})+$)/g,'$1 ')+price;}
function isLogged(){return $('body').hasClass('is-logged')}
function isBlocked(){return $('body').hasClass('is-blocked')}
Date.prototype.format=function(format){var format=format?format:'yyyy-mm-dd';var replaces={yyyy:this.getFullYear(),mm:('0'+(this.getMonth()+1)).slice(-2),dd:('0'+this.getDate()).slice(-2),hh:('0'+this.getHours()).slice(-2),MM:('0'+this.getMinutes()).slice(-2),ss:('0'+this.getSeconds()).slice(-2)};let result=format;for(var replace in replaces){result=result.replace(replace,replaces[replace]);}
return result;};function getDate(date,mask){if(!date)return new Date();var mask=mask?mask:'dd.mm.yyyy';var ts=date.replace(/\-/g,'.').split(' '),parts=ts[0].split('.');if(parts[2]&&parts[2].length>=4){parts=parts.reverse();}
parts=parts.join('-');ts=ts[1]?parts+'T'+ts[1]:parts;return new Date(ts).format(mask);}
function setStateInputSearch(){$('input[type="search"]').on('keydown',function(){$(this).val()?$(this).addClass('run'):$(this).removeClass('run');})
$('.btn-delete').on('click',function(){$(this).addClass('hidden')
$(this).closest('.input-group').find('input[type="search"]').removeClass('run');})
$('.btn-search').on('click',function(){if($(this).closest('.input-group').find('input[type="search"]').val().length){$(this).closest('.input-group').find('.btn-delete').removeClass('hidden')}})}
var Switcher=function(){var switchAreas=$('.material-switch');switchAreas.each(function(){var switchHandle=$(this).find('.handle');var before=$(this).find('.before');var option1=$(this).find('input[type="checkbox"]');switchHandle.draggable({axis:'x',containment:before,stop:function(){conditionMove();}});$(this).click(function(){conditionMoveSnap();});function conditionMove(){var sizeSwitch=switchHandle.siblings('.before').outerWidth()-switchHandle.outerWidth();if(parseInt(switchHandle.css('left'))<=parseInt(sizeSwitch / 2)){switchHandle.stop().animate({left:0},50,function(){switchHandle.attr('style','')});option1.prop('checked',false);option1.trigger('change')}else{switchHandle.stop().animate({left:sizeSwitch+'px'},50,function(){});option1.prop('checked',true);option1.trigger('change')}}
function conditionMoveSnap(){var sizeSwitch=switchHandle.siblings('.before').outerWidth()-switchHandle.outerWidth();if(parseInt(switchHandle.css('left'))==parseInt(sizeSwitch)){switchHandle.stop().animate({left:0},50,function(){switchHandle.attr('style','')});option1.prop('checked',false);}else{switchHandle.stop().animate({left:sizeSwitch+'px'},50);option1.prop('checked',true);}}})}
function recordingData(url,data,async,type,callbacksuccess,callbackerror){if(async===undefined)async=true;if(type===undefined)type="POST";var result=null;$.ajax({url:url,type:type,data:data,async:async,success:function(response){result=response.status;if(typeof callbacksuccess=='function'){callbacksuccess(result)}},error:function(response){result={saved:0};console.log('ÐÑÐ¸Ð±ÐºÐ° Ð·Ð°Ð¿Ð¸ÑÐ¸');if(typeof callbackerror=='function'){callbackerror(result)}},complete:function(){$('#preloader').hide();},beforeSend:function(){$('#preloader').show();}});return result;}
var ModalsWidget=function(){var _this={},time=400;function getHeader(params){var title=params.title?'<h4 class="modal-title">'+params.title+'</h4>':'';var header=params.header?params.header:'';var closeBtn=params.closebtn?'<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span></button>':'';return'<div class="modal-header">'+header+' '+title+' '+closeBtn+' </div>';}
function getFooter(buttons){var buttonsHtml='';for(var i=0;i<buttons.length;i++){var params='';Object.keys(buttons[i]).forEach(function(key){if(key!=='text'){params+=key+'="'+this[key]+'" ';}},buttons[i]);if(buttons[i].href){buttonsHtml+='<a '+params+'>'+buttons[i].text+'</a>';}else{buttonsHtml+='<button '+params+'>'+buttons[i].text+'</button>';}}
return'<div class="modal-footer">'+buttonsHtml+'</div>';}
function getBody(params){return'<div class="modal-body">'+params.body+'</div>';}
function getModal(params){var html='<div id="'+params.id+'" class="modal no-remove show modal--modern '+params.class+'"  style="opacity: 0;"  role="dialog" tabIndex="-1" aria-labelledby="" aria-modal="true"><div class="modal-dialog '+params.size+'" role="document"><div class="modal-content">';html+=getHeader(params);html+=getBody(params);html+=getFooter(params.buttons);html+='</div></div></div>';html+='<div id="'+params.id+'" class="modal-backdrop show modal-backdrop--modern"></div>';return html;}
_this.init=function(){$('body').on('click','.open-modal',function(){var modal=$(this).data('modal');_this.open(options);}).on('click','.btn[data-dismiss="modal"], .close[data-dismiss="modal"]',function(){var id=$(this).closest('.modal').attr('id');_this.close(id);}).on('click','.modal--modern',function(e){var id=$(this).attr('id');if($(e.target).hasClass('modal--modern')){_this.close(id);}})}
_this.open=function(params){var options=$.extend({'id':'','header':'','closebtn':true,'body':'','class':'','size':'modal-md','buttons':[],'beforeOpen':function(modal){},'afterOpen':function(modal){},'beforeClose':function(modal){},'afterClose':function(modal){},},params);if(options.id&&$('body').find('.modal--modern[id="'+options.id+'"]').length)return;var modal=getModal(options);var scrollBarWidth=window.innerWidth-document.body.clientWidth;$('body').addClass('modal-open').append(modal);if($('.modal.show').length<2){$('body').css({'padding-right':scrollBarWidth+'px'})}
if(typeof params.beforeOpen=="function"){params.beforeOpen($('body').find('.modal--modern[id="'+options.id+'"]'));}
var $modal=$('body').find('.modal--modern[id="'+options.id+'"], .modal-backdrop[id="'+options.id+'"]');$modal.css({'display':'block','visibility':'visible',})
if(typeof params.afterOpen=="function"){params.afterOpen($('body').find('.modal--modern[id="'+options.id+'"]'));}
$modal.data('options',options);$modal.animate({'opacity':1,},time,function(){})}
_this.close=function(id){var $modal=$('body').find('.modal--modern[id="'+id+'"], .modal-backdrop[id="'+id+'"]');var options=$('body').find('.modal--modern[id="'+id+'"]').data('options');if(typeof options.beforeClose=="function"){options.beforeClose($('body').find('.modal--modern[id="'+options.id+'"]'));}
$modal.animate({'opacity':0,},time,function(){$modal.remove()
$('body').removeClass('modal-open')
if(!$('.modal.show').length){$('body').css({'padding-right':'0'})}})
if(typeof options.afterClose=="function"){options.afterClose($('body').find('.modal--modern[id="'+options.id+'"]'));}}
_this.init();return _this;}
function getTendersByCID(event){var listElement=$(event.target).closest('[data-id]');var text=listElement.find('text').text();var bid=listElement.data('id');$('.preloader').show();$.ajax({type:'GET',url:'/yiiajax/get-examples/',data:{branch:bid},}).done(function(ret){if(ret!="error"){if(typeof ret=='string'){ret=$.parseJSON(ret);}
if(ret.length>0){Modal.open({'id':'tenders-of-branch-'+bid,'header':'<div class="jumbotron w100 mb-0 mt-2 text-sm15-13">'+text+'</div>','body':getTenderList(ret),'buttons':[{'class':'btn btn-danger','type':'button','target':'_blank','href':'/'+ret[0].url,'text':'ÐÐ¾ÐºÐ°Ð·Ð°ÑÑ ÑÐµÐ½Ð´ÐµÑÑ Ð¾ÑÑÐ°ÑÐ»Ð¸ Ð² Ð¾ÑÐ´ÐµÐ»ÑÐ½Ð¾Ð¹ Ð²ÐºÐ»Ð°Ð´ÐºÐµ',}],'afterOpen':function($modal){$modal.find('.nano').nanoScroller();if($('body').hasClass('classificator-page')){$("#change-brunches-modal, .modal-backdrop.show:not('.modal-backdrop--modern')").hide();}},'afterClose':function($modal){if($('body').hasClass('classificator-page')){$("#change-brunches-modal, .modal-backdrop.show:not('.modal-backdrop--modern')").show();setTimeout(function(){$('body').addClass('modal-open')},500)}}})}else{alert('Ð¡ÐµÐ¹ÑÐ°Ñ Ð½ÐµÑ Ð¿ÑÐ¾Ð²Ð¾Ð´Ð¸Ð¼ÑÑ ÑÐµÐ½Ð´ÐµÑÐ¾Ð² Ð¿Ð¾ Ð´Ð°Ð½Ð½Ð¾Ð¹ Ð¾ÑÑÐ°ÑÐ»Ð¸')}}
$('.preloader').hide();}).fail(function(jqXHR,textStatus){});}
function getTenderList(tenders){var listElements='';tenders.forEach(function(tender){listElements+='<li>'+tender.name+'</li>';});return'<div class="h4 mb-4">ÐÑÐ¸Ð¼ÐµÑÑ ÑÐµÐ½Ð´ÐµÑÐ¾Ð² Ð² ÑÑÐ¾Ð¹ Ð¾ÑÑÐ°ÑÐ»Ð¸</div><div class="additional-information nano ros-scrollbar">  <div class="nano-content"> <ul class="list text-sm15-13">'+listElements+'</ul></div></div>'}
function runTooltips(){setTimeout(function(){if(constTooltips!==undefined){constTooltips.tooltipsRun()}else{runTooltips();}},2500);};;(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports,require('jquery')):typeof define==='function'&&define.amd?define(['exports','jquery'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,factory(global.bootstrap={},global.jQuery));}(this,(function(exports,$){'use strict';function _interopDefaultLegacy(e){return e&&typeof e==='object'&&'default'in e?e:{'default':e};}
var $__default=_interopDefaultLegacy($);function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}
function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}
function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}
return target;};return _extends.apply(this,arguments);}
function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}
var TRANSITION_END='transitionend';var MAX_UID=1000000;var MILLISECONDS_MULTIPLIER=1000;function toType(obj){if(obj===null||typeof obj==='undefined'){return""+obj;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();}
function getSpecialTransitionEndEvent(){return{bindType:TRANSITION_END,delegateType:TRANSITION_END,handle:function handle(event){if($__default['default'](event.target).is(this)){return event.handleObj.handler.apply(this,arguments);}
return undefined;}};}
function transitionEndEmulator(duration){var _this=this;var called=false;$__default['default'](this).one(Util.TRANSITION_END,function(){called=true;});setTimeout(function(){if(!called){Util.triggerTransitionEnd(_this);}},duration);return this;}
function setTransitionEndSupport(){$__default['default'].fn.emulateTransitionEnd=transitionEndEmulator;$__default['default'].event.special[Util.TRANSITION_END]=getSpecialTransitionEndEvent();}
var Util={TRANSITION_END:'bsTransitionEnd',getUID:function getUID(prefix){do{prefix+=~~(Math.random()*MAX_UID);}while(document.getElementById(prefix));return prefix;},getSelectorFromElement:function getSelectorFromElement(element){var selector=element.getAttribute('data-target');if(!selector||selector==='#'){var hrefAttr=element.getAttribute('href');selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():'';}
try{return document.querySelector(selector)?selector:null;}catch(_){return null;}},getTransitionDurationFromElement:function getTransitionDurationFromElement(element){if(!element){return 0;}
var transitionDuration=$__default['default'](element).css('transition-duration');var transitionDelay=$__default['default'](element).css('transition-delay');var floatTransitionDuration=parseFloat(transitionDuration);var floatTransitionDelay=parseFloat(transitionDelay);if(!floatTransitionDuration&&!floatTransitionDelay){return 0;}
transitionDuration=transitionDuration.split(',')[0];transitionDelay=transitionDelay.split(',')[0];return(parseFloat(transitionDuration)+parseFloat(transitionDelay))*MILLISECONDS_MULTIPLIER;},reflow:function reflow(element){return element.offsetHeight;},triggerTransitionEnd:function triggerTransitionEnd(element){$__default['default'](element).trigger(TRANSITION_END);},supportsTransitionEnd:function supportsTransitionEnd(){return Boolean(TRANSITION_END);},isElement:function isElement(obj){return(obj[0]||obj).nodeType;},typeCheckConfig:function typeCheckConfig(componentName,config,configTypes){for(var property in configTypes){if(Object.prototype.hasOwnProperty.call(configTypes,property)){var expectedTypes=configTypes[property];var value=config[property];var valueType=value&&Util.isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new Error(componentName.toUpperCase()+": "+("Option \""+property+"\" provided type \""+valueType+"\" ")+("but expected type \""+expectedTypes+"\"."));}}}},findShadowRoot:function findShadowRoot(element){if(!document.documentElement.attachShadow){return null;}
if(typeof element.getRootNode==='function'){var root=element.getRootNode();return root instanceof ShadowRoot?root:null;}
if(element instanceof ShadowRoot){return element;}
if(!element.parentNode){return null;}
return Util.findShadowRoot(element.parentNode);},jQueryDetection:function jQueryDetection(){if(typeof $__default['default']==='undefined'){throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.');}
var version=$__default['default'].fn.jquery.split(' ')[0].split('.');var minMajor=1;var ltMajor=2;var minMinor=9;var minPatch=1;var maxMajor=4;if(version[0]<ltMajor&&version[1]<minMinor||version[0]===minMajor&&version[1]===minMinor&&version[2]<minPatch||version[0]>=maxMajor){throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');}}};Util.jQueryDetection();setTransitionEndSupport();var NAME='alert';var VERSION='4.6.0';var DATA_KEY='bs.alert';var EVENT_KEY="."+DATA_KEY;var DATA_API_KEY='.data-api';var JQUERY_NO_CONFLICT=$__default['default'].fn[NAME];var SELECTOR_DISMISS='[data-dismiss="alert"]';var EVENT_CLOSE="close"+EVENT_KEY;var EVENT_CLOSED="closed"+EVENT_KEY;var EVENT_CLICK_DATA_API="click"+EVENT_KEY+DATA_API_KEY;var CLASS_NAME_ALERT='alert';var CLASS_NAME_FADE='fade';var CLASS_NAME_SHOW='show';var Alert=function(){function Alert(element){this._element=element;}
var _proto=Alert.prototype;_proto.close=function close(element){var rootElement=this._element;if(element){rootElement=this._getRootElement(element);}
var customEvent=this._triggerCloseEvent(rootElement);if(customEvent.isDefaultPrevented()){return;}
this._removeElement(rootElement);};_proto.dispose=function dispose(){$__default['default'].removeData(this._element,DATA_KEY);this._element=null;};_proto._getRootElement=function _getRootElement(element){var selector=Util.getSelectorFromElement(element);var parent=false;if(selector){parent=document.querySelector(selector);}
if(!parent){parent=$__default['default'](element).closest("."+CLASS_NAME_ALERT)[0];}
return parent;};_proto._triggerCloseEvent=function _triggerCloseEvent(element){var closeEvent=$__default['default'].Event(EVENT_CLOSE);$__default['default'](element).trigger(closeEvent);return closeEvent;};_proto._removeElement=function _removeElement(element){var _this=this;$__default['default'](element).removeClass(CLASS_NAME_SHOW);if(!$__default['default'](element).hasClass(CLASS_NAME_FADE)){this._destroyElement(element);return;}
var transitionDuration=Util.getTransitionDurationFromElement(element);$__default['default'](element).one(Util.TRANSITION_END,function(event){return _this._destroyElement(element,event);}).emulateTransitionEnd(transitionDuration);};_proto._destroyElement=function _destroyElement(element){$__default['default'](element).detach().trigger(EVENT_CLOSED).remove();};Alert._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var $element=$__default['default'](this);var data=$element.data(DATA_KEY);if(!data){data=new Alert(this);$element.data(DATA_KEY,data);}
if(config==='close'){data[config](this);}});};Alert._handleDismiss=function _handleDismiss(alertInstance){return function(event){if(event){event.preventDefault();}
alertInstance.close(this);};};_createClass(Alert,null,[{key:"VERSION",get:function get(){return VERSION;}}]);return Alert;}();$__default['default'](document).on(EVENT_CLICK_DATA_API,SELECTOR_DISMISS,Alert._handleDismiss(new Alert()));$__default['default'].fn[NAME]=Alert._jQueryInterface;$__default['default'].fn[NAME].Constructor=Alert;$__default['default'].fn[NAME].noConflict=function(){$__default['default'].fn[NAME]=JQUERY_NO_CONFLICT;return Alert._jQueryInterface;};var NAME$1='button';var VERSION$1='4.6.0';var DATA_KEY$1='bs.button';var EVENT_KEY$1="."+DATA_KEY$1;var DATA_API_KEY$1='.data-api';var JQUERY_NO_CONFLICT$1=$__default['default'].fn[NAME$1];var CLASS_NAME_ACTIVE='active';var CLASS_NAME_BUTTON='btn';var CLASS_NAME_FOCUS='focus';var SELECTOR_DATA_TOGGLE_CARROT='[data-toggle^="button"]';var SELECTOR_DATA_TOGGLES='[data-toggle="buttons"]';var SELECTOR_DATA_TOGGLE='[data-toggle="button"]';var SELECTOR_DATA_TOGGLES_BUTTONS='[data-toggle="buttons"] .btn';var SELECTOR_INPUT='input:not([type="hidden"])';var SELECTOR_ACTIVE='.active';var SELECTOR_BUTTON='.btn';var EVENT_CLICK_DATA_API$1="click"+EVENT_KEY$1+DATA_API_KEY$1;var EVENT_FOCUS_BLUR_DATA_API="focus"+EVENT_KEY$1+DATA_API_KEY$1+" "+("blur"+EVENT_KEY$1+DATA_API_KEY$1);var EVENT_LOAD_DATA_API="load"+EVENT_KEY$1+DATA_API_KEY$1;var Button=function(){function Button(element){this._element=element;this.shouldAvoidTriggerChange=false;}
var _proto=Button.prototype;_proto.toggle=function toggle(){var triggerChangeEvent=true;var addAriaPressed=true;var rootElement=$__default['default'](this._element).closest(SELECTOR_DATA_TOGGLES)[0];if(rootElement){var input=this._element.querySelector(SELECTOR_INPUT);if(input){if(input.type==='radio'){if(input.checked&&this._element.classList.contains(CLASS_NAME_ACTIVE)){triggerChangeEvent=false;}else{var activeElement=rootElement.querySelector(SELECTOR_ACTIVE);if(activeElement){$__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE);}}}
if(triggerChangeEvent){if(input.type==='checkbox'||input.type==='radio'){input.checked=!this._element.classList.contains(CLASS_NAME_ACTIVE);}
if(!this.shouldAvoidTriggerChange){$__default['default'](input).trigger('change');}}
input.focus();addAriaPressed=false;}}
if(!(this._element.hasAttribute('disabled')||this._element.classList.contains('disabled'))){if(addAriaPressed){this._element.setAttribute('aria-pressed',!this._element.classList.contains(CLASS_NAME_ACTIVE));}
if(triggerChangeEvent){$__default['default'](this._element).toggleClass(CLASS_NAME_ACTIVE);}}};_proto.dispose=function dispose(){$__default['default'].removeData(this._element,DATA_KEY$1);this._element=null;};Button._jQueryInterface=function _jQueryInterface(config,avoidTriggerChange){return this.each(function(){var $element=$__default['default'](this);var data=$element.data(DATA_KEY$1);if(!data){data=new Button(this);$element.data(DATA_KEY$1,data);}
data.shouldAvoidTriggerChange=avoidTriggerChange;if(config==='toggle'){data[config]();}});};_createClass(Button,null,[{key:"VERSION",get:function get(){return VERSION$1;}}]);return Button;}();$__default['default'](document).on(EVENT_CLICK_DATA_API$1,SELECTOR_DATA_TOGGLE_CARROT,function(event){var button=event.target;var initialButton=button;if(!$__default['default'](button).hasClass(CLASS_NAME_BUTTON)){button=$__default['default'](button).closest(SELECTOR_BUTTON)[0];}
if(!button||button.hasAttribute('disabled')||button.classList.contains('disabled')){event.preventDefault();}else{var inputBtn=button.querySelector(SELECTOR_INPUT);if(inputBtn&&(inputBtn.hasAttribute('disabled')||inputBtn.classList.contains('disabled'))){event.preventDefault();return;}
if(initialButton.tagName==='INPUT'||button.tagName!=='LABEL'){Button._jQueryInterface.call($__default['default'](button),'toggle',initialButton.tagName==='INPUT');}}}).on(EVENT_FOCUS_BLUR_DATA_API,SELECTOR_DATA_TOGGLE_CARROT,function(event){var button=$__default['default'](event.target).closest(SELECTOR_BUTTON)[0];$__default['default'](button).toggleClass(CLASS_NAME_FOCUS,/^focus(in)?$/.test(event.type));});$__default['default'](window).on(EVENT_LOAD_DATA_API,function(){var buttons=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));for(var i=0,len=buttons.length;i<len;i++){var button=buttons[i];var input=button.querySelector(SELECTOR_INPUT);if(input.checked||input.hasAttribute('checked')){button.classList.add(CLASS_NAME_ACTIVE);}else{button.classList.remove(CLASS_NAME_ACTIVE);}}
buttons=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));for(var _i=0,_len=buttons.length;_i<_len;_i++){var _button=buttons[_i];if(_button.getAttribute('aria-pressed')==='true'){_button.classList.add(CLASS_NAME_ACTIVE);}else{_button.classList.remove(CLASS_NAME_ACTIVE);}}});$__default['default'].fn[NAME$1]=Button._jQueryInterface;$__default['default'].fn[NAME$1].Constructor=Button;$__default['default'].fn[NAME$1].noConflict=function(){$__default['default'].fn[NAME$1]=JQUERY_NO_CONFLICT$1;return Button._jQueryInterface;};var NAME$2='carousel';var VERSION$2='4.6.0';var DATA_KEY$2='bs.carousel';var EVENT_KEY$2="."+DATA_KEY$2;var DATA_API_KEY$2='.data-api';var JQUERY_NO_CONFLICT$2=$__default['default'].fn[NAME$2];var ARROW_LEFT_KEYCODE=37;var ARROW_RIGHT_KEYCODE=39;var TOUCHEVENT_COMPAT_WAIT=500;var SWIPE_THRESHOLD=40;var Default={interval:5000,keyboard:true,slide:false,pause:'hover',wrap:true,touch:true};var DefaultType={interval:'(number|boolean)',keyboard:'boolean',slide:'(boolean|string)',pause:'(string|boolean)',wrap:'boolean',touch:'boolean'};var DIRECTION_NEXT='next';var DIRECTION_PREV='prev';var DIRECTION_LEFT='left';var DIRECTION_RIGHT='right';var EVENT_SLIDE="slide"+EVENT_KEY$2;var EVENT_SLID="slid"+EVENT_KEY$2;var EVENT_KEYDOWN="keydown"+EVENT_KEY$2;var EVENT_MOUSEENTER="mouseenter"+EVENT_KEY$2;var EVENT_MOUSELEAVE="mouseleave"+EVENT_KEY$2;var EVENT_TOUCHSTART="touchstart"+EVENT_KEY$2;var EVENT_TOUCHMOVE="touchmove"+EVENT_KEY$2;var EVENT_TOUCHEND="touchend"+EVENT_KEY$2;var EVENT_POINTERDOWN="pointerdown"+EVENT_KEY$2;var EVENT_POINTERUP="pointerup"+EVENT_KEY$2;var EVENT_DRAG_START="dragstart"+EVENT_KEY$2;var EVENT_LOAD_DATA_API$1="load"+EVENT_KEY$2+DATA_API_KEY$2;var EVENT_CLICK_DATA_API$2="click"+EVENT_KEY$2+DATA_API_KEY$2;var CLASS_NAME_CAROUSEL='carousel';var CLASS_NAME_ACTIVE$1='active';var CLASS_NAME_SLIDE='slide';var CLASS_NAME_RIGHT='carousel-item-right';var CLASS_NAME_LEFT='carousel-item-left';var CLASS_NAME_NEXT='carousel-item-next';var CLASS_NAME_PREV='carousel-item-prev';var CLASS_NAME_POINTER_EVENT='pointer-event';var SELECTOR_ACTIVE$1='.active';var SELECTOR_ACTIVE_ITEM='.active.carousel-item';var SELECTOR_ITEM='.carousel-item';var SELECTOR_ITEM_IMG='.carousel-item img';var SELECTOR_NEXT_PREV='.carousel-item-next, .carousel-item-prev';var SELECTOR_INDICATORS='.carousel-indicators';var SELECTOR_DATA_SLIDE='[data-slide], [data-slide-to]';var SELECTOR_DATA_RIDE='[data-ride="carousel"]';var PointerType={TOUCH:'touch',PEN:'pen'};var Carousel=function(){function Carousel(element,config){this._items=null;this._interval=null;this._activeElement=null;this._isPaused=false;this._isSliding=false;this.touchTimeout=null;this.touchStartX=0;this.touchDeltaX=0;this._config=this._getConfig(config);this._element=element;this._indicatorsElement=this._element.querySelector(SELECTOR_INDICATORS);this._touchSupported='ontouchstart'in document.documentElement||navigator.maxTouchPoints>0;this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent);this._addEventListeners();}
var _proto=Carousel.prototype;_proto.next=function next(){if(!this._isSliding){this._slide(DIRECTION_NEXT);}};_proto.nextWhenVisible=function nextWhenVisible(){var $element=$__default['default'](this._element);if(!document.hidden&&$element.is(':visible')&&$element.css('visibility')!=='hidden'){this.next();}};_proto.prev=function prev(){if(!this._isSliding){this._slide(DIRECTION_PREV);}};_proto.pause=function pause(event){if(!event){this._isPaused=true;}
if(this._element.querySelector(SELECTOR_NEXT_PREV)){Util.triggerTransitionEnd(this._element);this.cycle(true);}
clearInterval(this._interval);this._interval=null;};_proto.cycle=function cycle(event){if(!event){this._isPaused=false;}
if(this._interval){clearInterval(this._interval);this._interval=null;}
if(this._config.interval&&!this._isPaused){this._updateInterval();this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval);}};_proto.to=function to(index){var _this=this;this._activeElement=this._element.querySelector(SELECTOR_ACTIVE_ITEM);var activeIndex=this._getItemIndex(this._activeElement);if(index>this._items.length-1||index<0){return;}
if(this._isSliding){$__default['default'](this._element).one(EVENT_SLID,function(){return _this.to(index);});return;}
if(activeIndex===index){this.pause();this.cycle();return;}
var direction=index>activeIndex?DIRECTION_NEXT:DIRECTION_PREV;this._slide(direction,this._items[index]);};_proto.dispose=function dispose(){$__default['default'](this._element).off(EVENT_KEY$2);$__default['default'].removeData(this._element,DATA_KEY$2);this._items=null;this._config=null;this._element=null;this._interval=null;this._isPaused=null;this._isSliding=null;this._activeElement=null;this._indicatorsElement=null;};_proto._getConfig=function _getConfig(config){config=_extends({},Default,config);Util.typeCheckConfig(NAME$2,config,DefaultType);return config;};_proto._handleSwipe=function _handleSwipe(){var absDeltax=Math.abs(this.touchDeltaX);if(absDeltax<=SWIPE_THRESHOLD){return;}
var direction=absDeltax / this.touchDeltaX;this.touchDeltaX=0;if(direction>0){this.prev();}
if(direction<0){this.next();}};_proto._addEventListeners=function _addEventListeners(){var _this2=this;if(this._config.keyboard){$__default['default'](this._element).on(EVENT_KEYDOWN,function(event){return _this2._keydown(event);});}
if(this._config.pause==='hover'){$__default['default'](this._element).on(EVENT_MOUSEENTER,function(event){return _this2.pause(event);}).on(EVENT_MOUSELEAVE,function(event){return _this2.cycle(event);});}
if(this._config.touch){this._addTouchEventListeners();}};_proto._addTouchEventListeners=function _addTouchEventListeners(){var _this3=this;if(!this._touchSupported){return;}
var start=function start(event){if(_this3._pointerEvent&&PointerType[event.originalEvent.pointerType.toUpperCase()]){_this3.touchStartX=event.originalEvent.clientX;}else if(!_this3._pointerEvent){_this3.touchStartX=event.originalEvent.touches[0].clientX;}};var move=function move(event){if(event.originalEvent.touches&&event.originalEvent.touches.length>1){_this3.touchDeltaX=0;}else{_this3.touchDeltaX=event.originalEvent.touches[0].clientX-_this3.touchStartX;}};var end=function end(event){if(_this3._pointerEvent&&PointerType[event.originalEvent.pointerType.toUpperCase()]){_this3.touchDeltaX=event.originalEvent.clientX-_this3.touchStartX;}
_this3._handleSwipe();if(_this3._config.pause==='hover'){_this3.pause();if(_this3.touchTimeout){clearTimeout(_this3.touchTimeout);}
_this3.touchTimeout=setTimeout(function(event){return _this3.cycle(event);},TOUCHEVENT_COMPAT_WAIT+_this3._config.interval);}};$__default['default'](this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START,function(e){return e.preventDefault();});if(this._pointerEvent){$__default['default'](this._element).on(EVENT_POINTERDOWN,function(event){return start(event);});$__default['default'](this._element).on(EVENT_POINTERUP,function(event){return end(event);});this._element.classList.add(CLASS_NAME_POINTER_EVENT);}else{$__default['default'](this._element).on(EVENT_TOUCHSTART,function(event){return start(event);});$__default['default'](this._element).on(EVENT_TOUCHMOVE,function(event){return move(event);});$__default['default'](this._element).on(EVENT_TOUCHEND,function(event){return end(event);});}};_proto._keydown=function _keydown(event){if(/input|textarea/i.test(event.target.tagName)){return;}
switch(event.which){case ARROW_LEFT_KEYCODE:event.preventDefault();this.prev();break;case ARROW_RIGHT_KEYCODE:event.preventDefault();this.next();break;}};_proto._getItemIndex=function _getItemIndex(element){this._items=element&&element.parentNode?[].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)):[];return this._items.indexOf(element);};_proto._getItemByDirection=function _getItemByDirection(direction,activeElement){var isNextDirection=direction===DIRECTION_NEXT;var isPrevDirection=direction===DIRECTION_PREV;var activeIndex=this._getItemIndex(activeElement);var lastItemIndex=this._items.length-1;var isGoingToWrap=isPrevDirection&&activeIndex===0||isNextDirection&&activeIndex===lastItemIndex;if(isGoingToWrap&&!this._config.wrap){return activeElement;}
var delta=direction===DIRECTION_PREV?-1:1;var itemIndex=(activeIndex+delta)%this._items.length;return itemIndex===-1?this._items[this._items.length-1]:this._items[itemIndex];};_proto._triggerSlideEvent=function _triggerSlideEvent(relatedTarget,eventDirectionName){var targetIndex=this._getItemIndex(relatedTarget);var fromIndex=this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));var slideEvent=$__default['default'].Event(EVENT_SLIDE,{relatedTarget:relatedTarget,direction:eventDirectionName,from:fromIndex,to:targetIndex});$__default['default'](this._element).trigger(slideEvent);return slideEvent;};_proto._setActiveIndicatorElement=function _setActiveIndicatorElement(element){if(this._indicatorsElement){var indicators=[].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE$1));$__default['default'](indicators).removeClass(CLASS_NAME_ACTIVE$1);var nextIndicator=this._indicatorsElement.children[this._getItemIndex(element)];if(nextIndicator){$__default['default'](nextIndicator).addClass(CLASS_NAME_ACTIVE$1);}}};_proto._updateInterval=function _updateInterval(){var element=this._activeElement||this._element.querySelector(SELECTOR_ACTIVE_ITEM);if(!element){return;}
var elementInterval=parseInt(element.getAttribute('data-interval'),10);if(elementInterval){this._config.defaultInterval=this._config.defaultInterval||this._config.interval;this._config.interval=elementInterval;}else{this._config.interval=this._config.defaultInterval||this._config.interval;}};_proto._slide=function _slide(direction,element){var _this4=this;var activeElement=this._element.querySelector(SELECTOR_ACTIVE_ITEM);var activeElementIndex=this._getItemIndex(activeElement);var nextElement=element||activeElement&&this._getItemByDirection(direction,activeElement);var nextElementIndex=this._getItemIndex(nextElement);var isCycling=Boolean(this._interval);var directionalClassName;var orderClassName;var eventDirectionName;if(direction===DIRECTION_NEXT){directionalClassName=CLASS_NAME_LEFT;orderClassName=CLASS_NAME_NEXT;eventDirectionName=DIRECTION_LEFT;}else{directionalClassName=CLASS_NAME_RIGHT;orderClassName=CLASS_NAME_PREV;eventDirectionName=DIRECTION_RIGHT;}
if(nextElement&&$__default['default'](nextElement).hasClass(CLASS_NAME_ACTIVE$1)){this._isSliding=false;return;}
var slideEvent=this._triggerSlideEvent(nextElement,eventDirectionName);if(slideEvent.isDefaultPrevented()){return;}
if(!activeElement||!nextElement){return;}
this._isSliding=true;if(isCycling){this.pause();}
this._setActiveIndicatorElement(nextElement);this._activeElement=nextElement;var slidEvent=$__default['default'].Event(EVENT_SLID,{relatedTarget:nextElement,direction:eventDirectionName,from:activeElementIndex,to:nextElementIndex});if($__default['default'](this._element).hasClass(CLASS_NAME_SLIDE)){$__default['default'](nextElement).addClass(orderClassName);Util.reflow(nextElement);$__default['default'](activeElement).addClass(directionalClassName);$__default['default'](nextElement).addClass(directionalClassName);var transitionDuration=Util.getTransitionDurationFromElement(activeElement);$__default['default'](activeElement).one(Util.TRANSITION_END,function(){$__default['default'](nextElement).removeClass(directionalClassName+" "+orderClassName).addClass(CLASS_NAME_ACTIVE$1);$__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE$1+" "+orderClassName+" "+directionalClassName);_this4._isSliding=false;setTimeout(function(){return $__default['default'](_this4._element).trigger(slidEvent);},0);}).emulateTransitionEnd(transitionDuration);}else{$__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE$1);$__default['default'](nextElement).addClass(CLASS_NAME_ACTIVE$1);this._isSliding=false;$__default['default'](this._element).trigger(slidEvent);}
if(isCycling){this.cycle();}};Carousel._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var data=$__default['default'](this).data(DATA_KEY$2);var _config=_extends({},Default,$__default['default'](this).data());if(typeof config==='object'){_config=_extends({},_config,config);}
var action=typeof config==='string'?config:_config.slide;if(!data){data=new Carousel(this,_config);$__default['default'](this).data(DATA_KEY$2,data);}
if(typeof config==='number'){data.to(config);}else if(typeof action==='string'){if(typeof data[action]==='undefined'){throw new TypeError("No method named \""+action+"\"");}
data[action]();}else if(_config.interval&&_config.ride){data.pause();data.cycle();}});};Carousel._dataApiClickHandler=function _dataApiClickHandler(event){var selector=Util.getSelectorFromElement(this);if(!selector){return;}
var target=$__default['default'](selector)[0];if(!target||!$__default['default'](target).hasClass(CLASS_NAME_CAROUSEL)){return;}
var config=_extends({},$__default['default'](target).data(),$__default['default'](this).data());var slideIndex=this.getAttribute('data-slide-to');if(slideIndex){config.interval=false;}
Carousel._jQueryInterface.call($__default['default'](target),config);if(slideIndex){$__default['default'](target).data(DATA_KEY$2).to(slideIndex);}
event.preventDefault();};_createClass(Carousel,null,[{key:"VERSION",get:function get(){return VERSION$2;}},{key:"Default",get:function get(){return Default;}}]);return Carousel;}();$__default['default'](document).on(EVENT_CLICK_DATA_API$2,SELECTOR_DATA_SLIDE,Carousel._dataApiClickHandler);$__default['default'](window).on(EVENT_LOAD_DATA_API$1,function(){var carousels=[].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));for(var i=0,len=carousels.length;i<len;i++){var $carousel=$__default['default'](carousels[i]);Carousel._jQueryInterface.call($carousel,$carousel.data());}});$__default['default'].fn[NAME$2]=Carousel._jQueryInterface;$__default['default'].fn[NAME$2].Constructor=Carousel;$__default['default'].fn[NAME$2].noConflict=function(){$__default['default'].fn[NAME$2]=JQUERY_NO_CONFLICT$2;return Carousel._jQueryInterface;};var NAME$3='collapse';var VERSION$3='4.6.0';var DATA_KEY$3='bs.collapse';var EVENT_KEY$3="."+DATA_KEY$3;var DATA_API_KEY$3='.data-api';var JQUERY_NO_CONFLICT$3=$__default['default'].fn[NAME$3];var Default$1={toggle:true,parent:''};var DefaultType$1={toggle:'boolean',parent:'(string|element)'};var EVENT_SHOW="show"+EVENT_KEY$3;var EVENT_SHOWN="shown"+EVENT_KEY$3;var EVENT_HIDE="hide"+EVENT_KEY$3;var EVENT_HIDDEN="hidden"+EVENT_KEY$3;var EVENT_CLICK_DATA_API$3="click"+EVENT_KEY$3+DATA_API_KEY$3;var CLASS_NAME_SHOW$1='show';var CLASS_NAME_COLLAPSE='collapse';var CLASS_NAME_COLLAPSING='collapsing';var CLASS_NAME_COLLAPSED='collapsed';var DIMENSION_WIDTH='width';var DIMENSION_HEIGHT='height';var SELECTOR_ACTIVES='.show, .collapsing';var SELECTOR_DATA_TOGGLE$1='[data-toggle="collapse"]';var Collapse=function(){function Collapse(element,config){this._isTransitioning=false;this._element=element;this._config=this._getConfig(config);this._triggerArray=[].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#"+element.id+"\"],"+("[data-toggle=\"collapse\"][data-target=\"#"+element.id+"\"]")));var toggleList=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$1));for(var i=0,len=toggleList.length;i<len;i++){var elem=toggleList[i];var selector=Util.getSelectorFromElement(elem);var filterElement=[].slice.call(document.querySelectorAll(selector)).filter(function(foundElem){return foundElem===element;});if(selector!==null&&filterElement.length>0){this._selector=selector;this._triggerArray.push(elem);}}
this._parent=this._config.parent?this._getParent():null;if(!this._config.parent){this._addAriaAndCollapsedClass(this._element,this._triggerArray);}
if(this._config.toggle){this.toggle();}}
var _proto=Collapse.prototype;_proto.toggle=function toggle(){if($__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)){this.hide();}else{this.show();}};_proto.show=function show(){var _this=this;if(this._isTransitioning||$__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)){return;}
var actives;var activesData;if(this._parent){actives=[].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function(elem){if(typeof _this._config.parent==='string'){return elem.getAttribute('data-parent')===_this._config.parent;}
return elem.classList.contains(CLASS_NAME_COLLAPSE);});if(actives.length===0){actives=null;}}
if(actives){activesData=$__default['default'](actives).not(this._selector).data(DATA_KEY$3);if(activesData&&activesData._isTransitioning){return;}}
var startEvent=$__default['default'].Event(EVENT_SHOW);$__default['default'](this._element).trigger(startEvent);if(startEvent.isDefaultPrevented()){return;}
if(actives){Collapse._jQueryInterface.call($__default['default'](actives).not(this._selector),'hide');if(!activesData){$__default['default'](actives).data(DATA_KEY$3,null);}}
var dimension=this._getDimension();$__default['default'](this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);this._element.style[dimension]=0;if(this._triggerArray.length){$__default['default'](this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded',true);}
this.setTransitioning(true);var complete=function complete(){$__default['default'](_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE+" "+CLASS_NAME_SHOW$1);_this._element.style[dimension]='';_this.setTransitioning(false);$__default['default'](_this._element).trigger(EVENT_SHOWN);};var capitalizedDimension=dimension[0].toUpperCase()+dimension.slice(1);var scrollSize="scroll"+capitalizedDimension;var transitionDuration=Util.getTransitionDurationFromElement(this._element);$__default['default'](this._element).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);this._element.style[dimension]=this._element[scrollSize]+"px";};_proto.hide=function hide(){var _this2=this;if(this._isTransitioning||!$__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)){return;}
var startEvent=$__default['default'].Event(EVENT_HIDE);$__default['default'](this._element).trigger(startEvent);if(startEvent.isDefaultPrevented()){return;}
var dimension=this._getDimension();this._element.style[dimension]=this._element.getBoundingClientRect()[dimension]+"px";Util.reflow(this._element);$__default['default'](this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(CLASS_NAME_COLLAPSE+" "+CLASS_NAME_SHOW$1);var triggerArrayLength=this._triggerArray.length;if(triggerArrayLength>0){for(var i=0;i<triggerArrayLength;i++){var trigger=this._triggerArray[i];var selector=Util.getSelectorFromElement(trigger);if(selector!==null){var $elem=$__default['default']([].slice.call(document.querySelectorAll(selector)));if(!$elem.hasClass(CLASS_NAME_SHOW$1)){$__default['default'](trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded',false);}}}}
this.setTransitioning(true);var complete=function complete(){_this2.setTransitioning(false);$__default['default'](_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);};this._element.style[dimension]='';var transitionDuration=Util.getTransitionDurationFromElement(this._element);$__default['default'](this._element).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);};_proto.setTransitioning=function setTransitioning(isTransitioning){this._isTransitioning=isTransitioning;};_proto.dispose=function dispose(){$__default['default'].removeData(this._element,DATA_KEY$3);this._config=null;this._parent=null;this._element=null;this._triggerArray=null;this._isTransitioning=null;};_proto._getConfig=function _getConfig(config){config=_extends({},Default$1,config);config.toggle=Boolean(config.toggle);Util.typeCheckConfig(NAME$3,config,DefaultType$1);return config;};_proto._getDimension=function _getDimension(){var hasWidth=$__default['default'](this._element).hasClass(DIMENSION_WIDTH);return hasWidth?DIMENSION_WIDTH:DIMENSION_HEIGHT;};_proto._getParent=function _getParent(){var _this3=this;var parent;if(Util.isElement(this._config.parent)){parent=this._config.parent;if(typeof this._config.parent.jquery!=='undefined'){parent=this._config.parent[0];}}else{parent=document.querySelector(this._config.parent);}
var selector="[data-toggle=\"collapse\"][data-parent=\""+this._config.parent+"\"]";var children=[].slice.call(parent.querySelectorAll(selector));$__default['default'](children).each(function(i,element){_this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element),[element]);});return parent;};_proto._addAriaAndCollapsedClass=function _addAriaAndCollapsedClass(element,triggerArray){var isOpen=$__default['default'](element).hasClass(CLASS_NAME_SHOW$1);if(triggerArray.length){$__default['default'](triggerArray).toggleClass(CLASS_NAME_COLLAPSED,!isOpen).attr('aria-expanded',isOpen);}};Collapse._getTargetFromElement=function _getTargetFromElement(element){var selector=Util.getSelectorFromElement(element);return selector?document.querySelector(selector):null;};Collapse._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var $element=$__default['default'](this);var data=$element.data(DATA_KEY$3);var _config=_extends({},Default$1,$element.data(),typeof config==='object'&&config?config:{});if(!data&&_config.toggle&&typeof config==='string'&&/show|hide/.test(config)){_config.toggle=false;}
if(!data){data=new Collapse(this,_config);$element.data(DATA_KEY$3,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config]();}});};_createClass(Collapse,null,[{key:"VERSION",get:function get(){return VERSION$3;}},{key:"Default",get:function get(){return Default$1;}}]);return Collapse;}();$__default['default'](document).on(EVENT_CLICK_DATA_API$3,SELECTOR_DATA_TOGGLE$1,function(event){if(event.currentTarget.tagName==='A'){event.preventDefault();}
var $trigger=$__default['default'](this);var selector=Util.getSelectorFromElement(this);var selectors=[].slice.call(document.querySelectorAll(selector));$__default['default'](selectors).each(function(){var $target=$__default['default'](this);var data=$target.data(DATA_KEY$3);var config=data?'toggle':$trigger.data();Collapse._jQueryInterface.call($target,config);});});$__default['default'].fn[NAME$3]=Collapse._jQueryInterface;$__default['default'].fn[NAME$3].Constructor=Collapse;$__default['default'].fn[NAME$3].noConflict=function(){$__default['default'].fn[NAME$3]=JQUERY_NO_CONFLICT$3;return Collapse._jQueryInterface;};var isBrowser=typeof window!=='undefined'&&typeof document!=='undefined'&&typeof navigator!=='undefined';var timeoutDuration=function(){var longerTimeoutBrowsers=['Edge','Trident','Firefox'];for(var i=0;i<longerTimeoutBrowsers.length;i+=1){if(isBrowser&&navigator.userAgent.indexOf(longerTimeoutBrowsers[i])>=0){return 1;}}
return 0;}();function microtaskDebounce(fn){var called=false;return function(){if(called){return;}
called=true;window.Promise.resolve().then(function(){called=false;fn();});};}
function taskDebounce(fn){var scheduled=false;return function(){if(!scheduled){scheduled=true;setTimeout(function(){scheduled=false;fn();},timeoutDuration);}};}
var supportsMicroTasks=isBrowser&&window.Promise;var debounce=supportsMicroTasks?microtaskDebounce:taskDebounce;function isFunction(functionToCheck){var getType={};return functionToCheck&&getType.toString.call(functionToCheck)==='[object Function]';}
function getStyleComputedProperty(element,property){if(element.nodeType!==1){return[];}
var window=element.ownerDocument.defaultView;var css=window.getComputedStyle(element,null);return property?css[property]:css;}
function getParentNode(element){if(element.nodeName==='HTML'){return element;}
return element.parentNode||element.host;}
function getScrollParent(element){if(!element){return document.body;}
switch(element.nodeName){case'HTML':case'BODY':return element.ownerDocument.body;case'#document':return element.body;}
var _getStyleComputedProp=getStyleComputedProperty(element),overflow=_getStyleComputedProp.overflow,overflowX=_getStyleComputedProp.overflowX,overflowY=_getStyleComputedProp.overflowY;if(/(auto|scroll|overlay)/.test(overflow+overflowY+overflowX)){return element;}
return getScrollParent(getParentNode(element));}
function getReferenceNode(reference){return reference&&reference.referenceNode?reference.referenceNode:reference;}
var isIE11=isBrowser&&!!(window.MSInputMethodContext&&document.documentMode);var isIE10=isBrowser&&/MSIE 10/.test(navigator.userAgent);function isIE(version){if(version===11){return isIE11;}
if(version===10){return isIE10;}
return isIE11||isIE10;}
function getOffsetParent(element){if(!element){return document.documentElement;}
var noOffsetParent=isIE(10)?document.body:null;var offsetParent=element.offsetParent||null;while(offsetParent===noOffsetParent&&element.nextElementSibling){offsetParent=(element=element.nextElementSibling).offsetParent;}
var nodeName=offsetParent&&offsetParent.nodeName;if(!nodeName||nodeName==='BODY'||nodeName==='HTML'){return element?element.ownerDocument.documentElement:document.documentElement;}
if(['TH','TD','TABLE'].indexOf(offsetParent.nodeName)!==-1&&getStyleComputedProperty(offsetParent,'position')==='static'){return getOffsetParent(offsetParent);}
return offsetParent;}
function isOffsetContainer(element){var nodeName=element.nodeName;if(nodeName==='BODY'){return false;}
return nodeName==='HTML'||getOffsetParent(element.firstElementChild)===element;}
function getRoot(node){if(node.parentNode!==null){return getRoot(node.parentNode);}
return node;}
function findCommonOffsetParent(element1,element2){if(!element1||!element1.nodeType||!element2||!element2.nodeType){return document.documentElement;}
var order=element1.compareDocumentPosition(element2)&Node.DOCUMENT_POSITION_FOLLOWING;var start=order?element1:element2;var end=order?element2:element1;var range=document.createRange();range.setStart(start,0);range.setEnd(end,0);var commonAncestorContainer=range.commonAncestorContainer;if(element1!==commonAncestorContainer&&element2!==commonAncestorContainer||start.contains(end)){if(isOffsetContainer(commonAncestorContainer)){return commonAncestorContainer;}
return getOffsetParent(commonAncestorContainer);}
var element1root=getRoot(element1);if(element1root.host){return findCommonOffsetParent(element1root.host,element2);}else{return findCommonOffsetParent(element1,getRoot(element2).host);}}
function getScroll(element){var side=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'top';var upperSide=side==='top'?'scrollTop':'scrollLeft';var nodeName=element.nodeName;if(nodeName==='BODY'||nodeName==='HTML'){var html=element.ownerDocument.documentElement;var scrollingElement=element.ownerDocument.scrollingElement||html;return scrollingElement[upperSide];}
return element[upperSide];}
function includeScroll(rect,element){var subtract=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var scrollTop=getScroll(element,'top');var scrollLeft=getScroll(element,'left');var modifier=subtract?-1:1;rect.top+=scrollTop*modifier;rect.bottom+=scrollTop*modifier;rect.left+=scrollLeft*modifier;rect.right+=scrollLeft*modifier;return rect;}
function getBordersSize(styles,axis){var sideA=axis==='x'?'Left':'Top';var sideB=sideA==='Left'?'Right':'Bottom';return parseFloat(styles['border'+sideA+'Width'])+parseFloat(styles['border'+sideB+'Width']);}
function getSize(axis,body,html,computedStyle){return Math.max(body['offset'+axis],body['scroll'+axis],html['client'+axis],html['offset'+axis],html['scroll'+axis],isIE(10)?parseInt(html['offset'+axis])+parseInt(computedStyle['margin'+(axis==='Height'?'Top':'Left')])+parseInt(computedStyle['margin'+(axis==='Height'?'Bottom':'Right')]):0);}
function getWindowSizes(document){var body=document.body;var html=document.documentElement;var computedStyle=isIE(10)&&getComputedStyle(html);return{height:getSize('Height',body,html,computedStyle),width:getSize('Width',body,html,computedStyle)};}
var classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}};var createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}
return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var defineProperty=function(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}
return obj;};var _extends$1=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}
return target;};function getClientRect(offsets){return _extends$1({},offsets,{right:offsets.left+offsets.width,bottom:offsets.top+offsets.height});}
function getBoundingClientRect(element){var rect={};try{if(isIE(10)){rect=element.getBoundingClientRect();var scrollTop=getScroll(element,'top');var scrollLeft=getScroll(element,'left');rect.top+=scrollTop;rect.left+=scrollLeft;rect.bottom+=scrollTop;rect.right+=scrollLeft;}else{rect=element.getBoundingClientRect();}}catch(e){}
var result={left:rect.left,top:rect.top,width:rect.right-rect.left,height:rect.bottom-rect.top};var sizes=element.nodeName==='HTML'?getWindowSizes(element.ownerDocument):{};var width=sizes.width||element.clientWidth||result.width;var height=sizes.height||element.clientHeight||result.height;var horizScrollbar=element.offsetWidth-width;var vertScrollbar=element.offsetHeight-height;if(horizScrollbar||vertScrollbar){var styles=getStyleComputedProperty(element);horizScrollbar-=getBordersSize(styles,'x');vertScrollbar-=getBordersSize(styles,'y');result.width-=horizScrollbar;result.height-=vertScrollbar;}
return getClientRect(result);}
function getOffsetRectRelativeToArbitraryNode(children,parent){var fixedPosition=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var isIE10=isIE(10);var isHTML=parent.nodeName==='HTML';var childrenRect=getBoundingClientRect(children);var parentRect=getBoundingClientRect(parent);var scrollParent=getScrollParent(children);var styles=getStyleComputedProperty(parent);var borderTopWidth=parseFloat(styles.borderTopWidth);var borderLeftWidth=parseFloat(styles.borderLeftWidth);if(fixedPosition&&isHTML){parentRect.top=Math.max(parentRect.top,0);parentRect.left=Math.max(parentRect.left,0);}
var offsets=getClientRect({top:childrenRect.top-parentRect.top-borderTopWidth,left:childrenRect.left-parentRect.left-borderLeftWidth,width:childrenRect.width,height:childrenRect.height});offsets.marginTop=0;offsets.marginLeft=0;if(!isIE10&&isHTML){var marginTop=parseFloat(styles.marginTop);var marginLeft=parseFloat(styles.marginLeft);offsets.top-=borderTopWidth-marginTop;offsets.bottom-=borderTopWidth-marginTop;offsets.left-=borderLeftWidth-marginLeft;offsets.right-=borderLeftWidth-marginLeft;offsets.marginTop=marginTop;offsets.marginLeft=marginLeft;}
if(isIE10&&!fixedPosition?parent.contains(scrollParent):parent===scrollParent&&scrollParent.nodeName!=='BODY'){offsets=includeScroll(offsets,parent);}
return offsets;}
function getViewportOffsetRectRelativeToArtbitraryNode(element){var excludeScroll=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var html=element.ownerDocument.documentElement;var relativeOffset=getOffsetRectRelativeToArbitraryNode(element,html);var width=Math.max(html.clientWidth,window.innerWidth||0);var height=Math.max(html.clientHeight,window.innerHeight||0);var scrollTop=!excludeScroll?getScroll(html):0;var scrollLeft=!excludeScroll?getScroll(html,'left'):0;var offset={top:scrollTop-relativeOffset.top+relativeOffset.marginTop,left:scrollLeft-relativeOffset.left+relativeOffset.marginLeft,width:width,height:height};return getClientRect(offset);}
function isFixed(element){var nodeName=element.nodeName;if(nodeName==='BODY'||nodeName==='HTML'){return false;}
if(getStyleComputedProperty(element,'position')==='fixed'){return true;}
var parentNode=getParentNode(element);if(!parentNode){return false;}
return isFixed(parentNode);}
function getFixedPositionOffsetParent(element){if(!element||!element.parentElement||isIE()){return document.documentElement;}
var el=element.parentElement;while(el&&getStyleComputedProperty(el,'transform')==='none'){el=el.parentElement;}
return el||document.documentElement;}
function getBoundaries(popper,reference,padding,boundariesElement){var fixedPosition=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var boundaries={top:0,left:0};var offsetParent=fixedPosition?getFixedPositionOffsetParent(popper):findCommonOffsetParent(popper,getReferenceNode(reference));if(boundariesElement==='viewport'){boundaries=getViewportOffsetRectRelativeToArtbitraryNode(offsetParent,fixedPosition);}else{var boundariesNode=void 0;if(boundariesElement==='scrollParent'){boundariesNode=getScrollParent(getParentNode(reference));if(boundariesNode.nodeName==='BODY'){boundariesNode=popper.ownerDocument.documentElement;}}else if(boundariesElement==='window'){boundariesNode=popper.ownerDocument.documentElement;}else{boundariesNode=boundariesElement;}
var offsets=getOffsetRectRelativeToArbitraryNode(boundariesNode,offsetParent,fixedPosition);if(boundariesNode.nodeName==='HTML'&&!isFixed(offsetParent)){var _getWindowSizes=getWindowSizes(popper.ownerDocument),height=_getWindowSizes.height,width=_getWindowSizes.width;boundaries.top+=offsets.top-offsets.marginTop;boundaries.bottom=height+offsets.top;boundaries.left+=offsets.left-offsets.marginLeft;boundaries.right=width+offsets.left;}else{boundaries=offsets;}}
padding=padding||0;var isPaddingNumber=typeof padding==='number';boundaries.left+=isPaddingNumber?padding:padding.left||0;boundaries.top+=isPaddingNumber?padding:padding.top||0;boundaries.right-=isPaddingNumber?padding:padding.right||0;boundaries.bottom-=isPaddingNumber?padding:padding.bottom||0;return boundaries;}
function getArea(_ref){var width=_ref.width,height=_ref.height;return width*height;}
function computeAutoPlacement(placement,refRect,popper,reference,boundariesElement){var padding=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;if(placement.indexOf('auto')===-1){return placement;}
var boundaries=getBoundaries(popper,reference,padding,boundariesElement);var rects={top:{width:boundaries.width,height:refRect.top-boundaries.top},right:{width:boundaries.right-refRect.right,height:boundaries.height},bottom:{width:boundaries.width,height:boundaries.bottom-refRect.bottom},left:{width:refRect.left-boundaries.left,height:boundaries.height}};var sortedAreas=Object.keys(rects).map(function(key){return _extends$1({key:key},rects[key],{area:getArea(rects[key])});}).sort(function(a,b){return b.area-a.area;});var filteredAreas=sortedAreas.filter(function(_ref2){var width=_ref2.width,height=_ref2.height;return width>=popper.clientWidth&&height>=popper.clientHeight;});var computedPlacement=filteredAreas.length>0?filteredAreas[0].key:sortedAreas[0].key;var variation=placement.split('-')[1];return computedPlacement+(variation?'-'+variation:'');}
function getReferenceOffsets(state,popper,reference){var fixedPosition=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var commonOffsetParent=fixedPosition?getFixedPositionOffsetParent(popper):findCommonOffsetParent(popper,getReferenceNode(reference));return getOffsetRectRelativeToArbitraryNode(reference,commonOffsetParent,fixedPosition);}
function getOuterSizes(element){var window=element.ownerDocument.defaultView;var styles=window.getComputedStyle(element);var x=parseFloat(styles.marginTop||0)+parseFloat(styles.marginBottom||0);var y=parseFloat(styles.marginLeft||0)+parseFloat(styles.marginRight||0);var result={width:element.offsetWidth+y,height:element.offsetHeight+x};return result;}
function getOppositePlacement(placement){var hash={left:'right',right:'left',bottom:'top',top:'bottom'};return placement.replace(/left|right|bottom|top/g,function(matched){return hash[matched];});}
function getPopperOffsets(popper,referenceOffsets,placement){placement=placement.split('-')[0];var popperRect=getOuterSizes(popper);var popperOffsets={width:popperRect.width,height:popperRect.height};var isHoriz=['right','left'].indexOf(placement)!==-1;var mainSide=isHoriz?'top':'left';var secondarySide=isHoriz?'left':'top';var measurement=isHoriz?'height':'width';var secondaryMeasurement=!isHoriz?'height':'width';popperOffsets[mainSide]=referenceOffsets[mainSide]+referenceOffsets[measurement]/ 2-popperRect[measurement]/ 2;if(placement===secondarySide){popperOffsets[secondarySide]=referenceOffsets[secondarySide]-popperRect[secondaryMeasurement];}else{popperOffsets[secondarySide]=referenceOffsets[getOppositePlacement(secondarySide)];}
return popperOffsets;}
function find(arr,check){if(Array.prototype.find){return arr.find(check);}
return arr.filter(check)[0];}
function findIndex(arr,prop,value){if(Array.prototype.findIndex){return arr.findIndex(function(cur){return cur[prop]===value;});}
var match=find(arr,function(obj){return obj[prop]===value;});return arr.indexOf(match);}
function runModifiers(modifiers,data,ends){var modifiersToRun=ends===undefined?modifiers:modifiers.slice(0,findIndex(modifiers,'name',ends));modifiersToRun.forEach(function(modifier){if(modifier['function']){console.warn('`modifier.function` is deprecated, use `modifier.fn`!');}
var fn=modifier['function']||modifier.fn;if(modifier.enabled&&isFunction(fn)){data.offsets.popper=getClientRect(data.offsets.popper);data.offsets.reference=getClientRect(data.offsets.reference);data=fn(data,modifier);}});return data;}
function update(){if(this.state.isDestroyed){return;}
var data={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:false,offsets:{}};data.offsets.reference=getReferenceOffsets(this.state,this.popper,this.reference,this.options.positionFixed);data.placement=computeAutoPlacement(this.options.placement,data.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding);data.originalPlacement=data.placement;data.positionFixed=this.options.positionFixed;data.offsets.popper=getPopperOffsets(this.popper,data.offsets.reference,data.placement);data.offsets.popper.position=this.options.positionFixed?'fixed':'absolute';data=runModifiers(this.modifiers,data);if(!this.state.isCreated){this.state.isCreated=true;this.options.onCreate(data);}else{this.options.onUpdate(data);}}
function isModifierEnabled(modifiers,modifierName){return modifiers.some(function(_ref){var name=_ref.name,enabled=_ref.enabled;return enabled&&name===modifierName;});}
function getSupportedPropertyName(property){var prefixes=[false,'ms','Webkit','Moz','O'];var upperProp=property.charAt(0).toUpperCase()+property.slice(1);for(var i=0;i<prefixes.length;i++){var prefix=prefixes[i];var toCheck=prefix?''+prefix+upperProp:property;if(typeof document.body.style[toCheck]!=='undefined'){return toCheck;}}
return null;}
function destroy(){this.state.isDestroyed=true;if(isModifierEnabled(this.modifiers,'applyStyle')){this.popper.removeAttribute('x-placement');this.popper.style.position='';this.popper.style.top='';this.popper.style.left='';this.popper.style.right='';this.popper.style.bottom='';this.popper.style.willChange='';this.popper.style[getSupportedPropertyName('transform')]='';}
this.disableEventListeners();if(this.options.removeOnDestroy){this.popper.parentNode.removeChild(this.popper);}
return this;}
function getWindow(element){var ownerDocument=element.ownerDocument;return ownerDocument?ownerDocument.defaultView:window;}
function attachToScrollParents(scrollParent,event,callback,scrollParents){var isBody=scrollParent.nodeName==='BODY';var target=isBody?scrollParent.ownerDocument.defaultView:scrollParent;target.addEventListener(event,callback,{passive:true});if(!isBody){attachToScrollParents(getScrollParent(target.parentNode),event,callback,scrollParents);}
scrollParents.push(target);}
function setupEventListeners(reference,options,state,updateBound){state.updateBound=updateBound;getWindow(reference).addEventListener('resize',state.updateBound,{passive:true});var scrollElement=getScrollParent(reference);attachToScrollParents(scrollElement,'scroll',state.updateBound,state.scrollParents);state.scrollElement=scrollElement;state.eventsEnabled=true;return state;}
function enableEventListeners(){if(!this.state.eventsEnabled){this.state=setupEventListeners(this.reference,this.options,this.state,this.scheduleUpdate);}}
function removeEventListeners(reference,state){getWindow(reference).removeEventListener('resize',state.updateBound);state.scrollParents.forEach(function(target){target.removeEventListener('scroll',state.updateBound);});state.updateBound=null;state.scrollParents=[];state.scrollElement=null;state.eventsEnabled=false;return state;}
function disableEventListeners(){if(this.state.eventsEnabled){cancelAnimationFrame(this.scheduleUpdate);this.state=removeEventListeners(this.reference,this.state);}}
function isNumeric(n){return n!==''&&!isNaN(parseFloat(n))&&isFinite(n);}
function setStyles(element,styles){Object.keys(styles).forEach(function(prop){var unit='';if(['width','height','top','right','bottom','left'].indexOf(prop)!==-1&&isNumeric(styles[prop])){unit='px';}
element.style[prop]=styles[prop]+unit;});}
function setAttributes(element,attributes){Object.keys(attributes).forEach(function(prop){var value=attributes[prop];if(value!==false){element.setAttribute(prop,attributes[prop]);}else{element.removeAttribute(prop);}});}
function applyStyle(data){setStyles(data.instance.popper,data.styles);setAttributes(data.instance.popper,data.attributes);if(data.arrowElement&&Object.keys(data.arrowStyles).length){setStyles(data.arrowElement,data.arrowStyles);}
return data;}
function applyStyleOnLoad(reference,popper,options,modifierOptions,state){var referenceOffsets=getReferenceOffsets(state,popper,reference,options.positionFixed);var placement=computeAutoPlacement(options.placement,referenceOffsets,popper,reference,options.modifiers.flip.boundariesElement,options.modifiers.flip.padding);popper.setAttribute('x-placement',placement);setStyles(popper,{position:options.positionFixed?'fixed':'absolute'});return options;}
function getRoundedOffsets(data,shouldRound){var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var round=Math.round,floor=Math.floor;var noRound=function noRound(v){return v;};var referenceWidth=round(reference.width);var popperWidth=round(popper.width);var isVertical=['left','right'].indexOf(data.placement)!==-1;var isVariation=data.placement.indexOf('-')!==-1;var sameWidthParity=referenceWidth%2===popperWidth%2;var bothOddWidth=referenceWidth%2===1&&popperWidth%2===1;var horizontalToInteger=!shouldRound?noRound:isVertical||isVariation||sameWidthParity?round:floor;var verticalToInteger=!shouldRound?noRound:round;return{left:horizontalToInteger(bothOddWidth&&!isVariation&&shouldRound?popper.left-1:popper.left),top:verticalToInteger(popper.top),bottom:verticalToInteger(popper.bottom),right:horizontalToInteger(popper.right)};}
var isFirefox=isBrowser&&/Firefox/i.test(navigator.userAgent);function computeStyle(data,options){var x=options.x,y=options.y;var popper=data.offsets.popper;var legacyGpuAccelerationOption=find(data.instance.modifiers,function(modifier){return modifier.name==='applyStyle';}).gpuAcceleration;if(legacyGpuAccelerationOption!==undefined){console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');}
var gpuAcceleration=legacyGpuAccelerationOption!==undefined?legacyGpuAccelerationOption:options.gpuAcceleration;var offsetParent=getOffsetParent(data.instance.popper);var offsetParentRect=getBoundingClientRect(offsetParent);var styles={position:popper.position};var offsets=getRoundedOffsets(data,window.devicePixelRatio<2||!isFirefox);var sideA=x==='bottom'?'top':'bottom';var sideB=y==='right'?'left':'right';var prefixedProperty=getSupportedPropertyName('transform');var left=void 0,top=void 0;if(sideA==='bottom'){if(offsetParent.nodeName==='HTML'){top=-offsetParent.clientHeight+offsets.bottom;}else{top=-offsetParentRect.height+offsets.bottom;}}else{top=offsets.top;}
if(sideB==='right'){if(offsetParent.nodeName==='HTML'){left=-offsetParent.clientWidth+offsets.right;}else{left=-offsetParentRect.width+offsets.right;}}else{left=offsets.left;}
if(gpuAcceleration&&prefixedProperty){styles[prefixedProperty]='translate3d('+left+'px, '+top+'px, 0)';styles[sideA]=0;styles[sideB]=0;styles.willChange='transform';}else{var invertTop=sideA==='bottom'?-1:1;var invertLeft=sideB==='right'?-1:1;styles[sideA]=top*invertTop;styles[sideB]=left*invertLeft;styles.willChange=sideA+', '+sideB;}
var attributes={'x-placement':data.placement};data.attributes=_extends$1({},attributes,data.attributes);data.styles=_extends$1({},styles,data.styles);data.arrowStyles=_extends$1({},data.offsets.arrow,data.arrowStyles);return data;}
function isModifierRequired(modifiers,requestingName,requestedName){var requesting=find(modifiers,function(_ref){var name=_ref.name;return name===requestingName;});var isRequired=!!requesting&&modifiers.some(function(modifier){return modifier.name===requestedName&&modifier.enabled&&modifier.order<requesting.order;});if(!isRequired){var _requesting='`'+requestingName+'`';var requested='`'+requestedName+'`';console.warn(requested+' modifier is required by '+_requesting+' modifier in order to work, be sure to include it before '+_requesting+'!');}
return isRequired;}
function arrow(data,options){var _data$offsets$arrow;if(!isModifierRequired(data.instance.modifiers,'arrow','keepTogether')){return data;}
var arrowElement=options.element;if(typeof arrowElement==='string'){arrowElement=data.instance.popper.querySelector(arrowElement);if(!arrowElement){return data;}}else{if(!data.instance.popper.contains(arrowElement)){console.warn('WARNING: `arrow.element` must be child of its popper element!');return data;}}
var placement=data.placement.split('-')[0];var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var isVertical=['left','right'].indexOf(placement)!==-1;var len=isVertical?'height':'width';var sideCapitalized=isVertical?'Top':'Left';var side=sideCapitalized.toLowerCase();var altSide=isVertical?'left':'top';var opSide=isVertical?'bottom':'right';var arrowElementSize=getOuterSizes(arrowElement)[len];if(reference[opSide]-arrowElementSize<popper[side]){data.offsets.popper[side]-=popper[side]-(reference[opSide]-arrowElementSize);}
if(reference[side]+arrowElementSize>popper[opSide]){data.offsets.popper[side]+=reference[side]+arrowElementSize-popper[opSide];}
data.offsets.popper=getClientRect(data.offsets.popper);var center=reference[side]+reference[len]/ 2-arrowElementSize / 2;var css=getStyleComputedProperty(data.instance.popper);var popperMarginSide=parseFloat(css['margin'+sideCapitalized]);var popperBorderSide=parseFloat(css['border'+sideCapitalized+'Width']);var sideValue=center-data.offsets.popper[side]-popperMarginSide-popperBorderSide;sideValue=Math.max(Math.min(popper[len]-arrowElementSize,sideValue),0);data.arrowElement=arrowElement;data.offsets.arrow=(_data$offsets$arrow={},defineProperty(_data$offsets$arrow,side,Math.round(sideValue)),defineProperty(_data$offsets$arrow,altSide,''),_data$offsets$arrow);return data;}
function getOppositeVariation(variation){if(variation==='end'){return'start';}else if(variation==='start'){return'end';}
return variation;}
var placements=['auto-start','auto','auto-end','top-start','top','top-end','right-start','right','right-end','bottom-end','bottom','bottom-start','left-end','left','left-start'];var validPlacements=placements.slice(3);function clockwise(placement){var counter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var index=validPlacements.indexOf(placement);var arr=validPlacements.slice(index+1).concat(validPlacements.slice(0,index));return counter?arr.reverse():arr;}
var BEHAVIORS={FLIP:'flip',CLOCKWISE:'clockwise',COUNTERCLOCKWISE:'counterclockwise'};function flip(data,options){if(isModifierEnabled(data.instance.modifiers,'inner')){return data;}
if(data.flipped&&data.placement===data.originalPlacement){return data;}
var boundaries=getBoundaries(data.instance.popper,data.instance.reference,options.padding,options.boundariesElement,data.positionFixed);var placement=data.placement.split('-')[0];var placementOpposite=getOppositePlacement(placement);var variation=data.placement.split('-')[1]||'';var flipOrder=[];switch(options.behavior){case BEHAVIORS.FLIP:flipOrder=[placement,placementOpposite];break;case BEHAVIORS.CLOCKWISE:flipOrder=clockwise(placement);break;case BEHAVIORS.COUNTERCLOCKWISE:flipOrder=clockwise(placement,true);break;default:flipOrder=options.behavior;}
flipOrder.forEach(function(step,index){if(placement!==step||flipOrder.length===index+1){return data;}
placement=data.placement.split('-')[0];placementOpposite=getOppositePlacement(placement);var popperOffsets=data.offsets.popper;var refOffsets=data.offsets.reference;var floor=Math.floor;var overlapsRef=placement==='left'&&floor(popperOffsets.right)>floor(refOffsets.left)||placement==='right'&&floor(popperOffsets.left)<floor(refOffsets.right)||placement==='top'&&floor(popperOffsets.bottom)>floor(refOffsets.top)||placement==='bottom'&&floor(popperOffsets.top)<floor(refOffsets.bottom);var overflowsLeft=floor(popperOffsets.left)<floor(boundaries.left);var overflowsRight=floor(popperOffsets.right)>floor(boundaries.right);var overflowsTop=floor(popperOffsets.top)<floor(boundaries.top);var overflowsBottom=floor(popperOffsets.bottom)>floor(boundaries.bottom);var overflowsBoundaries=placement==='left'&&overflowsLeft||placement==='right'&&overflowsRight||placement==='top'&&overflowsTop||placement==='bottom'&&overflowsBottom;var isVertical=['top','bottom'].indexOf(placement)!==-1;var flippedVariationByRef=!!options.flipVariations&&(isVertical&&variation==='start'&&overflowsLeft||isVertical&&variation==='end'&&overflowsRight||!isVertical&&variation==='start'&&overflowsTop||!isVertical&&variation==='end'&&overflowsBottom);var flippedVariationByContent=!!options.flipVariationsByContent&&(isVertical&&variation==='start'&&overflowsRight||isVertical&&variation==='end'&&overflowsLeft||!isVertical&&variation==='start'&&overflowsBottom||!isVertical&&variation==='end'&&overflowsTop);var flippedVariation=flippedVariationByRef||flippedVariationByContent;if(overlapsRef||overflowsBoundaries||flippedVariation){data.flipped=true;if(overlapsRef||overflowsBoundaries){placement=flipOrder[index+1];}
if(flippedVariation){variation=getOppositeVariation(variation);}
data.placement=placement+(variation?'-'+variation:'');data.offsets.popper=_extends$1({},data.offsets.popper,getPopperOffsets(data.instance.popper,data.offsets.reference,data.placement));data=runModifiers(data.instance.modifiers,data,'flip');}});return data;}
function keepTogether(data){var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var placement=data.placement.split('-')[0];var floor=Math.floor;var isVertical=['top','bottom'].indexOf(placement)!==-1;var side=isVertical?'right':'bottom';var opSide=isVertical?'left':'top';var measurement=isVertical?'width':'height';if(popper[side]<floor(reference[opSide])){data.offsets.popper[opSide]=floor(reference[opSide])-popper[measurement];}
if(popper[opSide]>floor(reference[side])){data.offsets.popper[opSide]=floor(reference[side]);}
return data;}
function toValue(str,measurement,popperOffsets,referenceOffsets){var split=str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);var value=+split[1];var unit=split[2];if(!value){return str;}
if(unit.indexOf('%')===0){var element=void 0;switch(unit){case'%p':element=popperOffsets;break;case'%':case'%r':default:element=referenceOffsets;}
var rect=getClientRect(element);return rect[measurement]/ 100*value;}else if(unit==='vh'||unit==='vw'){var size=void 0;if(unit==='vh'){size=Math.max(document.documentElement.clientHeight,window.innerHeight||0);}else{size=Math.max(document.documentElement.clientWidth,window.innerWidth||0);}
return size / 100*value;}else{return value;}}
function parseOffset(offset,popperOffsets,referenceOffsets,basePlacement){var offsets=[0,0];var useHeight=['right','left'].indexOf(basePlacement)!==-1;var fragments=offset.split(/(\+|\-)/).map(function(frag){return frag.trim();});var divider=fragments.indexOf(find(fragments,function(frag){return frag.search(/,|\s/)!==-1;}));if(fragments[divider]&&fragments[divider].indexOf(',')===-1){console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');}
var splitRegex=/\s*,\s*|\s+/;var ops=divider!==-1?[fragments.slice(0,divider).concat([fragments[divider].split(splitRegex)[0]]),[fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider+1))]:[fragments];ops=ops.map(function(op,index){var measurement=(index===1?!useHeight:useHeight)?'height':'width';var mergeWithPrevious=false;return op.reduce(function(a,b){if(a[a.length-1]===''&&['+','-'].indexOf(b)!==-1){a[a.length-1]=b;mergeWithPrevious=true;return a;}else if(mergeWithPrevious){a[a.length-1]+=b;mergeWithPrevious=false;return a;}else{return a.concat(b);}},[]).map(function(str){return toValue(str,measurement,popperOffsets,referenceOffsets);});});ops.forEach(function(op,index){op.forEach(function(frag,index2){if(isNumeric(frag)){offsets[index]+=frag*(op[index2-1]==='-'?-1:1);}});});return offsets;}
function offset(data,_ref){var offset=_ref.offset;var placement=data.placement,_data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var basePlacement=placement.split('-')[0];var offsets=void 0;if(isNumeric(+offset)){offsets=[+offset,0];}else{offsets=parseOffset(offset,popper,reference,basePlacement);}
if(basePlacement==='left'){popper.top+=offsets[0];popper.left-=offsets[1];}else if(basePlacement==='right'){popper.top+=offsets[0];popper.left+=offsets[1];}else if(basePlacement==='top'){popper.left+=offsets[0];popper.top-=offsets[1];}else if(basePlacement==='bottom'){popper.left+=offsets[0];popper.top+=offsets[1];}
data.popper=popper;return data;}
function preventOverflow(data,options){var boundariesElement=options.boundariesElement||getOffsetParent(data.instance.popper);if(data.instance.reference===boundariesElement){boundariesElement=getOffsetParent(boundariesElement);}
var transformProp=getSupportedPropertyName('transform');var popperStyles=data.instance.popper.style;var top=popperStyles.top,left=popperStyles.left,transform=popperStyles[transformProp];popperStyles.top='';popperStyles.left='';popperStyles[transformProp]='';var boundaries=getBoundaries(data.instance.popper,data.instance.reference,options.padding,boundariesElement,data.positionFixed);popperStyles.top=top;popperStyles.left=left;popperStyles[transformProp]=transform;options.boundaries=boundaries;var order=options.priority;var popper=data.offsets.popper;var check={primary:function primary(placement){var value=popper[placement];if(popper[placement]<boundaries[placement]&&!options.escapeWithReference){value=Math.max(popper[placement],boundaries[placement]);}
return defineProperty({},placement,value);},secondary:function secondary(placement){var mainSide=placement==='right'?'left':'top';var value=popper[mainSide];if(popper[placement]>boundaries[placement]&&!options.escapeWithReference){value=Math.min(popper[mainSide],boundaries[placement]-(placement==='right'?popper.width:popper.height));}
return defineProperty({},mainSide,value);}};order.forEach(function(placement){var side=['left','top'].indexOf(placement)!==-1?'primary':'secondary';popper=_extends$1({},popper,check[side](placement));});data.offsets.popper=popper;return data;}
function shift(data){var placement=data.placement;var basePlacement=placement.split('-')[0];var shiftvariation=placement.split('-')[1];if(shiftvariation){var _data$offsets=data.offsets,reference=_data$offsets.reference,popper=_data$offsets.popper;var isVertical=['bottom','top'].indexOf(basePlacement)!==-1;var side=isVertical?'left':'top';var measurement=isVertical?'width':'height';var shiftOffsets={start:defineProperty({},side,reference[side]),end:defineProperty({},side,reference[side]+reference[measurement]-popper[measurement])};data.offsets.popper=_extends$1({},popper,shiftOffsets[shiftvariation]);}
return data;}
function hide(data){if(!isModifierRequired(data.instance.modifiers,'hide','preventOverflow')){return data;}
var refRect=data.offsets.reference;var bound=find(data.instance.modifiers,function(modifier){return modifier.name==='preventOverflow';}).boundaries;if(refRect.bottom<bound.top||refRect.left>bound.right||refRect.top>bound.bottom||refRect.right<bound.left){if(data.hide===true){return data;}
data.hide=true;data.attributes['x-out-of-boundaries']='';}else{if(data.hide===false){return data;}
data.hide=false;data.attributes['x-out-of-boundaries']=false;}
return data;}
function inner(data){var placement=data.placement;var basePlacement=placement.split('-')[0];var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var isHoriz=['left','right'].indexOf(basePlacement)!==-1;var subtractLength=['top','left'].indexOf(basePlacement)===-1;popper[isHoriz?'left':'top']=reference[basePlacement]-(subtractLength?popper[isHoriz?'width':'height']:0);data.placement=getOppositePlacement(placement);data.offsets.popper=getClientRect(popper);return data;}
var modifiers={shift:{order:100,enabled:true,fn:shift},offset:{order:200,enabled:true,fn:offset,offset:0},preventOverflow:{order:300,enabled:true,fn:preventOverflow,priority:['left','right','top','bottom'],padding:5,boundariesElement:'scrollParent'},keepTogether:{order:400,enabled:true,fn:keepTogether},arrow:{order:500,enabled:true,fn:arrow,element:'[x-arrow]'},flip:{order:600,enabled:true,fn:flip,behavior:'flip',padding:5,boundariesElement:'viewport',flipVariations:false,flipVariationsByContent:false},inner:{order:700,enabled:false,fn:inner},hide:{order:800,enabled:true,fn:hide},computeStyle:{order:850,enabled:true,fn:computeStyle,gpuAcceleration:true,x:'bottom',y:'right'},applyStyle:{order:900,enabled:true,fn:applyStyle,onLoad:applyStyleOnLoad,gpuAcceleration:undefined}};var Defaults={placement:'bottom',positionFixed:false,eventsEnabled:true,removeOnDestroy:false,onCreate:function onCreate(){},onUpdate:function onUpdate(){},modifiers:modifiers};var Popper=function(){function Popper(reference,popper){var _this=this;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};classCallCheck(this,Popper);this.scheduleUpdate=function(){return requestAnimationFrame(_this.update);};this.update=debounce(this.update.bind(this));this.options=_extends$1({},Popper.Defaults,options);this.state={isDestroyed:false,isCreated:false,scrollParents:[]};this.reference=reference&&reference.jquery?reference[0]:reference;this.popper=popper&&popper.jquery?popper[0]:popper;this.options.modifiers={};Object.keys(_extends$1({},Popper.Defaults.modifiers,options.modifiers)).forEach(function(name){_this.options.modifiers[name]=_extends$1({},Popper.Defaults.modifiers[name]||{},options.modifiers?options.modifiers[name]:{});});this.modifiers=Object.keys(this.options.modifiers).map(function(name){return _extends$1({name:name},_this.options.modifiers[name]);}).sort(function(a,b){return a.order-b.order;});this.modifiers.forEach(function(modifierOptions){if(modifierOptions.enabled&&isFunction(modifierOptions.onLoad)){modifierOptions.onLoad(_this.reference,_this.popper,_this.options,modifierOptions,_this.state);}});this.update();var eventsEnabled=this.options.eventsEnabled;if(eventsEnabled){this.enableEventListeners();}
this.state.eventsEnabled=eventsEnabled;}
createClass(Popper,[{key:'update',value:function update$$1(){return update.call(this);}},{key:'destroy',value:function destroy$$1(){return destroy.call(this);}},{key:'enableEventListeners',value:function enableEventListeners$$1(){return enableEventListeners.call(this);}},{key:'disableEventListeners',value:function disableEventListeners$$1(){return disableEventListeners.call(this);}}]);return Popper;}();Popper.Utils=(typeof window!=='undefined'?window:global).PopperUtils;Popper.placements=placements;Popper.Defaults=Defaults;var NAME$4='dropdown';var VERSION$4='4.6.0';var DATA_KEY$4='bs.dropdown';var EVENT_KEY$4="."+DATA_KEY$4;var DATA_API_KEY$4='.data-api';var JQUERY_NO_CONFLICT$4=$__default['default'].fn[NAME$4];var ESCAPE_KEYCODE=27;var SPACE_KEYCODE=32;var TAB_KEYCODE=9;var ARROW_UP_KEYCODE=38;var ARROW_DOWN_KEYCODE=40;var RIGHT_MOUSE_BUTTON_WHICH=3;var REGEXP_KEYDOWN=new RegExp(ARROW_UP_KEYCODE+"|"+ARROW_DOWN_KEYCODE+"|"+ESCAPE_KEYCODE);var EVENT_HIDE$1="hide"+EVENT_KEY$4;var EVENT_HIDDEN$1="hidden"+EVENT_KEY$4;var EVENT_SHOW$1="show"+EVENT_KEY$4;var EVENT_SHOWN$1="shown"+EVENT_KEY$4;var EVENT_CLICK="click"+EVENT_KEY$4;var EVENT_CLICK_DATA_API$4="click"+EVENT_KEY$4+DATA_API_KEY$4;var EVENT_KEYDOWN_DATA_API="keydown"+EVENT_KEY$4+DATA_API_KEY$4;var EVENT_KEYUP_DATA_API="keyup"+EVENT_KEY$4+DATA_API_KEY$4;var CLASS_NAME_DISABLED='disabled';var CLASS_NAME_SHOW$2='show';var CLASS_NAME_DROPUP='dropup';var CLASS_NAME_DROPRIGHT='dropright';var CLASS_NAME_DROPLEFT='dropleft';var CLASS_NAME_MENURIGHT='dropdown-menu-right';var CLASS_NAME_POSITION_STATIC='position-static';var SELECTOR_DATA_TOGGLE$2='[data-toggle="dropdown"]';var SELECTOR_FORM_CHILD='.dropdown form';var SELECTOR_MENU='.dropdown-menu';var SELECTOR_NAVBAR_NAV='.navbar-nav';var SELECTOR_VISIBLE_ITEMS='.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';var PLACEMENT_TOP='top-start';var PLACEMENT_TOPEND='top-end';var PLACEMENT_BOTTOM='bottom-start';var PLACEMENT_BOTTOMEND='bottom-end';var PLACEMENT_RIGHT='right-start';var PLACEMENT_LEFT='left-start';var Default$2={offset:0,flip:true,boundary:'scrollParent',reference:'toggle',display:'dynamic',popperConfig:null};var DefaultType$2={offset:'(number|string|function)',flip:'boolean',boundary:'(string|element)',reference:'(string|element)',display:'string',popperConfig:'(null|object)'};var Dropdown=function(){function Dropdown(element,config){this._element=element;this._popper=null;this._config=this._getConfig(config);this._menu=this._getMenuElement();this._inNavbar=this._detectNavbar();this._addEventListeners();}
var _proto=Dropdown.prototype;_proto.toggle=function toggle(){if(this._element.disabled||$__default['default'](this._element).hasClass(CLASS_NAME_DISABLED)){return;}
var isActive=$__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2);Dropdown._clearMenus();if(isActive){return;}
this.show(true);};_proto.show=function show(usePopper){if(usePopper===void 0){usePopper=false;}
if(this._element.disabled||$__default['default'](this._element).hasClass(CLASS_NAME_DISABLED)||$__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2)){return;}
var relatedTarget={relatedTarget:this._element};var showEvent=$__default['default'].Event(EVENT_SHOW$1,relatedTarget);var parent=Dropdown._getParentFromElement(this._element);$__default['default'](parent).trigger(showEvent);if(showEvent.isDefaultPrevented()){return;}
if(!this._inNavbar&&usePopper){if(typeof Popper==='undefined'){throw new TypeError('Bootstrap\'s dropdowns require Popper (https://popper.js.org)');}
var referenceElement=this._element;if(this._config.reference==='parent'){referenceElement=parent;}else if(Util.isElement(this._config.reference)){referenceElement=this._config.reference;if(typeof this._config.reference.jquery!=='undefined'){referenceElement=this._config.reference[0];}}
if(this._config.boundary!=='scrollParent'){$__default['default'](parent).addClass(CLASS_NAME_POSITION_STATIC);}
this._popper=new Popper(referenceElement,this._menu,this._getPopperConfig());}
if('ontouchstart'in document.documentElement&&$__default['default'](parent).closest(SELECTOR_NAVBAR_NAV).length===0){$__default['default'](document.body).children().on('mouseover',null,$__default['default'].noop);}
this._element.focus();this._element.setAttribute('aria-expanded',true);$__default['default'](this._menu).toggleClass(CLASS_NAME_SHOW$2);$__default['default'](parent).toggleClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_SHOWN$1,relatedTarget));};_proto.hide=function hide(){if(this._element.disabled||$__default['default'](this._element).hasClass(CLASS_NAME_DISABLED)||!$__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2)){return;}
var relatedTarget={relatedTarget:this._element};var hideEvent=$__default['default'].Event(EVENT_HIDE$1,relatedTarget);var parent=Dropdown._getParentFromElement(this._element);$__default['default'](parent).trigger(hideEvent);if(hideEvent.isDefaultPrevented()){return;}
if(this._popper){this._popper.destroy();}
$__default['default'](this._menu).toggleClass(CLASS_NAME_SHOW$2);$__default['default'](parent).toggleClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_HIDDEN$1,relatedTarget));};_proto.dispose=function dispose(){$__default['default'].removeData(this._element,DATA_KEY$4);$__default['default'](this._element).off(EVENT_KEY$4);this._element=null;this._menu=null;if(this._popper!==null){this._popper.destroy();this._popper=null;}};_proto.update=function update(){this._inNavbar=this._detectNavbar();if(this._popper!==null){this._popper.scheduleUpdate();}};_proto._addEventListeners=function _addEventListeners(){var _this=this;$__default['default'](this._element).on(EVENT_CLICK,function(event){event.preventDefault();event.stopPropagation();_this.toggle();});};_proto._getConfig=function _getConfig(config){config=_extends({},this.constructor.Default,$__default['default'](this._element).data(),config);Util.typeCheckConfig(NAME$4,config,this.constructor.DefaultType);return config;};_proto._getMenuElement=function _getMenuElement(){if(!this._menu){var parent=Dropdown._getParentFromElement(this._element);if(parent){this._menu=parent.querySelector(SELECTOR_MENU);}}
return this._menu;};_proto._getPlacement=function _getPlacement(){var $parentDropdown=$__default['default'](this._element.parentNode);var placement=PLACEMENT_BOTTOM;if($parentDropdown.hasClass(CLASS_NAME_DROPUP)){placement=$__default['default'](this._menu).hasClass(CLASS_NAME_MENURIGHT)?PLACEMENT_TOPEND:PLACEMENT_TOP;}else if($parentDropdown.hasClass(CLASS_NAME_DROPRIGHT)){placement=PLACEMENT_RIGHT;}else if($parentDropdown.hasClass(CLASS_NAME_DROPLEFT)){placement=PLACEMENT_LEFT;}else if($__default['default'](this._menu).hasClass(CLASS_NAME_MENURIGHT)){placement=PLACEMENT_BOTTOMEND;}
return placement;};_proto._detectNavbar=function _detectNavbar(){return $__default['default'](this._element).closest('.navbar').length>0;};_proto._getOffset=function _getOffset(){var _this2=this;var offset={};if(typeof this._config.offset==='function'){offset.fn=function(data){data.offsets=_extends({},data.offsets,_this2._config.offset(data.offsets,_this2._element)||{});return data;};}else{offset.offset=this._config.offset;}
return offset;};_proto._getPopperConfig=function _getPopperConfig(){var popperConfig={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};if(this._config.display==='static'){popperConfig.modifiers.applyStyle={enabled:false};}
return _extends({},popperConfig,this._config.popperConfig);};Dropdown._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var data=$__default['default'](this).data(DATA_KEY$4);var _config=typeof config==='object'?config:null;if(!data){data=new Dropdown(this,_config);$__default['default'](this).data(DATA_KEY$4,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config]();}});};Dropdown._clearMenus=function _clearMenus(event){if(event&&(event.which===RIGHT_MOUSE_BUTTON_WHICH||event.type==='keyup'&&event.which!==TAB_KEYCODE)){return;}
var toggles=[].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$2));for(var i=0,len=toggles.length;i<len;i++){var parent=Dropdown._getParentFromElement(toggles[i]);var context=$__default['default'](toggles[i]).data(DATA_KEY$4);var relatedTarget={relatedTarget:toggles[i]};if(event&&event.type==='click'){relatedTarget.clickEvent=event;}
if(!context){continue;}
var dropdownMenu=context._menu;if(!$__default['default'](parent).hasClass(CLASS_NAME_SHOW$2)){continue;}
if(event&&(event.type==='click'&&/input|textarea/i.test(event.target.tagName)||event.type==='keyup'&&event.which===TAB_KEYCODE)&&$__default['default'].contains(parent,event.target)){continue;}
var hideEvent=$__default['default'].Event(EVENT_HIDE$1,relatedTarget);$__default['default'](parent).trigger(hideEvent);if(hideEvent.isDefaultPrevented()){continue;}
if('ontouchstart'in document.documentElement){$__default['default'](document.body).children().off('mouseover',null,$__default['default'].noop);}
toggles[i].setAttribute('aria-expanded','false');if(context._popper){context._popper.destroy();}
$__default['default'](dropdownMenu).removeClass(CLASS_NAME_SHOW$2);$__default['default'](parent).removeClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_HIDDEN$1,relatedTarget));}};Dropdown._getParentFromElement=function _getParentFromElement(element){var parent;var selector=Util.getSelectorFromElement(element);if(selector){parent=document.querySelector(selector);}
return parent||element.parentNode;};Dropdown._dataApiKeydownHandler=function _dataApiKeydownHandler(event){if(/input|textarea/i.test(event.target.tagName)?event.which===SPACE_KEYCODE||event.which!==ESCAPE_KEYCODE&&(event.which!==ARROW_DOWN_KEYCODE&&event.which!==ARROW_UP_KEYCODE||$__default['default'](event.target).closest(SELECTOR_MENU).length):!REGEXP_KEYDOWN.test(event.which)){return;}
if(this.disabled||$__default['default'](this).hasClass(CLASS_NAME_DISABLED)){return;}
var parent=Dropdown._getParentFromElement(this);var isActive=$__default['default'](parent).hasClass(CLASS_NAME_SHOW$2);if(!isActive&&event.which===ESCAPE_KEYCODE){return;}
event.preventDefault();event.stopPropagation();if(!isActive||event.which===ESCAPE_KEYCODE||event.which===SPACE_KEYCODE){if(event.which===ESCAPE_KEYCODE){$__default['default'](parent.querySelector(SELECTOR_DATA_TOGGLE$2)).trigger('focus');}
$__default['default'](this).trigger('click');return;}
var items=[].slice.call(parent.querySelectorAll(SELECTOR_VISIBLE_ITEMS)).filter(function(item){return $__default['default'](item).is(':visible');});if(items.length===0){return;}
var index=items.indexOf(event.target);if(event.which===ARROW_UP_KEYCODE&&index>0){index--;}
if(event.which===ARROW_DOWN_KEYCODE&&index<items.length-1){index++;}
if(index<0){index=0;}
items[index].focus();};_createClass(Dropdown,null,[{key:"VERSION",get:function get(){return VERSION$4;}},{key:"Default",get:function get(){return Default$2;}},{key:"DefaultType",get:function get(){return DefaultType$2;}}]);return Dropdown;}();$__default['default'](document).on(EVENT_KEYDOWN_DATA_API,SELECTOR_DATA_TOGGLE$2,Dropdown._dataApiKeydownHandler).on(EVENT_KEYDOWN_DATA_API,SELECTOR_MENU,Dropdown._dataApiKeydownHandler).on(EVENT_CLICK_DATA_API$4+" "+EVENT_KEYUP_DATA_API,Dropdown._clearMenus).on(EVENT_CLICK_DATA_API$4,SELECTOR_DATA_TOGGLE$2,function(event){event.preventDefault();event.stopPropagation();Dropdown._jQueryInterface.call($__default['default'](this),'toggle');}).on(EVENT_CLICK_DATA_API$4,SELECTOR_FORM_CHILD,function(e){e.stopPropagation();});$__default['default'].fn[NAME$4]=Dropdown._jQueryInterface;$__default['default'].fn[NAME$4].Constructor=Dropdown;$__default['default'].fn[NAME$4].noConflict=function(){$__default['default'].fn[NAME$4]=JQUERY_NO_CONFLICT$4;return Dropdown._jQueryInterface;};var NAME$5='modal';var VERSION$5='4.6.0';var DATA_KEY$5='bs.modal';var EVENT_KEY$5="."+DATA_KEY$5;var DATA_API_KEY$5='.data-api';var JQUERY_NO_CONFLICT$5=$__default['default'].fn[NAME$5];var ESCAPE_KEYCODE$1=27;var Default$3={backdrop:true,keyboard:true,focus:true,show:true};var DefaultType$3={backdrop:'(boolean|string)',keyboard:'boolean',focus:'boolean',show:'boolean'};var EVENT_HIDE$2="hide"+EVENT_KEY$5;var EVENT_HIDE_PREVENTED="hidePrevented"+EVENT_KEY$5;var EVENT_HIDDEN$2="hidden"+EVENT_KEY$5;var EVENT_SHOW$2="show"+EVENT_KEY$5;var EVENT_SHOWN$2="shown"+EVENT_KEY$5;var EVENT_FOCUSIN="focusin"+EVENT_KEY$5;var EVENT_RESIZE="resize"+EVENT_KEY$5;var EVENT_CLICK_DISMISS="click.dismiss"+EVENT_KEY$5;var EVENT_KEYDOWN_DISMISS="keydown.dismiss"+EVENT_KEY$5;var EVENT_MOUSEUP_DISMISS="mouseup.dismiss"+EVENT_KEY$5;var EVENT_MOUSEDOWN_DISMISS="mousedown.dismiss"+EVENT_KEY$5;var EVENT_CLICK_DATA_API$5="click"+EVENT_KEY$5+DATA_API_KEY$5;var CLASS_NAME_SCROLLABLE='modal-dialog-scrollable';var CLASS_NAME_SCROLLBAR_MEASURER='modal-scrollbar-measure';var CLASS_NAME_BACKDROP='modal-backdrop';var CLASS_NAME_OPEN='modal-open';var CLASS_NAME_FADE$1='fade';var CLASS_NAME_SHOW$3='show';var CLASS_NAME_STATIC='modal-static';var SELECTOR_DIALOG='.modal-dialog';var SELECTOR_MODAL_BODY='.modal-body';var SELECTOR_DATA_TOGGLE$3='[data-toggle="modal"]';var SELECTOR_DATA_DISMISS='[data-dismiss="modal"]';var SELECTOR_FIXED_CONTENT='.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';var SELECTOR_STICKY_CONTENT='.sticky-top';var Modal=function(){function Modal(element,config){this._config=this._getConfig(config);this._element=element;this._dialog=element.querySelector(SELECTOR_DIALOG);this._backdrop=null;this._isShown=false;this._isBodyOverflowing=false;this._ignoreBackdropClick=false;this._isTransitioning=false;this._scrollbarWidth=0;}
var _proto=Modal.prototype;_proto.toggle=function toggle(relatedTarget){return this._isShown?this.hide():this.show(relatedTarget);};_proto.show=function show(relatedTarget){var _this=this;if(this._isShown||this._isTransitioning){return;}
if($__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)){this._isTransitioning=true;}
var showEvent=$__default['default'].Event(EVENT_SHOW$2,{relatedTarget:relatedTarget});$__default['default'](this._element).trigger(showEvent);if(this._isShown||showEvent.isDefaultPrevented()){return;}
this._isShown=true;this._checkScrollbar();this._setScrollbar();this._adjustDialog();this._setEscapeEvent();this._setResizeEvent();$__default['default'](this._element).on(EVENT_CLICK_DISMISS,SELECTOR_DATA_DISMISS,function(event){return _this.hide(event);});$__default['default'](this._dialog).on(EVENT_MOUSEDOWN_DISMISS,function(){$__default['default'](_this._element).one(EVENT_MOUSEUP_DISMISS,function(event){if($__default['default'](event.target).is(_this._element)){_this._ignoreBackdropClick=true;}});});this._showBackdrop(function(){return _this._showElement(relatedTarget);});};_proto.hide=function hide(event){var _this2=this;if(event){event.preventDefault();}
if(!this._isShown||this._isTransitioning){return;}
var hideEvent=$__default['default'].Event(EVENT_HIDE$2);$__default['default'](this._element).trigger(hideEvent);if(!this._isShown||hideEvent.isDefaultPrevented()){return;}
this._isShown=false;var transition=$__default['default'](this._element).hasClass(CLASS_NAME_FADE$1);if(transition){this._isTransitioning=true;}
this._setEscapeEvent();this._setResizeEvent();$__default['default'](document).off(EVENT_FOCUSIN);$__default['default'](this._element).removeClass(CLASS_NAME_SHOW$3);$__default['default'](this._element).off(EVENT_CLICK_DISMISS);$__default['default'](this._dialog).off(EVENT_MOUSEDOWN_DISMISS);if(transition){var transitionDuration=Util.getTransitionDurationFromElement(this._element);$__default['default'](this._element).one(Util.TRANSITION_END,function(event){return _this2._hideModal(event);}).emulateTransitionEnd(transitionDuration);}else{this._hideModal();}};_proto.dispose=function dispose(){[window,this._element,this._dialog].forEach(function(htmlElement){return $__default['default'](htmlElement).off(EVENT_KEY$5);});$__default['default'](document).off(EVENT_FOCUSIN);$__default['default'].removeData(this._element,DATA_KEY$5);this._config=null;this._element=null;this._dialog=null;this._backdrop=null;this._isShown=null;this._isBodyOverflowing=null;this._ignoreBackdropClick=null;this._isTransitioning=null;this._scrollbarWidth=null;};_proto.handleUpdate=function handleUpdate(){this._adjustDialog();};_proto._getConfig=function _getConfig(config){config=_extends({},Default$3,config);Util.typeCheckConfig(NAME$5,config,DefaultType$3);return config;};_proto._triggerBackdropTransition=function _triggerBackdropTransition(){var _this3=this;var hideEventPrevented=$__default['default'].Event(EVENT_HIDE_PREVENTED);$__default['default'](this._element).trigger(hideEventPrevented);if(hideEventPrevented.isDefaultPrevented()){return;}
var isModalOverflowing=this._element.scrollHeight>document.documentElement.clientHeight;if(!isModalOverflowing){this._element.style.overflowY='hidden';}
this._element.classList.add(CLASS_NAME_STATIC);var modalTransitionDuration=Util.getTransitionDurationFromElement(this._dialog);$__default['default'](this._element).off(Util.TRANSITION_END);$__default['default'](this._element).one(Util.TRANSITION_END,function(){_this3._element.classList.remove(CLASS_NAME_STATIC);if(!isModalOverflowing){$__default['default'](_this3._element).one(Util.TRANSITION_END,function(){_this3._element.style.overflowY='';}).emulateTransitionEnd(_this3._element,modalTransitionDuration);}}).emulateTransitionEnd(modalTransitionDuration);this._element.focus();};_proto._showElement=function _showElement(relatedTarget){var _this4=this;var transition=$__default['default'](this._element).hasClass(CLASS_NAME_FADE$1);var modalBody=this._dialog?this._dialog.querySelector(SELECTOR_MODAL_BODY):null;if(!this._element.parentNode||this._element.parentNode.nodeType!==Node.ELEMENT_NODE){document.body.appendChild(this._element);}
this._element.style.display='block';this._element.removeAttribute('aria-hidden');this._element.setAttribute('aria-modal',true);this._element.setAttribute('role','dialog');if($__default['default'](this._dialog).hasClass(CLASS_NAME_SCROLLABLE)&&modalBody){modalBody.scrollTop=0;}else{this._element.scrollTop=0;}
if(transition){Util.reflow(this._element);}
$__default['default'](this._element).addClass(CLASS_NAME_SHOW$3);if(this._config.focus){this._enforceFocus();}
var shownEvent=$__default['default'].Event(EVENT_SHOWN$2,{relatedTarget:relatedTarget});var transitionComplete=function transitionComplete(){if(_this4._config.focus){_this4._element.focus();}
_this4._isTransitioning=false;$__default['default'](_this4._element).trigger(shownEvent);};if(transition){var transitionDuration=Util.getTransitionDurationFromElement(this._dialog);$__default['default'](this._dialog).one(Util.TRANSITION_END,transitionComplete).emulateTransitionEnd(transitionDuration);}else{transitionComplete();}};_proto._enforceFocus=function _enforceFocus(){var _this5=this;$__default['default'](document).off(EVENT_FOCUSIN).on(EVENT_FOCUSIN,function(event){if(document!==event.target&&_this5._element!==event.target&&$__default['default'](_this5._element).has(event.target).length===0){_this5._element.focus();}});};_proto._setEscapeEvent=function _setEscapeEvent(){var _this6=this;if(this._isShown){$__default['default'](this._element).on(EVENT_KEYDOWN_DISMISS,function(event){if(_this6._config.keyboard&&event.which===ESCAPE_KEYCODE$1){event.preventDefault();_this6.hide();}else if(!_this6._config.keyboard&&event.which===ESCAPE_KEYCODE$1){_this6._triggerBackdropTransition();}});}else if(!this._isShown){$__default['default'](this._element).off(EVENT_KEYDOWN_DISMISS);}};_proto._setResizeEvent=function _setResizeEvent(){var _this7=this;if(this._isShown){$__default['default'](window).on(EVENT_RESIZE,function(event){return _this7.handleUpdate(event);});}else{$__default['default'](window).off(EVENT_RESIZE);}};_proto._hideModal=function _hideModal(){var _this8=this;this._element.style.display='none';this._element.setAttribute('aria-hidden',true);this._element.removeAttribute('aria-modal');this._element.removeAttribute('role');this._isTransitioning=false;this._showBackdrop(function(){$__default['default'](document.body).removeClass(CLASS_NAME_OPEN);_this8._resetAdjustments();_this8._resetScrollbar();$__default['default'](_this8._element).trigger(EVENT_HIDDEN$2);});};_proto._removeBackdrop=function _removeBackdrop(){if(this._backdrop){$__default['default'](this._backdrop).remove();this._backdrop=null;}};_proto._showBackdrop=function _showBackdrop(callback){var _this9=this;var animate=$__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)?CLASS_NAME_FADE$1:'';if(this._isShown&&this._config.backdrop){this._backdrop=document.createElement('div');this._backdrop.className=CLASS_NAME_BACKDROP;if(animate){this._backdrop.classList.add(animate);}
$__default['default'](this._backdrop).appendTo(document.body);$__default['default'](this._element).on(EVENT_CLICK_DISMISS,function(event){if(_this9._ignoreBackdropClick){_this9._ignoreBackdropClick=false;return;}
if(event.target!==event.currentTarget){return;}
if(_this9._config.backdrop==='static'){_this9._triggerBackdropTransition();}else{_this9.hide();}});if(animate){Util.reflow(this._backdrop);}
$__default['default'](this._backdrop).addClass(CLASS_NAME_SHOW$3);if(!callback){return;}
if(!animate){callback();return;}
var backdropTransitionDuration=Util.getTransitionDurationFromElement(this._backdrop);$__default['default'](this._backdrop).one(Util.TRANSITION_END,callback).emulateTransitionEnd(backdropTransitionDuration);}else if(!this._isShown&&this._backdrop){$__default['default'](this._backdrop).removeClass(CLASS_NAME_SHOW$3);var callbackRemove=function callbackRemove(){_this9._removeBackdrop();if(callback){callback();}};if($__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)){var _backdropTransitionDuration=Util.getTransitionDurationFromElement(this._backdrop);$__default['default'](this._backdrop).one(Util.TRANSITION_END,callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);}else{callbackRemove();}}else if(callback){callback();}};_proto._adjustDialog=function _adjustDialog(){var isModalOverflowing=this._element.scrollHeight>document.documentElement.clientHeight;if(!this._isBodyOverflowing&&isModalOverflowing){this._element.style.paddingLeft=this._scrollbarWidth+"px";}
if(this._isBodyOverflowing&&!isModalOverflowing){this._element.style.paddingRight=this._scrollbarWidth+"px";}};_proto._resetAdjustments=function _resetAdjustments(){this._element.style.paddingLeft='';this._element.style.paddingRight='';};_proto._checkScrollbar=function _checkScrollbar(){var rect=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(rect.left+rect.right)<window.innerWidth;this._scrollbarWidth=this._getScrollbarWidth();};_proto._setScrollbar=function _setScrollbar(){var _this10=this;if(this._isBodyOverflowing){var fixedContent=[].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));var stickyContent=[].slice.call(document.querySelectorAll(SELECTOR_STICKY_CONTENT));$__default['default'](fixedContent).each(function(index,element){var actualPadding=element.style.paddingRight;var calculatedPadding=$__default['default'](element).css('padding-right');$__default['default'](element).data('padding-right',actualPadding).css('padding-right',parseFloat(calculatedPadding)+_this10._scrollbarWidth+"px");});$__default['default'](stickyContent).each(function(index,element){var actualMargin=element.style.marginRight;var calculatedMargin=$__default['default'](element).css('margin-right');$__default['default'](element).data('margin-right',actualMargin).css('margin-right',parseFloat(calculatedMargin)-_this10._scrollbarWidth+"px");});var actualPadding=document.body.style.paddingRight;var calculatedPadding=$__default['default'](document.body).css('padding-right');$__default['default'](document.body).data('padding-right',actualPadding).css('padding-right',parseFloat(calculatedPadding)+this._scrollbarWidth+"px");}
$__default['default'](document.body).addClass(CLASS_NAME_OPEN);};_proto._resetScrollbar=function _resetScrollbar(){var fixedContent=[].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));$__default['default'](fixedContent).each(function(index,element){var padding=$__default['default'](element).data('padding-right');$__default['default'](element).removeData('padding-right');element.style.paddingRight=padding?padding:'';});var elements=[].slice.call(document.querySelectorAll(""+SELECTOR_STICKY_CONTENT));$__default['default'](elements).each(function(index,element){var margin=$__default['default'](element).data('margin-right');if(typeof margin!=='undefined'){$__default['default'](element).css('margin-right',margin).removeData('margin-right');}});var padding=$__default['default'](document.body).data('padding-right');$__default['default'](document.body).removeData('padding-right');document.body.style.paddingRight=padding?padding:'';};_proto._getScrollbarWidth=function _getScrollbarWidth(){var scrollDiv=document.createElement('div');scrollDiv.className=CLASS_NAME_SCROLLBAR_MEASURER;document.body.appendChild(scrollDiv);var scrollbarWidth=scrollDiv.getBoundingClientRect().width-scrollDiv.clientWidth;document.body.removeChild(scrollDiv);return scrollbarWidth;};Modal._jQueryInterface=function _jQueryInterface(config,relatedTarget){return this.each(function(){var data=$__default['default'](this).data(DATA_KEY$5);var _config=_extends({},Default$3,$__default['default'](this).data(),typeof config==='object'&&config?config:{});if(!data){data=new Modal(this,_config);$__default['default'](this).data(DATA_KEY$5,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config](relatedTarget);}else if(_config.show){data.show(relatedTarget);}});};_createClass(Modal,null,[{key:"VERSION",get:function get(){return VERSION$5;}},{key:"Default",get:function get(){return Default$3;}}]);return Modal;}();$__default['default'](document).on(EVENT_CLICK_DATA_API$5,SELECTOR_DATA_TOGGLE$3,function(event){var _this11=this;var target;var selector=Util.getSelectorFromElement(this);if(selector){target=document.querySelector(selector);}
var config=$__default['default'](target).data(DATA_KEY$5)?'toggle':_extends({},$__default['default'](target).data(),$__default['default'](this).data());if(this.tagName==='A'||this.tagName==='AREA'){event.preventDefault();}
var $target=$__default['default'](target).one(EVENT_SHOW$2,function(showEvent){if(showEvent.isDefaultPrevented()){return;}
$target.one(EVENT_HIDDEN$2,function(){if($__default['default'](_this11).is(':visible')){_this11.focus();}});});Modal._jQueryInterface.call($__default['default'](target),config,this);});$__default['default'].fn[NAME$5]=Modal._jQueryInterface;$__default['default'].fn[NAME$5].Constructor=Modal;$__default['default'].fn[NAME$5].noConflict=function(){$__default['default'].fn[NAME$5]=JQUERY_NO_CONFLICT$5;return Modal._jQueryInterface;};var uriAttrs=['background','cite','href','itemtype','longdesc','poster','src','xlink:href'];var ARIA_ATTRIBUTE_PATTERN=/^aria-[\w-]*$/i;var DefaultWhitelist={'*':['class','dir','id','lang','role',ARIA_ATTRIBUTE_PATTERN],a:['target','href','title','rel'],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:['src','srcset','alt','title','width','height'],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]};var SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;var DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function allowedAttribute(attr,allowedAttributeList){var attrName=attr.nodeName.toLowerCase();if(allowedAttributeList.indexOf(attrName)!==-1){if(uriAttrs.indexOf(attrName)!==-1){return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN)||attr.nodeValue.match(DATA_URL_PATTERN));}
return true;}
var regExp=allowedAttributeList.filter(function(attrRegex){return attrRegex instanceof RegExp;});for(var i=0,len=regExp.length;i<len;i++){if(attrName.match(regExp[i])){return true;}}
return false;}
function sanitizeHtml(unsafeHtml,whiteList,sanitizeFn){if(unsafeHtml.length===0){return unsafeHtml;}
if(sanitizeFn&&typeof sanitizeFn==='function'){return sanitizeFn(unsafeHtml);}
var domParser=new window.DOMParser();var createdDocument=domParser.parseFromString(unsafeHtml,'text/html');var whitelistKeys=Object.keys(whiteList);var elements=[].slice.call(createdDocument.body.querySelectorAll('*'));var _loop=function _loop(i,len){var el=elements[i];var elName=el.nodeName.toLowerCase();if(whitelistKeys.indexOf(el.nodeName.toLowerCase())===-1){el.parentNode.removeChild(el);return"continue";}
var attributeList=[].slice.call(el.attributes);var whitelistedAttributes=[].concat(whiteList['*']||[],whiteList[elName]||[]);attributeList.forEach(function(attr){if(!allowedAttribute(attr,whitelistedAttributes)){el.removeAttribute(attr.nodeName);}});};for(var i=0,len=elements.length;i<len;i++){var _ret=_loop(i);if(_ret==="continue")continue;}
return createdDocument.body.innerHTML;}
var NAME$6='tooltip';var VERSION$6='4.6.0';var DATA_KEY$6='bs.tooltip';var EVENT_KEY$6="."+DATA_KEY$6;var JQUERY_NO_CONFLICT$6=$__default['default'].fn[NAME$6];var CLASS_PREFIX='bs-tooltip';var BSCLS_PREFIX_REGEX=new RegExp("(^|\\s)"+CLASS_PREFIX+"\\S+",'g');var DISALLOWED_ATTRIBUTES=['sanitize','whiteList','sanitizeFn'];var DefaultType$4={animation:'boolean',template:'string',title:'(string|element|function)',trigger:'string',delay:'(number|object)',html:'boolean',selector:'(string|boolean)',placement:'(string|function)',offset:'(number|string|function)',container:'(string|element|boolean)',fallbackPlacement:'(string|array)',boundary:'(string|element)',customClass:'(string|function)',sanitize:'boolean',sanitizeFn:'(null|function)',whiteList:'object',popperConfig:'(null|object)'};var AttachmentMap={AUTO:'auto',TOP:'top',RIGHT:'right',BOTTOM:'bottom',LEFT:'left'};var Default$4={animation:true,template:'<div class="tooltip" role="tooltip">'+'<div class="arrow"></div>'+'<div class="tooltip-inner"></div></div>',trigger:'hover focus',title:'',delay:0,html:false,selector:false,placement:'top',offset:0,container:false,fallbackPlacement:'flip',boundary:'scrollParent',customClass:'',sanitize:true,sanitizeFn:null,whiteList:DefaultWhitelist,popperConfig:null};var HOVER_STATE_SHOW='show';var HOVER_STATE_OUT='out';var Event={HIDE:"hide"+EVENT_KEY$6,HIDDEN:"hidden"+EVENT_KEY$6,SHOW:"show"+EVENT_KEY$6,SHOWN:"shown"+EVENT_KEY$6,INSERTED:"inserted"+EVENT_KEY$6,CLICK:"click"+EVENT_KEY$6,FOCUSIN:"focusin"+EVENT_KEY$6,FOCUSOUT:"focusout"+EVENT_KEY$6,MOUSEENTER:"mouseenter"+EVENT_KEY$6,MOUSELEAVE:"mouseleave"+EVENT_KEY$6};var CLASS_NAME_FADE$2='fade';var CLASS_NAME_SHOW$4='show';var SELECTOR_TOOLTIP_INNER='.tooltip-inner';var SELECTOR_ARROW='.arrow';var TRIGGER_HOVER='hover';var TRIGGER_FOCUS='focus';var TRIGGER_CLICK='click';var TRIGGER_MANUAL='manual';var Tooltip=function(){function Tooltip(element,config){if(typeof Popper==='undefined'){throw new TypeError('Bootstrap\'s tooltips require Popper (https://popper.js.org)');}
this._isEnabled=true;this._timeout=0;this._hoverState='';this._activeTrigger={};this._popper=null;this.element=element;this.config=this._getConfig(config);this.tip=null;this._setListeners();}
var _proto=Tooltip.prototype;_proto.enable=function enable(){this._isEnabled=true;};_proto.disable=function disable(){this._isEnabled=false;};_proto.toggleEnabled=function toggleEnabled(){this._isEnabled=!this._isEnabled;};_proto.toggle=function toggle(event){if(!this._isEnabled){return;}
if(event){var dataKey=this.constructor.DATA_KEY;var context=$__default['default'](event.currentTarget).data(dataKey);if(!context){context=new this.constructor(event.currentTarget,this._getDelegateConfig());$__default['default'](event.currentTarget).data(dataKey,context);}
context._activeTrigger.click=!context._activeTrigger.click;if(context._isWithActiveTrigger()){context._enter(null,context);}else{context._leave(null,context);}}else{if($__default['default'](this.getTipElement()).hasClass(CLASS_NAME_SHOW$4)){this._leave(null,this);return;}
this._enter(null,this);}};_proto.dispose=function dispose(){clearTimeout(this._timeout);$__default['default'].removeData(this.element,this.constructor.DATA_KEY);$__default['default'](this.element).off(this.constructor.EVENT_KEY);$__default['default'](this.element).closest('.modal').off('hide.bs.modal',this._hideModalHandler);if(this.tip){$__default['default'](this.tip).remove();}
this._isEnabled=null;this._timeout=null;this._hoverState=null;this._activeTrigger=null;if(this._popper){this._popper.destroy();}
this._popper=null;this.element=null;this.config=null;this.tip=null;};_proto.show=function show(){var _this=this;if($__default['default'](this.element).css('display')==='none'){throw new Error('Please use show on visible elements');}
var showEvent=$__default['default'].Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){$__default['default'](this.element).trigger(showEvent);var shadowRoot=Util.findShadowRoot(this.element);var isInTheDom=$__default['default'].contains(shadowRoot!==null?shadowRoot:this.element.ownerDocument.documentElement,this.element);if(showEvent.isDefaultPrevented()||!isInTheDom){return;}
var tip=this.getTipElement();var tipId=Util.getUID(this.constructor.NAME);tip.setAttribute('id',tipId);this.element.setAttribute('aria-describedby',tipId);this.setContent();if(this.config.animation){$__default['default'](tip).addClass(CLASS_NAME_FADE$2);}
var placement=typeof this.config.placement==='function'?this.config.placement.call(this,tip,this.element):this.config.placement;var attachment=this._getAttachment(placement);this.addAttachmentClass(attachment);var container=this._getContainer();$__default['default'](tip).data(this.constructor.DATA_KEY,this);if(!$__default['default'].contains(this.element.ownerDocument.documentElement,this.tip)){$__default['default'](tip).appendTo(container);}
$__default['default'](this.element).trigger(this.constructor.Event.INSERTED);this._popper=new Popper(this.element,tip,this._getPopperConfig(attachment));$__default['default'](tip).addClass(CLASS_NAME_SHOW$4);$__default['default'](tip).addClass(this.config.customClass);if('ontouchstart'in document.documentElement){$__default['default'](document.body).children().on('mouseover',null,$__default['default'].noop);}
var complete=function complete(){if(_this.config.animation){_this._fixTransition();}
var prevHoverState=_this._hoverState;_this._hoverState=null;$__default['default'](_this.element).trigger(_this.constructor.Event.SHOWN);if(prevHoverState===HOVER_STATE_OUT){_this._leave(null,_this);}};if($__default['default'](this.tip).hasClass(CLASS_NAME_FADE$2)){var transitionDuration=Util.getTransitionDurationFromElement(this.tip);$__default['default'](this.tip).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);}else{complete();}}};_proto.hide=function hide(callback){var _this2=this;var tip=this.getTipElement();var hideEvent=$__default['default'].Event(this.constructor.Event.HIDE);var complete=function complete(){if(_this2._hoverState!==HOVER_STATE_SHOW&&tip.parentNode){tip.parentNode.removeChild(tip);}
_this2._cleanTipClass();_this2.element.removeAttribute('aria-describedby');$__default['default'](_this2.element).trigger(_this2.constructor.Event.HIDDEN);if(_this2._popper!==null){_this2._popper.destroy();}
if(callback){callback();}};$__default['default'](this.element).trigger(hideEvent);if(hideEvent.isDefaultPrevented()){return;}
$__default['default'](tip).removeClass(CLASS_NAME_SHOW$4);if('ontouchstart'in document.documentElement){$__default['default'](document.body).children().off('mouseover',null,$__default['default'].noop);}
this._activeTrigger[TRIGGER_CLICK]=false;this._activeTrigger[TRIGGER_FOCUS]=false;this._activeTrigger[TRIGGER_HOVER]=false;if($__default['default'](this.tip).hasClass(CLASS_NAME_FADE$2)){var transitionDuration=Util.getTransitionDurationFromElement(tip);$__default['default'](tip).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);}else{complete();}
this._hoverState='';};_proto.update=function update(){if(this._popper!==null){this._popper.scheduleUpdate();}};_proto.isWithContent=function isWithContent(){return Boolean(this.getTitle());};_proto.addAttachmentClass=function addAttachmentClass(attachment){$__default['default'](this.getTipElement()).addClass(CLASS_PREFIX+"-"+attachment);};_proto.getTipElement=function getTipElement(){this.tip=this.tip||$__default['default'](this.config.template)[0];return this.tip;};_proto.setContent=function setContent(){var tip=this.getTipElement();this.setElementContent($__default['default'](tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)),this.getTitle());$__default['default'](tip).removeClass(CLASS_NAME_FADE$2+" "+CLASS_NAME_SHOW$4);};_proto.setElementContent=function setElementContent($element,content){if(typeof content==='object'&&(content.nodeType||content.jquery)){if(this.config.html){if(!$__default['default'](content).parent().is($element)){$element.empty().append(content);}}else{$element.text($__default['default'](content).text());}
return;}
if(this.config.html){if(this.config.sanitize){content=sanitizeHtml(content,this.config.whiteList,this.config.sanitizeFn);}
$element.html(content);}else{$element.text(content);}};_proto.getTitle=function getTitle(){var title=this.element.getAttribute('data-original-title');if(!title){title=typeof this.config.title==='function'?this.config.title.call(this.element):this.config.title;}
return title;};_proto._getPopperConfig=function _getPopperConfig(attachment){var _this3=this;var defaultBsConfig={placement:attachment,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:SELECTOR_ARROW},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function onCreate(data){if(data.originalPlacement!==data.placement){_this3._handlePopperPlacementChange(data);}},onUpdate:function onUpdate(data){return _this3._handlePopperPlacementChange(data);}};return _extends({},defaultBsConfig,this.config.popperConfig);};_proto._getOffset=function _getOffset(){var _this4=this;var offset={};if(typeof this.config.offset==='function'){offset.fn=function(data){data.offsets=_extends({},data.offsets,_this4.config.offset(data.offsets,_this4.element)||{});return data;};}else{offset.offset=this.config.offset;}
return offset;};_proto._getContainer=function _getContainer(){if(this.config.container===false){return document.body;}
if(Util.isElement(this.config.container)){return $__default['default'](this.config.container);}
return $__default['default'](document).find(this.config.container);};_proto._getAttachment=function _getAttachment(placement){return AttachmentMap[placement.toUpperCase()];};_proto._setListeners=function _setListeners(){var _this5=this;var triggers=this.config.trigger.split(' ');triggers.forEach(function(trigger){if(trigger==='click'){$__default['default'](_this5.element).on(_this5.constructor.Event.CLICK,_this5.config.selector,function(event){return _this5.toggle(event);});}else if(trigger!==TRIGGER_MANUAL){var eventIn=trigger===TRIGGER_HOVER?_this5.constructor.Event.MOUSEENTER:_this5.constructor.Event.FOCUSIN;var eventOut=trigger===TRIGGER_HOVER?_this5.constructor.Event.MOUSELEAVE:_this5.constructor.Event.FOCUSOUT;$__default['default'](_this5.element).on(eventIn,_this5.config.selector,function(event){return _this5._enter(event);}).on(eventOut,_this5.config.selector,function(event){return _this5._leave(event);});}});this._hideModalHandler=function(){if(_this5.element){_this5.hide();}};$__default['default'](this.element).closest('.modal').on('hide.bs.modal',this._hideModalHandler);if(this.config.selector){this.config=_extends({},this.config,{trigger:'manual',selector:''});}else{this._fixTitle();}};_proto._fixTitle=function _fixTitle(){var titleType=typeof this.element.getAttribute('data-original-title');if(this.element.getAttribute('title')||titleType!=='string'){this.element.setAttribute('data-original-title',this.element.getAttribute('title')||'');this.element.setAttribute('title','');}};_proto._enter=function _enter(event,context){var dataKey=this.constructor.DATA_KEY;context=context||$__default['default'](event.currentTarget).data(dataKey);if(!context){context=new this.constructor(event.currentTarget,this._getDelegateConfig());$__default['default'](event.currentTarget).data(dataKey,context);}
if(event){context._activeTrigger[event.type==='focusin'?TRIGGER_FOCUS:TRIGGER_HOVER]=true;}
if($__default['default'](context.getTipElement()).hasClass(CLASS_NAME_SHOW$4)||context._hoverState===HOVER_STATE_SHOW){context._hoverState=HOVER_STATE_SHOW;return;}
clearTimeout(context._timeout);context._hoverState=HOVER_STATE_SHOW;if(!context.config.delay||!context.config.delay.show){context.show();return;}
context._timeout=setTimeout(function(){if(context._hoverState===HOVER_STATE_SHOW){context.show();}},context.config.delay.show);};_proto._leave=function _leave(event,context){var dataKey=this.constructor.DATA_KEY;context=context||$__default['default'](event.currentTarget).data(dataKey);if(!context){context=new this.constructor(event.currentTarget,this._getDelegateConfig());$__default['default'](event.currentTarget).data(dataKey,context);}
if(event){context._activeTrigger[event.type==='focusout'?TRIGGER_FOCUS:TRIGGER_HOVER]=false;}
if(context._isWithActiveTrigger()){return;}
clearTimeout(context._timeout);context._hoverState=HOVER_STATE_OUT;if(!context.config.delay||!context.config.delay.hide){context.hide();return;}
context._timeout=setTimeout(function(){if(context._hoverState===HOVER_STATE_OUT){context.hide();}},context.config.delay.hide);};_proto._isWithActiveTrigger=function _isWithActiveTrigger(){for(var trigger in this._activeTrigger){if(this._activeTrigger[trigger]){return true;}}
return false;};_proto._getConfig=function _getConfig(config){var dataAttributes=$__default['default'](this.element).data();Object.keys(dataAttributes).forEach(function(dataAttr){if(DISALLOWED_ATTRIBUTES.indexOf(dataAttr)!==-1){delete dataAttributes[dataAttr];}});config=_extends({},this.constructor.Default,dataAttributes,typeof config==='object'&&config?config:{});if(typeof config.delay==='number'){config.delay={show:config.delay,hide:config.delay};}
if(typeof config.title==='number'){config.title=config.title.toString();}
if(typeof config.content==='number'){config.content=config.content.toString();}
Util.typeCheckConfig(NAME$6,config,this.constructor.DefaultType);if(config.sanitize){config.template=sanitizeHtml(config.template,config.whiteList,config.sanitizeFn);}
return config;};_proto._getDelegateConfig=function _getDelegateConfig(){var config={};if(this.config){for(var key in this.config){if(this.constructor.Default[key]!==this.config[key]){config[key]=this.config[key];}}}
return config;};_proto._cleanTipClass=function _cleanTipClass(){var $tip=$__default['default'](this.getTipElement());var tabClass=$tip.attr('class').match(BSCLS_PREFIX_REGEX);if(tabClass!==null&&tabClass.length){$tip.removeClass(tabClass.join(''));}};_proto._handlePopperPlacementChange=function _handlePopperPlacementChange(popperData){this.tip=popperData.instance.popper;this._cleanTipClass();this.addAttachmentClass(this._getAttachment(popperData.placement));};_proto._fixTransition=function _fixTransition(){var tip=this.getTipElement();var initConfigAnimation=this.config.animation;if(tip.getAttribute('x-placement')!==null){return;}
$__default['default'](tip).removeClass(CLASS_NAME_FADE$2);this.config.animation=false;this.hide();this.show();this.config.animation=initConfigAnimation;};Tooltip._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var $element=$__default['default'](this);var data=$element.data(DATA_KEY$6);var _config=typeof config==='object'&&config;if(!data&&/dispose|hide/.test(config)){return;}
if(!data){data=new Tooltip(this,_config);$element.data(DATA_KEY$6,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config]();}});};_createClass(Tooltip,null,[{key:"VERSION",get:function get(){return VERSION$6;}},{key:"Default",get:function get(){return Default$4;}},{key:"NAME",get:function get(){return NAME$6;}},{key:"DATA_KEY",get:function get(){return DATA_KEY$6;}},{key:"Event",get:function get(){return Event;}},{key:"EVENT_KEY",get:function get(){return EVENT_KEY$6;}},{key:"DefaultType",get:function get(){return DefaultType$4;}}]);return Tooltip;}();$__default['default'].fn[NAME$6]=Tooltip._jQueryInterface;$__default['default'].fn[NAME$6].Constructor=Tooltip;$__default['default'].fn[NAME$6].noConflict=function(){$__default['default'].fn[NAME$6]=JQUERY_NO_CONFLICT$6;return Tooltip._jQueryInterface;};var NAME$7='popover';var VERSION$7='4.6.0';var DATA_KEY$7='bs.popover';var EVENT_KEY$7="."+DATA_KEY$7;var JQUERY_NO_CONFLICT$7=$__default['default'].fn[NAME$7];var CLASS_PREFIX$1='bs-popover';var BSCLS_PREFIX_REGEX$1=new RegExp("(^|\\s)"+CLASS_PREFIX$1+"\\S+",'g');var Default$5=_extends({},Tooltip.Default,{placement:'right',trigger:'click',content:'',template:'<div class="popover" role="tooltip">'+'<div class="arrow"></div>'+'<h3 class="popover-header"></h3>'+'<div class="popover-body"></div></div>'});var DefaultType$5=_extends({},Tooltip.DefaultType,{content:'(string|element|function)'});var CLASS_NAME_FADE$3='fade';var CLASS_NAME_SHOW$5='show';var SELECTOR_TITLE='.popover-header';var SELECTOR_CONTENT='.popover-body';var Event$1={HIDE:"hide"+EVENT_KEY$7,HIDDEN:"hidden"+EVENT_KEY$7,SHOW:"show"+EVENT_KEY$7,SHOWN:"shown"+EVENT_KEY$7,INSERTED:"inserted"+EVENT_KEY$7,CLICK:"click"+EVENT_KEY$7,FOCUSIN:"focusin"+EVENT_KEY$7,FOCUSOUT:"focusout"+EVENT_KEY$7,MOUSEENTER:"mouseenter"+EVENT_KEY$7,MOUSELEAVE:"mouseleave"+EVENT_KEY$7};var Popover=function(_Tooltip){_inheritsLoose(Popover,_Tooltip);function Popover(){return _Tooltip.apply(this,arguments)||this;}
var _proto=Popover.prototype;_proto.isWithContent=function isWithContent(){return this.getTitle()||this._getContent();};_proto.addAttachmentClass=function addAttachmentClass(attachment){$__default['default'](this.getTipElement()).addClass(CLASS_PREFIX$1+"-"+attachment);};_proto.getTipElement=function getTipElement(){this.tip=this.tip||$__default['default'](this.config.template)[0];return this.tip;};_proto.setContent=function setContent(){var $tip=$__default['default'](this.getTipElement());this.setElementContent($tip.find(SELECTOR_TITLE),this.getTitle());var content=this._getContent();if(typeof content==='function'){content=content.call(this.element);}
this.setElementContent($tip.find(SELECTOR_CONTENT),content);$tip.removeClass(CLASS_NAME_FADE$3+" "+CLASS_NAME_SHOW$5);};_proto._getContent=function _getContent(){return this.element.getAttribute('data-content')||this.config.content;};_proto._cleanTipClass=function _cleanTipClass(){var $tip=$__default['default'](this.getTipElement());var tabClass=$tip.attr('class').match(BSCLS_PREFIX_REGEX$1);if(tabClass!==null&&tabClass.length>0){$tip.removeClass(tabClass.join(''));}};Popover._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var data=$__default['default'](this).data(DATA_KEY$7);var _config=typeof config==='object'?config:null;if(!data&&/dispose|hide/.test(config)){return;}
if(!data){data=new Popover(this,_config);$__default['default'](this).data(DATA_KEY$7,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config]();}});};_createClass(Popover,null,[{key:"VERSION",get:function get(){return VERSION$7;}},{key:"Default",get:function get(){return Default$5;}},{key:"NAME",get:function get(){return NAME$7;}},{key:"DATA_KEY",get:function get(){return DATA_KEY$7;}},{key:"Event",get:function get(){return Event$1;}},{key:"EVENT_KEY",get:function get(){return EVENT_KEY$7;}},{key:"DefaultType",get:function get(){return DefaultType$5;}}]);return Popover;}(Tooltip);$__default['default'].fn[NAME$7]=Popover._jQueryInterface;$__default['default'].fn[NAME$7].Constructor=Popover;$__default['default'].fn[NAME$7].noConflict=function(){$__default['default'].fn[NAME$7]=JQUERY_NO_CONFLICT$7;return Popover._jQueryInterface;};var NAME$8='scrollspy';var VERSION$8='4.6.0';var DATA_KEY$8='bs.scrollspy';var EVENT_KEY$8="."+DATA_KEY$8;var DATA_API_KEY$6='.data-api';var JQUERY_NO_CONFLICT$8=$__default['default'].fn[NAME$8];var Default$6={offset:10,method:'auto',target:''};var DefaultType$6={offset:'number',method:'string',target:'(string|element)'};var EVENT_ACTIVATE="activate"+EVENT_KEY$8;var EVENT_SCROLL="scroll"+EVENT_KEY$8;var EVENT_LOAD_DATA_API$2="load"+EVENT_KEY$8+DATA_API_KEY$6;var CLASS_NAME_DROPDOWN_ITEM='dropdown-item';var CLASS_NAME_ACTIVE$2='active';var SELECTOR_DATA_SPY='[data-spy="scroll"]';var SELECTOR_NAV_LIST_GROUP='.nav, .list-group';var SELECTOR_NAV_LINKS='.nav-link';var SELECTOR_NAV_ITEMS='.nav-item';var SELECTOR_LIST_ITEMS='.list-group-item';var SELECTOR_DROPDOWN='.dropdown';var SELECTOR_DROPDOWN_ITEMS='.dropdown-item';var SELECTOR_DROPDOWN_TOGGLE='.dropdown-toggle';var METHOD_OFFSET='offset';var METHOD_POSITION='position';var ScrollSpy=function(){function ScrollSpy(element,config){var _this=this;this._element=element;this._scrollElement=element.tagName==='BODY'?window:element;this._config=this._getConfig(config);this._selector=this._config.target+" "+SELECTOR_NAV_LINKS+","+(this._config.target+" "+SELECTOR_LIST_ITEMS+",")+(this._config.target+" "+SELECTOR_DROPDOWN_ITEMS);this._offsets=[];this._targets=[];this._activeTarget=null;this._scrollHeight=0;$__default['default'](this._scrollElement).on(EVENT_SCROLL,function(event){return _this._process(event);});this.refresh();this._process();}
var _proto=ScrollSpy.prototype;_proto.refresh=function refresh(){var _this2=this;var autoMethod=this._scrollElement===this._scrollElement.window?METHOD_OFFSET:METHOD_POSITION;var offsetMethod=this._config.method==='auto'?autoMethod:this._config.method;var offsetBase=offsetMethod===METHOD_POSITION?this._getScrollTop():0;this._offsets=[];this._targets=[];this._scrollHeight=this._getScrollHeight();var targets=[].slice.call(document.querySelectorAll(this._selector));targets.map(function(element){var target;var targetSelector=Util.getSelectorFromElement(element);if(targetSelector){target=document.querySelector(targetSelector);}
if(target){var targetBCR=target.getBoundingClientRect();if(targetBCR.width||targetBCR.height){return[$__default['default'](target)[offsetMethod]().top+offsetBase,targetSelector];}}
return null;}).filter(function(item){return item;}).sort(function(a,b){return a[0]-b[0];}).forEach(function(item){_this2._offsets.push(item[0]);_this2._targets.push(item[1]);});};_proto.dispose=function dispose(){$__default['default'].removeData(this._element,DATA_KEY$8);$__default['default'](this._scrollElement).off(EVENT_KEY$8);this._element=null;this._scrollElement=null;this._config=null;this._selector=null;this._offsets=null;this._targets=null;this._activeTarget=null;this._scrollHeight=null;};_proto._getConfig=function _getConfig(config){config=_extends({},Default$6,typeof config==='object'&&config?config:{});if(typeof config.target!=='string'&&Util.isElement(config.target)){var id=$__default['default'](config.target).attr('id');if(!id){id=Util.getUID(NAME$8);$__default['default'](config.target).attr('id',id);}
config.target="#"+id;}
Util.typeCheckConfig(NAME$8,config,DefaultType$6);return config;};_proto._getScrollTop=function _getScrollTop(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop;};_proto._getScrollHeight=function _getScrollHeight(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight);};_proto._getOffsetHeight=function _getOffsetHeight(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height;};_proto._process=function _process(){var scrollTop=this._getScrollTop()+this._config.offset;var scrollHeight=this._getScrollHeight();var maxScroll=this._config.offset+scrollHeight-this._getOffsetHeight();if(this._scrollHeight!==scrollHeight){this.refresh();}
if(scrollTop>=maxScroll){var target=this._targets[this._targets.length-1];if(this._activeTarget!==target){this._activate(target);}
return;}
if(this._activeTarget&&scrollTop<this._offsets[0]&&this._offsets[0]>0){this._activeTarget=null;this._clear();return;}
for(var i=this._offsets.length;i--;){var isActiveTarget=this._activeTarget!==this._targets[i]&&scrollTop>=this._offsets[i]&&(typeof this._offsets[i+1]==='undefined'||scrollTop<this._offsets[i+1]);if(isActiveTarget){this._activate(this._targets[i]);}}};_proto._activate=function _activate(target){this._activeTarget=target;this._clear();var queries=this._selector.split(',').map(function(selector){return selector+"[data-target=\""+target+"\"],"+selector+"[href=\""+target+"\"]";});var $link=$__default['default']([].slice.call(document.querySelectorAll(queries.join(','))));if($link.hasClass(CLASS_NAME_DROPDOWN_ITEM)){$link.closest(SELECTOR_DROPDOWN).find(SELECTOR_DROPDOWN_TOGGLE).addClass(CLASS_NAME_ACTIVE$2);$link.addClass(CLASS_NAME_ACTIVE$2);}else{$link.addClass(CLASS_NAME_ACTIVE$2);$link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_LINKS+", "+SELECTOR_LIST_ITEMS).addClass(CLASS_NAME_ACTIVE$2);$link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_ITEMS).children(SELECTOR_NAV_LINKS).addClass(CLASS_NAME_ACTIVE$2);}
$__default['default'](this._scrollElement).trigger(EVENT_ACTIVATE,{relatedTarget:target});};_proto._clear=function _clear(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(node){return node.classList.contains(CLASS_NAME_ACTIVE$2);}).forEach(function(node){return node.classList.remove(CLASS_NAME_ACTIVE$2);});};ScrollSpy._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var data=$__default['default'](this).data(DATA_KEY$8);var _config=typeof config==='object'&&config;if(!data){data=new ScrollSpy(this,_config);$__default['default'](this).data(DATA_KEY$8,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config]();}});};_createClass(ScrollSpy,null,[{key:"VERSION",get:function get(){return VERSION$8;}},{key:"Default",get:function get(){return Default$6;}}]);return ScrollSpy;}();$__default['default'](window).on(EVENT_LOAD_DATA_API$2,function(){var scrollSpys=[].slice.call(document.querySelectorAll(SELECTOR_DATA_SPY));var scrollSpysLength=scrollSpys.length;for(var i=scrollSpysLength;i--;){var $spy=$__default['default'](scrollSpys[i]);ScrollSpy._jQueryInterface.call($spy,$spy.data());}});$__default['default'].fn[NAME$8]=ScrollSpy._jQueryInterface;$__default['default'].fn[NAME$8].Constructor=ScrollSpy;$__default['default'].fn[NAME$8].noConflict=function(){$__default['default'].fn[NAME$8]=JQUERY_NO_CONFLICT$8;return ScrollSpy._jQueryInterface;};var NAME$9='tab';var VERSION$9='4.6.0';var DATA_KEY$9='bs.tab';var EVENT_KEY$9="."+DATA_KEY$9;var DATA_API_KEY$7='.data-api';var JQUERY_NO_CONFLICT$9=$__default['default'].fn[NAME$9];var EVENT_HIDE$3="hide"+EVENT_KEY$9;var EVENT_HIDDEN$3="hidden"+EVENT_KEY$9;var EVENT_SHOW$3="show"+EVENT_KEY$9;var EVENT_SHOWN$3="shown"+EVENT_KEY$9;var EVENT_CLICK_DATA_API$6="click"+EVENT_KEY$9+DATA_API_KEY$7;var CLASS_NAME_DROPDOWN_MENU='dropdown-menu';var CLASS_NAME_ACTIVE$3='active';var CLASS_NAME_DISABLED$1='disabled';var CLASS_NAME_FADE$4='fade';var CLASS_NAME_SHOW$6='show';var SELECTOR_DROPDOWN$1='.dropdown';var SELECTOR_NAV_LIST_GROUP$1='.nav, .list-group';var SELECTOR_ACTIVE$2='.active';var SELECTOR_ACTIVE_UL='> li > .active';var SELECTOR_DATA_TOGGLE$4='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]';var SELECTOR_DROPDOWN_TOGGLE$1='.dropdown-toggle';var SELECTOR_DROPDOWN_ACTIVE_CHILD='> .dropdown-menu .active';var Tab=function(){function Tab(element){this._element=element;}
var _proto=Tab.prototype;_proto.show=function show(){var _this=this;if(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&$__default['default'](this._element).hasClass(CLASS_NAME_ACTIVE$3)||$__default['default'](this._element).hasClass(CLASS_NAME_DISABLED$1)){return;}
var target;var previous;var listElement=$__default['default'](this._element).closest(SELECTOR_NAV_LIST_GROUP$1)[0];var selector=Util.getSelectorFromElement(this._element);if(listElement){var itemSelector=listElement.nodeName==='UL'||listElement.nodeName==='OL'?SELECTOR_ACTIVE_UL:SELECTOR_ACTIVE$2;previous=$__default['default'].makeArray($__default['default'](listElement).find(itemSelector));previous=previous[previous.length-1];}
var hideEvent=$__default['default'].Event(EVENT_HIDE$3,{relatedTarget:this._element});var showEvent=$__default['default'].Event(EVENT_SHOW$3,{relatedTarget:previous});if(previous){$__default['default'](previous).trigger(hideEvent);}
$__default['default'](this._element).trigger(showEvent);if(showEvent.isDefaultPrevented()||hideEvent.isDefaultPrevented()){return;}
if(selector){target=document.querySelector(selector);}
this._activate(this._element,listElement);var complete=function complete(){var hiddenEvent=$__default['default'].Event(EVENT_HIDDEN$3,{relatedTarget:_this._element});var shownEvent=$__default['default'].Event(EVENT_SHOWN$3,{relatedTarget:previous});$__default['default'](previous).trigger(hiddenEvent);$__default['default'](_this._element).trigger(shownEvent);};if(target){this._activate(target,target.parentNode,complete);}else{complete();}};_proto.dispose=function dispose(){$__default['default'].removeData(this._element,DATA_KEY$9);this._element=null;};_proto._activate=function _activate(element,container,callback){var _this2=this;var activeElements=container&&(container.nodeName==='UL'||container.nodeName==='OL')?$__default['default'](container).find(SELECTOR_ACTIVE_UL):$__default['default'](container).children(SELECTOR_ACTIVE$2);var active=activeElements[0];var isTransitioning=callback&&active&&$__default['default'](active).hasClass(CLASS_NAME_FADE$4);var complete=function complete(){return _this2._transitionComplete(element,active,callback);};if(active&&isTransitioning){var transitionDuration=Util.getTransitionDurationFromElement(active);$__default['default'](active).removeClass(CLASS_NAME_SHOW$6).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);}else{complete();}};_proto._transitionComplete=function _transitionComplete(element,active,callback){if(active){$__default['default'](active).removeClass(CLASS_NAME_ACTIVE$3);var dropdownChild=$__default['default'](active.parentNode).find(SELECTOR_DROPDOWN_ACTIVE_CHILD)[0];if(dropdownChild){$__default['default'](dropdownChild).removeClass(CLASS_NAME_ACTIVE$3);}
if(active.getAttribute('role')==='tab'){active.setAttribute('aria-selected',false);}}
$__default['default'](element).addClass(CLASS_NAME_ACTIVE$3);if(element.getAttribute('role')==='tab'){element.setAttribute('aria-selected',true);}
Util.reflow(element);if(element.classList.contains(CLASS_NAME_FADE$4)){element.classList.add(CLASS_NAME_SHOW$6);}
if(element.parentNode&&$__default['default'](element.parentNode).hasClass(CLASS_NAME_DROPDOWN_MENU)){var dropdownElement=$__default['default'](element).closest(SELECTOR_DROPDOWN$1)[0];if(dropdownElement){var dropdownToggleList=[].slice.call(dropdownElement.querySelectorAll(SELECTOR_DROPDOWN_TOGGLE$1));$__default['default'](dropdownToggleList).addClass(CLASS_NAME_ACTIVE$3);}
element.setAttribute('aria-expanded',true);}
if(callback){callback();}};Tab._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var $this=$__default['default'](this);var data=$this.data(DATA_KEY$9);if(!data){data=new Tab(this);$this.data(DATA_KEY$9,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config]();}});};_createClass(Tab,null,[{key:"VERSION",get:function get(){return VERSION$9;}}]);return Tab;}();$__default['default'](document).on(EVENT_CLICK_DATA_API$6,SELECTOR_DATA_TOGGLE$4,function(event){event.preventDefault();Tab._jQueryInterface.call($__default['default'](this),'show');});$__default['default'].fn[NAME$9]=Tab._jQueryInterface;$__default['default'].fn[NAME$9].Constructor=Tab;$__default['default'].fn[NAME$9].noConflict=function(){$__default['default'].fn[NAME$9]=JQUERY_NO_CONFLICT$9;return Tab._jQueryInterface;};var NAME$a='toast';var VERSION$a='4.6.0';var DATA_KEY$a='bs.toast';var EVENT_KEY$a="."+DATA_KEY$a;var JQUERY_NO_CONFLICT$a=$__default['default'].fn[NAME$a];var EVENT_CLICK_DISMISS$1="click.dismiss"+EVENT_KEY$a;var EVENT_HIDE$4="hide"+EVENT_KEY$a;var EVENT_HIDDEN$4="hidden"+EVENT_KEY$a;var EVENT_SHOW$4="show"+EVENT_KEY$a;var EVENT_SHOWN$4="shown"+EVENT_KEY$a;var CLASS_NAME_FADE$5='fade';var CLASS_NAME_HIDE='hide';var CLASS_NAME_SHOW$7='show';var CLASS_NAME_SHOWING='showing';var DefaultType$7={animation:'boolean',autohide:'boolean',delay:'number'};var Default$7={animation:true,autohide:true,delay:500};var SELECTOR_DATA_DISMISS$1='[data-dismiss="toast"]';var Toast=function(){function Toast(element,config){this._element=element;this._config=this._getConfig(config);this._timeout=null;this._setListeners();}
var _proto=Toast.prototype;_proto.show=function show(){var _this=this;var showEvent=$__default['default'].Event(EVENT_SHOW$4);$__default['default'](this._element).trigger(showEvent);if(showEvent.isDefaultPrevented()){return;}
this._clearTimeout();if(this._config.animation){this._element.classList.add(CLASS_NAME_FADE$5);}
var complete=function complete(){_this._element.classList.remove(CLASS_NAME_SHOWING);_this._element.classList.add(CLASS_NAME_SHOW$7);$__default['default'](_this._element).trigger(EVENT_SHOWN$4);if(_this._config.autohide){_this._timeout=setTimeout(function(){_this.hide();},_this._config.delay);}};this._element.classList.remove(CLASS_NAME_HIDE);Util.reflow(this._element);this._element.classList.add(CLASS_NAME_SHOWING);if(this._config.animation){var transitionDuration=Util.getTransitionDurationFromElement(this._element);$__default['default'](this._element).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);}else{complete();}};_proto.hide=function hide(){if(!this._element.classList.contains(CLASS_NAME_SHOW$7)){return;}
var hideEvent=$__default['default'].Event(EVENT_HIDE$4);$__default['default'](this._element).trigger(hideEvent);if(hideEvent.isDefaultPrevented()){return;}
this._close();};_proto.dispose=function dispose(){this._clearTimeout();if(this._element.classList.contains(CLASS_NAME_SHOW$7)){this._element.classList.remove(CLASS_NAME_SHOW$7);}
$__default['default'](this._element).off(EVENT_CLICK_DISMISS$1);$__default['default'].removeData(this._element,DATA_KEY$a);this._element=null;this._config=null;};_proto._getConfig=function _getConfig(config){config=_extends({},Default$7,$__default['default'](this._element).data(),typeof config==='object'&&config?config:{});Util.typeCheckConfig(NAME$a,config,this.constructor.DefaultType);return config;};_proto._setListeners=function _setListeners(){var _this2=this;$__default['default'](this._element).on(EVENT_CLICK_DISMISS$1,SELECTOR_DATA_DISMISS$1,function(){return _this2.hide();});};_proto._close=function _close(){var _this3=this;var complete=function complete(){_this3._element.classList.add(CLASS_NAME_HIDE);$__default['default'](_this3._element).trigger(EVENT_HIDDEN$4);};this._element.classList.remove(CLASS_NAME_SHOW$7);if(this._config.animation){var transitionDuration=Util.getTransitionDurationFromElement(this._element);$__default['default'](this._element).one(Util.TRANSITION_END,complete).emulateTransitionEnd(transitionDuration);}else{complete();}};_proto._clearTimeout=function _clearTimeout(){clearTimeout(this._timeout);this._timeout=null;};Toast._jQueryInterface=function _jQueryInterface(config){return this.each(function(){var $element=$__default['default'](this);var data=$element.data(DATA_KEY$a);var _config=typeof config==='object'&&config;if(!data){data=new Toast(this,_config);$element.data(DATA_KEY$a,data);}
if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError("No method named \""+config+"\"");}
data[config](this);}});};_createClass(Toast,null,[{key:"VERSION",get:function get(){return VERSION$a;}},{key:"DefaultType",get:function get(){return DefaultType$7;}},{key:"Default",get:function get(){return Default$7;}}]);return Toast;}();$__default['default'].fn[NAME$a]=Toast._jQueryInterface;$__default['default'].fn[NAME$a].Constructor=Toast;$__default['default'].fn[NAME$a].noConflict=function(){$__default['default'].fn[NAME$a]=JQUERY_NO_CONFLICT$a;return Toast._jQueryInterface;};exports.Alert=Alert;exports.Button=Button;exports.Carousel=Carousel;exports.Collapse=Collapse;exports.Dropdown=Dropdown;exports.Modal=Modal;exports.Popover=Popover;exports.Scrollspy=ScrollSpy;exports.Tab=Tab;exports.Toast=Toast;exports.Tooltip=Tooltip;exports.Util=Util;Object.defineProperty(exports,'__esModule',{value:true});})));;;(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):(factory((global.ULID={})));}(this,(function(exports){'use strict';function createError(message){var err=new Error(message);err.source="ulid";return err;}
var ENCODING="0123456789ABCDEFGHJKMNPQRSTVWXYZ";var ENCODING_LEN=ENCODING.length;var TIME_MAX=Math.pow(2,48)-1;var TIME_LEN=10;var RANDOM_LEN=16;function replaceCharAt(str,index,char){if(index>str.length-1){return str;}
return str.substr(0,index)+char+str.substr(index+1);}
function incrementBase32(str){var done=undefined;var index=str.length;var char=void 0;var charIndex=void 0;var maxCharIndex=ENCODING_LEN-1;while(!done&&index-->=0){char=str[index];charIndex=ENCODING.indexOf(char);if(charIndex===-1){throw createError("incorrectly encoded string");}
if(charIndex===maxCharIndex){str=replaceCharAt(str,index,ENCODING[0]);continue;}
done=replaceCharAt(str,index,ENCODING[charIndex+1]);}
if(typeof done==="string"){return done;}
throw createError("cannot increment this string");}
function randomChar(prng){var rand=Math.floor(prng()*ENCODING_LEN);if(rand===ENCODING_LEN){rand=ENCODING_LEN-1;}
return ENCODING.charAt(rand);}
function encodeTime(now,len){if(isNaN(now)){throw new Error(now+" must be a number");}
if(now>TIME_MAX){throw createError("cannot encode time greater than "+TIME_MAX);}
if(now<0){throw createError("time must be positive");}
if(Number.isInteger(now)===false){throw createError("time must be an integer");}
var mod=void 0;var str="";for(;len>0;len--){mod=now%ENCODING_LEN;str=ENCODING.charAt(mod)+str;now=(now-mod)/ ENCODING_LEN;}
return str;}
function encodeRandom(len,prng){var str="";for(;len>0;len--){str=randomChar(prng)+str;}
return str;}
function decodeTime(id){if(id.length!==TIME_LEN+RANDOM_LEN){throw createError("malformed ulid");}
var time=id.substr(0,TIME_LEN).split("").reverse().reduce(function(carry,char,index){var encodingIndex=ENCODING.indexOf(char);if(encodingIndex===-1){throw createError("invalid character found: "+char);}
return carry+=encodingIndex*Math.pow(ENCODING_LEN,index);},0);if(time>TIME_MAX){throw createError("malformed ulid, timestamp too large");}
return time;}
function detectPrng(){var allowInsecure=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var root=arguments[1];if(!root){root=typeof window!=="undefined"?window:null;}
var browserCrypto=root&&(root.crypto||root.msCrypto);if(browserCrypto){return function(){var buffer=new Uint8Array(1);browserCrypto.getRandomValues(buffer);return buffer[0]/ 0xff;};}else{try{var nodeCrypto=require("crypto");return function(){return nodeCrypto.randomBytes(1).readUInt8()/ 0xff;};}catch(e){}}
if(allowInsecure){try{console.error("secure crypto unusable, falling back to insecure Math.random()!");}catch(e){}
return function(){return Math.random();};}
throw createError("secure crypto unusable, insecure Math.random not allowed");}
function factory(currPrng){if(!currPrng){currPrng=detectPrng();}
return function ulid(seedTime){if(isNaN(seedTime)){seedTime=Date.now();}
return encodeTime(seedTime,TIME_LEN)+encodeRandom(RANDOM_LEN,currPrng);};}
function monotonicFactory(currPrng){if(!currPrng){currPrng=detectPrng();}
var lastTime=0;var lastRandom=void 0;return function ulid(seedTime){if(isNaN(seedTime)){seedTime=Date.now();}
if(seedTime<=lastTime){var incrementedRandom=lastRandom=incrementBase32(lastRandom);return encodeTime(lastTime,TIME_LEN)+incrementedRandom;}
lastTime=seedTime;var newRandom=lastRandom=encodeRandom(RANDOM_LEN,currPrng);return encodeTime(seedTime,TIME_LEN)+newRandom;};}
var ulid=factory();exports.replaceCharAt=replaceCharAt;exports.incrementBase32=incrementBase32;exports.randomChar=randomChar;exports.encodeTime=encodeTime;exports.encodeRandom=encodeRandom;exports.decodeTime=decodeTime;exports.detectPrng=detectPrng;exports.factory=factory;exports.monotonicFactory=monotonicFactory;exports.ulid=ulid;Object.defineProperty(exports,'__esModule',{value:true});})));;;(function(factory){if(typeof define==='function'&&define.amd){define(['jquery'],factory);}else if(typeof exports==='object'){factory(require('jquery'));}else{factory(jQuery);}}(function($){var pluses=/\+/g;function encode(s){return config.raw?s:encodeURIComponent(s);}
function decode(s){return config.raw?s:decodeURIComponent(s);}
function stringifyCookieValue(value){return encode(config.json?JSON.stringify(value):String(value));}
function parseCookieValue(s){if(s.indexOf('"')===0){s=s.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,'\\');}
try{s=decodeURIComponent(s.replace(pluses,' '));return config.json?JSON.parse(s):s;}catch(e){}}
function read(s,converter){var value=config.raw?s:parseCookieValue(s);return $.isFunction(converter)?converter(value):value;}
var config=$.cookie=function(key,value,options){if(value!==undefined&&!$.isFunction(value)){options=$.extend({},config.defaults,options);if(typeof options.expires==='number'){var days=options.expires,t=options.expires=new Date();t.setTime(+t+days*864e+5);}
return(document.cookie=[encode(key),'=',stringifyCookieValue(value),options.expires?'; expires='+options.expires.toUTCString():'',options.path?'; path='+options.path:'',options.domain?'; domain='+options.domain:'',options.secure?'; secure':''].join(''));}
var result=key?undefined:{};var cookies=document.cookie?document.cookie.split('; '):[];for(var i=0,l=cookies.length;i<l;i++){var parts=cookies[i].split('=');var name=decode(parts.shift());var cookie=parts.join('=');if(key&&key===name){result=read(cookie,value);break;}
if(!key&&(cookie=read(cookie))!==undefined){result[name]=cookie;}}
return result;};config.defaults={};$.removeCookie=function(key,options){if($.cookie(key)===undefined){return false;}
$.cookie(key,'',$.extend({},options,{expires:-1}));return!$.cookie(key);};}));;;$(document).ready(function(){$(window).on('click',function(event){if($('#main-menu-collapse').width()<300&&!($(event.target).closest('.navbar-toggle').length>0||$(event.target).closest('#main-menu-collapse').length>0)&&$('#main-menu-collapse:visible').length>0){$('.navbar-toggle').trigger('click');}});if($('.content').has('.tender-info-header').length>0){$("#navigation_button").hide();}else{changeLabelButtonnav($(window).scrollTop());$("#navigation_button").attr({"position":$(document).height()});$(window).scroll(function(){changeLabelButtonnav($(window).scrollTop());});$("#navigation_button").attr({"position":$(document).height()});$("#navigation_button").on("click",function(){if($("#navigation_button").find(".glyphicon").hasClass("glyphicon-chevron-up")){$("#navigation_button").attr({"position":$(window).scrollTop()});$("html, body").animate({scrollTop:0},500);}else{if($("#navigation_button").attr("position")){$("html, body").animate({scrollTop:$("#navigation_button").attr("position")},500);}}});}
$('.hoveredPopup, .hoveredPopupTooltip').each(function(){addTooltip(this);});});function addTooltip(element){if($(element).attr('data-template')||$(element).attr('data-title')){const instance=tippy(element,{content:function(reference){if(reference.getAttribute('data-template')){var id=reference.getAttribute('data-template');var template=document.getElementById(id);innerText=template.innerHTML.replace(/\&lt;/g,'<').replace(/\&gt;/,'>');return'<div>'+innerText+'</div>';}else if(reference.getAttribute('data-title')){var title=reference.getAttribute('data-title');return'<div>'+title+'</div>';}},allowHTML:true,popperOptions:{placement:'left',modifiers:[{name:'flip',options:{fallbackPlacements:['bottom','top','right'],},},],},duration:[200,100],appendTo:document.body,interactiveBorder:5,onCreate:function(instance){setTimeout(function(){var timeoutIn,timeoutOut,isNeedShow;if($(element).attr('data-add-trigger')){var idDopElem=$(element).attr('data-add-trigger').split(',');if(idDopElem.length==0){return}else{for(var i in idDopElem){var elemTool=$('#'+idDopElem[i]);elemTool.hover(function(){timeoutIn=setTimeout(function(){instance.show();},2500);},function(){clearTimeout(timeoutIn);timeoutOut=setTimeout(function(){instance.hide();},200);});if(elemTool.has(instance.reference).length==0){elemTool.on('click',function(){clearTimeout(timeoutIn);instance.hide();});}}}}
if($(element).attr('data-tippy-trigger')=='click'){$(instance.reference).hover(function(){timeoutIn=setTimeout(function(){instance.show();},2500);},function(){clearTimeout(timeoutIn);timeoutOut=setTimeout(function(){instance.hide();},200);});$(instance.popper).hover(function(){clearTimeout(timeoutOut);isNeedShow=true;timeoutOut=setTimeout(function(){isNeedShow=false;},400);},function(){if(isNeedShow){instance.show();}else{clearTimeout(timeoutIn);timeoutOut=setTimeout(function(){instance.hide();},200);}});}else{if($(element).attr('data-unclick')=='true'){$(instance.reference).on('click',function(){instance.show();});}}},100);},onShow:function(instance){if($(instance.reference).hasClass('notTooltip')){$(instance.popper).css('display','none');}else{$(instance.popper).css('display','block');}},onShown:function(instance){var elem=instance.popper;if(elem.getBoundingClientRect().y<0){$(elem).find('.tippy-content').css({'height':$(elem).outerHeight()+elem.getBoundingClientRect().y-10,'overflow-y':'scroll'});instance.setProps({interactive:true});}else if($(window).height()-elem.getBoundingClientRect().y-10<$(elem).outerHeight()){$(elem).find('.tippy-content').css({'height':$(window).height()-elem.getBoundingClientRect().y-10,'overflow-y':'scroll'});instance.setProps({interactive:true});}else if($(elem).outerHeight()<$(elem).find('.tippy-content div').height()+20){if($(window).height()-elem.getBoundingClientRect().y-10<$(elem).find('.tippy-content div').height()+20&&elem.getBoundingClientRect().y>instance.reference.getBoundingClientRect().y){$(elem).find('.tippy-content').css({'height':$(window).height()-elem.getBoundingClientRect().y-10,'overflow-y':'scroll'});instance.setProps({interactive:true});}else if(elem.getBoundingClientRect().y<instance.reference.getBoundingClientRect().y&&instance.reference.getBoundingClientRect().y-10<$(elem).find('.tippy-content div').height()+20){$(elem).find('.tippy-content').css({'height':$(elem).outerHeight()+elem.getBoundingClientRect().y-10,'overflow-y':'scroll'});instance.setProps({interactive:true});}else{$(elem).find('.tippy-content').css({'height':'auto','overflow-y':'visible'});instance.setProps({interactive:($(element).attr('data-tippy-interactive'))?$(element).attr('data-tippy-interactive'):false});}}else{$(elem).find('.tippy-content').css({'height':'auto','overflow-y':'visible'});instance.setProps({interactive:($(element).attr('data-tippy-interactive'))?$(element).attr('data-tippy-interactive'):false});}},onHide:function(instance){instance.setProps({interactive:($(element).attr('data-tippy-interactive'))?$(element).attr('data-tippy-interactive'):false});}});$(element).data('instance',instance)}}
function changeLabelButtonnav(postionWindow){var clss="glyphicon glyphicon-chevron-down";if(postionWindow>200){clss="glyphicon glyphicon-chevron-up";}
$("#navigation_button .glyphicon").attr({class:clss});}
function heightCorrector(element){var elem=$(element),row=elem.closest("div.row"),heights=[];setTimeout(function(){$.each(row,function(i,r){var list=$(r).find("."+elem.attr("class"));list.height("auto");heights=list.map(function(){return $(this).height();}).get();var maxHeight=Math.max.apply(null,heights);if(maxHeight>0){$.each(list,function(i,l){$(l).height(maxHeight);var tagEditor=$(l).find("li .tag-editor-tag"),tagDelete=tagEditor.next(".tag-editor-delete");tagDelete.height(tagEditor.height());});}});},150);}
function heightOrScroll(element){var heightLi=element.find('li:first-child').height();var maxHeight=(heightLi+6)*10+8;if(maxHeight<element.height()){element.css({'max-height':maxHeight,'overflow-y':'scroll'});}else{element.css({'max-height':'auto','overflow-y':'visible'});}};;$(document).ready(function(){$('.search-reset').on('click',function(e){$(this).parents('form').trigger('reset');e.preventDefault();});});;;$(document).ready(function(){$('.remove-news').on('click',function(){$('.search_news_log').val('');$('.search_news_guest').val('');});$('.search-icon').on('click',function(){$(this).addClass('fa-search-on-click');$(this).closest('form').submit();});});;;var ModalsWidget=function(){var _this={},time=400;function getHeader(params){var title=params.title?'<h4 class="modal-title">'+params.title+'</h4>':'';var header=params.header?params.header:'';var closeBtn=params.closebtn?'<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span></button>':'';return'<div class="modal-header">'+header+' '+title+' '+closeBtn+' </div>';}
function getFooter(buttons){var buttonsHtml='';for(var i=0;i<buttons.length;i++){var params='';Object.keys(buttons[i]).forEach(function(key){if(key!=='text'){params+=key+'="'+this[key]+'" ';}},buttons[i]);if(buttons[i].href){buttonsHtml+='<a '+params+'>'+buttons[i].text+'</a>';}else{buttonsHtml+='<button '+params+'>'+buttons[i].text+'</button>';}}
return'<div class="modal-footer">'+buttonsHtml+'</div>';}
function getBody(params){return'<div class="modal-body">'+params.body+'</div>';}
function getModal(params){var html='<div id="'+params.id+'" class="modal no-remove show modal--modern '+params.class+'"  style="opacity: 0;"  role="dialog" tabIndex="-1" aria-labelledby="" aria-modal="true"><div class="modal-dialog '+params.size+'" role="document"><div class="modal-content">';html+=getHeader(params);html+=getBody(params);html+=getFooter(params.buttons);html+='</div></div></div>';html+='<div id="'+params.id+'" class="modal-backdrop show modal-backdrop--modern"></div>';return html;}
_this.init=function(){$('body').on('click','.open-modal',function(){var modal=$(this).data('modal');_this.open(options);}).on('click','.btn[data-dismiss="modal"], .close[data-dismiss="modal"]',function(){var id=$(this).closest('.modal').attr('id');_this.close(id);}).on('click','.modal--modern',function(e){var id=$(this).attr('id');if($(e.target).hasClass('modal--modern')){_this.close(id);}})}
_this.open=function(params){var options=$.extend({'id':'','header':'','closebtn':true,'body':'','class':'','size':'modal-md','buttons':[],'beforeOpen':function(modal){},'afterOpen':function(modal){},'beforeClose':function(modal){},'afterClose':function(modal){},},params);if(options.id&&$('body').find('.modal--modern[id="'+options.id+'"]').length)return;var modal=getModal(options);var scrollBarWidth=window.innerWidth-document.body.clientWidth;$('body').addClass('modal-open').append(modal);if($('.modal.show').length<2){$('body').css({'padding-right':scrollBarWidth+'px'})}
if(typeof params.beforeOpen=="function"){params.beforeOpen($('body').find('.modal--modern[id="'+options.id+'"]'));}
var $modal=$('body').find('.modal--modern[id="'+options.id+'"], .modal-backdrop[id="'+options.id+'"]');$modal.css({'display':'block','visibility':'visible',})
if(typeof params.afterOpen=="function"){params.afterOpen($('body').find('.modal--modern[id="'+options.id+'"]'));}
$modal.data('options',options);$modal.animate({'opacity':1,},time,function(){})}
_this.close=function(id){var $modal=$('body').find('.modal--modern[id="'+id+'"], .modal-backdrop[id="'+id+'"]');var options=$('body').find('.modal--modern[id="'+id+'"]').data('options');if(typeof options.beforeClose=="function"){options.beforeClose($('body').find('.modal--modern[id="'+options.id+'"]'));}
$modal.animate({'opacity':0,},time,function(){$modal.remove()
$('body').removeClass('modal-open')
if(!$('.modal.show').length){$('body').css({'padding-right':'0'})}})
if(typeof options.afterClose=="function"){options.afterClose($('body').find('.modal--modern[id="'+options.id+'"]'));}}
_this.init();return _this;};;"use strict";var MAX_LENGTH=70;$(document).ready(function(){$("html, body").on("click",function(e){var container=$(".comments .editing, .comments > .loaded"),mceContainer=$(".mce-container"),initElem=$(".comments .comments__actions .add"),editElem=$(".comments .actions .favorites-action:first"),addElem=$(".comments .comments__new button[type=\"submit\"]");if(container.length&&($(e.target).length&&$(e.target).children().length)&&!container.has(e.target).length&&!container.is(e.target)&&!mceContainer.is(e.target)&&!mceContainer.has(e.target).length&&!addElem.is(e.target)&&!initElem.is(e.target)&&!editElem.is(e.target)&&!editElem.has(e.target).length){return container.find(".comments__cancel").click();}});$("body").on("click",".comments__text-content a",function(e){e.preventDefault();return window.open(e.target.href,"_blank");});$("body").on("click",".favorites-action, .mce-close-action",function(e){e.preventDefault();var elem=$(this),data=elem.data("params"),settings=elem.data("settings");if(settings){$("body").addClass("processed");modalBuilder(data,settings,function(modal){if(data.action=="tag-change"){$(modal).find('[type="submit"]').prop("disabled",true);tagsBuilder(data.tender,function(){heightCorrector(modal.find(".available-tags .bootstrap-tagsinput"));});}
$("body").removeClass("processed");modal.on("click",'[type="submit"]',function(e){e.preventDefault();return favoritesElemActions(data,elem,modal);});});}else{return favoritesElemActions(data,elem);}});if(typeof(tinymceInit)!=="undefined"){tinymceInit("textarea[name='comment']");}
$("body").on("click",".comments__actions a",function(e){e.preventDefault();var elem=$(this),data=elem.data("params");beforeAction(data,elem,null,function(data,elem){return afterAction(data,elem,true);});})
$("body").on("click",".updates-actions a",function(e){e.preventDefault();var elem=$(this),data=elem.data("params");beforeAction(data,elem,null,function(data,elem){return afterAction(data,elem,true);});});$(".tag-actions-list").on("click",".account-tag-row",function(e){if(e.ctrlKey){e.preventDefault();$(this).toggleClass("selected");return comboLinkBuilder();}});$("body").on("click",".account-tags-items i.fa-close",function(e){e.preventDefault();if($(e.target).closest('.tender-preview').length){var title=$(this).closest("div").attr('title'),tenderRow=Preview.getTenderPreview();tenderRow.find('.account-tag[title="'+title+'"]').find('i.fa-close').trigger('click')
return;}
var elem=$(this).closest("div"),data=elem.data("params");return favoritesElemActions(data,elem);});$("body").on("click",".add-new-tag, .cancel-tag",function(e){e.preventDefault();var parent=$(this).closest(".new-tag-block"),input=parent.find(".bootstrap-tagsinput input");parent.toggleClass("open");toggleAdd($(this));input.val("");return input.focus();});initSearchAccountTags();if(isDesktop()){$("a.list-group-item").draggable({connectToSortable:".list-group-link",containment:"parent",drag:function(event,ui){inBorder(ui,$(".searchListButton"));}});$(".tag-actions-list .list-group-link").sortable({connectWith:"a.list-group-link",axis:"y",delay:150,update:function(event,ui){return tagsSorter();}});}});function favoritesElemActions(data,elem,modal,modalClose){var modal=(typeof modal=="undefined")?null:modal,modalClose=(typeof modalClose=="undefined")?true:modalClose;if(data&&data.action){beforeAction(data,elem,modal,function(data){return $.ajax({url:"/favorites/ajax-elements",type:"POST",data:data,dataType:"json",beforeSend:function(){$("body").addClass("processed");},success:function(response){if(response){$("body").removeClass("processed");afterAction(data,elem,response,function(modalClose){return alertBuilder(response.message,modalClose);});}else{return alertBuilder(response.message,modalClose);}},errors:function(err){return alertBuilder(err);}});});}}
function beforeAction(data,elem,parent,callback){var parent=(typeof parent=="undefined")?null:parent;callback=(typeof callback=="undefined")?null:callback;switch(data.action){case"tag-add":case"tag-edit":if(!parent||parent.length<0){parent=elem.closest(".account-tags");}
if(data.action=="tag-add"){var title=parent.find(".new-tag input[type='text']"),comment="";}else{var title=parent.find("input[name='title']"),comment=parent.find("input[name='comment']"),tags=[],elems=$(".account-tags [data-params*='\"tag\":"+data.tag+"']"),count=elems.length;elems.each(function(i,elem){tags.push({"tender":$(elem).data("params").tender,"current":($(elem).data("params").current)?true:false});if(!--count){data.tags=tags;}});}
if(!title.val()||title.val().length>MAX_LENGTH){if(!title.val()){var msg="ÐÐ°Ð·Ð²Ð°Ð½Ð¸Ðµ Ð¼ÐµÑÐºÐ¸ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¿ÑÑÑÑÐ¼";}else{var msg="ÐÐ»Ð¸Ð½Ð½Ð° Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ð¼ÐµÑÐºÐ¸ Ð¿ÑÐµÐ²ÑÑÐ°ÐµÑ "+MAX_LENGTH+" ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð²";}
allerts(msg,"info",false);return title.focus();}
data.title=title.val();data.comment=(comment)?comment.val():"";data.tender=(tenderID)?tenderID:"";break;case"tag-change":var tenderID=elem.data("params").tender;getTags(tenderID,function(json){if(!isModalOpen()){var current=elem.data("params").current,tenderRow=elem.closest(".tender-row"),parentBlock=elem.closest(".account-tags"),itemsBlock=parentBlock.find(".account-tags-items");elemCreator(elem,"hide");if(current){elemCreator(tenderRow,"hide");}
var changes=anyChanges(json,itemsBlock.find(".account-tag:visible"));}else{var changes=anyChanges(json);}
if(changes){json=changes;}
data.tags=jsonEncode(json);$('body').trigger('tag-change')
return(callback)?callback(data,elem):true;});return;break;case"tag-cancel":return;break;case"comment-init":case"comment-redact":var editorID=elem.data("params").editor,commentRow=elem.closest(".comments__row");$(".comments .comments__new").removeClass("loaded");$(".comments .comments__row .comments__text").removeClass("loaded");tinymce.remove();$(".comments .comments__row").removeClass("editing");elemCreator($(".comments .comments__actions .add"),"show");if(data.action=="comment-init"){elemCreator(elem.closest(".comments").find(".comments__actions .add"),"hide");}
elemCreator(commentRow.find(".comments__history"),"hide");if(typeof nanoScrollerInit!=="undefined"){nanoScrollerInit($(".comments").find(".nano"),true);}
return tinymceInit("#"+editorID,true,false,function(){commentRow.addClass("editing");if(data.action=="comment-redact"){elemCreator(commentRow,"append",$("<div/>",{"class":"comments__text-old hidden","html":$("#"+editorID).html()}));}
if(typeof nanoScrollerInit!=="undefined"){nanoScrollerInit(elem.closest(".comments").find(".nano"),true);}
elem.closest(".comments").find(".nano").nanoScroller({scroll:commentRow});});break;case"comment-add":case"comment-edit":var editorID=elem.data("params").editor,text=tinymce.get(editorID).getContent();data.text=text;data.showHistory=elem.closest(".comments").find(".comments__switch input[type=\"checkbox\"]").is(":checked");break;case"comment-cancel":var editorID=elem.data("params").editor,Editor=tinymce.get(editorID),commentRow=elem.closest(".comments__row"),commentOld=commentRow.find(".comments__text-old"),commentText=commentRow.find(".comments__text-content"),addElem=elem.closest(".comments").find(".comments__actions .add");$("#"+editorID).closest(".comments__new").removeClass("loaded");$("#"+editorID).closest(".comments__text").removeClass("loaded");if(commentOld.html()){if(Editor){Editor.setContent(commentOld.html());}
elemCreator(commentText,"empty");elemCreator(commentText,"append",commentOld.html());}
tinymce.remove("#"+editorID);elemCreator(commentOld,"remove");commentRow.removeClass("editing");elemCreator(addElem,"show");elemCreator(commentRow.find(".comments__history"),"show");if(typeof nanoScrollerInit!=="undefined"){return nanoScrollerInit(elem.closest(".comments").find(".nano"),true);}
break;case"comment-delete":data.showHistory=elem.closest(".comments").find(".comments__switch input[type=\"checkbox\"]").is(":checked");break;case"comment-history":break;case"comment-collapse":elem.closest(".comments").toggleClass("full-height");return elem.closest(".comments").find(".comments__list").toggleClass("nano");break;case"update-show":var listUpdateElem=elem.closest('.updates');listUpdateElem.animate({'height':'toggle'},600,function(){})
if(listUpdateElem.is(".hidden"))
elem.text("ÐÐ¾ÐºÐ°Ð·Ð°ÑÑ Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ");else
elem.text("Ð¡ÐºÑÑÑÑ Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ");break;}
return(callback)?callback(data,elem):true;}
function afterAction(data,elem,response,callback){var modalClose=true,callback=(typeof callback=="undefined")?null:callback;if(response){switch(data.action){case"tag-add":if(response.message.type!="error"){toggleAdd($(".new-tag-block .add-tag"));}
if(response.list){var container=$(".tag-actions-list"),listElem=container.find(".list-group-link");elemCreator(listElem,"append",response.list);if(typeof constTooltips!=="undefined"){constTooltips.tooltipsRun();}
updateTotalNumberTag(+1);setTimeout(function(){initMCustomScrollbar(container);},90)}
if(response.column){var container=$(".account-tags-items[data-tender='"+data.tender+"']")
elemCreator(container,"append",response.column);}
if(response.tag){var tag={"id":response.tag.id,"title":response.tag.title};$('.account-tags select[name="available"]').tagsinput("remove",tag);$('.account-tags select[name="selected"]').tagsinput("add",tag);heightCorrector((".modal .available-tags .bootstrap-tagsinput"));}
if(isModalOpen()){modalClose=false;elem.closest(".new-tag").find("input[type=\"text\"]").val("");}else{if(response.message.type!="error"){$(".new-tag-block").toggleClass("open");}}
break;case"tag-change":var container=$(".tag-actions-list");elemCreator(container,"empty");if(response.list){var wrap=$("<div/>",{"class":"list-group-link ui-sortable"});$.each(response.list,function(i,el){elemCreator(wrap,"append",el);});elemCreator(container,"append",wrap);if(typeof constTooltips!=="undefined"){constTooltips.tooltipsRun();}}
var container=elem.closest(".account-tags").find(".account-tags-items");elemCreator(container,"empty");if(response.column){$.each(response.column,function(i,el){elemCreator(container,"append",el);});}
if(!isModalOpen()){elemCreator(elem,"remove");var current=elem.data("params").current,tenderRow=elem.closest(".tender-row");if(current){elemCreator(tenderRow,"remove");}}
initMCustomScrollbar(container);break;case"tag-edit":case"tag-delete":if(response.message.type!="error"){var container=$(".tag-actions-list");var action=(data.action=="tag-edit")?"replace":"remove";var listElem=container.find(".list-group-link a[data-params*='\"tag\":"+data.tag+"']");elemCreator(listElem,action,response.list);switch(action){case'remove':updateTotalNumberTag(-1);break;default:break;}
initMCustomScrollbar(container);$('body').trigger('tag-delete')}
if(typeof constTooltips!=="undefined"){constTooltips.tooltipsRun();}
var elems=$(".account-tags [data-params*='\"tag\":"+data.tag+"']");if(elems.length){var rspns=response;$.each(elems,function(i,elem){var elemParams=$(elem).data("params"),tenderID=elemParams.tender,html=(rspns&&rspns.column)?rspns.column[tenderID]:null;elemCreator($(elem),action,html);});}
if(isModalOpen()&&response.message.type=="error"){modalClose=false;}
break;case"comment-init":var editorID=elem.data("params").editor;$("#"+editorID).closest(".comments__new").addClass("loaded");elemCreator(elem,"hide");if(typeof nanoScrollerInit!=="undefined"){nanoScrollerInit(elem.closest(".comments").find(".nano"),true);}
break;case"comment-add":case"comment-edit":var editorID=elem.data("params").editor,Editor=tinymce.get(editorID);if(Editor){Editor.setContent("");Editor.remove("#"+editorID);}
if(data.action=="comment-add"){elem.closest(".comments").removeClass("empty-comments");elemCreator(elem.closest(".comments").find(".comments__header"),"show");elemCreator(elem.closest(".comments").find(".comments__actions .add"),"show");$("#"+editorID).closest(".comments__new").removeClass("loaded");elemCreator(elem.closest(".comments").find(".comments__list .nano-content"),"prepend",response.comment);}else{$("#"+editorID).closest(".comments__new").addClass("loaded");elemCreator(elem.closest(".comments").find(".comments__switch"),"show");elemCreator(elem.closest(".comments").find(".comments__row.editing"),"replace",response.comment);}
if(typeof nanoScrollerInit!=="undefined"){nanoScrollerInit($(".nano"),true);}
break;case"comment-delete":case"comment-restore":var commentRow=elem.closest(".comments__row"),commentRestore=commentRow.find(".comments__restore"),commentText=commentRow.find(".comments__text"),commentHistory=commentText.find(".comments__history"),commentTextContent=commentText.find(".comments__text-content"),commentShowHistory=elem.closest(".comments").find(".comments__history"),showHistory=commentShowHistory.find("input[type=\"checkbox\"]").is(":checked");if(data.action=="comment-delete"){elemCreator(commentRow,"hideAll");commentRow.addClass("inactive");commentRow.find(".actions button").prop("disabled",true);}else{elemCreator(commentRow,"showAll");commentRow.removeClass("inactive");commentRow.find(".actions button").prop("disabled",false);}
elemCreator(commentShowHistory,"show");if(showHistory){elemCreator(commentText,"show");if(response.history&&(response.history.length||typeof response.history.length=="undefined")){elemCreator(commentHistory,"remove");$.each(response.history,function(hash,hist){elemCreator(commentText,"append",$("<div/>").addClass("comments__history").html(hist));});elemCreator(commentTextContent,"hide");}else{elemCreator(commentHistory,"hide");elemCreator(commentTextContent,"show");}
if(data.action=="comment-delete"){elemCreator(commentRestore,"show");}else{elemCreator(commentRestore,"hide");}}
if(typeof nanoScrollerInit!=="undefined"){nanoScrollerInit(elem.closest(".comments").find(".nano"),true);}
break;case"comment-switch":return location.reload();break;case"comment-history":var checkbox=elem.find("input[type='checkbox']"),showHistory=(elem.data("params").history=="1")?true:false;if(showHistory&&response.history){$.each(response.history,function(commentHash,hstr){var commentText=$("#"+commentHash),commentTextContent=commentText.find(".comments__text-content"),commentRow=commentTextContent.closest(".comments__row.inactive"),commentRestore=commentRow.find(".comments__restore");elemCreator(commentTextContent,"insertBefore",hstr);elemCreator(commentText,"show");elemCreator(commentRestore,"show");elemCreator(commentRow,"show");elemCreator(commentTextContent,"hide");});$(".comments .editing, .comments > .loaded").find(".comments__cancel").click();}else{elemCreator(elem.closest(".comments").find(".comments__history"),"remove");elemCreator(elem.closest(".comments").find(".comments__row.inactive"),"hide");elemCreator(elem.closest(".comments").find(".comments__text-content"),"show");}
if(typeof nanoScrollerInit!=="undefined"){nanoScrollerInit($(".comments .nano"),true);}
checkbox.prop("checked",showHistory);$(elem).data("params").history=(showHistory)?0:1;break;}
var listAction="hide";if($(".tag-actions-list a").length<=0){listAction="show";}
elemCreator($(".empty-list"),listAction);switch(listAction){case"hide":$(".empty-list").closest('.list-group__techblock').removeClass('empty-tag')
break;case"show":$(".empty-list").closest('.list-group__techblock').addClass('empty-tag')
break;}}
return(callback)?callback(modalClose):true;}
function tagsBuilder(tenderID,callback){var callback=(typeof callback=="undefined")?null:callback;var selectedTagsElem=$('.account-tags select[name="selected"]'),availableTagsElem=$('.account-tags select[name="available"]');$.when($(".account-tags select").tagsinput({itemValue:"id",itemText:"title",maxChars:MAX_LENGTH}),initSearchAccountTags(tenderID,selectedTagsElem)).done(function(){$("body").on("click",".tag-cell:first .bootstrap-tagsinput span.tag",function(e){e.preventDefault();$("body").addClass("processed");var keyword=$(this).text();getTags(tenderID,function(json){var tags=jsonDecode(json);$.each(tags.available,function(id,title){if(title==keyword){return selectedTagsElem.tagsinput("add",{"id":id,"title":title});}});$.each(tags.selected,function(id,title){if(title==keyword){return selectedTagsElem.tagsinput("add",{"id":id,"title":title});}});$("body").removeClass("processed");});});selectedTagsElem.on("beforeItemAdd",function(e){if(!e.options||!e.options.preventPost){return availableTagsElem.tagsinput("remove",e.item);}}).on("itemAdded",function(e){getTags(tenderID,function(json){var disabled=(anyChanges(json))?false:true;$(".modal").find('[type="submit"]').prop("disabled",disabled);});return heightCorrector($(".modal").find(".available-tags .bootstrap-tagsinput"));}).on("beforeItemRemove",function(e){return availableTagsElem.tagsinput("add",e.item);}).on("itemRemoved",function(e){getTags(tenderID,function(json){var disabled=(anyChanges(json))?false:true;$(".modal").find('[type="submit"]').prop("disabled",disabled);});return heightCorrector($(".modal").find(".available-tags .bootstrap-tagsinput"));});getTags(tenderID,function(json){var tags=jsonDecode(json);$.each(tags.available,function(id,title){availableTagsElem.tagsinput("add",{"id":id,"title":title},{preventPost:true});});$.each(tags.selected,function(id,title){selectedTagsElem.tagsinput("add",{"id":id,"title":title},{preventPost:true});});return(callback)?callback():true;});});}
function tagsSorter(){var data={},tags=[],weight=1,elems=$(".tag-actions-list .list-group-item");elems.each(function(i,item){var tagID=($(item).data("params"))?$(item).data("params").tag:null;if(typeof tagID!="undefined"){i++;tags[weight++]=tagID;if(i==(elems.length-1)){data.tags=tags;data.action="tag-sort";return favoritesElemActions(data,null);}}});}
function getTags(tender,callback){var tender=(typeof tender=="undefined")?null:tender,callback=(typeof callback=="undefined")?null:callback;$.ajax({url:"/favorites/ajax-get-account-tags",type:"get",dataType:"json",data:(tender?{"tender":tender}:""),success:function(tagsJson){return(callback)?callback(tagsJson):false;},errors:function(err){return console.log(err);}});}
function getCommentsHistory(tender,callback){var tender=(typeof tender=="undefined")?null:tender,callback=(typeof callback=="undefined")?null:callback;$.ajax({url:"/favorites/ajax-get-comments-history",type:"get",dataType:"json",data:(tender?{"tender":tender}:""),success:function(history){return(callback)?callback(history):false;},errors:function(err){return console.log(err);}});}
function initSearchAccountTags(tender,selectedTagsElem){var newTagElem=$('.new-tag input[name="add"]'),tender=(typeof tender=="undefined")?null:tender,selectedTagsElem=(typeof selectedTagsElem=="undefined")?null:selectedTagsElem;if(!newTagElem.length)return;newTagElem.tagsinput({itemValue:"id",itemText:"title",trimValue:true,confirmKeys:[],maxChars:MAX_LENGTH,cancelConfirmKeysOnEmpty:false,typeahead:{autoSelect:false,displayKey:"title",selectOnBlur:false,afterSelect:function(tag){var inputElem=this.$element;inputElem.val("");if(selectedTagsElem){selectedTagsElem.tagsinput("add",tag);}else if(!isModalOpen()){alertBuilder({"type":"error","text":"Ð¢Ð°ÐºÐ°Ñ Ð¼ÐµÑÐºÐ° ÑÐ¶Ðµ ÑÑÑÐµÑÑÐ²ÑÐµÑ"});}
return toggleAdd(inputElem);},source:function(keywords){if(!keywords&&!keywords.length){allerts("ÐÐ°Ð·Ð²Ð°Ð½Ð¸Ðµ Ð¼ÐµÑÐºÐ¸ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¿ÑÑÑÑÐ¼","info",false);}else if(keywords.length>MAX_LENGTH){allerts("ÐÐ»Ð¸Ð½Ð½Ð° Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ð¼ÐµÑÐºÐ¸ Ð¿ÑÐµÐ²ÑÑÐ°ÐµÑ "+MAX_LENGTH+" ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð²","info",false);}else{return $.get("/favorites/ajax-search-account-tags?keywords="+keywords+((tender)?"&tender="+tender:""));}
return false;}}});newTagElem.on("beforeItemAdd",function(e){e.cancel=true;return false;}).on("ItemAdd",function(e){e.cancel=true;return false;});$(".new-tag .bootstrap-tagsinput input").on("input",function(){return toggleAdd($(this));});}
function toggleAdd(elem){if(!elem||typeof elem=="undefined"){return;}
var value=elem.val(),addBlock=elem.closest(".new-tag"),actionElem=addBlock.find(".favorites-action");if(value&&(value.length>0&&value.length<MAX_LENGTH)){actionElem.prop("disabled",false);addBlock.removeClass("no-valid");return addBlock.addClass("changed");}else if(value.length==0){return addBlock.removeClass("changed");}
elem.val(value.slice(0,MAX_LENGTH));actionElem.prop("disabled",true);return addBlock.addClass("no-valid");}
function elemCreator(container,action,response){var response=(typeof response=="undefined")?null:response;if(container&&action){switch(action){case"append":return container.append(minifierString(response));break;case"prepend":return container.prepend(minifierString(response));break;case"insertAfter":return $(minifierString(response)).insertAfter(container);break;case"insertBefore":return $(minifierString(response)).insertBefore(container);break;case"replace":return container.replaceWith(minifierString(response));break;case"show":return container.removeClass("hidden");break;case"showAll":return container.children().removeClass("hidden");break;case"hide":return container.addClass("hidden");break;case"hideAll":return container.children().addClass("hidden");break;case"empty":return container.empty();break;case"remove":return container.remove();break;}}}
function inBorder(elem,targets){$.each(targets,function(i,target){var elemPos=(elem.offset)?elem.offset.top:0,targetPos=($(target).offset())?$(target).offset().top:0,targetHeight=$(target).height(),step=550;if($(target).attr("id")=="toAppList"){targetPos=targetPos+targetHeight;if((targetPos-elemPos)>=0){var pos="top";return $(".list-group-link-sort").mCustomScrollbar("scrollTo",pos,"-="+step);}}else if($(target).attr("id")=="toDounList"){targetPos=targetPos-targetHeight;if((targetPos-elemPos)<=0){var pos="bottom";return $(".list-group-link-sort").mCustomScrollbar("scrollTo",pos,"+="+step);}}});return false;}
function comboLinkBuilder(){var selectedElems=$(".list-group-item.selected"),comboLinkElem=$(".combo-link"),comboHref="",action="hide";if(selectedElems.length>1){$.each(selectedElems,function(i,elem){var href=$(elem).attr("href");href=href.substr(href.lastIndexOf("/")+1);comboHref+=(i>0)?"+"+href:href;});action="show";}
elemCreator(comboLinkElem,action);return comboLinkElem.attr("href","/favorites/"+comboHref);}
function alertBuilder(message,modalClose){$("body").removeClass("processed");var msg=(message.text)?message.text:"",type=(message.type=="success")?"success":"danger",modalClose=(typeof modalClose=="undefined")?true:modalClose;return allerts(msg,type,modalClose);}
function anyChanges(oldData,items){var available={},selected={};oldData=jsonDecode(oldData);oldData.available=makeArrayKeys(oldData.available);oldData.selected=makeArrayKeys(oldData.selected);if(typeof items=="undefined"&&isModalOpen()){$.each($('.modal .account-tags select[name="available"]').tagsinput("items"),function(i,tag){available[tag.id]=tag.title;});$.each($('.modal .account-tags select[name="selected"]').tagsinput("items"),function(i,tag){selected[tag.id]=tag.title;});var data={"available":makeArrayKeys(available),"selected":makeArrayKeys(selected)};}
else{$(items).each(function(i,tag){var id=$(tag).data("params").tag,title=$(tag).text();selected[id]=title;});var data={"selected":makeArrayKeys(selected)};}
var dataArray=makeArray(data),oldDataArray=makeArray(oldData);dataArray=dataArray.sort();oldDataArray=oldDataArray.sort();if(jsonEncode(oldDataArray)!=jsonEncode(dataArray)){return data;}
return false;}
function minifierString(str){if(typeof str=="string"&&str.length){return str.replace(/\r?\n/g,"").replace(/\s{2,}/g," ");}
return str;}
function jsonEncode(val){return JSON.stringify(val);}
function jsonDecode(json){return $.parseJSON(json);}
function isModalOpen(){if($("body").hasClass("modal-open")){return true;}
return false;}
function makeArray(obj){return Object.entries(obj);}
function makeArrayKeys(obj){var array=Object.keys(obj).map(function(key){return obj[key];});return array;}
function updateTotalNumberTag(delta){var total=$(".list-group-item__total--tag");total.each(function(){var count=parseInt($(this).text());$(this).text(count+delta);})};;var CryptoJS=CryptoJS||function(s,p){var m={},l=m.lib={},n=function(){},r=l.Base={extend:function(b){n.prototype=this;var h=new n;b&&h.mixIn(b);h.hasOwnProperty("init")||(h.init=function(){h.$super.init.apply(this,arguments)});h.init.prototype=h;h.$super=this;return h},create:function(){var b=this.extend();b.init.apply(b,arguments);return b},init:function(){},mixIn:function(b){for(var h in b)b.hasOwnProperty(h)&&(this[h]=b[h]);b.hasOwnProperty("toString")&&(this.toString=b.toString)},clone:function(){return this.init.prototype.extend(this)}},q=l.WordArray=r.extend({init:function(b,h){b=this.words=b||[];this.sigBytes=h!=p?h:4*b.length},toString:function(b){return(b||t).stringify(this)},concat:function(b){var h=this.words,a=b.words,j=this.sigBytes;b=b.sigBytes;this.clamp();if(j%4)for(var g=0;g<b;g++)h[j+g>>>2]|=(a[g>>>2]>>>24-8*(g%4)&255)<<24-8*((j+g)%4);else if(65535<a.length)for(g=0;g<b;g+=4)h[j+g>>>2]=a[g>>>2];else h.push.apply(h,a);this.sigBytes+=b;return this},clamp:function(){var b=this.words,h=this.sigBytes;b[h>>>2]&=4294967295<<32-8*(h%4);b.length=s.ceil(h/4)},clone:function(){var b=r.clone.call(this);b.words=this.words.slice(0);return b},random:function(b){for(var h=[],a=0;a<b;a+=4)h.push(4294967296*s.random()|0);return new q.init(h,b)}}),v=m.enc={},t=v.Hex={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++){var k=a[j>>>2]>>>24-8*(j%4)&255;g.push((k>>>4).toString(16));g.push((k&15).toString(16))}return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j+=2)g[j>>>3]|=parseInt(b.substr(j,2),16)<<24-4*(j%8);return new q.init(g,a/2)}},a=v.Latin1={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++)g.push(String.fromCharCode(a[j>>>2]>>>24-8*(j%4)&255));return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j++)g[j>>>2]|=(b.charCodeAt(j)&255)<<24-8*(j%4);return new q.init(g,a)}},u=v.Utf8={stringify:function(b){try{return decodeURIComponent(escape(a.stringify(b)))}catch(g){throw Error("Malformed UTF-8 data");}},parse:function(b){return a.parse(unescape(encodeURIComponent(b)))}},g=l.BufferedBlockAlgorithm=r.extend({reset:function(){this._data=new q.init;this._nDataBytes=0},_append:function(b){"string"==typeof b&&(b=u.parse(b));this._data.concat(b);this._nDataBytes+=b.sigBytes},_process:function(b){var a=this._data,g=a.words,j=a.sigBytes,k=this.blockSize,m=j/(4*k),m=b?s.ceil(m):s.max((m|0)-this._minBufferSize,0);b=m*k;j=s.min(4*b,j);if(b){for(var l=0;l<b;l+=k)this._doProcessBlock(g,l);l=g.splice(0,b);a.sigBytes-=j}return new q.init(l,j)},clone:function(){var b=r.clone.call(this);b._data=this._data.clone();return b},_minBufferSize:0});l.Hasher=g.extend({cfg:r.extend(),init:function(b){this.cfg=this.cfg.extend(b);this.reset()},reset:function(){g.reset.call(this);this._doReset()},update:function(b){this._append(b);this._process();return this},finalize:function(b){b&&this._append(b);return this._doFinalize()},blockSize:16,_createHelper:function(b){return function(a,g){return(new b.init(g)).finalize(a)}},_createHmacHelper:function(b){return function(a,g){return(new k.HMAC.init(b,g)).finalize(a)}}});var k=m.algo={};return m}(Math);(function(s){function p(a,k,b,h,l,j,m){a=a+(k&b|~k&h)+l+m;return(a<<j|a>>>32-j)+k}function m(a,k,b,h,l,j,m){a=a+(k&h|b&~h)+l+m;return(a<<j|a>>>32-j)+k}function l(a,k,b,h,l,j,m){a=a+(k^b^h)+l+m;return(a<<j|a>>>32-j)+k}function n(a,k,b,h,l,j,m){a=a+(b^(k|~h))+l+m;return(a<<j|a>>>32-j)+k}for(var r=CryptoJS,q=r.lib,v=q.WordArray,t=q.Hasher,q=r.algo,a=[],u=0;64>u;u++)a[u]=4294967296*s.abs(s.sin(u+1))|0;q=q.MD5=t.extend({_doReset:function(){this._hash=new v.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(g,k){for(var b=0;16>b;b++){var h=k+b,w=g[h];g[h]=(w<<8|w>>>24)&16711935|(w<<24|w>>>8)&4278255360}var b=this._hash.words,h=g[k+0],w=g[k+1],j=g[k+2],q=g[k+3],r=g[k+4],s=g[k+5],t=g[k+6],u=g[k+7],v=g[k+8],x=g[k+9],y=g[k+10],z=g[k+11],A=g[k+12],B=g[k+13],C=g[k+14],D=g[k+15],c=b[0],d=b[1],e=b[2],f=b[3],c=p(c,d,e,f,h,7,a[0]),f=p(f,c,d,e,w,12,a[1]),e=p(e,f,c,d,j,17,a[2]),d=p(d,e,f,c,q,22,a[3]),c=p(c,d,e,f,r,7,a[4]),f=p(f,c,d,e,s,12,a[5]),e=p(e,f,c,d,t,17,a[6]),d=p(d,e,f,c,u,22,a[7]),c=p(c,d,e,f,v,7,a[8]),f=p(f,c,d,e,x,12,a[9]),e=p(e,f,c,d,y,17,a[10]),d=p(d,e,f,c,z,22,a[11]),c=p(c,d,e,f,A,7,a[12]),f=p(f,c,d,e,B,12,a[13]),e=p(e,f,c,d,C,17,a[14]),d=p(d,e,f,c,D,22,a[15]),c=m(c,d,e,f,w,5,a[16]),f=m(f,c,d,e,t,9,a[17]),e=m(e,f,c,d,z,14,a[18]),d=m(d,e,f,c,h,20,a[19]),c=m(c,d,e,f,s,5,a[20]),f=m(f,c,d,e,y,9,a[21]),e=m(e,f,c,d,D,14,a[22]),d=m(d,e,f,c,r,20,a[23]),c=m(c,d,e,f,x,5,a[24]),f=m(f,c,d,e,C,9,a[25]),e=m(e,f,c,d,q,14,a[26]),d=m(d,e,f,c,v,20,a[27]),c=m(c,d,e,f,B,5,a[28]),f=m(f,c,d,e,j,9,a[29]),e=m(e,f,c,d,u,14,a[30]),d=m(d,e,f,c,A,20,a[31]),c=l(c,d,e,f,s,4,a[32]),f=l(f,c,d,e,v,11,a[33]),e=l(e,f,c,d,z,16,a[34]),d=l(d,e,f,c,C,23,a[35]),c=l(c,d,e,f,w,4,a[36]),f=l(f,c,d,e,r,11,a[37]),e=l(e,f,c,d,u,16,a[38]),d=l(d,e,f,c,y,23,a[39]),c=l(c,d,e,f,B,4,a[40]),f=l(f,c,d,e,h,11,a[41]),e=l(e,f,c,d,q,16,a[42]),d=l(d,e,f,c,t,23,a[43]),c=l(c,d,e,f,x,4,a[44]),f=l(f,c,d,e,A,11,a[45]),e=l(e,f,c,d,D,16,a[46]),d=l(d,e,f,c,j,23,a[47]),c=n(c,d,e,f,h,6,a[48]),f=n(f,c,d,e,u,10,a[49]),e=n(e,f,c,d,C,15,a[50]),d=n(d,e,f,c,s,21,a[51]),c=n(c,d,e,f,A,6,a[52]),f=n(f,c,d,e,q,10,a[53]),e=n(e,f,c,d,y,15,a[54]),d=n(d,e,f,c,w,21,a[55]),c=n(c,d,e,f,v,6,a[56]),f=n(f,c,d,e,D,10,a[57]),e=n(e,f,c,d,t,15,a[58]),d=n(d,e,f,c,B,21,a[59]),c=n(c,d,e,f,r,6,a[60]),f=n(f,c,d,e,z,10,a[61]),e=n(e,f,c,d,j,15,a[62]),d=n(d,e,f,c,x,21,a[63]);b[0]=b[0]+c|0;b[1]=b[1]+d|0;b[2]=b[2]+e|0;b[3]=b[3]+f|0},_doFinalize:function(){var a=this._data,k=a.words,b=8*this._nDataBytes,h=8*a.sigBytes;k[h>>>5]|=128<<24-h%32;var l=s.floor(b/
4294967296);k[(h+64>>>9<<4)+15]=(l<<8|l>>>24)&16711935|(l<<24|l>>>8)&4278255360;k[(h+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;a.sigBytes=4*(k.length+1);this._process();a=this._hash;k=a.words;for(b=0;4>b;b++)h=k[b],k[b]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;return a},clone:function(){var a=t.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=t._createHelper(q);r.HmacMD5=t._createHmacHelper(q)})(Math);;;"use strict";var ROWS=2,ACTIVE=false;var ANIMATE=300;$(document).ready(function(){new collapsibleInit();});var collapsibleInit=function($elems,isOpenStart,toggleAllElem){var isOpenStart=isOpenStart?isOpenStart:false;var toggleAllElem=toggleAllElem?toggleAllElem:false;var $elems=$elems?$elems:$(".collapsible:not(.ready), [data-collapsible]:not(.ready)"),widget={}
widget.destroy=function(el){var item=el,label=item.find("label, .collapsible-label").first(),shutter=item.find(".collapsible__shutter"),wrap=label.next("div, .collapsible-wrap");label.off('click.collapsible');shutter.off('click.collapsible');wrap.removeAttr('style');item.removeClass('ready');item.find('.collapsible__shutter').remove();}
widget.init=function(isOpenStart,toggleAllElem){$elems.each(function(){var item=$(this),data=item.data(),label=item.find("label, .collapsible-label").first(),shutter=item.find(".collapsible__shutter"),wrap=label.next("div, .collapsible-wrap"),heightItem=wrap.height(),heightColumn;widget.destroy($(this));var settings={rows:(data.rows)?parseFloat(data.rows):(data.height?parseFloat(data.height):ROWS),active:(data.active)?strToBool(data.active):ACTIVE,animate:(data.animate)?parseInt(data.animate):ANIMATE,};var fSElem=$('body').find('.fontSize').length?$('body').find('.fontSize').eq(0):$('body').append('<div class="fontSize hidden" style="font-size: 1rem"></div>').find('.fontSize').eq(0);var fontSize=getComputedStyle(fSElem[0],'').fontSize.replace('px','');if((data.rows&&(Math.floor(wrap.textWidth()/ wrap.width()))>=settings.rows)||(data.height&&(wrap.outerHeight()-50)/ fontSize>=(settings.rows))){item.append('<div class="collapsible__shutter"></div>')
if(!isOpenStart)wrap.css("height",settings.rows+"em");else wrap.css('height','100%');if(item.closest('.customer-column').length>0&&!isOpenStart){heightColumn=item.closest('.customer-column').height();if(heightItem<heightColumn-10){wrap.css('height','100%');return;}
wrap.css("height",settings.rows+"em");}
if(item.closest('.delivery-address-column').length>0&&!item.closest('.tender-address').length&&!isOpenStart){heightColumn=item.closest('.tender-address').height();if(heightItem<heightColumn+20){wrap.css('height','100%');return;}
wrap.css("height",settings.rows+"em");}
if(!isOpenStart)item.attr("data-active",settings.active);else item.attr("data-active",'true');label.on("click.collapsible",function(event){shutterClick($(this),event)})
shutter=item.find(".collapsible__shutter");shutter.on("click.collapsible",function(event){shutterClick($(this),event)})
function shutterClick(elem,e){var _th=$(elem).closest('.collapsible');if(toggleAllElem){widget.close(_th);}
e.preventDefault();var action=(strToBool(item.attr("data-active"))===true)?false:true,curHeight=wrap.height(),autoHeight,stertHeight=wrap.css("height",settings.rows+"em").height();autoHeight=wrap.css("height",(action)?"100%":settings.rows+"em").height();wrap.height(curHeight);wrap.stop().animate({height:autoHeight},settings.animate,function(){if(autoHeight>stertHeight){wrap.css({height:'auto'})}});return item.attr("data-active",action);}
item.addClass("ready");item.data('widget',widget);}});}
widget.close=function(el){var $all=$('.humanReadableQueryPanel:not(.humanReadableQueryPanel--warning)').find('.collapsible.ready[data-active="true"]').not(el);var positionElement=el[0].getBoundingClientRect().top;$all.each(function(){var item=$(this),data=item.data(),label=item.find("label, .collapsible-label").first(),wrap=label.next("div, .collapsible-wrap"),heightItem=wrap.height(),heightColumn;var settings={rows:(data.rows)?parseFloat(data.rows):(data.height?parseFloat(data.height):ROWS),active:(data.active)?strToBool(data.active):ACTIVE,animate:(data.animate)?parseInt(data.animate):ANIMATE,};var action=false,curHeight=wrap.height(),autoHeight;autoHeight=wrap.css("height",settings.rows+"em").height();wrap.height(curHeight);wrap.stop().css({height:autoHeight});item.attr("data-active",'false');})
$('html, body').animate({'scrollTop':el.offset().top-positionElement,},0)}
widget.init(isOpenStart,toggleAllElem);return widget;}
$.fn.textWidth=function(text,font){if(!$.fn.textWidth.fakeEl){$.fn.textWidth.fakeEl=$("<span>").hide().css({"white-space":"nowrap"}).appendTo(document.body);}
$.fn.textWidth.fakeEl.text(text||this.val()||this.text()).css("font",font||this.css("font"));return $.fn.textWidth.fakeEl.width();};function strToBool(s){var regex=/^\s*(true|1|on)\s*$/i;return regex.test(s);};;$(document).ready(function(){setTabID();resetTabId();});function setTabID(){if($("#tenders-search-form").length==0){var tabName="_rt_tabid";var tabid=sessionStorage.getItem(tabName);if(tabid==null){tabid=ULID.ulid().toLowerCase();sessionStorage.setItem(tabName,tabid);document.cookie=encodeURIComponent(tabName)+"="+encodeURIComponent(tabid)+"; path=/; domain=.rostender.info;";}
$("#fullSearchForm input[name=tabid]").val(tabid);}}
function resetTabId(){if($("#tenders-search-form").length==0){saveTabIdInCookie();}
$(window).on("focus",function(){saveTabIdInCookie();});$(window).on("blur",function(){delTabIdInCookie();});}
function saveTabIdInCookie(){var tabid=sessionStorage.getItem("_rt_tabid");var tabName="_rt_tabid";document.cookie=encodeURIComponent(tabName)+"="+encodeURIComponent(tabid)+"; path=/; domain=.rostender.info;";}
function delTabIdInCookie(){var tabName="_rt_tabid";document.cookie=encodeURIComponent(tabName)+"="+"; path=/; domain=.rostender.info;";};;var CryptoJS=CryptoJS||function(u,p){var d={},l=d.lib={},s=function(){},t=l.Base={extend:function(a){s.prototype=this;var c=new s;a&&c.mixIn(a);c.hasOwnProperty("init")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},r=l.WordArray=t.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=p?c:4*a.length},toString:function(a){return(a||v).stringify(this)},concat:function(a){var c=this.words,e=a.words,j=this.sigBytes;a=a.sigBytes;this.clamp();if(j%4)for(var k=0;k<a;k++)c[j+k>>>2]|=(e[k>>>2]>>>24-8*(k%4)&255)<<24-8*((j+k)%4);else if(65535<e.length)for(k=0;k<a;k+=4)c[j+k>>>2]=e[k>>>2];else c.push.apply(c,e);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<32-8*(c%4);a.length=u.ceil(c/4)},clone:function(){var a=t.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],e=0;e<a;e+=4)c.push(4294967296*u.random()|0);return new r.init(c,a)}}),w=d.enc={},v=w.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++){var k=c[j>>>2]>>>24-8*(j%4)&255;e.push((k>>>4).toString(16));e.push((k&15).toString(16))}return e.join("")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j+=2)e[j>>>3]|=parseInt(a.substr(j,2),16)<<24-4*(j%8);return new r.init(e,c/2)}},b=w.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++)e.push(String.fromCharCode(c[j>>>2]>>>24-8*(j%4)&255));return e.join("")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j++)e[j>>>2]|=(a.charCodeAt(j)&255)<<24-8*(j%4);return new r.init(e,c)}},x=w.Utf8={stringify:function(a){try{return decodeURIComponent(escape(b.stringify(a)))}catch(c){throw Error("Malformed UTF-8 data");}},parse:function(a){return b.parse(unescape(encodeURIComponent(a)))}},q=l.BufferedBlockAlgorithm=t.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=x.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,e=c.words,j=c.sigBytes,k=this.blockSize,b=j/(4*k),b=a?u.ceil(b):u.max((b|0)-this._minBufferSize,0);a=b*k;j=u.min(4*a,j);if(a){for(var q=0;q<a;q+=k)this._doProcessBlock(e,q);q=e.splice(0,a);c.sigBytes-=j}return new r.init(q,j)},clone:function(){var a=t.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:t.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,e){return(new a.init(e)).finalize(b)}},_createHmacHelper:function(a){return function(b,e){return(new n.HMAC.init(a,e)).finalize(b)}}});var n=d.algo={};return d}(Math);(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join("")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<l;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}})();(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),f=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,m,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,E,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/
4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,l)}})();CryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},finalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return("string"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return("string"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=c[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,e,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,this,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return"string"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,b.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=d[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();;;var CryptoJSAesJson={stringify:function(cipherParams){var j={ct:cipherParams.ciphertext.toString(CryptoJS.enc.Base64)};if(cipherParams.iv)j.iv=cipherParams.iv.toString();if(cipherParams.salt)j.s=cipherParams.salt.toString();return JSON.stringify(j).replace(/\s/g,'');},parse:function(jsonStr){var j=JSON.parse(jsonStr);var cipherParams=CryptoJS.lib.CipherParams.create({ciphertext:CryptoJS.enc.Base64.parse(j.ct)});if(j.iv)cipherParams.iv=CryptoJS.enc.Hex.parse(j.iv);if(j.s)cipherParams.salt=CryptoJS.enc.Hex.parse(j.s);return cipherParams;}};;window.onload=function(){var dte_cal=new Epoch('epoch_popup','popup',document.getElementById('tdo_dte'));};$(function(){if($('.b-feedbackform').is(':visible')){$.post('/sales/feedbacks/form/contacts');}
var temp=document.getElementById('id-feedbackform-offset');if(temp){temp.value=-(new Date()).getTimezoneOffset()/60;}});function display_feedback_form(){if($('#dialog-modal-subscribe').hasClass('ui-dialog-content')){$('#dialog-modal-subscribe').dialog('open');}
else{$('#dialog-modal-subscribe').dialog({width:470,resizable:false,modal:true,buttons:[{text:'ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ',click:function(){$('#formbutsendtr input').click();},'class':'send dialog-button dialog-button-2 btn btn-default'},{text:'ÐÐ°ÐºÑÑÑÑ','class':'btn btn-default',click:function(){$('#dialog-modal-subscribe').dialog('close');}}]});}
var offset=$('#id-feedbackform-offset');if(offset){offset.val(-(new Date()).getTimezoneOffset()/ 60);}
$.post('/sales/feedbacks/form/tender');return false;}
function check_tender(closed){var te_form=document.tender_edit,err_list='',a=0;if(te_form.tdo_email.value.trim()=='')err_list+='ÐÐµ ÑÐºÐ°Ð·Ð°Ð½ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if((te_form.tdo_email.value.trim()!='')&&(check_email(te_form.tdo_email.value.trim())))err_list+='ÐÐµÐ¿ÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if(te_form.tdo_customer.value.trim()=='')err_list+='ÐÐµ ÑÐºÐ°Ð·Ð°Ð½ Ð·Ð°ÐºÐ°Ð·ÑÐ¸Ðº\n';if(te_form.tdo_descr.value.trim()=='')err_list+='ÐÐµÑ Ð¾Ð¿Ð¸ÑÐ°Ð½Ð¸Ñ ÑÐµÐ½Ð´ÐµÑÐ°!\n';if(te_form.tdo_place.value.trim()=='')err_list+='ÐÐµ ÑÐºÐ°Ð·Ð°Ð½Ð¾ Ð¼ÐµÑÑÐ¾ Ð¿Ð¾ÑÑÐ°Ð²ÐºÐ¸ ÑÐ¾Ð²Ð°ÑÐ¾Ð², Ð²ÑÐ¿Ð¾Ð»Ð½ÐµÐ½Ð¸Ñ ÑÐ°Ð±Ð¾Ñ Ð¸Ð»Ð¸ ÑÑÐ»ÑÐ³!\n';if(te_form.tdo_dte.value.trim()=='')err_list+='ÐÐµ ÑÐºÐ°Ð·Ð°Ð½Ð° Ð´Ð°ÑÐ° Ð¾ÐºÐ¾Ð½ÑÐ°Ð½Ð¸Ñ Ð¿ÑÐ¸ÑÐ¼Ð° Ð·Ð°ÑÐ²Ð¾Ðº\n';if(te_form.tdo_contacts.value.trim()=='')err_list+='ÐÐµ ÑÐºÐ°Ð·Ð°Ð½Ñ ÐºÐ¾Ð½ÑÐ°ÐºÑÐ½ÑÐµ Ð´Ð°Ð½Ð½ÑÐµ Ð´Ð»Ñ Ð¿Ð¾ÑÐµÐ½ÑÐ¸Ð°Ð»ÑÐ½ÑÑ Ð¿Ð¾ÑÑÐ°Ð²ÑÐ¸ÐºÐ¾Ð²!\n';if(err_list.length>0){alert(err_list);return false;}
if(closed==1){te_form.redir.value='1';}
te_form.submit();}
function assert(condition,message){if(!condition){throw message||"Assertion failed";}}
var _pages=new Date().toISOString();var hidv=document.createElement("input");hidv.type="hidden";hidv.name="hidv";$("form[name=contact_request]").append(hidv);function pagef(p){var _pagef=new Date().toISOString();var e=btoa(CryptoJS.AES.encrypt(_pages+"|"+_pagef,p,{format:CryptoJSAesJson}));hidv.value=e;}
function check_crq(form,form1click){try{form['fingerprint'].value=getFingerprint();}catch(e){}
var err_list='';if(form['crq_name'].value.trim()=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÑÐ²Ð¾Ñ Ð¸Ð¼Ñ!\n';if(form['crq_phone'].value.trim()=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÐºÐ¾Ð½ÑÐ°ÐºÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½!\n';if(form['crq_email'].value.trim()=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if(form['crq_organization']!=undefined&&!form1click){if(form['crq_organization'].value.trim()=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ðµ Ð¾ÑÐ³Ð°Ð½Ð¸Ð·Ð°ÑÐ¸Ð¸!\n';}
if(check_email(form['crq_email'].value))err_list+='Ð£ÐºÐ°Ð·Ð°Ð½ Ð½ÐµÐ´Ð¾Ð¿ÑÑÑÐ¸Ð¼ÑÐ¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if(err_list.length>0){alert(err_list);return false;}else{if(typeof(postActionForm)!="undefiled")postActionForm();return true;}}
function check_crq_uns(form){try{form['fingerprint'].value=getFingerprint();}catch(e){}
var crqf=document.contact_request,err_list='';var crq_cfm=crqf.crq_cfm.checked,crq_msg=crqf.crq_msg.value;if(!crq_cfm)
err_list+='ÐÑ Ð½Ðµ Ð¿Ð¾Ð´ÑÐ²ÐµÑÐ´Ð¸Ð»Ð¸ Ð¾ÑÐºÐ°Ð·!\n';if(crq_msg.length<1)
err_list+='ÐÐµ ÑÐºÐ°Ð·Ð°Ð½Ð° Ð¿ÑÐ¸ÑÐ¸Ð½Ð° Ð¾ÑÐºÐ°Ð·Ð°!\n';if(err_list.length>0){alert(err_list);return false;}else{return true;}}
function getFingerprint(){var fpResult='';try{if(!!window.localStorage){if(localStorage.getItem('fpResult')){fpResult=localStorage.getItem('fpResult');}}}catch(e){var allIMGs=document.getElementsByTagName('img');var regIMG=new RegExp("\/fp-([^\.]+)\.gif","ig")
for(iIMG=0;iIMG<allIMGs.length;iIMG++){var myArray=regIMG.exec(allIMGs[iIMG].src);if(myArray!==null){fpResult=myArray[1];}}}
return fpResult;}
function check_crq_eds(form){var err_list='';if(form['brq_name'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÑÐ²Ð¾Ñ Ð¸Ð¼Ñ!\n';if(form['brq_phone'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÐºÐ¾Ð½ÑÐ°ÐºÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½!\n';if(form['brq_email'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if(check_email(form['brq_email'].value))err_list+='Ð£ÐºÐ°Ð·Ð°Ð½ Ð½ÐµÐ´Ð¾Ð¿ÑÑÑÐ¸Ð¼ÑÐ¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if(form['brq_org'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ Ð½Ð°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ Ð¾ÑÐ³Ð°Ð½Ð¸Ð·Ð°ÑÐ¸Ð¸!\n';var regsel=0;$('.bgradio').each(function(){if($(this).prop('checked')==true)regsel++;});if(regsel==0)err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÑÐµÐ³Ð¸Ð¾Ð½ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ñ Ð­Ð¦Ð!\n';if(err_list.length>0){alert(err_list);return false;}else return true;}
function check_crq_bg(form){var err_list='';if(form['brq_name'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÑÐ²Ð¾Ñ Ð¸Ð¼Ñ!\n';if(form['brq_phone'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÐºÐ¾Ð½ÑÐ°ÐºÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½!\n';if(form['brq_email'].value=='')err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';if(check_email(form['brq_email'].value))err_list+='Ð£ÐºÐ°Ð·Ð°Ð½ Ð½ÐµÐ´Ð¾Ð¿ÑÑÑÐ¸Ð¼ÑÐ¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ!\n';var regsel=0;$('.bgradio').each(function(){if($(this).prop('checked')==true)regsel++;});if(regsel==0)err_list+='ÐÑ Ð½Ðµ ÑÐºÐ°Ð·Ð°Ð»Ð¸ ÑÐµÐ³Ð¸Ð¾Ð½ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ñ Ð±Ð°Ð½ÐºÐ¾Ð²ÑÐºÐ¾Ð¹ Ð³Ð°ÑÐ°Ð½ÑÐ¸Ð¸!\n';if(err_list.length>0){alert(err_list);return false;}else return true;}
function check_email(email){var reg=/^([A-Za-z0-9_\-\.])+\@[A-Za-z0-9]([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,10})$/;if(reg.test(email.trim())==false)return true;else return false;}
function Epoch(name,mode,targetelement,options,multiselect){var self=this;options=typeof options!=='undefined'?options:{};function calConfig(){self.versionNumber='2.0.2';self.displayYearInitial=self.curDate.getFullYear();self.displayMonthInitial=self.curDate.getMonth();self.displayYear=self.displayYearInitial;self.displayMonth=self.displayMonthInitial;self.minDate=typeof options.minDate!=='undefined'?options.minDate:new Date(2005,0,1);self.maxDate=new Date(2025,11,31);self.startDay=1;self.showWeeks=false;self.selCurMonthOnly=true;}
function setLang(){self.daylist=new Array('ÐÑ','ÐÐ½','ÐÑ','Ð¡Ñ','Ð§Ñ','ÐÑ','Ð¡Ð±','ÐÑ','ÐÐ½','ÐÑ','Ð¡Ñ','Ð§Ñ','ÐÑ','Ð¡Ð±');self.months_sh=new Array('Ð¯Ð½Ð²','Ð¤ÐµÐ²','ÐÐ°Ñ','ÐÐ¿Ñ','ÐÐ°Ð¹','ÐÑÐ½','ÐÑÐ»','ÐÐ²Ð³','Ð¡ÐµÐ½','ÐÐºÑ','ÐÐ¾Ñ','ÐÐµÐº');self.monthup_title='Ð¡Ð»ÐµÐ´ÑÑÑÐ¸Ð¹ Ð¼ÐµÑÑÑ';self.monthdn_title='ÐÑÐµÐ´ÑÐ´ÑÑÐ¸Ð¹ Ð¼ÐµÑÑÑ';self.clearbtn_caption='ÐÑÐ¸ÑÑÐ¸ÑÑ';self.clearbtn_title='ÐÑÐ¸ÑÐ°ÐµÑ Ð²ÑÐµ Ð´Ð°ÑÑ Ð²ÑÐ±ÑÐ°Ð½Ð½ÑÐµ Ð² ÐºÐ°Ð»ÐµÐ½Ð´Ð°ÑÐµ';self.maxrange_caption='ÐÐ°ÑÐ° Ð·Ð° Ð¿ÑÐµÐ´ÐµÐ»Ð°Ð¼Ð¸ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½Ð°';self.closebtn_caption='Ð¡Ð²ÐµÑÐ½ÑÑÑ';self.closebtn_title='ÐÐ°ÐºÑÐ¾Ð¹ÑÐµ ÐºÐ°Ð»ÐµÐ½Ð´Ð°ÑÑ';}
function setDays(){self.daynames=new Array();var j=0;for(var i=self.startDay;i<self.startDay+7;i++){self.daynames[j++]=self.daylist[i];}
self.monthDayCount=new Array(31,((self.curDate.getFullYear()-2000)%4?28:29),31,30,31,30,31,31,30,31,30,31);}
function createCalendar(){var tbody,tr,td;self.calendar=document.createElement('table');self.calendar.setAttribute('id',self.name+'_calendar');setClass(self.calendar,'calendar');self.calendar.style.display='none';addEventHandler(self.calendar,'selectstart',function(){return false;});addEventHandler(self.calendar,'drag',function(){return false;});tbody=document.createElement('tbody');tr=document.createElement('tr');td=document.createElement('td');td.appendChild(createMainHeading());tr.appendChild(td);tbody.appendChild(tr);tr=document.createElement('tr');td=document.createElement('td');self.calendar.celltable=document.createElement('table');setClass(self.calendar.celltable,'cells');self.calendar.celltable.appendChild(createDayHeading());self.calendar.celltable.appendChild(createCalCells());td.appendChild(self.calendar.celltable);tr.appendChild(td);tbody.appendChild(tr);tr=document.createElement('tr');td=document.createElement('td');td.appendChild(createFooter());tr.appendChild(td);tbody.appendChild(tr);self.calendar.appendChild(tbody);addEventHandler(self.calendar,'mouseover',cal_onmouseover);addEventHandler(self.calendar,'mouseout',cal_onmouseout);}
function createMainHeading(){var container=document.createElement('div');setClass(container,'mainheading');self.monthSelect=document.createElement('select');self.yearSelect=document.createElement('select');var monthDn=document.createElement('input'),monthUp=document.createElement('input');var opt,i;for(i=0;i<12;i++){opt=document.createElement('option');opt.setAttribute('value',i);if(self.displayMonth==i){opt.setAttribute('selected','selected');}
opt.appendChild(document.createTextNode(self.months_sh[i]));self.monthSelect.appendChild(opt);}
var yrMax=self.maxDate.getFullYear(),yrMin=self.minDate.getFullYear();for(i=yrMin;i<=yrMax;i++){opt=document.createElement('option');opt.setAttribute('value',i);if(self.displayYear==i){opt.setAttribute('selected','selected');}
opt.appendChild(document.createTextNode(i));self.yearSelect.appendChild(opt);}
monthUp.setAttribute('type','button');monthUp.setAttribute('value','>');monthUp.setAttribute('title',self.monthup_title);monthDn.setAttribute('type','button');monthDn.setAttribute('value','<');monthDn.setAttribute('title',self.monthdn_title);self.monthSelect.owner=self.yearSelect.owner=monthUp.owner=monthDn.owner=self;function selectonchange(){if(self.goToMonth(self.yearSelect.value,self.monthSelect.value)){self.displayMonth=self.monthSelect.value;self.displayYear=self.yearSelect.value;}
else{self.monthSelect.value=self.displayMonth;self.yearSelect.value=self.displayYear;}}
addEventHandler(monthUp,'click',function(){self.nextMonth();});addEventHandler(monthDn,'click',function(){self.prevMonth();});addEventHandler(self.monthSelect,'change',selectonchange);addEventHandler(self.yearSelect,'change',selectonchange);container.appendChild(monthDn);container.appendChild(self.monthSelect);container.appendChild(self.yearSelect);container.appendChild(monthUp);return container;}
function createFooter(){var container=document.createElement('div');var clearSelected=document.createElement('input');clearSelected.setAttribute('type','button');clearSelected.setAttribute('value',self.clearbtn_caption);clearSelected.setAttribute('title',self.clearbtn_title);clearSelected.owner=self;addEventHandler(clearSelected,'click',function(){self.resetSelections(false);});container.appendChild(clearSelected);if(self.mode=='popup'){var closeBtn=document.createElement('input');closeBtn.setAttribute('type','button');closeBtn.setAttribute('value',self.closebtn_caption);closeBtn.setAttribute('title',self.closebtn_title);addEventHandler(closeBtn,'click',function(){self.hide();});setClass(closeBtn,'closeBtn');container.appendChild(closeBtn);}
return container;}
function createDayHeading(){self.calHeading=document.createElement('thead');setClass(self.calHeading,'caldayheading');var tr=document.createElement('tr'),th;self.cols=new Array(false,false,false,false,false,false,false);if(self.showWeeks){th=document.createElement('th');setClass(th,'wkhead');tr.appendChild(th);}
for(var dow=0;dow<7;dow++){th=document.createElement('th');th.appendChild(document.createTextNode(self.daynames[dow]));if(self.selectMultiple){th.headObj=new CalHeading(self,th,(dow+self.startDay<7?dow+self.startDay:dow+self.startDay-7));}
tr.appendChild(th);}
self.calHeading.appendChild(tr);return self.calHeading;}
function createCalCells(){self.rows=new Array(false,false,false,false,false,false);self.cells=new Array();var row=-1,totalCells=(self.showWeeks?48:42);var beginDate=new Date(self.displayYear,self.displayMonth,1);var endDate=new Date(self.displayYear,self.displayMonth,self.monthDayCount[self.displayMonth]);var sdt=new Date(beginDate);sdt.setDate(sdt.getDate()+(self.startDay-beginDate.getDay())-(self.startDay-beginDate.getDay()>0?7:0));self.calCells=document.createElement('tbody');var tr,td;var cellIdx=0,cell,week,dayval;for(var i=0;i<totalCells;i++){if(self.showWeeks){if(i%8==0){row++;week=sdt.getWeek(self.startDay);tr=document.createElement('tr');td=document.createElement('td');if(self.selectMultiple){td.weekObj=new WeekHeading(self,td,week,row)}
else{setClass(td,'wkhead');}
td.appendChild(document.createTextNode(week));tr.appendChild(td);i++;}}
else if(i%7==0){row++;week=sdt.getWeek(self.startDay);tr=document.createElement('tr');}
dayval=sdt.getDate();td=document.createElement('td');td.appendChild(document.createTextNode(dayval));cell=new CalCell(self,td,sdt,row,week);self.cells[cellIdx]=cell;td.cellObj=cell;tr.appendChild(td);self.calCells.appendChild(tr);self.reDraw(cellIdx++);sdt.setDate(dayval+1);}
return self.calCells;}
function setMode(targetelement){if(self.mode=='popup'){self.calendar.style.position='absolute';}
if(targetelement){switch(self.mode){case'flat':self.tgt=targetelement;self.tgt.appendChild(self.calendar);self.visible=true;break;case'popup':self.calendar.style.position='absolute';document.body.appendChild(self.calendar);self.setTarget(targetelement,false);break;}}
else{document.body.appendChild(self.calendar);self.visible=false;}}
function deleteCells(){self.calendar.celltable.removeChild(self.calendar.celltable.childNodes[1]);}
function setClass(element,className){element.setAttribute('class',className);element.setAttribute('className',className);}
function setCellProperties(cellindex){var cell=self.cells[cellindex];var date;var idx=self.dateInArray(self.dates,cell.date);if(idx>-1){date=self.dates[idx];cell.date.selected=date.selected||false;cell.date.type=date.type;cell.date.canSelect=date.canSelect;cell.setTitle(date.title);cell.setURL(date.href);cell.setHTML(date.cellHTML);}
else{cell.date.selected=false;}
if(cell.date.getTime()<self.minDate.getTime()||cell.date.getTime()>self.maxDate.getTime()){cell.date.canSelect=false;}
cell.setClass();}
function cal_onmouseover(){self.mousein=true;}
function cal_onmouseout(){self.mousein=false;}
function updateSelectedDates(){var idx=0;self.selectedDates=new Array();for(i=0;i<self.dates.length;i++){if(self.dates[i].selected){self.selectedDates[idx++]=self.dates[i];}}}
self.dateInArray=function(arr,searchVal,startIndex){startIndex=(startIndex!=null?startIndex:0);for(var i=startIndex;i<arr.length;i++){if(searchVal.getUeDay()==arr[i].getUeDay()){return i;}}
return-1;};self.setTarget=function(targetelement,focus){if(self.mode=='popup'){function popupFocus(){self.show();}
function popupBlur(){if(!self.mousein){self.hide();}}
function popupKeyDown(){self.hide();}
if(self.tgt){removeEventHandler(self.tgt,'focus',popupFocus);removeEventHandler(self.tgt,'blur',popupBlur);removeEventHandler(self.tgt,'keydown',popupKeyDown);}
self.tgt=targetelement;var dto=self.tgt.dateObj,pdateArr=new Array;if(dto){if(self.tgt.value.length){pdateArr[0]=dto;}
self.goToMonth(dto.getFullYear(),dto.getMonth());}
self.selectDates(pdateArr,true,true,true);self.topOffset=self.tgt.offsetHeight;self.leftOffset=0;self.updatePos(self.tgt);addEventHandler(self.tgt,'focus',popupFocus);addEventHandler(self.tgt,'blur',popupBlur);addEventHandler(self.tgt,'keydown',popupKeyDown);if(focus!==false){popupFocus();}}
else{if(self.tgt){self.tgt.removeChild(self.calendar);}
self.tgt=targetelement;self.tgt.appendChild(self.calendar);self.show();}};self.nextMonth=function(){var month=self.displayMonth;var year=self.displayYear;if(self.displayMonth<11){month++;}
else if(self.yearSelect.value<self.maxDate.getFullYear()){month=0;year++;}
return self.goToMonth(year,month);};self.prevMonth=function(){var month=self.displayMonth;var year=self.displayYear;if(self.displayMonth>0){month--;}
else{month=11;year--;}
return self.goToMonth(year,month);};self.goToMonth=function(year,month){var testdatemin=new Date(year,month,31);var testdatemax=new Date(year,month,1);if(testdatemin>=self.minDate&&testdatemax<=self.maxDate){self.monthSelect.value=self.displayMonth=month;self.yearSelect.value=self.displayYear=year;createCalCells();deleteCells();self.calendar.celltable.appendChild(self.calCells);return true;}
else{alert(self.maxrange_caption);return false;}};self.updatePos=function(target){if(self.mode=='popup'){self.calendar.style.top=getTop(target)+self.topOffset+'px';self.calendar.style.left=getLeft(target)+self.leftOffset+'px';}};self.show=function(){self.updatePos(self.tgt);self.calendar.style.display='block';self.visible=true;};self.hide=function(){self.calendar.style.display='none';self.visible=false;};self.toggle=function(){self.visible?self.hide():self.show();};self.addDates=function(dates,redraw){var i;for(i=0;i<dates.length;i++){if(self.dateInArray(self.dates,dates[i])==-1){self.dates[self.dates.length]=dates[i];}}
updateSelectedDates();if(redraw!=false){self.reDraw();}};self.removeDates=function(dates,redraw){var idx;for(var i=0;i<dates.length;i++){idx=self.dateInArray(self.dates,dates[i]);if(idx!=-1){self.dates.splice(idx,1);}}
updateSelectedDates();if(redraw!=false){self.reDraw();}};self.selectDates=function(inpdates,selectVal,redraw,removeothers){var i,idx;if(removeothers==true){for(i=0;i<self.dates.length;i++){self.dates[i].selected=false;}}
for(i=0;i<inpdates.length;i++){idx=self.dateInArray(self.dates,inpdates[i]);if(selectVal==true){inpdates[i].selected=true;if(idx==-1){self.dates[self.dates.length]=inpdates[i];}
else{self.dates[idx].selected=true;}}
else{if(idx>-1){self.dates[idx].selected=inpdates[i].selected=false;if(self.dates[idx].type=='normal'){self.dates.splice(idx,1);}}}}
updateSelectedDates();if(redraw!=false){self.reDraw();}};self.sendForm=function(form,inputname){var inpname=inputname||'epochdates',f,inp;f=(typeof(form)=='string'?document.getElementById(form):form);if(!f){alert('ERROR: Invalid form input');return false;}
for(var i=0;i<self.dates.length;i++){inp=document.createElement('input');inp.setAttribute('type','hidden');inp.setAttribute('name',inpname+'['+i+']');inp.setAttribute('value',encodeURIComponent(self.dates[i].dateFormat('Y-m-d')));f.appendChild(inp);}
return true;};self.resetSelections=function(retMonth){var dateArray=new Array();var dt=self.dates;for(var i=0;i<dt.length;i++){if(dt[i].selected){dateArray[dateArray.length]=dt[i];}}
self.selectDates(dateArray,false,false);self.rows=new Array(false,false,false,false,false,false,false);self.cols=new Array(false,false,false,false,false,false,false);if(self.mode=='popup'){self.tgt.value='';self.hide();}
retMonth==true?self.goToMonth(self.displayYearInitial,self.displayMonthInitial):self.reDraw();};self.reDraw=function(index){self.state=1;var len=index?index+1:self.cells.length;for(var i=index||0;i<len;i++){setCellProperties(i);}
self.state=2;};self.getCellIndex=function(date){for(var i=0;i<self.cells.length;i++){if(self.cells[i].date.getUeDay()==date.getUeDay()){return i;}}
return-1;};self.state=0;self.name=name;self.curDate=new Date();self.mode=mode;self.selectMultiple=(multiselect==true);self.dates=new Array();self.selectedDates=new Array();self.calendar;self.calHeading;self.calCells;self.rows;self.cols;self.cells=new Array();self.monthSelect;self.yearSelect;self.mousein=false;calConfig();setLang();setDays();createCalendar();targetelement=typeof(targetelement)=='string'?document.getElementById(targetelement):targetelement;setMode(targetelement);self.state=2;self.visible?self.show():self.hide();}
function CalHeading(owner,tableCell,dayOfWeek){function DayHeadingonclick(){var sdates=owner.dates;var cells=owner.cells;var dateArray=new Array();owner.cols[dayOfWeek]=!owner.cols[dayOfWeek];for(var i=0;i<cells.length;i++){if(cells[i].dayOfWeek==dayOfWeek&&cells[i].date.canSelect&&(!owner.selCurMonthOnly||cells[i].date.getMonth()==owner.displayMonth&&cells[i].date.getFullYear()==owner.displayYear)){dateArray[dateArray.length]=cells[i].date;}}
owner.selectDates(dateArray,owner.cols[dayOfWeek],true);}
var self=this;self.dayOfWeek=dayOfWeek;addEventHandler(tableCell,'mouseup',DayHeadingonclick);}
function WeekHeading(owner,tableCell,week,tableRow){function weekHeadingonclick(){var cells=owner.cells;var sdates=owner.dates;var dateArray=new Array();owner.rows[tableRow]=!owner.rows[tableRow];for(var i=0;i<cells.length;i++){if(cells[i].tableRow==tableRow&&cells[i].date.canSelect&&(!owner.selCurMonthOnly||cells[i].date.getMonth()==owner.displayMonth&&cells[i].date.getFullYear()==owner.displayYear)){dateArray[dateArray.length]=cells[i].date;}}
owner.selectDates(dateArray,owner.rows[tableRow],true);}
var self=this;self.week=week;tableCell.setAttribute('class','wkhead');tableCell.setAttribute('className','wkhead');addEventHandler(tableCell,'mouseup',weekHeadingonclick);}
function CalCell(owner,tableCell,dateObj,row,week){var self=this;function calCellonclick(){if(self.date.canSelect){if(owner.selectMultiple==true){owner.selectDates(new Array(self.date),!self.date.selected,false);self.setClass();}
else{owner.selectDates(new Array(self.date),true,false,true);if(owner.mode=='popup'){owner.tgt.value=self.date.dateFormat();owner.tgt.dateObj=new Date(self.date);owner.hide();}
owner.reDraw();}}}
function calCellonmouseover(){if(self.date.canSelect){tableCell.setAttribute('class',self.cellClass+' hover');tableCell.setAttribute('className',self.cellClass+' hover');}}
function calCellonmouseout(){self.setClass();}
self.setClass=function(){if(self.date.canSelect!==false){if(self.date.selected){self.cellClass='cell_selected';}
else if(owner.displayMonth!=self.date.getMonth()){self.cellClass='notmnth';}
else if(self.date.type=='holiday'){self.cellClass='hlday';}
else if(self.dayOfWeek>0&&self.dayOfWeek<6){self.cellClass='wkday';}
else{self.cellClass='wkend';}}
else{self.cellClass='noselect';}
if(self.date.getUeDay()==owner.curDate.getUeDay()){self.cellClass=self.cellClass+' curdate';}
tableCell.setAttribute('class',self.cellClass);tableCell.setAttribute('className',self.cellClass);};self.setURL=function(href,type){if(href){if(type=='js'){addEventHandler(self.tableCell,'mousedown',function(){window.location.href=href;});}
else{var url=document.createElement('a');url.setAttribute('href',href);url.appendChild(document.createTextNode(self.date.getDate()));self.tableCell.replaceChild(url,self.tableCell.firstChild);}}};self.setTitle=function(titleStr){if(titleStr&&titleStr.length>0){self.title=titleStr;self.tableCell.setAttribute('title',titleStr);}};self.setHTML=function(html){if(html&&html.length>0){if(self.tableCell.childNodes[1]){self.tableCell.childNodes[1].innerHTML=html;}
else{var htmlCont=document.createElement('div');htmlCont.innerHTML=html;self.tableCell.appendChild(htmlCont);}}};self.cellClass;self.tableRow=row;self.tableCell=tableCell;self.date=new Date(dateObj);self.date.canSelect=true;self.date.type='normal';self.date.selected=false;self.date.cellHTML='';self.dayOfWeek=self.date.getDay();self.week=week;addEventHandler(tableCell,'click',calCellonclick);addEventHandler(tableCell,'mouseover',calCellonmouseover);addEventHandler(tableCell,'mouseout',calCellonmouseout);self.setClass();}
Date.prototype.getDayOfYear=function(){return parseInt((this.getTime()-new Date(this.getFullYear(),0,1).getTime())/86400000+1);};Date.prototype.getWeek=function(dowOffset){dowOffset=typeof(dowOffset)=='int'?dowOffset:0;var newYear=new Date(this.getFullYear(),0,1);var day=newYear.getDay()-dowOffset;day=(day>=0?day:day+7);var weeknum,daynum=Math.floor((this.getTime()-newYear.getTime()-(this.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000)+1;if(day<4){weeknum=Math.floor((daynum+day-1)/7)+1;if(weeknum>52){nYear=new Date(this.getFullYear()+1,0,1);nday=nYear.getDay()-dowOffset;nday=nday>=0?nday:nday+7;weeknum=nday<4?1:53;}}
else{weeknum=Math.floor((daynum+day-1)/7);}
return weeknum;};Date.prototype.getUeDay=function(){return parseInt(Math.floor((this.getTime()-this.getTimezoneOffset()*60000)/86400000));};Date.prototype.dateFormat=function(format){if(!format){format='d.m.Y';}
LZ=function(x){return(x<0||x>9?'':'0')+x};var MONTH_NAMES=new Array('Ð¯Ð½Ð²Ð°ÑÑ','Ð¤ÐµÐ²ÑÐ°Ð»Ñ','ÐÐ°ÑÑ','ÐÐ¿ÑÐµÐ»Ñ','ÐÐ°Ð¹','ÐÑÐ½Ñ','ÐÑÐ»Ñ','ÐÐ²Ð³ÑÑÑ','Ð¡ÐµÐ½ÑÑÐ±ÑÑ','ÐÐºÑÑÐ±ÑÑ','ÐÐ¾ÑÐ±ÑÑ','ÐÐµÐºÐ°Ð±ÑÑ','Ð¯Ð½Ð²','Ð¤ÐµÐ²','ÐÐ°Ñ','ÐÐ¿Ñ','ÐÐ°Ð¹','ÐÑÐ½','ÐÑÐ»','ÐÐ²Ð³','Ð¡ÐµÐ½','ÐÐºÑ','ÐÐ¾Ñ','ÐÐµÐº');var DAY_NAMES=new Array('ÐÐ¾ÑÐºÑÐµÑÐµÐ½ÑÐµ','ÐÐ¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº','ÐÑÐ¾ÑÐ½Ð¸Ðº','Ð¡ÑÐµÐ´Ð°','Ð§ÐµÑÐ²ÐµÑÐ³','ÐÑÑÐ½Ð¸ÑÐ°','Ð¡ÑÐ±Ð±Ð¾ÑÐ°','ÐÐ¾Ñ','ÐÐ¾Ð½','ÐÑÐ¾','Ð¡ÑÐµ','Ð§ÐµÑ','ÐÑÑ','Ð¡ÑÐ±');var result="";var i_format=0;var c="";var token="";var y=this.getFullYear().toString();var M=this.getMonth()+1;var d=this.getDate();var E=this.getDay();var H=this.getHours();var m=this.getMinutes();var s=this.getSeconds();value={Y:y.toString(),y:y.substring(2),n:M,m:LZ(M),F:MONTH_NAMES[M-1],M:MONTH_NAMES[M+11],j:d,d:LZ(d),D:DAY_NAMES[E+7],l:DAY_NAMES[E],G:H,H:LZ(H)};if(H==0){value['g']=12;}
else if(H>12){value['g']=H-12;}
else{value['g']=H;}
value['h']=LZ(value['g']);if(H>11){value['a']='pm';value['A']='PM';}
else{value['a']='am';value['A']='AM';}
value['i']=LZ(m);value['s']=LZ(s);while(i_format<format.length){c=format.charAt(i_format);token="";while((format.charAt(i_format)==c)&&(i_format<format.length)){token+=format.charAt(i_format++);}
if(value[token]!=null){result=result+value[token];}
else{result=result+token;}}
return result;};function addEventHandler(element,type,func){if(element.addEventListener){element.addEventListener(type,func,false);}
else if(element.attachEvent){element.attachEvent('on'+type,func);}}
function removeEventHandler(element,type,func){if(element.removeEventListener){element.removeEventListener(type,func,false);}
else if(element.attachEvent){element.detachEvent('on'+type,func);}}
function getTop(element){var oNode=element;var iTop=0;while(oNode.tagName!='HTML'){iTop+=oNode.offsetTop||0;if(oNode.offsetParent){oNode=oNode.offsetParent;}
else{break;}}
return iTop;}
function getLeft(element){var oNode=element;var iLeft=0;while(oNode.tagName!='HTML'){iLeft+=oNode.offsetLeft||0;if(oNode.offsetParent){oNode=oNode.offsetParent;}
else{break;}}
return iLeft;}
Object.defineProperty(Array.prototype,'unique',{enumerable:false,configurable:false,writable:false,value:function(){var a=this.concat();for(var i=0;i<a.length;++i){for(var j=i+1;j<a.length;++j){if(a[i]===a[j])
a.splice(j--,1);}}
return a;}});;;"use strict";!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).Popper={})}(this,(function(e){function t(e){return{width:(e=e.getBoundingClientRect()).width,height:e.height,top:e.top,right:e.right,bottom:e.bottom,left:e.left,x:e.left,y:e.top}}function r(e){return"[object Window]"!==e.toString()?(e=e.ownerDocument)?e.defaultView:window:e}function n(e){return{scrollLeft:(e=r(e)).pageXOffset,scrollTop:e.pageYOffset}}function o(e){return e instanceof r(e).Element||e instanceof Element}function i(e){return e instanceof r(e).HTMLElement||e instanceof HTMLElement}function a(e){return e?(e.nodeName||"").toLowerCase():null}function s(e){return(o(e)?e.ownerDocument:e.document).documentElement}function f(e){return t(s(e)).left+n(e).scrollLeft}function p(e,o,p){void 0===p&&(p=!1),e=t(e);var c={scrollLeft:0,scrollTop:0},u={x:0,y:0};return p||("body"!==a(o)&&(c=o!==r(o)&&i(o)?{scrollLeft:o.scrollLeft,scrollTop:o.scrollTop}:n(o)),i(o)?((u=t(o)).x+=o.clientLeft,u.y+=o.clientTop):(o=s(o))&&(u.x=f(o))),{x:e.left+c.scrollLeft-u.x,y:e.top+c.scrollTop-u.y,width:e.width,height:e.height}}function c(e){return{x:e.offsetLeft,y:e.offsetTop,width:e.offsetWidth,height:e.offsetHeight}}function u(e){return"html"===a(e)?e:e.assignedSlot||e.parentNode||e.host||s(e)}function l(e){return r(e).getComputedStyle(e)}function d(e,t){void 0===t&&(t=[]);var n=function e(t){if(0<=["html","body","#document"].indexOf(a(t)))return t.ownerDocument.body;if(i(t)){var r=l(t);if(/auto|scroll|overlay|hidden/.test(r.overflow+r.overflowY+r.overflowX))return t}return e(u(t))}(e);e="body"===a(n);var o=r(n);return n=e?[o].concat(o.visualViewport||[]):n,t=t.concat(n),e?t:t.concat(d(u(n)))}function m(e){return i(e)&&"fixed"!==l(e).position?e.offsetParent:null}function h(e){var t=r(e);for(e=m(e);e&&0<=["table","td","th"].indexOf(a(e));)e=m(e);return e&&"body"===a(e)&&"static"===l(e).position?t:e||t}function v(e){var t=new Map,r=new Set,n=[];return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){r.has(e.name)||function e(o){r.add(o.name),[].concat(o.requires||[],o.requiresIfExists||[]).forEach((function(n){r.has(n)||(n=t.get(n))&&e(n)})),n.push(o)}(e)})),n}function g(e){var t;return function(){return t||(t=new Promise((function(r){Promise.resolve().then((function(){t=void 0,r(e())}))}))),t}}function b(e){return e.split("-")[0]}function y(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return!t.some((function(e){return!(e&&"function"==typeof e.getBoundingClientRect)}))}function w(e){void 0===e&&(e={});var t=e.defaultModifiers,r=void 0===t?[]:t,n=void 0===(e=e.defaultOptions)?F:e;return function(e,t,i){function a(){f.forEach((function(e){return e()})),f=[]}void 0===i&&(i=n);var s={placement:"bottom",orderedModifiers:[],options:Object.assign({},F,{},n),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},f=[],u=!1,l={state:s,setOptions:function(i){return a(),s.options=Object.assign({},n,{},s.options,{},i),s.scrollParents={reference:o(e)?d(e):e.contextElement?d(e.contextElement):[],popper:d(t)},i=function(e){var t=v(e);return C.reduce((function(e,r){return e.concat(t.filter((function(e){return e.phase===r})))}),[])}(function(e){var t=e.reduce((function(e,t){var r=e[t.name];return e[t.name]=r?Object.assign({},r,{},t,{options:Object.assign({},r.options,{},t.options),data:Object.assign({},r.data,{},t.data)}):t,e}),{});return Object.keys(t).map((function(e){return t[e]}))}([].concat(r,s.options.modifiers))),s.orderedModifiers=i.filter((function(e){return e.enabled})),s.orderedModifiers.forEach((function(e){var t=e.name,r=e.options;r=void 0===r?{}:r,"function"==typeof(e=e.effect)&&(t=e({state:s,name:t,instance:l,options:r}),f.push(t||function(){}))})),l.update()},forceUpdate:function(){if(!u){var e=s.elements,t=e.reference;if(y(t,e=e.popper))for(s.rects={reference:p(t,h(e),"fixed"===s.options.strategy),popper:c(e)},s.reset=!1,s.placement=s.options.placement,s.orderedModifiers.forEach((function(e){return s.modifiersData[e.name]=Object.assign({},e.data)})),t=0;t<s.orderedModifiers.length;t++)if(!0===s.reset)s.reset=!1,t=-1;else{var r=s.orderedModifiers[t];e=r.fn;var n=r.options;n=void 0===n?{}:n,r=r.name,"function"==typeof e&&(s=e({state:s,options:n,name:r,instance:l})||s)}}},update:g((function(){return new Promise((function(e){l.forceUpdate(),e(s)}))})),destroy:function(){a(),u=!0}};return y(e,t)?(l.setOptions(i).then((function(e){!u&&i.onFirstUpdate&&i.onFirstUpdate(e)})),l):l}}function x(e){return 0<=["top","bottom"].indexOf(e)?"x":"y"}function O(e){var t=e.reference,r=e.element,n=(e=e.placement)?b(e):null;e=e?e.split("-")[1]:null;var o=t.x+t.width/2-r.width/2,i=t.y+t.height/2-r.height/2;switch(n){case"top":o={x:o,y:t.y-r.height};break;case"bottom":o={x:o,y:t.y+t.height};break;case"right":o={x:t.x+t.width,y:i};break;case"left":o={x:t.x-r.width,y:i};break;default:o={x:t.x,y:t.y}}if(null!=(n=n?x(n):null))switch(i="y"===n?"height":"width",e){case"start":o[n]=Math.floor(o[n])-Math.floor(t[i]/2-r[i]/2);break;case"end":o[n]=Math.floor(o[n])+Math.ceil(t[i]/2-r[i]/2)}return o}function M(e){var t,n=e.popper,o=e.popperRect,i=e.placement,a=e.offsets,f=e.position,p=e.gpuAcceleration,c=e.adaptive,u=window.devicePixelRatio||1;e=Math.round(a.x*u)/u||0,u=Math.round(a.y*u)/u||0;var l=a.hasOwnProperty("x");a=a.hasOwnProperty("y");var d,m="left",v="top",g=window;if(c){var b=h(n);b===r(n)&&(b=s(n)),"top"===i&&(v="bottom",u-=b.clientHeight-o.height,u*=p?1:-1),"left"===i&&(m="right",e-=b.clientWidth-o.width,e*=p?1:-1)}return n=Object.assign({position:f},c&&V),p?Object.assign({},n,((d={})[v]=a?"0":"",d[m]=l?"0":"",d.transform=2>(g.devicePixelRatio||1)?"translate("+e+"px, "+u+"px)":"translate3d("+e+"px, "+u+"px, 0)",d)):Object.assign({},n,((t={})[v]=a?u+"px":"",t[m]=l?e+"px":"",t.transform="",t))}function j(e){return e.replace(/left|right|bottom|top/g,(function(e){return I[e]}))}function E(e){return e.replace(/start|end/g,(function(e){return _[e]}))}function D(e,t){var r=!(!t.getRootNode||!t.getRootNode().host);if(e.contains(t))return!0;if(r)do{if(t&&e.isSameNode(t))return!0;t=t.parentNode||t.host}while(t);return!1}function P(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function L(e,o){if("viewport"===o){var a=r(e);e=a.visualViewport,o=a.innerWidth,a=a.innerHeight,e&&/iPhone|iPod|iPad/.test(navigator.platform)&&(o=e.width,a=e.height),e=P({width:o,height:a,x:0,y:0})}else i(o)?e=t(o):(e=r(a=s(e)),o=n(a),(a=p(s(a),e)).height=Math.max(a.height,e.innerHeight),a.width=Math.max(a.width,e.innerWidth),a.x=-o.scrollLeft,a.y=-o.scrollTop,e=P(a));return e}function k(e,t,n){return t="clippingParents"===t?function(e){var t=d(e),r=0<=["absolute","fixed"].indexOf(l(e).position)&&i(e)?h(e):e;return o(r)?t.filter((function(e){return o(e)&&D(e,r)})):[]}(e):[].concat(t),(n=(n=[].concat(t,[n])).reduce((function(t,n){var o=L(e,n),p=r(n=i(n)?n:s(e)),c=i(n)?l(n):{};parseFloat(c.borderTopWidth);var u=parseFloat(c.borderRightWidth)||0,d=parseFloat(c.borderBottomWidth)||0,m=parseFloat(c.borderLeftWidth)||0;c="html"===a(n);var h=f(n),v=n.clientWidth+u,g=n.clientHeight+d;return c&&50<p.innerHeight-n.clientHeight&&(g=p.innerHeight-d),d=c?0:n.clientTop,u=n.clientLeft>m?u:c?p.innerWidth-v-h:n.offsetWidth-v,p=c?p.innerHeight-g:n.offsetHeight-g,n=c?h:n.clientLeft,t.top=Math.max(o.top+d,t.top),t.right=Math.min(o.right-u,t.right),t.bottom=Math.min(o.bottom-p,t.bottom),t.left=Math.max(o.left+n,t.left),t}),L(e,n[0]))).width=n.right-n.left,n.height=n.bottom-n.top,n.x=n.left,n.y=n.top,n}function B(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},{},e)}function W(e,t){return t.reduce((function(t,r){return t[r]=e,t}),{})}function H(e,r){void 0===r&&(r={});var n=r;r=void 0===(r=n.placement)?e.placement:r;var i=n.boundary,a=void 0===i?"clippingParents":i,f=void 0===(i=n.rootBoundary)?"viewport":i;i=void 0===(i=n.elementContext)?"popper":i;var p=n.altBoundary,c=void 0!==p&&p;n=B("number"!=typeof(n=void 0===(n=n.padding)?0:n)?n:W(n,R));var u=e.elements.reference;p=e.rects.popper,a=k(o(c=e.elements[c?"popper"===i?"reference":"popper":i])?c:c.contextElement||s(e.elements.popper),a,f),c=O({reference:f=t(u),element:p,strategy:"absolute",placement:r}),p=P(Object.assign({},p,{},c)),f="popper"===i?p:f;var l={top:a.top-f.top+n.top,bottom:f.bottom-a.bottom+n.bottom,left:a.left-f.left+n.left,right:f.right-a.right+n.right};if(e=e.modifiersData.offset,"popper"===i&&e){var d=e[r];Object.keys(l).forEach((function(e){var t=0<=["right","bottom"].indexOf(e)?1:-1,r=0<=["top","bottom"].indexOf(e)?"y":"x";l[e]+=d[r]*t}))}return l}function T(e,t,r){return void 0===r&&(r={x:0,y:0}),{top:e.top-t.height-r.y,right:e.right-t.width+r.x,bottom:e.bottom-t.height+r.y,left:e.left-t.width-r.x}}function A(e){return["top","right","bottom","left"].some((function(t){return 0<=e[t]}))}var R=["top","bottom","right","left"],q=R.reduce((function(e,t){return e.concat([t+"-start",t+"-end"])}),[]),S=[].concat(R,["auto"]).reduce((function(e,t){return e.concat([t,t+"-start",t+"-end"])}),[]),C="beforeRead read afterRead beforeMain main afterMain beforeWrite write afterWrite".split(" "),F={placement:"bottom",modifiers:[],strategy:"absolute"},N={passive:!0},V={top:"auto",right:"auto",bottom:"auto",left:"auto"},I={left:"right",right:"left",bottom:"top",top:"bottom"},_={start:"end",end:"start"},U=[{name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,n=e.instance,o=(e=e.options).scroll,i=void 0===o||o,a=void 0===(e=e.resize)||e,s=r(t.elements.popper),f=[].concat(t.scrollParents.reference,t.scrollParents.popper);return i&&f.forEach((function(e){e.addEventListener("scroll",n.update,N)})),a&&s.addEventListener("resize",n.update,N),function(){i&&f.forEach((function(e){e.removeEventListener("scroll",n.update,N)})),a&&s.removeEventListener("resize",n.update,N)}},data:{}},{name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state;t.modifiersData[e.name]=O({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},{name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,r=e.options;e=void 0===(e=r.gpuAcceleration)||e,r=void 0===(r=r.adaptive)||r,e={placement:b(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:e},null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,{},M(Object.assign({},e,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:r})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,{},M(Object.assign({},e,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}},{name:"applyStyles",enabled:!0,phase:"write",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var r=t.styles[e]||{},n=t.attributes[e]||{},o=t.elements[e];i(o)&&a(o)&&(Object.assign(o.style,r),Object.keys(n).forEach((function(e){var t=n[e];!1===t?o.removeAttribute(e):o.setAttribute(e,!0===t?"":t)})))}))},effect:function(e){var t=e.state,r={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,r.popper),t.elements.arrow&&Object.assign(t.elements.arrow.style,r.arrow),function(){Object.keys(t.elements).forEach((function(e){var n=t.elements[e],o=t.attributes[e]||{};e=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:r[e]).reduce((function(e,t){return e[t]="",e}),{}),i(n)&&a(n)&&(Object.assign(n.style,e),Object.keys(o).forEach((function(e){n.removeAttribute(e)})))}))}},requires:["computeStyles"]},{name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,r=e.name,n=void 0===(e=e.options.offset)?[0,0]:e,o=(e=S.reduce((function(e,r){var o=t.rects,i=b(r),a=0<=["left","top"].indexOf(i)?-1:1,s="function"==typeof n?n(Object.assign({},o,{placement:r})):n;return o=(o=s[0])||0,s=((s=s[1])||0)*a,i=0<=["left","right"].indexOf(i)?{x:s,y:o}:{x:o,y:s},e[r]=i,e}),{}))[t.placement],i=o.x;o=o.y,null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=i,t.modifiersData.popperOffsets.y+=o),t.modifiersData[r]=e}},{name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,r=e.options;if(e=e.name,!t.modifiersData[e]._skip){var n=r.fallbackPlacements,o=r.padding,i=r.boundary,a=r.rootBoundary,s=r.altBoundary,f=r.flipVariations,p=void 0===f||f,c=r.allowedAutoPlacements;f=b(r=t.options.placement),n=n||(f!==r&&p?function(e){if("auto"===b(e))return[];var t=j(e);return[E(e),t,E(t)]}(r):[j(r)]);var u=[r].concat(n).reduce((function(e,r){return e.concat("auto"===b(r)?function(e,t){void 0===t&&(t={});var r=t.boundary,n=t.rootBoundary,o=t.padding,i=t.flipVariations,a=t.allowedAutoPlacements,s=void 0===a?S:a,f=t.placement.split("-")[1],p=(f?i?q:q.filter((function(e){return e.split("-")[1]===f})):R).filter((function(e){return 0<=s.indexOf(e)})).reduce((function(t,i){return t[i]=H(e,{placement:i,boundary:r,rootBoundary:n,padding:o})[b(i)],t}),{});return Object.keys(p).sort((function(e,t){return p[e]-p[t]}))}(t,{placement:r,boundary:i,rootBoundary:a,padding:o,flipVariations:p,allowedAutoPlacements:c}):r)}),[]);n=t.rects.reference,r=t.rects.popper;var l=new Map;f=!0;for(var d=u[0],m=0;m<u.length;m++){var h=u[m],v=b(h),g="start"===h.split("-")[1],y=0<=["top","bottom"].indexOf(v),w=y?"width":"height",x=H(t,{placement:h,boundary:i,rootBoundary:a,altBoundary:s,padding:o});if(g=y?g?"right":"left":g?"bottom":"top",n[w]>r[w]&&(g=j(g)),w=j(g),(v=[0>=x[v],0>=x[g],0>=x[w]]).every((function(e){return e}))){d=h,f=!1;break}l.set(h,v)}if(f)for(s=function(e){var t=u.find((function(t){if(t=l.get(t))return t.slice(0,e).every((function(e){return e}))}));if(t)return d=t,"break"},n=p?3:1;0<n&&"break"!==s(n);n--);t.placement!==d&&(t.modifiersData[e]._skip=!0,t.placement=d,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}},{name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,r=e.options;e=e.name;var n=r.mainAxis,o=void 0===n||n;n=void 0!==(n=r.altAxis)&&n;var i=r.tether;i=void 0===i||i;var a=r.tetherOffset,s=void 0===a?0:a;r=H(t,{boundary:r.boundary,rootBoundary:r.rootBoundary,padding:r.padding,altBoundary:r.altBoundary}),a=b(t.placement);var f=t.placement.split("-")[1],p=!f,u=x(a);a="x"===u?"y":"x";var l=t.modifiersData.popperOffsets,d=t.rects.reference,m=t.rects.popper,v="function"==typeof s?s(Object.assign({},t.rects,{placement:t.placement})):s;if(s={x:0,y:0},l){if(o){var g="y"===u?"top":"left",y="y"===u?"bottom":"right",w="y"===u?"height":"width";o=l[u];var O=l[u]+r[g],M=l[u]-r[y],j=i?-m[w]/2:0,E="start"===f?d[w]:m[w];f="start"===f?-m[w]:-d[w],m=t.elements.arrow,m=i&&m?c(m):{width:0,height:0};var D=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0};g=D[g],y=D[y],m=Math.max(0,Math.min(d[w],m[w])),E=p?d[w]/2-j-m-g-v:E-m-g-v,p=p?-d[w]/2+j+m+y+v:f+m+y+v,v=t.elements.arrow&&h(t.elements.arrow),d=t.modifiersData.offset?t.modifiersData.offset[t.placement][u]:0,v=l[u]+E-d-(v?"y"===u?v.clientTop||0:v.clientLeft||0:0),p=l[u]+p-d,i=Math.max(i?Math.min(O,v):O,Math.min(o,i?Math.max(M,p):M)),l[u]=i,s[u]=i-o}n&&(n=l[a],i=Math.max(n+r["x"===u?"top":"left"],Math.min(n,n-r["x"===u?"bottom":"right"])),l[a]=i,s[a]=i-n),t.modifiersData[e]=s}},requiresIfExists:["offset"]},{name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,r=e.state;e=e.name;var n=r.elements.arrow,o=r.modifiersData.popperOffsets,i=b(r.placement),a=x(i);if(i=0<=["left","right"].indexOf(i)?"height":"width",n&&o){var s=r.modifiersData[e+"#persistent"].padding;n=c(n);var f="y"===a?"top":"left",p="y"===a?"bottom":"right",u=r.rects.reference[i]+r.rects.reference[a]-o[a]-r.rects.popper[i];o=o[a]-r.rects.reference[a];var l=r.elements.arrow&&h(r.elements.arrow);u=(l=l?"y"===a?l.clientHeight||0:l.clientWidth||0:0)/2-n[i]/2+(u/2-o/2),i=Math.max(s[f],Math.min(u,l-n[i]-s[p])),r.modifiersData[e]=((t={})[a]=i,t.centerOffset=i-u,t)}},effect:function(e){var t=e.state,r=e.options;e=e.name;var n=r.element;if(n=void 0===n?"[data-popper-arrow]":n,r=void 0===(r=r.padding)?0:r,null!=n){if("string"==typeof n&&!(n=t.elements.popper.querySelector(n)))return;D(t.elements.popper,n)&&(t.elements.arrow=n,t.modifiersData[e+"#persistent"]={padding:B("number"!=typeof r?r:W(r,R))})}},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]},{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state;e=e.name;var r=t.rects.reference,n=t.rects.popper,o=t.modifiersData.preventOverflow,i=H(t,{elementContext:"reference"}),a=H(t,{altBoundary:!0});r=T(i,r),n=T(a,n,o),o=A(r),a=A(n),t.modifiersData[e]={referenceClippingOffsets:r,popperEscapeOffsets:n,isReferenceHidden:o,hasPopperEscaped:a},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":o,"data-popper-escaped":a})}}],z=w({defaultModifiers:U});e.createPopper=z,e.defaultModifiers=U,e.detectOverflow=H,e.popperGenerator=w,Object.defineProperty(e,"__esModule",{value:!0})}));;;(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('@popperjs/core')):typeof define==='function'&&define.amd?define(['@popperjs/core'],factory):(global=global||self,global.tippy=factory(global.Popper));}(this,(function(core){'use strict';var css=".tippy-box[data-animation=fade][data-state=hidden]{opacity:0}[data-tippy-root]{max-width:calc(100vw - 10px)}.tippy-box{position:relative;background-color:#333;color:#fff;border-radius:4px;font-size:1.4rem;line-height:1.4;outline:0;transition-property:transform,visibility,opacity}.tippy-box[data-placement^=top]>.tippy-arrow{bottom:0}.tippy-box[data-placement^=top]>.tippy-arrow:before{bottom:-7px;left:0;border-width:8px 8px 0;border-top-color:initial;transform-origin:center top}.tippy-box[data-placement^=bottom]>.tippy-arrow{top:0}.tippy-box[data-placement^=bottom]>.tippy-arrow:before{top:-7px;left:0;border-width:0 8px 8px;border-bottom-color:initial;transform-origin:center bottom}.tippy-box[data-placement^=left]>.tippy-arrow{right:0}.tippy-box[data-placement^=left]>.tippy-arrow:before{border-width:8px 0 8px 8px;border-left-color:initial;right:-7px;transform-origin:center left}.tippy-box[data-placement^=right]>.tippy-arrow{left:0}.tippy-box[data-placement^=right]>.tippy-arrow:before{left:-7px;border-width:8px 8px 8px 0;border-right-color:initial;transform-origin:center right}.tippy-box[data-inertia][data-state=visible]{transition-timing-function:cubic-bezier(.54,1.5,.38,1.11)}.tippy-arrow{width:16px;height:16px;color:#333}.tippy-arrow:before{content:\"\";position:absolute;border-color:transparent;border-style:solid}.tippy-content{position:relative;padding:5px 9px;z-index:1}";function injectCSS(css){var style=document.createElement('style');style.textContent=css;style.setAttribute('data-tippy-stylesheet','');var head=document.head;var firstStyleOrLinkTag=document.querySelector('head>style,head>link');if(firstStyleOrLinkTag){head.insertBefore(style,firstStyleOrLinkTag);}else{head.appendChild(style);}}
var isBrowser=typeof window!=='undefined'&&typeof document!=='undefined';var ua=isBrowser?navigator.userAgent:'';var isIE=/MSIE |Trident\//.test(ua);var PASSIVE={passive:true};var ROUND_ARROW='<svg width="16" height="6" xmlns="http://www.w3.org/2000/svg"><path d="M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z"></svg>';var BOX_CLASS="tippy-box";var CONTENT_CLASS="tippy-content";var BACKDROP_CLASS="tippy-backdrop";var ARROW_CLASS="tippy-arrow";var SVG_ARROW_CLASS="tippy-svg-arrow";function hasOwnProperty(obj,key){return{}.hasOwnProperty.call(obj,key);}
function getValueAtIndexOrReturn(value,index,defaultValue){if(Array.isArray(value)){var v=value[index];return v==null?Array.isArray(defaultValue)?defaultValue[index]:defaultValue:v;}
return value;}
function isType(value,type){var str={}.toString.call(value);return str.indexOf('[object')===0&&str.indexOf(type+"]")>-1;}
function invokeWithArgsOrReturn(value,args){return typeof value==='function'?value.apply(void 0,args):value;}
function debounce(fn,ms){if(ms===0){return fn;}
var timeout;return function(arg){clearTimeout(timeout);timeout=setTimeout(function(){fn(arg);},ms);};}
function removeProperties(obj,keys){var clone=Object.assign({},obj);keys.forEach(function(key){delete clone[key];});return clone;}
function splitBySpaces(value){return value.split(/\s+/).filter(Boolean);}
function normalizeToArray(value){return[].concat(value);}
function pushIfUnique(arr,value){if(arr.indexOf(value)===-1){arr.push(value);}}
function unique(arr){return arr.filter(function(item,index){return arr.indexOf(item)===index;});}
function getBasePlacement(placement){return placement.split('-')[0];}
function arrayFrom(value){return[].slice.call(value);}
function div(){return document.createElement('div');}
function isElement(value){return['Element','Fragment'].some(function(type){return isType(value,type);});}
function isNodeList(value){return isType(value,'NodeList');}
function isMouseEvent(value){return isType(value,'MouseEvent');}
function isReferenceElement(value){return!!(value&&value._tippy&&value._tippy.reference===value);}
function getArrayOfElements(value){if(isElement(value)){return[value];}
if(isNodeList(value)){return arrayFrom(value);}
if(Array.isArray(value)){return value;}
return arrayFrom(document.querySelectorAll(value));}
function setTransitionDuration(els,value){els.forEach(function(el){if(el){el.style.transitionDuration=value+"ms";}});}
function setVisibilityState(els,state){els.forEach(function(el){if(el){el.setAttribute('data-state',state);}});}
function getOwnerDocument(elementOrElements){var _normalizeToArray=normalizeToArray(elementOrElements),element=_normalizeToArray[0];return element?element.ownerDocument||document:document;}
function isCursorOutsideInteractiveBorder(popperTreeData,event){var clientX=event.clientX,clientY=event.clientY;return popperTreeData.every(function(_ref){var popperRect=_ref.popperRect,popperState=_ref.popperState,props=_ref.props;var interactiveBorder=props.interactiveBorder;var basePlacement=getBasePlacement(popperState.placement);var offsetData=popperState.modifiersData.offset;if(!offsetData){return true;}
var topDistance=basePlacement==='bottom'?offsetData.top.y:0;var bottomDistance=basePlacement==='top'?offsetData.bottom.y:0;var leftDistance=basePlacement==='right'?offsetData.left.x:0;var rightDistance=basePlacement==='left'?offsetData.right.x:0;var exceedsTop=popperRect.top-clientY+topDistance>interactiveBorder;var exceedsBottom=clientY-popperRect.bottom-bottomDistance>interactiveBorder;var exceedsLeft=popperRect.left-clientX+leftDistance>interactiveBorder;var exceedsRight=clientX-popperRect.right-rightDistance>interactiveBorder;return exceedsTop||exceedsBottom||exceedsLeft||exceedsRight;});}
function updateTransitionEndListener(box,action,listener){var method=action+"EventListener";['transitionend','webkitTransitionEnd'].forEach(function(event){box[method](event,listener);});}
var currentInput={isTouch:false};var lastMouseMoveTime=0;function onDocumentTouchStart(){if(currentInput.isTouch){return;}
currentInput.isTouch=true;if(window.performance){document.addEventListener('mousemove',onDocumentMouseMove);}}
function onDocumentMouseMove(){var now=performance.now();if(now-lastMouseMoveTime<20){currentInput.isTouch=false;document.removeEventListener('mousemove',onDocumentMouseMove);}
lastMouseMoveTime=now;}
function onWindowBlur(){var activeElement=document.activeElement;if(isReferenceElement(activeElement)){var instance=activeElement._tippy;if(activeElement.blur&&!instance.state.isVisible){activeElement.blur();}}}
function bindGlobalEventListeners(){document.addEventListener('touchstart',onDocumentTouchStart,Object.assign({},PASSIVE,{capture:true}));window.addEventListener('blur',onWindowBlur);}
function createMemoryLeakWarning(method){var txt=method==='destroy'?'n already-':' ';return[method+"() was called on a"+txt+"destroyed instance. This is a no-op but",'indicates a potential memory leak.'].join(' ');}
function clean(value){var spacesAndTabs=/[ \t]{2,}/g;var lineStartWithSpaces=/^[ \t]*/gm;return value.replace(spacesAndTabs,' ').replace(lineStartWithSpaces,'').trim();}
function getDevMessage(message){return clean("\n  %ctippy.js\n\n  %c"+clean(message)+"\n\n  %c\uD83D\uDC77\u200D This is a development-only message. It will be removed in production.\n  ");}
function getFormattedMessage(message){return[getDevMessage(message),'color: #00C584; font-size: 1.3em; font-weight: bold;','line-height: 1.5','color: #a6a095;'];}
var visitedMessages;{resetVisitedMessages();}
function resetVisitedMessages(){visitedMessages=new Set();}
function warnWhen(condition,message){if(condition&&!visitedMessages.has(message)){var _console;visitedMessages.add(message);(_console=console).warn.apply(_console,getFormattedMessage(message));}}
function errorWhen(condition,message){if(condition&&!visitedMessages.has(message)){var _console2;visitedMessages.add(message);(_console2=console).error.apply(_console2,getFormattedMessage(message));}}
function validateTargets(targets){var didPassFalsyValue=!targets;var didPassPlainObject=Object.prototype.toString.call(targets)==='[object Object]'&&!targets.addEventListener;errorWhen(didPassFalsyValue,['tippy() was passed','`'+String(targets)+'`','as its targets (first) argument. Valid types are: String, Element,','Element[], or NodeList.'].join(' '));errorWhen(didPassPlainObject,['tippy() was passed a plain object which is not supported as an argument','for virtual positioning. Use props.getReferenceClientRect instead.'].join(' '));}
var pluginProps={animateFill:false,followCursor:false,inlinePositioning:false,sticky:false};var renderProps={allowHTML:false,animation:'fade',arrow:true,content:'',inertia:false,maxWidth:350,role:'tooltip',theme:'',zIndex:9999};var defaultProps=Object.assign({appendTo:function appendTo(){return document.body;},aria:{content:'auto',expanded:'auto'},delay:0,duration:[300,250],getReferenceClientRect:null,hideOnClick:true,ignoreAttributes:false,interactive:false,interactiveBorder:2,interactiveDebounce:0,moveTransition:'',offset:[0,10],onAfterUpdate:function onAfterUpdate(){},onBeforeUpdate:function onBeforeUpdate(){},onCreate:function onCreate(){},onDestroy:function onDestroy(){},onHidden:function onHidden(){},onHide:function onHide(){},onMount:function onMount(){},onShow:function onShow(){},onShown:function onShown(){},onTrigger:function onTrigger(){},onUntrigger:function onUntrigger(){},onClickOutside:function onClickOutside(){},placement:'top',plugins:[],popperOptions:{},render:null,showOnCreate:false,touch:true,trigger:'mouseenter focus',triggerTarget:null},pluginProps,{},renderProps);var defaultKeys=Object.keys(defaultProps);var setDefaultProps=function setDefaultProps(partialProps){{validateProps(partialProps,[]);}
var keys=Object.keys(partialProps);keys.forEach(function(key){defaultProps[key]=partialProps[key];});};function getExtendedPassedProps(passedProps){var plugins=passedProps.plugins||[];var pluginProps=plugins.reduce(function(acc,plugin){var name=plugin.name,defaultValue=plugin.defaultValue;if(name){acc[name]=passedProps[name]!==undefined?passedProps[name]:defaultValue;}
return acc;},{});return Object.assign({},passedProps,{},pluginProps);}
function getDataAttributeProps(reference,plugins){var propKeys=plugins?Object.keys(getExtendedPassedProps(Object.assign({},defaultProps,{plugins:plugins}))):defaultKeys;var props=propKeys.reduce(function(acc,key){var valueAsString=(reference.getAttribute("data-tippy-"+key)||'').trim();if(!valueAsString){return acc;}
if(key==='content'){acc[key]=valueAsString;}else{try{acc[key]=JSON.parse(valueAsString);}catch(e){acc[key]=valueAsString;}}
return acc;},{});return props;}
function evaluateProps(reference,props){var out=Object.assign({},props,{content:invokeWithArgsOrReturn(props.content,[reference])},props.ignoreAttributes?{}:getDataAttributeProps(reference,props.plugins));out.aria=Object.assign({},defaultProps.aria,{},out.aria);out.aria={expanded:out.aria.expanded==='auto'?props.interactive:out.aria.expanded,content:out.aria.content==='auto'?props.interactive?null:'describedby':out.aria.content};return out;}
function validateProps(partialProps,plugins){if(partialProps===void 0){partialProps={};}
if(plugins===void 0){plugins=[];}
var keys=Object.keys(partialProps);keys.forEach(function(prop){var nonPluginProps=removeProperties(defaultProps,Object.keys(pluginProps));var didPassUnknownProp=!hasOwnProperty(nonPluginProps,prop);if(didPassUnknownProp){didPassUnknownProp=plugins.filter(function(plugin){return plugin.name===prop;}).length===0;}
warnWhen(didPassUnknownProp,["`"+prop+"`","is not a valid prop. You may have spelled it incorrectly, or if it's",'a plugin, forgot to pass it in an array as props.plugins.','\n\n','All props: https://atomiks.github.io/tippyjs/v6/all-props/\n','Plugins: https://atomiks.github.io/tippyjs/v6/plugins/'].join(' '));});}
var innerHTML=function innerHTML(){return'innerHTML';};function dangerouslySetInnerHTML(element,html){element[innerHTML()]=html;}
function createArrowElement(value){var arrow=div();if(value===true){arrow.className=ARROW_CLASS;}else{arrow.className=SVG_ARROW_CLASS;if(isElement(value)){arrow.appendChild(value);}else{dangerouslySetInnerHTML(arrow,value);}}
return arrow;}
function setContent(content,props){if(isElement(props.content)){dangerouslySetInnerHTML(content,'');content.appendChild(props.content);}else if(typeof props.content!=='function'){if(props.allowHTML){dangerouslySetInnerHTML(content,props.content);}else{content.textContent=props.content;}}}
function getChildren(popper){var box=popper.firstElementChild;var boxChildren=arrayFrom(box.children);return{box:box,content:boxChildren.find(function(node){return node.classList.contains(CONTENT_CLASS);}),arrow:boxChildren.find(function(node){return node.classList.contains(ARROW_CLASS)||node.classList.contains(SVG_ARROW_CLASS);}),backdrop:boxChildren.find(function(node){return node.classList.contains(BACKDROP_CLASS);})};}
function render(instance){var popper=div();var box=div();box.className=BOX_CLASS;box.setAttribute('data-state','hidden');box.setAttribute('tabindex','-1');var content=div();content.className=CONTENT_CLASS;content.setAttribute('data-state','hidden');setContent(content,instance.props);popper.appendChild(box);box.appendChild(content);onUpdate(instance.props,instance.props);function onUpdate(prevProps,nextProps){var _getChildren=getChildren(popper),box=_getChildren.box,content=_getChildren.content,arrow=_getChildren.arrow;if(nextProps.theme){box.setAttribute('data-theme',nextProps.theme);}else{box.removeAttribute('data-theme');}
if(typeof nextProps.animation==='string'){box.setAttribute('data-animation',nextProps.animation);}else{box.removeAttribute('data-animation');}
if(nextProps.inertia){box.setAttribute('data-inertia','');}else{box.removeAttribute('data-inertia');}
box.style.maxWidth=typeof nextProps.maxWidth==='number'?nextProps.maxWidth+"px":nextProps.maxWidth;if(nextProps.role){box.setAttribute('role',nextProps.role);}else{box.removeAttribute('role');}
if(prevProps.content!==nextProps.content||prevProps.allowHTML!==nextProps.allowHTML){setContent(content,instance.props);}
if(nextProps.arrow){if(!arrow){box.appendChild(createArrowElement(nextProps.arrow));}else if(prevProps.arrow!==nextProps.arrow){box.removeChild(arrow);box.appendChild(createArrowElement(nextProps.arrow));}}else if(arrow){box.removeChild(arrow);}}
return{popper:popper,onUpdate:onUpdate};}
render.$$tippy=true;var idCounter=1;var mouseMoveListeners=[];var mountedInstances=[];function createTippy(reference,passedProps){var props=evaluateProps(reference,Object.assign({},defaultProps,{},getExtendedPassedProps(passedProps)));var showTimeout;var hideTimeout;var scheduleHideAnimationFrame;var isVisibleFromClick=false;var didHideDueToDocumentMouseDown=false;var ignoreOnFirstUpdate=false;var lastTriggerEvent;var currentTransitionEndListener;var onFirstUpdate;var listeners=[];var debouncedOnMouseMove=debounce(onMouseMove,props.interactiveDebounce);var currentTarget;var doc=getOwnerDocument(props.triggerTarget||reference);var id=idCounter++;var popperInstance=null;var plugins=unique(props.plugins);var state={isEnabled:true,isVisible:false,isDestroyed:false,isMounted:false,isShown:false};var instance={id:id,reference:reference,popper:div(),popperInstance:popperInstance,props:props,state:state,plugins:plugins,clearDelayTimeouts:clearDelayTimeouts,setProps:setProps,setContent:setContent,show:show,hide:hide,hideWithInteractivity:hideWithInteractivity,enable:enable,disable:disable,unmount:unmount,destroy:destroy};if(!props.render){{errorWhen(true,'render() function has not been supplied.');}
return instance;}
var _props$render=props.render(instance),popper=_props$render.popper,onUpdate=_props$render.onUpdate;popper.setAttribute('data-tippy-root','');popper.id="tippy-"+instance.id;instance.popper=popper;reference._tippy=instance;popper._tippy=instance;var pluginsHooks=plugins.map(function(plugin){return plugin.fn(instance);});var hasAriaExpanded=reference.hasAttribute('aria-expanded');addListeners();handleAriaExpandedAttribute();handleStyles();invokeHook('onCreate',[instance]);if(props.showOnCreate){scheduleShow();}
popper.addEventListener('mouseenter',function(){if(instance.props.interactive&&instance.state.isVisible){instance.clearDelayTimeouts();}});popper.addEventListener('mouseleave',function(event){if(instance.props.interactive&&instance.props.trigger.indexOf('mouseenter')>=0){doc.addEventListener('mousemove',debouncedOnMouseMove);debouncedOnMouseMove(event);}});return instance;function getNormalizedTouchSettings(){var touch=instance.props.touch;return Array.isArray(touch)?touch:[touch,0];}
function getIsCustomTouchBehavior(){return getNormalizedTouchSettings()[0]==='hold';}
function getIsDefaultRenderFn(){var _instance$props$rende;return!!((_instance$props$rende=instance.props.render)==null?void 0:_instance$props$rende.$$tippy);}
function getCurrentTarget(){return currentTarget||reference;}
function getDefaultTemplateChildren(){return getChildren(popper);}
function getDelay(isShow){if(instance.state.isMounted&&!instance.state.isVisible||currentInput.isTouch||lastTriggerEvent&&lastTriggerEvent.type==='focus'){return 0;}
return getValueAtIndexOrReturn(instance.props.delay,isShow?0:1,defaultProps.delay);}
function handleStyles(){popper.style.pointerEvents=instance.props.interactive&&instance.state.isVisible?'':'none';popper.style.zIndex=""+instance.props.zIndex;}
function invokeHook(hook,args,shouldInvokePropsHook){if(shouldInvokePropsHook===void 0){shouldInvokePropsHook=true;}
pluginsHooks.forEach(function(pluginHooks){if(pluginHooks[hook]){pluginHooks[hook].apply(void 0,args);}});if(shouldInvokePropsHook){var _instance$props;(_instance$props=instance.props)[hook].apply(_instance$props,args);}}
function handleAriaContentAttribute(){var aria=instance.props.aria;if(!aria.content){return;}
var attr="aria-"+aria.content;var id=popper.id;var nodes=normalizeToArray(instance.props.triggerTarget||reference);nodes.forEach(function(node){var currentValue=node.getAttribute(attr);if(instance.state.isVisible){node.setAttribute(attr,currentValue?currentValue+" "+id:id);}else{var nextValue=currentValue&&currentValue.replace(id,'').trim();if(nextValue){node.setAttribute(attr,nextValue);}else{node.removeAttribute(attr);}}});}
function handleAriaExpandedAttribute(){if(hasAriaExpanded||!instance.props.aria.expanded){return;}
var nodes=normalizeToArray(instance.props.triggerTarget||reference);nodes.forEach(function(node){if(instance.props.interactive){node.setAttribute('aria-expanded',instance.state.isVisible&&node===getCurrentTarget()?'true':'false');}else{node.removeAttribute('aria-expanded');}});}
function cleanupInteractiveMouseListeners(){doc.body.removeEventListener('mouseleave',scheduleHide);doc.removeEventListener('mousemove',debouncedOnMouseMove);mouseMoveListeners=mouseMoveListeners.filter(function(listener){return listener!==debouncedOnMouseMove;});}
function onDocumentPress(event){if(event.type==='mousedown'&&currentInput.isTouch){return;}
if(instance.props.interactive&&popper.contains(event.target)){return;}
if(getCurrentTarget().contains(event.target)){if(currentInput.isTouch){return;}
if(instance.state.isVisible&&instance.props.trigger.indexOf('click')>=0){return;}}else{invokeHook('onClickOutside',[instance,event]);}
if(instance.props.hideOnClick===true){isVisibleFromClick=false;instance.clearDelayTimeouts();instance.hide();didHideDueToDocumentMouseDown=true;setTimeout(function(){didHideDueToDocumentMouseDown=false;});if(!instance.state.isMounted){removeDocumentPress();}}}
function addDocumentPress(){doc.addEventListener('mousedown',onDocumentPress,true);doc.addEventListener('touchend',onDocumentPress,true);}
function removeDocumentPress(){doc.removeEventListener('mousedown',onDocumentPress,true);doc.removeEventListener('touchend',onDocumentPress,true);}
function onTransitionedOut(duration,callback){onTransitionEnd(duration,function(){if(!instance.state.isVisible&&popper.parentNode&&popper.parentNode.contains(popper)){callback();}});}
function onTransitionedIn(duration,callback){onTransitionEnd(duration,callback);}
function onTransitionEnd(duration,callback){var box=getDefaultTemplateChildren().box;function listener(event){if(event.target===box){updateTransitionEndListener(box,'remove',listener);callback();}}
if(duration===0){return callback();}
updateTransitionEndListener(box,'remove',currentTransitionEndListener);updateTransitionEndListener(box,'add',listener);currentTransitionEndListener=listener;}
function on(eventType,handler,options){if(options===void 0){options=false;}
var nodes=normalizeToArray(instance.props.triggerTarget||reference);nodes.forEach(function(node){node.addEventListener(eventType,handler,options);listeners.push({node:node,eventType:eventType,handler:handler,options:options});});}
function addListeners(){if(getIsCustomTouchBehavior()){on('touchstart',onTrigger,PASSIVE);on('touchend',onMouseLeave,PASSIVE);}
splitBySpaces(instance.props.trigger).forEach(function(eventType){if(eventType==='manual'){return;}
on(eventType,onTrigger);switch(eventType){case'mouseenter':on('mouseleave',onMouseLeave);break;case'focus':on(isIE?'focusout':'blur',onBlurOrFocusOut);break;case'focusin':on('focusout',onBlurOrFocusOut);break;}});}
function removeListeners(){listeners.forEach(function(_ref){var node=_ref.node,eventType=_ref.eventType,handler=_ref.handler,options=_ref.options;node.removeEventListener(eventType,handler,options);});listeners=[];}
function onTrigger(event){var _lastTriggerEvent;var shouldScheduleClickHide=false;if(!instance.state.isEnabled||isEventListenerStopped(event)||didHideDueToDocumentMouseDown){return;}
var wasFocused=((_lastTriggerEvent=lastTriggerEvent)==null?void 0:_lastTriggerEvent.type)==='focus';lastTriggerEvent=event;currentTarget=event.currentTarget;handleAriaExpandedAttribute();if(!instance.state.isVisible&&isMouseEvent(event)){mouseMoveListeners.forEach(function(listener){return listener(event);});}
if(event.type==='click'&&(instance.props.trigger.indexOf('mouseenter')<0||isVisibleFromClick)&&instance.props.hideOnClick!==false&&instance.state.isVisible){shouldScheduleClickHide=true;}else{scheduleShow(event);}
if(event.type==='click'){isVisibleFromClick=!shouldScheduleClickHide;}
if(shouldScheduleClickHide&&!wasFocused){scheduleHide(event);}}
function onMouseMove(event){var target=event.target;var isCursorOverReferenceOrPopper=reference.contains(target)||popper.contains(target);if(event.type==='mousemove'&&isCursorOverReferenceOrPopper){return;}
var popperTreeData=getNestedPopperTree().concat(popper).map(function(popper){var _instance$popperInsta;var instance=popper._tippy;var state=(_instance$popperInsta=instance.popperInstance)==null?void 0:_instance$popperInsta.state;if(state){return{popperRect:popper.getBoundingClientRect(),popperState:state,props:props};}
return null;}).filter(Boolean);if(isCursorOutsideInteractiveBorder(popperTreeData,event)){cleanupInteractiveMouseListeners();scheduleHide(event);}}
function onMouseLeave(event){var shouldBail=isEventListenerStopped(event)||instance.props.trigger.indexOf('click')>=0&&isVisibleFromClick;if(shouldBail){return;}
if(instance.props.interactive){instance.hideWithInteractivity(event);return;}
scheduleHide(event);}
function onBlurOrFocusOut(event){if(instance.props.trigger.indexOf('focusin')<0&&event.target!==getCurrentTarget()){return;}
if(instance.props.interactive&&event.relatedTarget&&popper.contains(event.relatedTarget)){return;}
scheduleHide(event);}
function isEventListenerStopped(event){return currentInput.isTouch?getIsCustomTouchBehavior()!==event.type.indexOf('touch')>=0:false;}
function createPopperInstance(){destroyPopperInstance();var _instance$props2=instance.props,popperOptions=_instance$props2.popperOptions,placement=_instance$props2.placement,offset=_instance$props2.offset,getReferenceClientRect=_instance$props2.getReferenceClientRect,moveTransition=_instance$props2.moveTransition;var arrow=getIsDefaultRenderFn()?getChildren(popper).arrow:null;var computedReference=getReferenceClientRect?{getBoundingClientRect:getReferenceClientRect,contextElement:getReferenceClientRect.contextElement||getCurrentTarget()}:reference;var tippyModifier={name:'$$tippy',enabled:true,phase:'beforeWrite',requires:['computeStyles'],fn:function fn(_ref2){var state=_ref2.state;if(getIsDefaultRenderFn()){var _getDefaultTemplateCh=getDefaultTemplateChildren(),box=_getDefaultTemplateCh.box;['placement','reference-hidden','escaped'].forEach(function(attr){if(attr==='placement'){box.setAttribute('data-placement',state.placement);}else{if(state.attributes.popper["data-popper-"+attr]){box.setAttribute("data-"+attr,'');}else{box.removeAttribute("data-"+attr);}}});state.attributes.popper={};}}};var modifiers=[{name:'offset',options:{offset:offset}},{name:'preventOverflow',options:{padding:{top:2,bottom:2,left:5,right:5}}},{name:'flip',options:{padding:5}},{name:'computeStyles',options:{adaptive:!moveTransition}},tippyModifier];modifiers.push.apply(modifiers,(popperOptions==null?void 0:popperOptions.modifiers)||[]);if(getIsDefaultRenderFn()&&arrow){modifiers.push({name:'arrow',options:{element:arrow,padding:3}});}
instance.popperInstance=core.createPopper(computedReference,popper,Object.assign({},popperOptions,{placement:placement,onFirstUpdate:onFirstUpdate,modifiers:modifiers}));}
function destroyPopperInstance(){if(instance.popperInstance){instance.popperInstance.destroy();instance.popperInstance=null;}}
function mount(){var appendTo=instance.props.appendTo;var parentNode;var node=getCurrentTarget();if(instance.props.interactive&&appendTo===defaultProps.appendTo||appendTo==='parent'){parentNode=node.parentNode;}else{parentNode=invokeWithArgsOrReturn(appendTo,[node]);}
if(!parentNode.contains(popper)){parentNode.appendChild(popper);}
createPopperInstance();{warnWhen(instance.props.interactive&&appendTo===defaultProps.appendTo&&node.nextElementSibling!==popper,['Interactive tippy element may not be accessible via keyboard','navigation because it is not directly after the reference element','in the DOM source order.','\n\n','Using a wrapper <div> or <span> tag around the reference element','solves this by creating a new parentNode context.','\n\n','Specifying `appendTo: document.body` silences this warning, but it','assumes you are using a focus management solution to handle','keyboard navigation.','\n\n','See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity'].join(' '));}}
function getNestedPopperTree(){return arrayFrom(popper.querySelectorAll('[data-tippy-root]'));}
function scheduleShow(event){instance.clearDelayTimeouts();if(event){invokeHook('onTrigger',[instance,event]);}
addDocumentPress();var delay=getDelay(true);var _getNormalizedTouchSe=getNormalizedTouchSettings(),touchValue=_getNormalizedTouchSe[0],touchDelay=_getNormalizedTouchSe[1];if(currentInput.isTouch&&touchValue==='hold'&&touchDelay){delay=touchDelay;}
if(delay){showTimeout=setTimeout(function(){instance.show();},delay);}else{instance.show();}}
function scheduleHide(event){instance.clearDelayTimeouts();invokeHook('onUntrigger',[instance,event]);if(!instance.state.isVisible){removeDocumentPress();return;}
if(instance.props.trigger.indexOf('mouseenter')>=0&&instance.props.trigger.indexOf('click')>=0&&['mouseleave','mousemove'].indexOf(event.type)>=0&&isVisibleFromClick){return;}
var delay=getDelay(false);if(delay){hideTimeout=setTimeout(function(){if(instance.state.isVisible){instance.hide();}},delay);}else{scheduleHideAnimationFrame=requestAnimationFrame(function(){instance.hide();});}}
function enable(){instance.state.isEnabled=true;}
function disable(){instance.hide();instance.state.isEnabled=false;}
function clearDelayTimeouts(){clearTimeout(showTimeout);clearTimeout(hideTimeout);cancelAnimationFrame(scheduleHideAnimationFrame);}
function setProps(partialProps){{warnWhen(instance.state.isDestroyed,createMemoryLeakWarning('setProps'));}
if(instance.state.isDestroyed){return;}
invokeHook('onBeforeUpdate',[instance,partialProps]);removeListeners();var prevProps=instance.props;var nextProps=evaluateProps(reference,Object.assign({},instance.props,{},partialProps,{ignoreAttributes:true}));instance.props=nextProps;addListeners();if(prevProps.interactiveDebounce!==nextProps.interactiveDebounce){cleanupInteractiveMouseListeners();debouncedOnMouseMove=debounce(onMouseMove,nextProps.interactiveDebounce);}
if(prevProps.triggerTarget&&!nextProps.triggerTarget){normalizeToArray(prevProps.triggerTarget).forEach(function(node){node.removeAttribute('aria-expanded');});}else if(nextProps.triggerTarget){reference.removeAttribute('aria-expanded');}
handleAriaExpandedAttribute();handleStyles();if(onUpdate){onUpdate(prevProps,nextProps);}
if(instance.popperInstance){createPopperInstance();getNestedPopperTree().forEach(function(nestedPopper){requestAnimationFrame(nestedPopper._tippy.popperInstance.forceUpdate);});}
invokeHook('onAfterUpdate',[instance,partialProps]);}
function setContent(content){instance.setProps({content:content});}
function show(){{warnWhen(instance.state.isDestroyed,createMemoryLeakWarning('show'));}
var isAlreadyVisible=instance.state.isVisible;var isDestroyed=instance.state.isDestroyed;var isDisabled=!instance.state.isEnabled;var isTouchAndTouchDisabled=currentInput.isTouch&&!instance.props.touch;var duration=getValueAtIndexOrReturn(instance.props.duration,0,defaultProps.duration);if(isAlreadyVisible||isDestroyed||isDisabled||isTouchAndTouchDisabled){return;}
if(getCurrentTarget().hasAttribute('disabled')){return;}
invokeHook('onShow',[instance],false);if(instance.props.onShow(instance)===false){return;}
instance.state.isVisible=true;if(getIsDefaultRenderFn()){popper.style.visibility='visible';}
handleStyles();addDocumentPress();if(!instance.state.isMounted){popper.style.transition='none';}
if(getIsDefaultRenderFn()){var _getDefaultTemplateCh2=getDefaultTemplateChildren(),box=_getDefaultTemplateCh2.box,content=_getDefaultTemplateCh2.content;setTransitionDuration([box,content],0);}
onFirstUpdate=function onFirstUpdate(){if(!instance.state.isVisible||ignoreOnFirstUpdate){return;}
ignoreOnFirstUpdate=true;void popper.offsetHeight;popper.style.transition=instance.props.moveTransition;if(getIsDefaultRenderFn()&&instance.props.animation){var _getDefaultTemplateCh3=getDefaultTemplateChildren(),_box=_getDefaultTemplateCh3.box,_content=_getDefaultTemplateCh3.content;setTransitionDuration([_box,_content],duration);setVisibilityState([_box,_content],'visible');}
handleAriaContentAttribute();handleAriaExpandedAttribute();pushIfUnique(mountedInstances,instance);instance.state.isMounted=true;invokeHook('onMount',[instance]);if(instance.props.animation&&getIsDefaultRenderFn()){onTransitionedIn(duration,function(){instance.state.isShown=true;invokeHook('onShown',[instance]);});}};mount();}
function hide(){{warnWhen(instance.state.isDestroyed,createMemoryLeakWarning('hide'));}
var isAlreadyHidden=!instance.state.isVisible;var isDestroyed=instance.state.isDestroyed;var isDisabled=!instance.state.isEnabled;var duration=getValueAtIndexOrReturn(instance.props.duration,1,defaultProps.duration);if(isAlreadyHidden||isDestroyed||isDisabled){return;}
invokeHook('onHide',[instance],false);if(instance.props.onHide(instance)===false){return;}
instance.state.isVisible=false;instance.state.isShown=false;ignoreOnFirstUpdate=false;if(getIsDefaultRenderFn()){popper.style.visibility='hidden';}
cleanupInteractiveMouseListeners();removeDocumentPress();handleStyles();if(getIsDefaultRenderFn()){var _getDefaultTemplateCh4=getDefaultTemplateChildren(),box=_getDefaultTemplateCh4.box,content=_getDefaultTemplateCh4.content;if(instance.props.animation){setTransitionDuration([box,content],duration);setVisibilityState([box,content],'hidden');}}
handleAriaContentAttribute();handleAriaExpandedAttribute();if(instance.props.animation){if(getIsDefaultRenderFn()){onTransitionedOut(duration,instance.unmount);}}else{instance.unmount();}}
function hideWithInteractivity(event){{warnWhen(instance.state.isDestroyed,createMemoryLeakWarning('hideWithInteractivity'));}
if(instance.state.isVisible){doc.body.addEventListener('mouseleave',scheduleHide);doc.addEventListener('mousemove',debouncedOnMouseMove);pushIfUnique(mouseMoveListeners,debouncedOnMouseMove);debouncedOnMouseMove(event);}}
function unmount(){{warnWhen(instance.state.isDestroyed,createMemoryLeakWarning('unmount'));}
if(instance.state.isVisible){instance.hide();}
if(!instance.state.isMounted){return;}
destroyPopperInstance();getNestedPopperTree().forEach(function(nestedPopper){nestedPopper._tippy.unmount();});if(popper.parentNode){popper.parentNode.removeChild(popper);}
mountedInstances=mountedInstances.filter(function(i){return i!==instance;});instance.state.isMounted=false;invokeHook('onHidden',[instance]);}
function destroy(){{warnWhen(instance.state.isDestroyed,createMemoryLeakWarning('destroy'));}
if(instance.state.isDestroyed){return;}
instance.clearDelayTimeouts();instance.unmount();removeListeners();delete reference._tippy;instance.state.isDestroyed=true;invokeHook('onDestroy',[instance]);}}
function tippy(targets,optionalProps){if(optionalProps===void 0){optionalProps={};}
var plugins=defaultProps.plugins.concat(optionalProps.plugins||[]);{validateTargets(targets);validateProps(optionalProps,plugins);}
bindGlobalEventListeners();var passedProps=Object.assign({},optionalProps,{plugins:plugins});var elements=getArrayOfElements(targets);{var isSingleContentElement=isElement(passedProps.content);var isMoreThanOneReferenceElement=elements.length>1;warnWhen(isSingleContentElement&&isMoreThanOneReferenceElement,['tippy() was passed an Element as the `content` prop, but more than','one tippy instance was created by this invocation. This means the','content element will only be appended to the last tippy instance.','\n\n','Instead, pass the .innerHTML of the element, or use a function that','returns a cloned version of the element instead.','\n\n','1) content: element.innerHTML\n','2) content: () => element.cloneNode(true)'].join(' '));}
var instances=elements.reduce(function(acc,reference){var instance=reference&&createTippy(reference,passedProps);if(instance){acc.push(instance);}
return acc;},[]);return isElement(targets)?instances[0]:instances;}
tippy.defaultProps=defaultProps;tippy.setDefaultProps=setDefaultProps;tippy.currentInput=currentInput;var hideAll=function hideAll(_temp){var _ref=_temp===void 0?{}:_temp,excludedReferenceOrInstance=_ref.exclude,duration=_ref.duration;mountedInstances.forEach(function(instance){var isExcluded=false;if(excludedReferenceOrInstance){isExcluded=isReferenceElement(excludedReferenceOrInstance)?instance.reference===excludedReferenceOrInstance:instance.popper===excludedReferenceOrInstance.popper;}
if(!isExcluded){var originalDuration=instance.props.duration;instance.setProps({duration:duration});instance.hide();if(!instance.state.isDestroyed){instance.setProps({duration:originalDuration});}}});};var createSingleton=function createSingleton(tippyInstances,optionalProps){if(optionalProps===void 0){optionalProps={};}{errorWhen(!Array.isArray(tippyInstances),['The first argument passed to createSingleton() must be an array of','tippy instances. The passed value was',String(tippyInstances)].join(' '));}
var mutTippyInstances=tippyInstances;var references=[];var currentTarget;var overrides=optionalProps.overrides;function setReferences(){references=mutTippyInstances.map(function(instance){return instance.reference;});}
function enableInstances(isEnabled){mutTippyInstances.forEach(function(instance){if(isEnabled){instance.enable();}else{instance.disable();}});}
enableInstances(false);setReferences();var singleton={fn:function fn(){return{onDestroy:function onDestroy(){enableInstances(true);},onTrigger:function onTrigger(instance,event){var target=event.currentTarget;var index=references.indexOf(target);if(target===currentTarget){return;}
currentTarget=target;var overrideProps=(overrides||[]).concat('content').reduce(function(acc,prop){acc[prop]=mutTippyInstances[index].props[prop];return acc;},{});instance.setProps(Object.assign({},overrideProps,{getReferenceClientRect:function getReferenceClientRect(){return target.getBoundingClientRect();}}));}};}};var instance=tippy(div(),Object.assign({},removeProperties(optionalProps,['overrides']),{plugins:[singleton].concat(optionalProps.plugins||[]),triggerTarget:references}));var originalSetProps=instance.setProps;instance.setProps=function(props){overrides=props.overrides||overrides;originalSetProps(props);};instance.setInstances=function(nextInstances){enableInstances(true);mutTippyInstances=nextInstances;enableInstances(false);setReferences();instance.setProps({triggerTarget:references});};return instance;};var BUBBLING_EVENTS_MAP={mouseover:'mouseenter',focusin:'focus',click:'click'};function delegate(targets,props){{errorWhen(!(props&&props.target),['You must specity a `target` prop indicating a CSS selector string matching','the target elements that should receive a tippy.'].join(' '));}
var listeners=[];var childTippyInstances=[];var target=props.target;var nativeProps=removeProperties(props,['target']);var parentProps=Object.assign({},nativeProps,{trigger:'manual',touch:false});var childProps=Object.assign({},nativeProps,{showOnCreate:true});var returnValue=tippy(targets,parentProps);var normalizedReturnValue=normalizeToArray(returnValue);function onTrigger(event){if(!event.target){return;}
var targetNode=event.target.closest(target);if(!targetNode){return;}
var trigger=targetNode.getAttribute('data-tippy-trigger')||props.trigger||defaultProps.trigger;if(targetNode._tippy){return;}
if(event.type==='touchstart'&&typeof childProps.touch==='boolean'){return;}
if(event.type!=='touchstart'&&trigger.indexOf(BUBBLING_EVENTS_MAP[event.type])){return;}
var instance=tippy(targetNode,childProps);if(instance){childTippyInstances=childTippyInstances.concat(instance);}}
function on(node,eventType,handler,options){if(options===void 0){options=false;}
node.addEventListener(eventType,handler,options);listeners.push({node:node,eventType:eventType,handler:handler,options:options});}
function addEventListeners(instance){var reference=instance.reference;on(reference,'touchstart',onTrigger);on(reference,'mouseover',onTrigger);on(reference,'focusin',onTrigger);on(reference,'click',onTrigger);}
function removeEventListeners(){listeners.forEach(function(_ref){var node=_ref.node,eventType=_ref.eventType,handler=_ref.handler,options=_ref.options;node.removeEventListener(eventType,handler,options);});listeners=[];}
function applyMutations(instance){var originalDestroy=instance.destroy;instance.destroy=function(shouldDestroyChildInstances){if(shouldDestroyChildInstances===void 0){shouldDestroyChildInstances=true;}
if(shouldDestroyChildInstances){childTippyInstances.forEach(function(instance){instance.destroy();});}
childTippyInstances=[];removeEventListeners();originalDestroy();};addEventListeners(instance);}
normalizedReturnValue.forEach(applyMutations);return returnValue;}
var animateFill={name:'animateFill',defaultValue:false,fn:function fn(instance){var _instance$props$rende;if(!((_instance$props$rende=instance.props.render)==null?void 0:_instance$props$rende.$$tippy)){{errorWhen(instance.props.animateFill,'The `animateFill` plugin requires the default render function.');}
return{};}
var _getChildren=getChildren(instance.popper),box=_getChildren.box,content=_getChildren.content;var backdrop=instance.props.animateFill?createBackdropElement():null;return{onCreate:function onCreate(){if(backdrop){box.insertBefore(backdrop,box.firstElementChild);box.setAttribute('data-animatefill','');box.style.overflow='hidden';instance.setProps({arrow:false,animation:'shift-away'});}},onMount:function onMount(){if(backdrop){var transitionDuration=box.style.transitionDuration;var duration=Number(transitionDuration.replace('ms',''));content.style.transitionDelay=Math.round(duration / 10)+"ms";backdrop.style.transitionDuration=transitionDuration;setVisibilityState([backdrop],'visible');}},onShow:function onShow(){if(backdrop){backdrop.style.transitionDuration='0ms';}},onHide:function onHide(){if(backdrop){setVisibilityState([backdrop],'hidden');}}};}};function createBackdropElement(){var backdrop=div();backdrop.className=BACKDROP_CLASS;setVisibilityState([backdrop],'hidden');return backdrop;}
var followCursor={name:'followCursor',defaultValue:false,fn:function fn(instance){var reference=instance.reference;var doc=getOwnerDocument(instance.props.triggerTarget||reference);var initialMouseCoords=null;function getIsManual(){return instance.props.trigger.trim()==='manual';}
function getIsEnabled(){var isValidMouseEvent=getIsManual()?true:initialMouseCoords!==null&&!(initialMouseCoords.clientX===0&&initialMouseCoords.clientY===0);return instance.props.followCursor&&isValidMouseEvent;}
function getIsInitialBehavior(){return currentInput.isTouch||instance.props.followCursor==='initial'&&instance.state.isVisible;}
function unsetReferenceClientRect(shouldUnset){if(shouldUnset){instance.setProps({getReferenceClientRect:null});}}
function handleMouseMoveListener(){if(getIsEnabled()){addListener();}else{unsetReferenceClientRect(instance.props.followCursor);}}
function triggerLastMouseMove(){if(getIsEnabled()){onMouseMove(initialMouseCoords);}}
function addListener(){doc.addEventListener('mousemove',onMouseMove);}
function removeListener(){doc.removeEventListener('mousemove',onMouseMove);}
function onMouseMove(event){initialMouseCoords={clientX:event.clientX,clientY:event.clientY};var isCursorOverReference=event.target?reference.contains(event.target):true;var followCursor=instance.props.followCursor;var clientX=event.clientX,clientY=event.clientY;var rect=reference.getBoundingClientRect();var relativeX=clientX-rect.left;var relativeY=clientY-rect.top;if(isCursorOverReference||!instance.props.interactive){instance.setProps({getReferenceClientRect:function getReferenceClientRect(){var rect=reference.getBoundingClientRect();var x=clientX;var y=clientY;if(followCursor==='initial'){x=rect.left+relativeX;y=rect.top+relativeY;}
var top=followCursor==='horizontal'?rect.top:y;var right=followCursor==='vertical'?rect.right:x;var bottom=followCursor==='horizontal'?rect.bottom:y;var left=followCursor==='vertical'?rect.left:x;return{width:right-left,height:bottom-top,top:top,right:right,bottom:bottom,left:left};}});}
if(getIsInitialBehavior()){removeListener();}}
return{onAfterUpdate:function onAfterUpdate(_,_ref){var followCursor=_ref.followCursor;if(followCursor!==undefined&&!followCursor){unsetReferenceClientRect(true);}},onMount:function onMount(){triggerLastMouseMove();},onShow:function onShow(){if(getIsManual()){initialMouseCoords={clientX:0,clientY:0};handleMouseMoveListener();}},onTrigger:function onTrigger(_,event){if(initialMouseCoords){return;}
if(isMouseEvent(event)){initialMouseCoords={clientX:event.clientX,clientY:event.clientY};}
handleMouseMoveListener();},onUntrigger:function onUntrigger(){if(!instance.state.isVisible){removeListener();initialMouseCoords=null;}},onHidden:function onHidden(){removeListener();initialMouseCoords=null;}};}};var inlinePositioning={name:'inlinePositioning',defaultValue:false,fn:function fn(instance){var reference=instance.reference;function isEnabled(){return!!instance.props.inlinePositioning;}
var placement;var modifier={name:'tippyInlinePositioning',enabled:true,phase:'afterWrite',fn:function fn(_ref){var state=_ref.state;if(isEnabled()){if(placement!==state.placement){instance.setProps({getReferenceClientRect:function getReferenceClientRect(){return _getReferenceClientRect(state.placement);}});}
placement=state.placement;}}};function _getReferenceClientRect(placement){return getInlineBoundingClientRect(getBasePlacement(placement),reference.getBoundingClientRect(),arrayFrom(reference.getClientRects()));}
return{onCreate:function onCreate(){var _instance$props$poppe;instance.setProps({popperOptions:Object.assign({},instance.props.popperOptions,{modifiers:[].concat(((_instance$props$poppe=instance.props.popperOptions)==null?void 0:_instance$props$poppe.modifiers)||[],[modifier])})});}};}};function getInlineBoundingClientRect(currentBasePlacement,boundingRect,clientRects){if(clientRects.length<2||currentBasePlacement===null){return boundingRect;}
switch(currentBasePlacement){case'top':case'bottom':{var firstRect=clientRects[0];var lastRect=clientRects[clientRects.length-1];var isTop=currentBasePlacement==='top';var top=firstRect.top;var bottom=lastRect.bottom;var left=isTop?firstRect.left:lastRect.left;var right=isTop?firstRect.right:lastRect.right;var width=right-left;var height=bottom-top;return{top:top,bottom:bottom,left:left,right:right,width:width,height:height};}
case'left':case'right':{var minLeft=Math.min.apply(Math,clientRects.map(function(rects){return rects.left;}));var maxRight=Math.max.apply(Math,clientRects.map(function(rects){return rects.right;}));var measureRects=clientRects.filter(function(rect){return currentBasePlacement==='left'?rect.left===minLeft:rect.right===maxRight;});var _top=measureRects[0].top;var _bottom=measureRects[measureRects.length-1].bottom;var _left=minLeft;var _right=maxRight;var _width=_right-_left;var _height=_bottom-_top;return{top:_top,bottom:_bottom,left:_left,right:_right,width:_width,height:_height};}
default:{return boundingRect;}}}
var sticky={name:'sticky',defaultValue:false,fn:function fn(instance){var reference=instance.reference,popper=instance.popper;function getReference(){return instance.popperInstance?instance.popperInstance.state.elements.reference:reference;}
function shouldCheck(value){return instance.props.sticky===true||instance.props.sticky===value;}
var prevRefRect=null;var prevPopRect=null;function updatePosition(){var currentRefRect=shouldCheck('reference')?getReference().getBoundingClientRect():null;var currentPopRect=shouldCheck('popper')?popper.getBoundingClientRect():null;if(currentRefRect&&areRectsDifferent(prevRefRect,currentRefRect)||currentPopRect&&areRectsDifferent(prevPopRect,currentPopRect)){if(instance.popperInstance){instance.popperInstance.update();}}
prevRefRect=currentRefRect;prevPopRect=currentPopRect;if(instance.state.isMounted){requestAnimationFrame(updatePosition);}}
return{onMount:function onMount(){if(instance.props.sticky){updatePosition();}}};}};function areRectsDifferent(rectA,rectB){if(rectA&&rectB){return rectA.top!==rectB.top||rectA.right!==rectB.right||rectA.bottom!==rectB.bottom||rectA.left!==rectB.left;}
return true;}
if(isBrowser){injectCSS(css);}
tippy.setDefaultProps({plugins:[animateFill,followCursor,inlinePositioning,sticky],render:render});tippy.createSingleton=createSingleton;tippy.delegate=delegate;tippy.hideAll=hideAll;tippy.roundArrow=ROUND_ARROW;return tippy;})));;;(function(name,context,definition){"use strict";if(typeof module!=="undefined"&&module.exports){module.exports=definition();}
else if(typeof define==="function"&&define.amd){define(definition);}
else{context[name]=definition();}})("Fingerprint2",this,function(){"use strict";if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement,fromIndex){var k;if(this==null){throw new TypeError("'this' is null or undefined");}
var O=Object(this);var len=O.length>>>0;if(len===0){return-1;}
var n=+fromIndex||0;if(Math.abs(n)===Infinity){n=0;}
if(n>=len){return-1;}
k=Math.max(n>=0?n:len-Math.abs(n),0);while(k<len){if(k in O&&O[k]===searchElement){return k;}
k++;}
return-1;};}
var Fingerprint2=function(options){var defaultOptions={swfContainerId:"fingerprintjs2",swfPath:"flash/compiled/FontList.swf",sortPluginsFor:[/palemoon/i]};this.options=this.extend(options,defaultOptions);this.nativeForEach=Array.prototype.forEach;this.nativeMap=Array.prototype.map;};Fingerprint2.prototype={extend:function(source,target){if(source==null){return target;}
for(var k in source){if(source[k]!=null&&target[k]!==source[k]){target[k]=source[k];}}
return target;},log:function(msg){if(window.console){console.log(msg);}},get:function(done){var keys=[];keys=this.userAgentKey(keys);keys=this.languageKey(keys);keys=this.colorDepthKey(keys);keys=this.screenResolutionKey(keys);keys=this.timezoneOffsetKey(keys);keys=this.sessionStorageKey(keys);keys=this.localStorageKey(keys);keys=this.indexedDbKey(keys);keys=this.addBehaviorKey(keys);keys=this.openDatabaseKey(keys);keys=this.cpuClassKey(keys);keys=this.platformKey(keys);keys=this.doNotTrackKey(keys);keys=this.pluginsKey(keys);keys=this.canvasKey(keys);keys=this.webglKey(keys);keys=this.adBlockKey(keys);keys=this.hasLiedLanguagesKey(keys);keys=this.hasLiedResolutionKey(keys);keys=this.hasLiedOsKey(keys);keys=this.hasLiedBrowserKey(keys);keys=this.touchSupportKey(keys);var that=this;this.fontsKey(keys,function(newKeys){var murmur=that.x64hash128(newKeys.join("~~~"),31);return done(murmur);});},get2:function(done){var keys=[];keys=this.userAgentKey(keys);keys=this.languageKey(keys);keys=this.colorDepthKey(keys);keys=this.screenResolutionKey(keys);keys=this.timezoneOffsetKey(keys);keys=this.sessionStorageKey(keys);keys=this.localStorageKey(keys);keys=this.indexedDbKey(keys);keys=this.addBehaviorKey(keys);keys=this.openDatabaseKey(keys);keys=this.cpuClassKey(keys);keys=this.platformKey(keys);keys=this.doNotTrackKey(keys);keys=this.pluginsKey(keys);keys=this.canvasKey(keys);keys=this.webglKey(keys);keys=this.adBlockKey(keys);keys=this.hasLiedLanguagesKey(keys);keys=this.hasLiedResolutionKey(keys);keys=this.hasLiedOsKey(keys);keys=this.hasLiedBrowserKey(keys);keys=this.touchSupportKey(keys);var that=this;var murmur=that.x64hash128(keys.join("~~~"),31);return done(murmur);},userAgentKey:function(keys){if(!this.options.excludeUserAgent){keys.push(this.getUserAgent());}
return keys;},getUserAgent:function(){return navigator.userAgent;},languageKey:function(keys){if(!this.options.excludeLanguage){keys.push(navigator.language);}
return keys;},colorDepthKey:function(keys){if(!this.options.excludeColorDepth){keys.push(screen.colorDepth);}
return keys;},screenResolutionKey:function(keys){if(!this.options.excludeScreenResolution){return this.getScreenResolution(keys);}
return keys;},getScreenResolution:function(keys){var resolution;var available;if(this.options.detectScreenOrientation){resolution=(screen.height>screen.width)?[screen.height,screen.width]:[screen.width,screen.height];}else{resolution=[screen.width,screen.height];}
if(typeof resolution!=="undefined"){keys.push(resolution);}
if(screen.availWidth&&screen.availHeight){if(this.options.detectScreenOrientation){available=(screen.availHeight>screen.availWidth)?[screen.availHeight,screen.availWidth]:[screen.availWidth,screen.availHeight];}else{available=[screen.availHeight,screen.availWidth];}}
if(typeof available!=="undefined"){keys.push(available);}
return keys;},timezoneOffsetKey:function(keys){if(!this.options.excludeTimezoneOffset){keys.push(new Date().getTimezoneOffset());}
return keys;},sessionStorageKey:function(keys){if(!this.options.excludeSessionStorage&&this.hasSessionStorage()){keys.push("sessionStorageKey");}
return keys;},localStorageKey:function(keys){if(!this.options.excludeSessionStorage&&this.hasLocalStorage()){keys.push("localStorageKey");}
return keys;},indexedDbKey:function(keys){if(!this.options.excludeIndexedDB&&this.hasIndexedDB()){keys.push("indexedDbKey");}
return keys;},addBehaviorKey:function(keys){if(document.body&&!this.options.excludeAddBehavior&&document.body.addBehavior){keys.push("addBehaviorKey");}
return keys;},openDatabaseKey:function(keys){if(!this.options.excludeOpenDatabase&&window.openDatabase){keys.push("openDatabase");}
return keys;},cpuClassKey:function(keys){if(!this.options.excludeCpuClass){keys.push(this.getNavigatorCpuClass());}
return keys;},platformKey:function(keys){if(!this.options.excludePlatform){keys.push(this.getNavigatorPlatform());}
return keys;},doNotTrackKey:function(keys){if(!this.options.excludeDoNotTrack){keys.push(this.getDoNotTrack());}
return keys;},canvasKey:function(keys){if(!this.options.excludeCanvas&&this.isCanvasSupported()){keys.push(this.getCanvasFp());}
return keys;},webglKey:function(keys){if(this.options.excludeWebGL){if(typeof NODEBUG==="undefined"){this.log("Skipping WebGL fingerprinting per excludeWebGL configuration option");}
return keys;}
if(!this.isWebGlSupported()){if(typeof NODEBUG==="undefined"){this.log("Skipping WebGL fingerprinting because it is not supported in this browser");}
return keys;}
keys.push(this.getWebglFp());return keys;},adBlockKey:function(keys){if(!this.options.excludeAdBlock){keys.push(this.getAdBlock());}
return keys;},hasLiedLanguagesKey:function(keys){if(!this.options.excludeHasLiedLanguages){keys.push(this.getHasLiedLanguages());}
return keys;},hasLiedResolutionKey:function(keys){if(!this.options.excludeHasLiedResolution){keys.push(this.getHasLiedResolution());}
return keys;},hasLiedOsKey:function(keys){if(!this.options.excludeHasLiedOs){keys.push(this.getHasLiedOs());}
return keys;},hasLiedBrowserKey:function(keys){if(!this.options.excludeHasLiedBrowser){keys.push(this.getHasLiedBrowser());}
return keys;},fontsKey:function(keys,done){if(this.options.excludeJsFonts){return this.flashFontsKey(keys,done);}
return this.jsFontsKey(keys,done);},flashFontsKey:function(keys,done){if(this.options.excludeFlashFonts){if(typeof NODEBUG==="undefined"){this.log("Skipping flash fonts detection per excludeFlashFonts configuration option");}
return done(keys);}
if(!this.hasSwfObjectLoaded()){if(typeof NODEBUG==="undefined"){this.log("Swfobject is not detected, Flash fonts enumeration is skipped");}
return done(keys);}
if(!this.hasMinFlashInstalled()){if(typeof NODEBUG==="undefined"){this.log("Flash is not installed, skipping Flash fonts enumeration");}
return done(keys);}
if(typeof this.options.swfPath==="undefined"){if(typeof NODEBUG==="undefined"){this.log("To use Flash fonts detection, you must pass a valid swfPath option, skipping Flash fonts enumeration");}
return done(keys);}
this.loadSwfAndDetectFonts(function(fonts){keys.push(fonts.join(";"));done(keys);});},jsFontsKey:function(keys,done){return setTimeout(function(){var baseFonts=["monospace","sans-serif","serif"];var testString="mmmmmmmmmmlli";var testSize="72px";var h=document.getElementsByTagName("body")[0];var s=document.createElement("span");s.style.fontSize=testSize;s.innerHTML=testString;var defaultWidth={};var defaultHeight={};for(var index in baseFonts){s.style.fontFamily=baseFonts[index];h.appendChild(s);defaultWidth[baseFonts[index]]=s.offsetWidth;defaultHeight[baseFonts[index]]=s.offsetHeight;h.removeChild(s);}
var detect=function(font){var detected=false;for(var index in baseFonts){s.style.fontFamily=font+","+baseFonts[index];h.appendChild(s);var matched=(s.offsetWidth!==defaultWidth[baseFonts[index]]||s.offsetHeight!==defaultHeight[baseFonts[index]]);h.removeChild(s);detected=detected||matched;}
return detected;};var fontList=["Abadi MT Condensed Light","Academy Engraved LET","ADOBE CASLON PRO","Adobe Garamond","ADOBE GARAMOND PRO","Agency FB","Aharoni","Albertus Extra Bold","Albertus Medium","Algerian","Amazone BT","American Typewriter","American Typewriter Condensed","AmerType Md BT","Andale Mono","Andalus","Angsana New","AngsanaUPC","Antique Olive","Aparajita","Apple Chancery","Apple Color Emoji","Apple SD Gothic Neo","Arabic Typesetting","ARCHER","Arial","Arial Black","Arial Hebrew","Arial MT","Arial Narrow","Arial Rounded MT Bold","Arial Unicode MS","ARNO PRO","Arrus BT","Aurora Cn BT","AvantGarde Bk BT","AvantGarde Md BT","AVENIR","Ayuthaya","Bandy","Bangla Sangam MN","Bank Gothic","BankGothic Md BT","Baskerville","Baskerville Old Face","Batang","BatangChe","Bauer Bodoni","Bauhaus 93","Bazooka","Bell MT","Bembo","Benguiat Bk BT","Berlin Sans FB","Berlin Sans FB Demi","Bernard MT Condensed","BernhardFashion BT","BernhardMod BT","Big Caslon","BinnerD","Bitstream Vera Sans Mono","Blackadder ITC","BlairMdITC TT","Bodoni 72","Bodoni 72 Oldstyle","Bodoni 72 Smallcaps","Bodoni MT","Bodoni MT Black","Bodoni MT Condensed","Bodoni MT Poster Compressed","Book Antiqua","Bookman Old Style","Bookshelf Symbol 7","Boulder","Bradley Hand","Bradley Hand ITC","Bremen Bd BT","Britannic Bold","Broadway","Browallia New","BrowalliaUPC","Brush Script MT","Calibri","Californian FB","Calisto MT","Calligrapher","Cambria","Cambria Math","Candara","CaslonOpnface BT","Castellar","Centaur","Century","Century Gothic","Century Schoolbook","Cezanne","CG Omega","CG Times","Chalkboard","Chalkboard SE","Chalkduster","Charlesworth","Charter Bd BT","Charter BT","Chaucer","ChelthmITC Bk BT","Chiller","Clarendon","Clarendon Condensed","CloisterBlack BT","Cochin","Colonna MT","Comic Sans","Comic Sans MS","Consolas","Constantia","Cooper Black","Copperplate","Copperplate Gothic","Copperplate Gothic Bold","Copperplate Gothic Light","CopperplGoth Bd BT","Corbel","Cordia New","CordiaUPC","Cornerstone","Coronet","Courier","Courier New","Cuckoo","Curlz MT","DaunPenh","Dauphin","David","DB LCD Temp","DELICIOUS","Denmark","Devanagari Sangam MN","DFKai-SB","Didot","DilleniaUPC","DIN","DokChampa","Dotum","DotumChe","Ebrima","Edwardian Script ITC","Elephant","English 111 Vivace BT","Engravers MT","EngraversGothic BT","Eras Bold ITC","Eras Demi ITC","Eras Light ITC","Eras Medium ITC","Estrangelo Edessa","EucrosiaUPC","Euphemia","Euphemia UCAS","EUROSTILE","Exotc350 Bd BT","FangSong","Felix Titling","Fixedsys","FONTIN","Footlight MT Light","Forte","Franklin Gothic","Franklin Gothic Book","Franklin Gothic Demi","Franklin Gothic Demi Cond","Franklin Gothic Heavy","Franklin Gothic Medium","Franklin Gothic Medium Cond","FrankRuehl","Fransiscan","Freefrm721 Blk BT","FreesiaUPC","Freestyle Script","French Script MT","FrnkGothITC Bk BT","Fruitger","FRUTIGER","Futura","Futura Bk BT","Futura Lt BT","Futura Md BT","Futura ZBlk BT","FuturaBlack BT","Gabriola","Galliard BT","Garamond","Gautami","Geeza Pro","Geneva","Geometr231 BT","Geometr231 Hv BT","Geometr231 Lt BT","Georgia","GeoSlab 703 Lt BT","GeoSlab 703 XBd BT","Gigi","Gill Sans","Gill Sans MT","Gill Sans MT Condensed","Gill Sans MT Ext Condensed Bold","Gill Sans Ultra Bold","Gill Sans Ultra Bold Condensed","Gisha","Gloucester MT Extra Condensed","GOTHAM","GOTHAM BOLD","Goudy Old Style","Goudy Stout","GoudyHandtooled BT","GoudyOLSt BT","Gujarati Sangam MN","Gulim","GulimChe","Gungsuh","GungsuhChe","Gurmukhi MN","Haettenschweiler","Harlow Solid Italic","Harrington","Heather","Heiti SC","Heiti TC","HELV","Helvetica","Helvetica Neue","Herald","High Tower Text","Hiragino Kaku Gothic ProN","Hiragino Mincho ProN","Hoefler Text","Humanst 521 Cn BT","Humanst521 BT","Humanst521 Lt BT","Impact","Imprint MT Shadow","Incised901 Bd BT","Incised901 BT","Incised901 Lt BT","INCONSOLATA","Informal Roman","Informal011 BT","INTERSTATE","IrisUPC","Iskoola Pota","JasmineUPC","Jazz LET","Jenson","Jester","Jokerman","Juice ITC","Kabel Bk BT","Kabel Ult BT","Kailasa","KaiTi","Kalinga","Kannada Sangam MN","Kartika","Kaufmann Bd BT","Kaufmann BT","Khmer UI","KodchiangUPC","Kokila","Korinna BT","Kristen ITC","Krungthep","Kunstler Script","Lao UI","Latha","Leelawadee","Letter Gothic","Levenim MT","LilyUPC","Lithograph","Lithograph Light","Long Island","Lucida Bright","Lucida Calligraphy","Lucida Console","Lucida Fax","LUCIDA GRANDE","Lucida Handwriting","Lucida Sans","Lucida Sans Typewriter","Lucida Sans Unicode","Lydian BT","Magneto","Maiandra GD","Malayalam Sangam MN","Malgun Gothic","Mangal","Marigold","Marion","Marker Felt","Market","Marlett","Matisse ITC","Matura MT Script Capitals","Meiryo","Meiryo UI","Microsoft Himalaya","Microsoft JhengHei","Microsoft New Tai Lue","Microsoft PhagsPa","Microsoft Sans Serif","Microsoft Tai Le","Microsoft Uighur","Microsoft YaHei","Microsoft Yi Baiti","MingLiU","MingLiU_HKSCS","MingLiU_HKSCS-ExtB","MingLiU-ExtB","Minion","Minion Pro","Miriam","Miriam Fixed","Mistral","Modern","Modern No. 20","Mona Lisa Solid ITC TT","Monaco","Mongolian Baiti","MONO","Monotype Corsiva","MoolBoran","Mrs Eaves","MS Gothic","MS LineDraw","MS Mincho","MS Outlook","MS PGothic","MS PMincho","MS Reference Sans Serif","MS Reference Specialty","MS Sans Serif","MS Serif","MS UI Gothic","MT Extra","MUSEO","MV Boli","MYRIAD","MYRIAD PRO","Nadeem","Narkisim","NEVIS","News Gothic","News GothicMT","NewsGoth BT","Niagara Engraved","Niagara Solid","Noteworthy","NSimSun","Nyala","OCR A Extended","Old Century","Old English Text MT","Onyx","Onyx BT","OPTIMA","Oriya Sangam MN","OSAKA","OzHandicraft BT","Palace Script MT","Palatino","Palatino Linotype","Papyrus","Parchment","Party LET","Pegasus","Perpetua","Perpetua Titling MT","PetitaBold","Pickwick","Plantagenet Cherokee","Playbill","PMingLiU","PMingLiU-ExtB","Poor Richard","Poster","PosterBodoni BT","PRINCETOWN LET","Pristina","PTBarnum BT","Pythagoras","Raavi","Rage Italic","Ravie","Ribbon131 Bd BT","Rockwell","Rockwell Condensed","Rockwell Extra Bold","Rod","Roman","Sakkal Majalla","Santa Fe LET","Savoye LET","Sceptre","Script","Script MT Bold","SCRIPTINA","Segoe Print","Segoe Script","Segoe UI","Segoe UI Light","Segoe UI Semibold","Segoe UI Symbol","Serifa","Serifa BT","Serifa Th BT","ShelleyVolante BT","Sherwood","Shonar Bangla","Showcard Gothic","Shruti","Signboard","SILKSCREEN","SimHei","Simplified Arabic","Simplified Arabic Fixed","SimSun","SimSun-ExtB","Sinhala Sangam MN","Sketch Rockwell","Skia","Small Fonts","Snap ITC","Snell Roundhand","Socket","Souvenir Lt BT","Staccato222 BT","Steamer","Stencil","Storybook","Styllo","Subway","Swis721 BlkEx BT","Swiss911 XCm BT","Sylfaen","Synchro LET","System","Tahoma","Tamil Sangam MN","Technical","Teletype","Telugu Sangam MN","Tempus Sans ITC","Terminal","Thonburi","Times","Times New Roman","Times New Roman PS","Traditional Arabic","Trajan","TRAJAN PRO","Trebuchet MS","Tristan","Tubular","Tunga","Tw Cen MT","Tw Cen MT Condensed","Tw Cen MT Condensed Extra Bold","TypoUpright BT","Unicorn","Univers","Univers CE 55 Medium","Univers Condensed","Utsaah","Vagabond","Vani","Verdana","Vijaya","Viner Hand ITC","VisualUI","Vivaldi","Vladimir Script","Vrinda","Westminster","WHITNEY","Wide Latin","Wingdings","Wingdings 2","Wingdings 3","ZapfEllipt BT","ZapfHumnst BT","ZapfHumnst Dm BT","Zapfino","Zurich BlkEx BT","Zurich Ex BT","ZWAdobeF"];var available=[];for(var i=0,l=fontList.length;i<l;i++){if(detect(fontList[i])){available.push(fontList[i]);}}
keys.push(available.join(";"));done(keys);},1);},pluginsKey:function(keys){if(!this.options.excludePlugins){if(this.isIE()){keys.push(this.getIEPluginsString());}else{keys.push(this.getRegularPluginsString());}}
return keys;},getRegularPluginsString:function(){var plugins=[];for(var i=0,l=navigator.plugins.length;i<l;i++){plugins.push(navigator.plugins[i]);}
if(this.pluginsShouldBeSorted()){plugins=plugins.sort(function(a,b){if(a.name>b.name){return 1;}
if(a.name<b.name){return-1;}
return 0;});}
return this.map(plugins,function(p){var mimeTypes=this.map(p,function(mt){return[mt.type,mt.suffixes].join("~");}).join(",");return[p.name,p.description,mimeTypes].join("::");},this).join(";");},getIEPluginsString:function(){if(window.ActiveXObject){var names=["AcroPDF.PDF","Adodb.Stream","AgControl.AgControl","DevalVRXCtrl.DevalVRXCtrl.1","MacromediaFlashPaper.MacromediaFlashPaper","Msxml2.DOMDocument","Msxml2.XMLHTTP","PDF.PdfCtrl","QuickTime.QuickTime","QuickTimeCheckObject.QuickTimeCheck.1","RealPlayer","RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)","RealVideo.RealVideo(tm) ActiveX Control (32-bit)","Scripting.Dictionary","SWCtl.SWCtl","Shell.UIHelper","ShockwaveFlash.ShockwaveFlash","Skype.Detection","TDCCtl.TDCCtl","WMPlayer.OCX","rmocx.RealPlayer G2 Control","rmocx.RealPlayer G2 Control.1"];return this.map(names,function(name){try{new ActiveXObject(name);return name;}catch(e){return null;}}).join(";");}else{return"";}},pluginsShouldBeSorted:function(){var should=false;for(var i=0,l=this.options.sortPluginsFor.length;i<l;i++){var re=this.options.sortPluginsFor[i];if(navigator.userAgent.match(re)){should=true;break;}}
return should;},touchSupportKey:function(keys){if(!this.options.excludeTouchSupport){keys.push(this.getTouchSupport());}
return keys;},hasSessionStorage:function(){try{return!!window.sessionStorage;}catch(e){return true;}},hasLocalStorage:function(){try{return!!window.localStorage;}catch(e){return true;}},hasIndexedDB:function(){return!!window.indexedDB;},getNavigatorCpuClass:function(){if(navigator.cpuClass){return"navigatorCpuClass: "+navigator.cpuClass;}else{return"navigatorCpuClass: unknown";}},getNavigatorPlatform:function(){if(navigator.platform){return"navigatorPlatform: "+navigator.platform;}else{return"navigatorPlatform: unknown";}},getDoNotTrack:function(){if(navigator.doNotTrack){return"doNotTrack: "+navigator.doNotTrack;}else{return"doNotTrack: unknown";}},getTouchSupport:function(){var maxTouchPoints=0;var touchEvent=false;if(typeof navigator.maxTouchPoints!=="undefined"){maxTouchPoints=navigator.maxTouchPoints;}else if(typeof navigator.msMaxTouchPoints!=="undefined"){maxTouchPoints=navigator.msMaxTouchPoints;}
try{document.createEvent("TouchEvent");touchEvent=true;}catch(_){}
var touchStart="ontouchstart"in window;return[maxTouchPoints,touchEvent,touchStart];},getCanvasFp:function(){var result=[];var canvas=document.createElement("canvas");canvas.width=2000;canvas.height=200;canvas.style.display="inline";var ctx=canvas.getContext("2d");ctx.rect(0,0,10,10);ctx.rect(2,2,6,6);result.push("canvas winding:"+((ctx.isPointInPath(5,5,"evenodd")===false)?"yes":"no"));ctx.textBaseline="alphabetic";ctx.fillStyle="#f60";ctx.fillRect(125,1,62,20);ctx.fillStyle="#069";if(this.options.dontUseFakeFontInCanvas){ctx.font="11pt Arial";}else{ctx.font="11pt no-real-font-123";}
ctx.fillText("Cwm fjordbank glyphs vext quiz, \ud83d\ude03",2,15);ctx.fillStyle="rgba(102, 204, 0, 0.7)";ctx.font="18pt Arial";ctx.fillText("Cwm fjordbank glyphs vext quiz, \ud83d\ude03",4,45);ctx.globalCompositeOperation="multiply";ctx.fillStyle="rgb(255,0,255)";ctx.beginPath();ctx.arc(50,50,50,0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.fillStyle="rgb(0,255,255)";ctx.beginPath();ctx.arc(100,50,50,0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.fillStyle="rgb(255,255,0)";ctx.beginPath();ctx.arc(75,100,50,0,Math.PI*2,true);ctx.closePath();ctx.fill();ctx.fillStyle="rgb(255,0,255)";ctx.arc(75,75,75,0,Math.PI*2,true);ctx.arc(75,75,25,0,Math.PI*2,true);ctx.fill("evenodd");result.push("canvas fp:"+canvas.toDataURL());return result.join("~");},getWebglFp:function(){var gl;var fa2s=function(fa){gl.clearColor(0.0,0.0,0.0,1.0);gl.enable(gl.DEPTH_TEST);gl.depthFunc(gl.LEQUAL);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);return"["+fa[0]+", "+fa[1]+"]";};var maxAnisotropy=function(gl){var anisotropy,ext=gl.getExtension("EXT_texture_filter_anisotropic")||gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||gl.getExtension("MOZ_EXT_texture_filter_anisotropic");return ext?(anisotropy=gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT),0===anisotropy&&(anisotropy=2),anisotropy):null;};gl=this.getWebglCanvas();if(!gl){return null;}
var result=[];var vShaderTemplate="attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}";var fShaderTemplate="precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}";var vertexPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertexPosBuffer);var vertices=new Float32Array([-.2,-.9,0,.4,-.26,0,0,.732134444,0]);gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);vertexPosBuffer.itemSize=3;vertexPosBuffer.numItems=3;var program=gl.createProgram(),vshader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vshader,vShaderTemplate);gl.compileShader(vshader);var fshader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fshader,fShaderTemplate);gl.compileShader(fshader);gl.attachShader(program,vshader);gl.attachShader(program,fshader);gl.linkProgram(program);gl.useProgram(program);program.vertexPosAttrib=gl.getAttribLocation(program,"attrVertex");program.offsetUniform=gl.getUniformLocation(program,"uniformOffset");gl.enableVertexAttribArray(program.vertexPosArray);gl.vertexAttribPointer(program.vertexPosAttrib,vertexPosBuffer.itemSize,gl.FLOAT,!1,0,0);gl.uniform2f(program.offsetUniform,1,1);gl.drawArrays(gl.TRIANGLE_STRIP,0,vertexPosBuffer.numItems);if(gl.canvas!=null){result.push(gl.canvas.toDataURL());}
result.push("extensions:"+gl.getSupportedExtensions().join(";"));result.push("webgl aliased line width range:"+fa2s(gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE)));result.push("webgl aliased point size range:"+fa2s(gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)));result.push("webgl alpha bits:"+gl.getParameter(gl.ALPHA_BITS));result.push("webgl antialiasing:"+(gl.getContextAttributes().antialias?"yes":"no"));result.push("webgl blue bits:"+gl.getParameter(gl.BLUE_BITS));result.push("webgl depth bits:"+gl.getParameter(gl.DEPTH_BITS));result.push("webgl green bits:"+gl.getParameter(gl.GREEN_BITS));result.push("webgl max anisotropy:"+maxAnisotropy(gl));result.push("webgl max combined texture image units:"+gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS));result.push("webgl max cube map texture size:"+gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE));result.push("webgl max fragment uniform vectors:"+gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS));result.push("webgl max render buffer size:"+gl.getParameter(gl.MAX_RENDERBUFFER_SIZE));result.push("webgl max texture image units:"+gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));result.push("webgl max texture size:"+gl.getParameter(gl.MAX_TEXTURE_SIZE));result.push("webgl max varying vectors:"+gl.getParameter(gl.MAX_VARYING_VECTORS));result.push("webgl max vertex attribs:"+gl.getParameter(gl.MAX_VERTEX_ATTRIBS));result.push("webgl max vertex texture image units:"+gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));result.push("webgl max vertex uniform vectors:"+gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS));result.push("webgl max viewport dims:"+fa2s(gl.getParameter(gl.MAX_VIEWPORT_DIMS)));result.push("webgl red bits:"+gl.getParameter(gl.RED_BITS));result.push("webgl renderer:"+gl.getParameter(gl.RENDERER));result.push("webgl shading language version:"+gl.getParameter(gl.SHADING_LANGUAGE_VERSION));result.push("webgl stencil bits:"+gl.getParameter(gl.STENCIL_BITS));result.push("webgl vendor:"+gl.getParameter(gl.VENDOR));result.push("webgl version:"+gl.getParameter(gl.VERSION));if(!gl.getShaderPrecisionFormat){if(typeof NODEBUG==="undefined"){this.log("WebGL fingerprinting is incomplete, because your browser does not support getShaderPrecisionFormat");}
return result.join("~");}
result.push("webgl vertex shader high float precision:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT).precision);result.push("webgl vertex shader high float precision rangeMin:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT).rangeMin);result.push("webgl vertex shader high float precision rangeMax:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT).rangeMax);result.push("webgl vertex shader medium float precision:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT).precision);result.push("webgl vertex shader medium float precision rangeMin:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT).rangeMin);result.push("webgl vertex shader medium float precision rangeMax:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT).rangeMax);result.push("webgl vertex shader low float precision:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_FLOAT).precision);result.push("webgl vertex shader low float precision rangeMin:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_FLOAT).rangeMin);result.push("webgl vertex shader low float precision rangeMax:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_FLOAT).rangeMax);result.push("webgl fragment shader high float precision:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT).precision);result.push("webgl fragment shader high float precision rangeMin:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT).rangeMin);result.push("webgl fragment shader high float precision rangeMax:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT).rangeMax);result.push("webgl fragment shader medium float precision:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT).precision);result.push("webgl fragment shader medium float precision rangeMin:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT).rangeMin);result.push("webgl fragment shader medium float precision rangeMax:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT).rangeMax);result.push("webgl fragment shader low float precision:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_FLOAT).precision);result.push("webgl fragment shader low float precision rangeMin:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_FLOAT).rangeMin);result.push("webgl fragment shader low float precision rangeMax:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_FLOAT).rangeMax);result.push("webgl vertex shader high int precision:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_INT).precision);result.push("webgl vertex shader high int precision rangeMin:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_INT).rangeMin);result.push("webgl vertex shader high int precision rangeMax:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_INT).rangeMax);result.push("webgl vertex shader medium int precision:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_INT).precision);result.push("webgl vertex shader medium int precision rangeMin:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_INT).rangeMin);result.push("webgl vertex shader medium int precision rangeMax:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_INT).rangeMax);result.push("webgl vertex shader low int precision:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_INT).precision);result.push("webgl vertex shader low int precision rangeMin:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_INT).rangeMin);result.push("webgl vertex shader low int precision rangeMax:"+gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.LOW_INT).rangeMax);result.push("webgl fragment shader high int precision:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_INT).precision);result.push("webgl fragment shader high int precision rangeMin:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_INT).rangeMin);result.push("webgl fragment shader high int precision rangeMax:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_INT).rangeMax);result.push("webgl fragment shader medium int precision:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_INT).precision);result.push("webgl fragment shader medium int precision rangeMin:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_INT).rangeMin);result.push("webgl fragment shader medium int precision rangeMax:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_INT).rangeMax);result.push("webgl fragment shader low int precision:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_INT).precision);result.push("webgl fragment shader low int precision rangeMin:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_INT).rangeMin);result.push("webgl fragment shader low int precision rangeMax:"+gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.LOW_INT).rangeMax);return result.join("~");},getAdBlock:function(){var ads=document.createElement("div");ads.setAttribute("id","ads");document.body.appendChild(ads);return document.getElementById("ads")?false:true;},getHasLiedLanguages:function(){if(typeof navigator.languages!=="undefined"){try{var firstLanguages=navigator.languages[0].substr(0,2);if(firstLanguages!==navigator.language.substr(0,2)){return true;}}catch(err){return true;}}
return false;},getHasLiedResolution:function(){if(screen.width<screen.availWidth){return true;}
if(screen.height<screen.availHeight){return true;}
return false;},getHasLiedOs:function(){var userAgent=navigator.userAgent.toLowerCase();var oscpu=navigator.oscpu;var platform=navigator.platform.toLowerCase();var os;if(userAgent.indexOf("windows phone")>=0){os="Windows Phone";}else if(userAgent.indexOf("win")>=0){os="Windows";}else if(userAgent.indexOf("android")>=0){os="Android";}else if(userAgent.indexOf("linux")>=0){os="Linux";}else if(userAgent.indexOf("iphone")>=0||userAgent.indexOf("ipad")>=0){os="iOS";}else if(userAgent.indexOf("mac")>=0){os="Mac";}else{os="Other";}
var mobileDevice;if(("ontouchstart"in window)||(navigator.maxTouchPoints>0)||(navigator.msMaxTouchPoints>0)){mobileDevice=true;}else{mobileDevice=false;}
if(mobileDevice&&os!=="Windows Phone"&&os!=="Android"&&os!=="iOS"&&os!=="Other"){return true;}
if(typeof oscpu!=="undefined"){oscpu=oscpu.toLowerCase();if(oscpu.indexOf("win")>=0&&os!=="Windows"&&os!=="Windows Phone"){return true;}else if(oscpu.indexOf("linux")>=0&&os!=="Linux"&&os!=="Android"){return true;}else if(oscpu.indexOf("mac")>=0&&os!=="Mac"&&os!=="iOS"){return true;}else if(oscpu.indexOf("win")===0&&oscpu.indexOf("linux")===0&&oscpu.indexOf("mac")>=0&&os!=="other"){return true;}}
if(platform.indexOf("win")>=0&&os!=="Windows"&&os!=="Windows Phone"){return true;}else if((platform.indexOf("linux")>=0||platform.indexOf("android")>=0||platform.indexOf("pike")>=0)&&os!=="Linux"&&os!=="Android"){return true;}else if((platform.indexOf("mac")>=0||platform.indexOf("ipad")>=0||platform.indexOf("ipod")>=0||platform.indexOf("iphone")>=0)&&os!=="Mac"&&os!=="iOS"){return true;}else if(platform.indexOf("win")===0&&platform.indexOf("linux")===0&&platform.indexOf("mac")>=0&&os!=="other"){return true;}
if(typeof navigator.plugins==="undefined"&&os!=="Windows"&&os!=="Windows Phone"){return true;}
return false;},getHasLiedBrowser:function(){var userAgent=navigator.userAgent.toLowerCase();var productSub=navigator.productSub;var browser;if(userAgent.indexOf("firefox")>=0){browser="Firefox";}else if(userAgent.indexOf("opera")>=0||userAgent.indexOf("opr")>=0){browser="Opera";}else if(userAgent.indexOf("chrome")>=0){browser="Chrome";}else if(userAgent.indexOf("safari")>=0){browser="Safari";}else if(userAgent.indexOf("trident")>=0){browser="Internet Explorer";}else{browser="Other";}
if((browser==="Chrome"||browser==="Safari"||browser==="Opera")&&productSub!=="20030107"){return true;}
var tempRes=eval.toString().length;if(tempRes===37&&browser!=="Safari"&&browser!=="Firefox"&&browser!=="Other"){return true;}else if(tempRes===39&&browser!=="Internet Explorer"&&browser!=="Other"){return true;}else if(tempRes===33&&browser!=="Chrome"&&browser!=="Opera"&&browser!=="Other"){return true;}
var errFirefox;try{throw"a";}catch(err){try{err.toSource();errFirefox=true;}catch(errOfErr){errFirefox=false;}}
if(errFirefox&&browser!=="Firefox"&&browser!=="Other"){return true;}
return false;},isCanvasSupported:function(){var elem=document.createElement("canvas");return!!(elem.getContext&&elem.getContext("2d"));},isWebGlSupported:function(){if(!this.isCanvasSupported()){return false;}
var canvas=document.createElement("canvas"),glContext;try{glContext=canvas.getContext&&(canvas.getContext("webgl")||canvas.getContext("experimental-webgl"));}catch(e){glContext=false;}
return!!window.WebGLRenderingContext&&!!glContext;},isIE:function(){if(navigator.appName==="Microsoft Internet Explorer"){return true;}else if(navigator.appName==="Netscape"&&/Trident/.test(navigator.userAgent)){return true;}
return false;},hasSwfObjectLoaded:function(){return typeof window.swfobject!=="undefined";},hasMinFlashInstalled:function(){return swfobject.hasFlashPlayerVersion("9.0.0");},addFlashDivNode:function(){var node=document.createElement("div");node.setAttribute("id",this.options.swfContainerId);document.body.appendChild(node);},loadSwfAndDetectFonts:function(done){var hiddenCallback="___fp_swf_loaded";window[hiddenCallback]=function(fonts){done(fonts);};var id=this.options.swfContainerId;this.addFlashDivNode();var flashvars={onReady:hiddenCallback};var flashparams={allowScriptAccess:"always",menu:"false"};swfobject.embedSWF(this.options.swfPath,id,"1","1","9.0.0",false,flashvars,flashparams,{});},getWebglCanvas:function(){var canvas=document.createElement("canvas");var gl=null;try{gl=canvas.getContext("webgl")||canvas.getContext("experimental-webgl");}catch(e){}
if(!gl){gl=null;}
return gl;},each:function(obj,iterator,context){if(obj===null){return;}
if(this.nativeForEach&&obj.forEach===this.nativeForEach){obj.forEach(iterator,context);}else if(obj.length===+obj.length){for(var i=0,l=obj.length;i<l;i++){if(iterator.call(context,obj[i],i,obj)==={}){return;}}}else{for(var key in obj){if(obj.hasOwnProperty(key)){if(iterator.call(context,obj[key],key,obj)==={}){return;}}}}},map:function(obj,iterator,context){var results=[];if(obj==null){return results;}
if(this.nativeMap&&obj.map===this.nativeMap){return obj.map(iterator,context);}
this.each(obj,function(value,index,list){results[results.length]=iterator.call(context,value,index,list);});return results;},x64Add:function(m,n){m=[m[0]>>>16,m[0]&0xffff,m[1]>>>16,m[1]&0xffff];n=[n[0]>>>16,n[0]&0xffff,n[1]>>>16,n[1]&0xffff];var o=[0,0,0,0];o[3]+=m[3]+n[3];o[2]+=o[3]>>>16;o[3]&=0xffff;o[2]+=m[2]+n[2];o[1]+=o[2]>>>16;o[2]&=0xffff;o[1]+=m[1]+n[1];o[0]+=o[1]>>>16;o[1]&=0xffff;o[0]+=m[0]+n[0];o[0]&=0xffff;return[(o[0]<<16)|o[1],(o[2]<<16)|o[3]];},x64Multiply:function(m,n){m=[m[0]>>>16,m[0]&0xffff,m[1]>>>16,m[1]&0xffff];n=[n[0]>>>16,n[0]&0xffff,n[1]>>>16,n[1]&0xffff];var o=[0,0,0,0];o[3]+=m[3]*n[3];o[2]+=o[3]>>>16;o[3]&=0xffff;o[2]+=m[2]*n[3];o[1]+=o[2]>>>16;o[2]&=0xffff;o[2]+=m[3]*n[2];o[1]+=o[2]>>>16;o[2]&=0xffff;o[1]+=m[1]*n[3];o[0]+=o[1]>>>16;o[1]&=0xffff;o[1]+=m[2]*n[2];o[0]+=o[1]>>>16;o[1]&=0xffff;o[1]+=m[3]*n[1];o[0]+=o[1]>>>16;o[1]&=0xffff;o[0]+=(m[0]*n[3])+(m[1]*n[2])+(m[2]*n[1])+(m[3]*n[0]);o[0]&=0xffff;return[(o[0]<<16)|o[1],(o[2]<<16)|o[3]];},x64Rotl:function(m,n){n%=64;if(n===32){return[m[1],m[0]];}
else if(n<32){return[(m[0]<<n)|(m[1]>>>(32-n)),(m[1]<<n)|(m[0]>>>(32-n))];}
else{n-=32;return[(m[1]<<n)|(m[0]>>>(32-n)),(m[0]<<n)|(m[1]>>>(32-n))];}},x64LeftShift:function(m,n){n%=64;if(n===0){return m;}
else if(n<32){return[(m[0]<<n)|(m[1]>>>(32-n)),m[1]<<n];}
else{return[m[1]<<(n-32),0];}},x64Xor:function(m,n){return[m[0]^n[0],m[1]^n[1]];},x64Fmix:function(h){h=this.x64Xor(h,[0,h[0]>>>1]);h=this.x64Multiply(h,[0xff51afd7,0xed558ccd]);h=this.x64Xor(h,[0,h[0]>>>1]);h=this.x64Multiply(h,[0xc4ceb9fe,0x1a85ec53]);h=this.x64Xor(h,[0,h[0]>>>1]);return h;},x64hash128:function(key,seed){key=key||"";seed=seed||0;var remainder=key.length%16;var bytes=key.length-remainder;var h1=[0,seed];var h2=[0,seed];var k1=[0,0];var k2=[0,0];var c1=[0x87c37b91,0x114253d5];var c2=[0x4cf5ad43,0x2745937f];for(var i=0;i<bytes;i=i+16){k1=[((key.charCodeAt(i+4)&0xff))|((key.charCodeAt(i+5)&0xff)<<8)|((key.charCodeAt(i+6)&0xff)<<16)|((key.charCodeAt(i+7)&0xff)<<24),((key.charCodeAt(i)&0xff))|((key.charCodeAt(i+1)&0xff)<<8)|((key.charCodeAt(i+2)&0xff)<<16)|((key.charCodeAt(i+3)&0xff)<<24)];k2=[((key.charCodeAt(i+12)&0xff))|((key.charCodeAt(i+13)&0xff)<<8)|((key.charCodeAt(i+14)&0xff)<<16)|((key.charCodeAt(i+15)&0xff)<<24),((key.charCodeAt(i+8)&0xff))|((key.charCodeAt(i+9)&0xff)<<8)|((key.charCodeAt(i+10)&0xff)<<16)|((key.charCodeAt(i+11)&0xff)<<24)];k1=this.x64Multiply(k1,c1);k1=this.x64Rotl(k1,31);k1=this.x64Multiply(k1,c2);h1=this.x64Xor(h1,k1);h1=this.x64Rotl(h1,27);h1=this.x64Add(h1,h2);h1=this.x64Add(this.x64Multiply(h1,[0,5]),[0,0x52dce729]);k2=this.x64Multiply(k2,c2);k2=this.x64Rotl(k2,33);k2=this.x64Multiply(k2,c1);h2=this.x64Xor(h2,k2);h2=this.x64Rotl(h2,31);h2=this.x64Add(h2,h1);h2=this.x64Add(this.x64Multiply(h2,[0,5]),[0,0x38495ab5]);}
k1=[0,0];k2=[0,0];switch(remainder){case 15:k2=this.x64Xor(k2,this.x64LeftShift([0,key.charCodeAt(i+14)],48));case 14:k2=this.x64Xor(k2,this.x64LeftShift([0,key.charCodeAt(i+13)],40));case 13:k2=this.x64Xor(k2,this.x64LeftShift([0,key.charCodeAt(i+12)],32));case 12:k2=this.x64Xor(k2,this.x64LeftShift([0,key.charCodeAt(i+11)],24));case 11:k2=this.x64Xor(k2,this.x64LeftShift([0,key.charCodeAt(i+10)],16));case 10:k2=this.x64Xor(k2,this.x64LeftShift([0,key.charCodeAt(i+9)],8));case 9:k2=this.x64Xor(k2,[0,key.charCodeAt(i+8)]);k2=this.x64Multiply(k2,c2);k2=this.x64Rotl(k2,33);k2=this.x64Multiply(k2,c1);h2=this.x64Xor(h2,k2);case 8:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+7)],56));case 7:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+6)],48));case 6:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+5)],40));case 5:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+4)],32));case 4:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+3)],24));case 3:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+2)],16));case 2:k1=this.x64Xor(k1,this.x64LeftShift([0,key.charCodeAt(i+1)],8));case 1:k1=this.x64Xor(k1,[0,key.charCodeAt(i)]);k1=this.x64Multiply(k1,c1);k1=this.x64Rotl(k1,31);k1=this.x64Multiply(k1,c2);h1=this.x64Xor(h1,k1);}
h1=this.x64Xor(h1,[0,key.length]);h2=this.x64Xor(h2,[0,key.length]);h1=this.x64Add(h1,h2);h2=this.x64Add(h2,h1);h1=this.x64Fmix(h1);h2=this.x64Fmix(h2);h1=this.x64Add(h1,h2);h2=this.x64Add(h2,h1);return("00000000"+(h1[0]>>>0).toString(16)).slice(-8)+("00000000"+(h1[1]>>>0).toString(16)).slice(-8)+("00000000"+(h2[0]>>>0).toString(16)).slice(-8)+("00000000"+(h2[1]>>>0).toString(16)).slice(-8);}};Fingerprint2.VERSION="0.9.0";return Fingerprint2;});;;var RTTABIDENCODING="0123456789ABCDEFGHJKMNPQRSTVWXYZ";var RTTABIDENCODING_LEN=RTTABIDENCODING.length;var RTTABIDENCODING_RANDOM_LEN=16;function tabid_detectPrng(allowInsecure,root){if(allowInsecure===undefined)allowInsecure=false;if(!root){root=typeof window!=="undefined"?window:null;}
const browserCrypto=root&&(root.crypto||root.msCrypto);if(browserCrypto){return function(){const buffer=new Uint8Array(1);browserCrypto.getRandomValues(buffer);return buffer[0]/ 0xff;};}
else{try{const nodeCrypto=require("crypto");return function(){return nodeCrypto.randomBytes(1).readUInt8()/ 0xff;}}
catch(e){}}
if(allowInsecure){try{console.error("secure crypto unusable, falling back to insecure Math.random()!");}
catch(e){}
return function(){return Math.random();}}
throw createError("secure crypto unusable, insecure Math.random not allowed");}
function tabid_randomChar(prng){let rand=Math.floor(prng()*RTTABIDENCODING_LEN);if(rand===RTTABIDENCODING_LEN){rand=RTTABIDENCODING_LEN-1;}
return RTTABIDENCODING.charAt(rand);}
function tabid_encodeRandom(len,prng){let str="";for(;len>0;len--){str=tabid_randomChar(prng)+str;}
return str;}
function get_tabid(){var tabRTID=sessionStorage.tabRTID?sessionStorage.tabRTID:sessionStorage.tabRTID=tabid_encodeRandom(RTTABIDENCODING_RANDOM_LEN,tabid_detectPrng());return tabRTID;};;$('body').on('click','.field-rememberme .text-muted, .field-rememberme .icon-checkbox',function(){$(this).closest('form').find('#rememberme').trigger('click')}).on('click','.help-button',function(){recordingData('/registration/need-help',{state:0},true,"GET");$(this).hide();$('.help-button-tip').removeClass('hidden')});;;yii.validation=(function($){var pub={isEmpty:function(value){return value===null||value===undefined||($.isArray(value)&&value.length===0)||value==='';},addMessage:function(messages,message,value){messages.push(message.replace(/\{value\}/g,value));},required:function(value,messages,options){var valid=false;if(options.requiredValue===undefined){var isString=typeof value=='string'||value instanceof String;if(options.strict&&value!==undefined||!options.strict&&!pub.isEmpty(isString?$.trim(value):value)){valid=true;}}else if(!options.strict&&value==options.requiredValue||options.strict&&value===options.requiredValue){valid=true;}
if(!valid){pub.addMessage(messages,options.message,value);}},'boolean':function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
var valid=!options.strict&&(value==options.trueValue||value==options.falseValue)||options.strict&&(value===options.trueValue||value===options.falseValue);if(!valid){pub.addMessage(messages,options.message,value);}},string:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
if(typeof value!=='string'){pub.addMessage(messages,options.message,value);return;}
if(options.is!==undefined&&value.length!=options.is){pub.addMessage(messages,options.notEqual,value);return;}
if(options.min!==undefined&&value.length<options.min){pub.addMessage(messages,options.tooShort,value);}
if(options.max!==undefined&&value.length>options.max){pub.addMessage(messages,options.tooLong,value);}},file:function(attribute,messages,options){var files=getUploadedFiles(attribute,messages,options);$.each(files,function(i,file){validateFile(file,messages,options);});},image:function(attribute,messages,options,deferredList){var files=getUploadedFiles(attribute,messages,options);$.each(files,function(i,file){validateFile(file,messages,options);if(typeof FileReader==="undefined"){return;}
var deferred=$.Deferred();pub.validateImage(file,messages,options,deferred,new FileReader(),new Image());deferredList.push(deferred);});},validateImage:function(file,messages,options,deferred,fileReader,image){image.onload=function(){validateImageSize(file,image,messages,options);deferred.resolve();};image.onerror=function(){messages.push(options.notImage.replace(/\{file\}/g,file.name));deferred.resolve();};fileReader.onload=function(){image.src=this.result;};fileReader.onerror=function(){deferred.resolve();};fileReader.readAsDataURL(file);},number:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
if(typeof value==='string'&&!options.pattern.test(value)){pub.addMessage(messages,options.message,value);return;}
if(options.min!==undefined&&value<options.min){pub.addMessage(messages,options.tooSmall,value);}
if(options.max!==undefined&&value>options.max){pub.addMessage(messages,options.tooBig,value);}},range:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
if(!options.allowArray&&$.isArray(value)){pub.addMessage(messages,options.message,value);return;}
var inArray=true;$.each($.isArray(value)?value:[value],function(i,v){if($.inArray(v,options.range)==-1){inArray=false;return false;}else{return true;}});if(options.not===undefined){options.not=false;}
if(options.not===inArray){pub.addMessage(messages,options.message,value);}},regularExpression:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
if(!options.not&&!options.pattern.test(value)||options.not&&options.pattern.test(value)){pub.addMessage(messages,options.message,value);}},email:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
var valid=true,regexp=/^((?:"?([^"]*)"?\s)?)(?:\s+)?(?:(<?)((.+)@([^>]+))(>?))$/,matches=regexp.exec(value);if(matches===null){valid=false;}else{var localPart=matches[5],domain=matches[6];if(options.enableIDN){localPart=punycode.toASCII(localPart);domain=punycode.toASCII(domain);value=matches[1]+matches[3]+localPart+'@'+domain+matches[7];}
if(localPart.length>64){valid=false;}else if((localPart+'@'+domain).length>254){valid=false;}else{valid=options.pattern.test(value)||(options.allowName&&options.fullPattern.test(value));}}
if(!valid){pub.addMessage(messages,options.message,value);}},url:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
if(options.defaultScheme&&!/:\/\//.test(value)){value=options.defaultScheme+'://'+value;}
var valid=true;if(options.enableIDN){var matches=/^([^:]+):\/\/([^\/]+)(.*)$/.exec(value);if(matches===null){valid=false;}else{value=matches[1]+'://'+punycode.toASCII(matches[2])+matches[3];}}
if(!valid||!options.pattern.test(value)){pub.addMessage(messages,options.message,value);}},trim:function($form,attribute,options){var $input=$form.find(attribute.input);var value=$input.val();if(!options.skipOnEmpty||!pub.isEmpty(value)){value=$.trim(value);$input.val(value);}
return value;},captcha:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
var hash=$('body').data(options.hashKey);hash=hash==null?options.hash:hash[options.caseSensitive?0:1];var v=options.caseSensitive?value:value.toLowerCase();for(var i=v.length-1,h=0;i>=0;--i){h+=v.charCodeAt(i);}
if(h!=hash){pub.addMessage(messages,options.message,value);}},compare:function(value,messages,options,$form){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
var compareValue,valid=true;if(options.compareAttribute===undefined){compareValue=options.compareValue;}else{var attributes=$form.data('yiiActiveForm').attributes
for(var i=attributes.length-1;i>=0;i--){if(attributes[i].id===options.compareAttribute){compareValue=$(attributes[i].input).val();}}}
if(options.type==='number'){value=parseFloat(value);compareValue=parseFloat(compareValue);}
switch(options.operator){case'==':valid=value==compareValue;break;case'===':valid=value===compareValue;break;case'!=':valid=value!=compareValue;break;case'!==':valid=value!==compareValue;break;case'>':valid=value>compareValue;break;case'>=':valid=value>=compareValue;break;case'<':valid=value<compareValue;break;case'<=':valid=value<=compareValue;break;default:valid=false;break;}
if(!valid){pub.addMessage(messages,options.message,value);}},ip:function(value,messages,options){if(options.skipOnEmpty&&pub.isEmpty(value)){return;}
var negation=null,cidr=null,matches=new RegExp(options.ipParsePattern).exec(value);if(matches){negation=matches[1]||null;value=matches[2];cidr=matches[4]||null;}
if(options.subnet===true&&cidr===null){pub.addMessage(messages,options.messages.noSubnet,value);return;}
if(options.subnet===false&&cidr!==null){pub.addMessage(messages,options.messages.hasSubnet,value);return;}
if(options.negation===false&&negation!==null){pub.addMessage(messages,options.messages.message,value);return;}
var ipVersion=value.indexOf(':')===-1?4:6;if(ipVersion==6){if(!(new RegExp(options.ipv6Pattern)).test(value)){pub.addMessage(messages,options.messages.message,value);}
if(!options.ipv6){pub.addMessage(messages,options.messages.ipv6NotAllowed,value);}}else{if(!(new RegExp(options.ipv4Pattern)).test(value)){pub.addMessage(messages,options.messages.message,value);}
if(!options.ipv4){pub.addMessage(messages,options.messages.ipv4NotAllowed,value);}}}};function getUploadedFiles(attribute,messages,options){if(typeof File==="undefined"){return[];}
var files=$(attribute.input,attribute.$form).get(0).files;if(!files){messages.push(options.message);return[];}
if(files.length===0){if(!options.skipOnEmpty){messages.push(options.uploadRequired);}
return[];}
if(options.maxFiles&&options.maxFiles<files.length){messages.push(options.tooMany);return[];}
return files;}
function validateFile(file,messages,options){if(options.extensions&&options.extensions.length>0){var index=file.name.lastIndexOf('.');var ext=!~index?'':file.name.substr(index+1,file.name.length).toLowerCase();if(!~options.extensions.indexOf(ext)){messages.push(options.wrongExtension.replace(/\{file\}/g,file.name));}}
if(options.mimeTypes&&options.mimeTypes.length>0){if(!validateMimeType(options.mimeTypes,file.type)){messages.push(options.wrongMimeType.replace(/\{file\}/g,file.name));}}
if(options.maxSize&&options.maxSize<file.size){messages.push(options.tooBig.replace(/\{file\}/g,file.name));}
if(options.minSize&&options.minSize>file.size){messages.push(options.tooSmall.replace(/\{file\}/g,file.name));}}
function validateMimeType(mimeTypes,fileType){for(var i=0,len=mimeTypes.length;i<len;i++){if(new RegExp(mimeTypes[i]).test(fileType)){return true;}}
return false;}
function validateImageSize(file,image,messages,options){if(options.minWidth&&image.width<options.minWidth){messages.push(options.underWidth.replace(/\{file\}/g,file.name));}
if(options.maxWidth&&image.width>options.maxWidth){messages.push(options.overWidth.replace(/\{file\}/g,file.name));}
if(options.minHeight&&image.height<options.minHeight){messages.push(options.underHeight.replace(/\{file\}/g,file.name));}
if(options.maxHeight&&image.height>options.maxHeight){messages.push(options.overHeight.replace(/\{file\}/g,file.name));}}
return pub;})(jQuery);;;(function($){$.fn.yiiActiveForm=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' does not exist on jQuery.yiiActiveForm');return false;}};var events={beforeValidate:'beforeValidate',afterValidate:'afterValidate',beforeValidateAttribute:'beforeValidateAttribute',afterValidateAttribute:'afterValidateAttribute',beforeSubmit:'beforeSubmit',ajaxBeforeSend:'ajaxBeforeSend',ajaxComplete:'ajaxComplete',afterInit:'afterInit'};var defaults={encodeErrorSummary:true,errorSummary:'.error-summary',validateOnSubmit:true,errorCssClass:'has-error',successCssClass:'has-success',validatingCssClass:'validating',ajaxParam:'ajax',ajaxDataType:'json',validationUrl:undefined,scrollToError:true,scrollToErrorOffset:0,validationStateOn:'container'};var attributeDefaults={id:undefined,name:undefined,container:undefined,input:undefined,error:'.help-block',encodeError:true,validateOnChange:true,validateOnBlur:true,validateOnType:false,validationDelay:500,enableAjaxValidation:false,validate:undefined,status:0,cancelled:false,value:undefined,updateAriaInvalid:true};var submitDefer;var setSubmitFinalizeDefer=function($form){submitDefer=$.Deferred();$form.data('yiiSubmitFinalizePromise',submitDefer.promise());};var submitFinalize=function($form){if(submitDefer){submitDefer.resolve();submitDefer=undefined;$form.removeData('yiiSubmitFinalizePromise');}};var methods={init:function(attributes,options){return this.each(function(){var $form=$(this);if($form.data('yiiActiveForm')){return;}
var settings=$.extend({},defaults,options||{});if(settings.validationUrl===undefined){settings.validationUrl=$form.attr('action');}
$.each(attributes,function(i){attributes[i]=$.extend({value:getValue($form,this)},attributeDefaults,this);watchAttribute($form,attributes[i]);});$form.data('yiiActiveForm',{settings:settings,attributes:attributes,submitting:false,validated:false,options:getFormOptions($form)});$form.on('reset.yiiActiveForm',methods.resetForm);if(settings.validateOnSubmit){$form.on('mouseup.yiiActiveForm keyup.yiiActiveForm',':submit',function(){$form.data('yiiActiveForm').submitObject=$(this);});$form.on('submit.yiiActiveForm',methods.submitForm);}
var event=$.Event(events.afterInit);$form.trigger(event);});},add:function(attribute){var $form=$(this);attribute=$.extend({value:getValue($form,attribute)},attributeDefaults,attribute);$form.data('yiiActiveForm').attributes.push(attribute);watchAttribute($form,attribute);},remove:function(id){var $form=$(this),attributes=$form.data('yiiActiveForm').attributes,index=-1,attribute=undefined;$.each(attributes,function(i){if(attributes[i]['id']==id){index=i;attribute=attributes[i];return false;}});if(index>=0){attributes.splice(index,1);unwatchAttribute($form,attribute);}
return attribute;},validateAttribute:function(id){var attribute=methods.find.call(this,id);if(attribute!=undefined){validateAttribute($(this),attribute,true);}},find:function(id){var attributes=$(this).data('yiiActiveForm').attributes,result=undefined;$.each(attributes,function(i){if(attributes[i]['id']==id){result=attributes[i];return false;}});return result;},destroy:function(){return this.each(function(){$(this).off('.yiiActiveForm');$(this).removeData('yiiActiveForm');});},data:function(){return this.data('yiiActiveForm');},validate:function(forceValidate){if(forceValidate){$(this).data('yiiActiveForm').submitting=true;}
var $form=$(this),data=$form.data('yiiActiveForm'),needAjaxValidation=false,messages={},deferreds=deferredArray(),submitting=data.submitting;if(submitting){var event=$.Event(events.beforeValidate);$form.trigger(event,[messages,deferreds]);if(event.result===false){data.submitting=false;submitFinalize($form);return;}}
$.each(data.attributes,function(){this.$form=$form;if(!$(this.input).is(":disabled")){this.cancelled=false;if(data.submitting||this.status===2||this.status===3){var msg=messages[this.id];if(msg===undefined){msg=[];messages[this.id]=msg;}
var event=$.Event(events.beforeValidateAttribute);$form.trigger(event,[this,msg,deferreds]);if(event.result!==false){if(this.validate){this.validate(this,getValue($form,this),msg,deferreds,$form);}
if(this.enableAjaxValidation){needAjaxValidation=true;}}else{this.cancelled=true;}}}});$.when.apply(this,deferreds).always(function(){for(var i in messages){if(0===messages[i].length){delete messages[i];}}
if(needAjaxValidation&&($.isEmptyObject(messages)||data.submitting)){var $button=data.submitObject,extData='&'+data.settings.ajaxParam+'='+$form.attr('id');if($button&&$button.length&&$button.attr('name')){extData+='&'+$button.attr('name')+'='+$button.attr('value');}
$.ajax({url:data.settings.validationUrl,type:$form.attr('method'),data:$form.serialize()+extData,dataType:data.settings.ajaxDataType,complete:function(jqXHR,textStatus){$form.trigger(events.ajaxComplete,[jqXHR,textStatus]);},beforeSend:function(jqXHR,settings){$form.trigger(events.ajaxBeforeSend,[jqXHR,settings]);},success:function(msgs){if(msgs!==null&&typeof msgs==='object'){$.each(data.attributes,function(){if(!this.enableAjaxValidation||this.cancelled){delete msgs[this.id];}});updateInputs($form,$.extend(messages,msgs),submitting);}else{updateInputs($form,messages,submitting);}},error:function(){data.submitting=false;submitFinalize($form);}});}else if(data.submitting){window.setTimeout(function(){updateInputs($form,messages,submitting);},200);}else{updateInputs($form,messages,submitting);}});},submitForm:function(){var $form=$(this),data=$form.data('yiiActiveForm');if(data.validated){data.submitting=false;var event=$.Event(events.beforeSubmit);$form.trigger(event);if(event.result===false){data.validated=false;submitFinalize($form);return false;}
updateHiddenButton($form);return true;}else{setSubmitFinalizeDefer($form);if(data.settings.timer!==undefined){clearTimeout(data.settings.timer);}
data.submitting=true;methods.validate.call($form);return false;}},resetForm:function(){var $form=$(this);var data=$form.data('yiiActiveForm');window.setTimeout(function(){$.each(data.attributes,function(){this.value=getValue($form,this);this.status=0;var $container=$form.find(this.container),$input=findInput($form,this),$errorElement=data.settings.validationStateOn==='input'?$input:$container;$errorElement.removeClass(data.settings.validatingCssClass+' '+
data.settings.errorCssClass+' '+
data.settings.successCssClass);$container.find(this.error).html('');});$form.find(data.settings.errorSummary).hide().find('ul').html('');},1);},updateMessages:function(messages,summary){var $form=$(this);var data=$form.data('yiiActiveForm');$.each(data.attributes,function(){updateInput($form,this,messages);});if(summary){updateSummary($form,messages);}},updateAttribute:function(id,messages){var attribute=methods.find.call(this,id);if(attribute!=undefined){var msg={};msg[id]=messages;updateInput($(this),attribute,msg);}}};var watchAttribute=function($form,attribute){var $input=findInput($form,attribute);if(attribute.validateOnChange){$input.on('change.yiiActiveForm',function(){validateAttribute($form,attribute,false);});}
if(attribute.validateOnBlur){$input.on('blur.yiiActiveForm',function(){if(attribute.status==0||attribute.status==1){validateAttribute($form,attribute,true);}});}
if(attribute.validateOnType){$input.on('keyup.yiiActiveForm',function(e){if($.inArray(e.which,[16,17,18,37,38,39,40])!==-1){return;}
if(attribute.value!==getValue($form,attribute)){validateAttribute($form,attribute,false,attribute.validationDelay);}});}};var unwatchAttribute=function($form,attribute){findInput($form,attribute).off('.yiiActiveForm');};var validateAttribute=function($form,attribute,forceValidate,validationDelay){var data=$form.data('yiiActiveForm');if(forceValidate){attribute.status=2;}
$.each(data.attributes,function(){if(this.value!==getValue($form,this)){this.status=2;forceValidate=true;}});if(!forceValidate){return;}
if(data.settings.timer!==undefined){clearTimeout(data.settings.timer);}
data.settings.timer=window.setTimeout(function(){if(data.submitting||$form.is(':hidden')){return;}
$.each(data.attributes,function(){if(this.status===2){this.status=3;$form.find(this.container).addClass(data.settings.validatingCssClass);}});methods.validate.call($form);},validationDelay?validationDelay:200);};var deferredArray=function(){var array=[];array.add=function(callback){this.push(new $.Deferred(callback));};return array;};var buttonOptions=['action','target','method','enctype'];var getFormOptions=function($form){var attributes={};for(var i=0;i<buttonOptions.length;i++){attributes[buttonOptions[i]]=$form.attr(buttonOptions[i]);}
return attributes;};var applyButtonOptions=function($form,$button){for(var i=0;i<buttonOptions.length;i++){var value=$button.attr('form'+buttonOptions[i]);if(value){$form.attr(buttonOptions[i],value);}}};var restoreButtonOptions=function($form){var data=$form.data('yiiActiveForm');for(var i=0;i<buttonOptions.length;i++){$form.attr(buttonOptions[i],data.options[buttonOptions[i]]||null);}};var updateInputs=function($form,messages,submitting){var data=$form.data('yiiActiveForm');if(data===undefined){return false;}
if(submitting){var errorAttributes=[];$.each(data.attributes,function(){if(!$(this.input).is(":disabled")&&!this.cancelled&&updateInput($form,this,messages)){errorAttributes.push(this);}});$form.trigger(events.afterValidate,[messages,errorAttributes]);updateSummary($form,messages);if(errorAttributes.length){if(data.settings.scrollToError){var top=$form.find($.map(errorAttributes,function(attribute){return attribute.input;}).join(',')).first().closest(':visible').offset().top-data.settings.scrollToErrorOffset;if(top<0){top=0;}else if(top>$(document).height()){top=$(document).height();}
var wtop=$(window).scrollTop();if(top<wtop||top>wtop+$(window).height()){$(window).scrollTop(top);}}
data.submitting=false;}else{data.validated=true;if(data.submitObject){applyButtonOptions($form,data.submitObject);}
$form.submit();if(data.submitObject){restoreButtonOptions($form);}}}else{$.each(data.attributes,function(){if(!this.cancelled&&(this.status===2||this.status===3)){updateInput($form,this,messages);}});}
submitFinalize($form);};var updateHiddenButton=function($form){var data=$form.data('yiiActiveForm');var $button=data.submitObject||$form.find(':submit:first');if($button.length&&$button.attr('type')=='submit'&&$button.attr('name')){var $hiddenButton=$('input[type="hidden"][name="'+$button.attr('name')+'"]',$form);if(!$hiddenButton.length){$('<input>').attr({type:'hidden',name:$button.attr('name'),value:$button.attr('value')}).appendTo($form);}else{$hiddenButton.attr('value',$button.attr('value'));}}};var updateInput=function($form,attribute,messages){var data=$form.data('yiiActiveForm'),$input=findInput($form,attribute),hasError=false;if(!$.isArray(messages[attribute.id])){messages[attribute.id]=[];}
attribute.status=1;if($input.length){hasError=messages[attribute.id].length>0;var $container=$form.find(attribute.container);var $error=$container.find(attribute.error);updateAriaInvalid($form,attribute,hasError);var $errorElement=data.settings.validationStateOn==='input'?$input:$container;if(hasError){if(attribute.encodeError){$error.text(messages[attribute.id][0]);}else{$error.html(messages[attribute.id][0]);}
$errorElement.removeClass(data.settings.validatingCssClass+' '+data.settings.successCssClass).addClass(data.settings.errorCssClass);}else{$error.empty();$errorElement.removeClass(data.settings.validatingCssClass+' '+data.settings.errorCssClass+' ').addClass(data.settings.successCssClass);}
attribute.value=getValue($form,attribute);}
$form.trigger(events.afterValidateAttribute,[attribute,messages[attribute.id]]);return hasError;};var updateSummary=function($form,messages){var data=$form.data('yiiActiveForm'),$summary=$form.find(data.settings.errorSummary),$ul=$summary.find('ul').empty();if($summary.length&&messages){$.each(data.attributes,function(){if($.isArray(messages[this.id])&&messages[this.id].length){var error=$('<li/>');if(data.settings.encodeErrorSummary){error.text(messages[this.id][0]);}else{error.html(messages[this.id][0]);}
$ul.append(error);}});$summary.toggle($ul.find('li').length>0);}};var getValue=function($form,attribute){var $input=findInput($form,attribute);var type=$input.attr('type');if(type==='checkbox'||type==='radio'){var $realInput=$input.filter(':checked');if(!$realInput.length){$realInput=$form.find('input[type=hidden][name="'+$input.attr('name')+'"]');}
return $realInput.val();}else{return $input.val();}};var findInput=function($form,attribute){var $input=$form.find(attribute.input);if($input.length&&$input[0].tagName.toLowerCase()==='div'){return $input.find('input');}else{return $input;}};var updateAriaInvalid=function($form,attribute,hasError){if(attribute.updateAriaInvalid){$form.find(attribute.input).attr('aria-invalid',hasError?'true':'false');}}})(window.jQuery);;